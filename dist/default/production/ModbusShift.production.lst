

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 28 23:42:15 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    78                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    79  0000                     
    80                           ; Version 2.10
    81                           ; Generated 31/07/2019 GMT
    82                           ; 
    83                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC18F46K40 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     
   115                           	psect	idataBANK0
   116  00299A                     __pidataBANK0:
   117                           	opt callstack 0
   118                           
   119                           ;initializer for _temp
   120  00299A  5A                 	db	90
   121  00299B  00                 	db	0
   122                           
   123                           	psect	idataBANK1
   124  0028A4                     __pidataBANK1:
   125                           	opt callstack 0
   126                           
   127                           ;initializer for _rxData
   128  0028A4  CC                 	db	204
   129  0028A5  CC                 	db	204
   130  0028A6  CC                 	db	204
   131  0028A7  CC                 	db	204
   132  0028A8  CC                 	db	204
   133  0028A9  CC                 	db	204
   134  0028AA  CC                 	db	204
   135  0028AB  CC                 	db	204
   136  0028AC  CC                 	db	204
   137  0028AD  CC                 	db	204
   138  0028AE  CC                 	db	204
   139  0028AF  CC                 	db	204
   140  0028B0  CC                 	db	204
   141  0028B1  CC                 	db	204
   142  0028B2  CC                 	db	204
   143                           
   144                           ;initializer for _data1
   145  0028B3  11                 	db	17
   146  0028B4  03                 	db	3
   147  0028B5  06                 	db	6
   148  0028B6  AE                 	db	174
   149  0028B7  41                 	db	65
   150  0028B8  56                 	db	86
   151  0028B9  52                 	db	82
   152  0028BA  43                 	db	67
   153  0028BB  40                 	db	64
   154  0028BC  49                 	db	73
   155  0028BD  AD                 	db	173
   156                           
   157                           	psect	nvBANK0
   158  0000E5                     __pnvBANK0:
   159                           	opt callstack 0
   160  0000E5                     _EUSART1_ErrorHandler:
   161                           	opt callstack 0
   162  0000E5                     	ds	2
   163  0000E7                     _EUSART1_OverrunErrorHandler:
   164                           	opt callstack 0
   165  0000E7                     	ds	2
   166  0000E9                     _EUSART1_FramingErrorHandler:
   167                           	opt callstack 0
   168  0000E9                     	ds	2
   169  0000EB                     _EUSART2_ErrorHandler:
   170                           	opt callstack 0
   171  0000EB                     	ds	2
   172  0000ED                     _EUSART2_OverrunErrorHandler:
   173                           	opt callstack 0
   174  0000ED                     	ds	2
   175  0000EF                     _EUSART2_FramingErrorHandler:
   176                           	opt callstack 0
   177  0000EF                     	ds	2
   178  0000F1                     _EUSART1_RxDefaultInterruptHandler:
   179                           	opt callstack 0
   180  0000F1                     	ds	2
   181  0000F3                     _EUSART1_TxDefaultInterruptHandler:
   182                           	opt callstack 0
   183  0000F3                     	ds	2
   184  0000F5                     _EUSART2_RxDefaultInterruptHandler:
   185                           	opt callstack 0
   186  0000F5                     	ds	2
   187  0000F7                     _EUSART2_TxDefaultInterruptHandler:
   188                           	opt callstack 0
   189  0000F7                     	ds	2
   190  0000F9                     _eusart1TxBufferRemaining:
   191                           	opt callstack 0
   192  0000F9                     	ds	1
   193  0000FA                     _eusart2TxBufferRemaining:
   194                           	opt callstack 0
   195  0000FA                     	ds	1
   196  0000                     _RC2REG	set	3737
   197  0000                     _RC2STAbits	set	3741
   198  0000                     _TX2REG	set	3738
   199  0000                     _TX2STAbits	set	3742
   200  0000                     _SP2BRGH	set	3740
   201  0000                     _SP2BRGL	set	3739
   202  0000                     _TX2STA	set	3742
   203  0000                     _RC2STA	set	3741
   204  0000                     _BAUD2CON	set	3743
   205  0000                     _PIR7bits	set	3793
   206  0000                     _PIR3bits	set	3789
   207  0000                     _PIE3bits	set	3781
   208  0000                     _PMD5	set	3814
   209  0000                     _PMD4	set	3813
   210  0000                     _PMD3	set	3812
   211  0000                     _PMD2	set	3811
   212  0000                     _PMD1	set	3810
   213  0000                     _PMD0	set	3809
   214  0000                     _OSCTUNE	set	3805
   215  0000                     _OSCFRQ	set	3806
   216  0000                     _OSCEN	set	3804
   217  0000                     _OSCCON3	set	3802
   218  0000                     _OSCCON1	set	3800
   219  0000                     _RX2PPS	set	3725
   220  0000                     _RC6PPS	set	3837
   221  0000                     _RB6PPS	set	3829
   222  0000                     _RX1PPS	set	3765
   223  0000                     _INLVLE	set	3882
   224  0000                     _INLVLD	set	3874
   225  0000                     _INLVLC	set	3869
   226  0000                     _INLVLB	set	3861
   227  0000                     _INLVLA	set	3853
   228  0000                     _SLRCONE	set	3883
   229  0000                     _SLRCOND	set	3875
   230  0000                     _SLRCONC	set	3870
   231  0000                     _SLRCONB	set	3862
   232  0000                     _SLRCONA	set	3854
   233  0000                     _ODCOND	set	3876
   234  0000                     _ODCONC	set	3871
   235  0000                     _ODCONB	set	3863
   236  0000                     _ODCONA	set	3855
   237  0000                     _ODCONE	set	3884
   238  0000                     _WPUC	set	3872
   239  0000                     _WPUA	set	3856
   240  0000                     _WPUB	set	3864
   241  0000                     _WPUE	set	3885
   242  0000                     _WPUD	set	3877
   243  0000                     _ANSELA	set	3857
   244  0000                     _ANSELE	set	3886
   245  0000                     _ANSELB	set	3865
   246  0000                     _ANSELC	set	3873
   247  0000                     _ANSELD	set	3878
   248  0000                     _LATAbits	set	3971
   249  0000                     _LATDbits	set	3974
   250  0000                     _RC1REG	set	3993
   251  0000                     _RC1STAbits	set	3997
   252  0000                     _TX1REG	set	3994
   253  0000                     _TX1STAbits	set	3998
   254  0000                     _SP1BRGH	set	3996
   255  0000                     _SP1BRGL	set	3995
   256  0000                     _TX1STA	set	3998
   257  0000                     _RC1STA	set	3997
   258  0000                     _BAUD1CON	set	3999
   259  0000                     _NVMDAT	set	3968
   260  0000                     _NVMADRL	set	3966
   261  0000                     _NVMADRH	set	3967
   262  0000                     _NVMCON2	set	3970
   263  0000                     _TABLAT	set	4085
   264  0000                     _TBLPTRL	set	4086
   265  0000                     _TBLPTRH	set	4087
   266  0000                     _TBLPTRU	set	4088
   267  0000                     _NVMCON1bits	set	3969
   268  0000                     _INTCONbits	set	4082
   269  0000                     _TRISD	set	3979
   270  0000                     _TRISC	set	3978
   271  0000                     _TRISB	set	3977
   272  0000                     _TRISA	set	3976
   273  0000                     _TRISE	set	3980
   274  0000                     _LATC	set	3973
   275  0000                     _LATB	set	3972
   276  0000                     _LATA	set	3971
   277  0000                     _LATD	set	3974
   278  0000                     _LATE	set	3975
   279                           
   280                           	psect	smallconst
   281  000F00                     __psmallconst:
   282                           	opt callstack 0
   283  000F00  00                 	db	0
   284  000F01                     STR_3:
   285                           
   286                           ; BSR set to: 0
   287  000F01  45                 	db	69	;'E'
   288  000F02  55                 	db	85	;'U'
   289  000F03  53                 	db	83	;'S'
   290  000F04  41                 	db	65	;'A'
   291  000F05  52                 	db	82	;'R'
   292  000F06  54                 	db	84	;'T'
   293  000F07  20                 	db	32
   294  000F08  52                 	db	82	;'R'
   295  000F09  65                 	db	101	;'e'
   296  000F0A  61                 	db	97	;'a'
   297  000F0B  64                 	db	100	;'d'
   298  000F0C  20                 	db	32
   299  000F0D  43                 	db	67	;'C'
   300  000F0E  6F                 	db	111	;'o'
   301  000F0F  6D                 	db	109	;'m'
   302  000F10  70                 	db	112	;'p'
   303  000F11  6C                 	db	108	;'l'
   304  000F12  65                 	db	101	;'e'
   305  000F13  74                 	db	116	;'t'
   306  000F14  65                 	db	101	;'e'
   307  000F15  2E                 	db	46
   308  000F16  0D                 	db	13
   309  000F17  0A                 	db	10
   310  000F18  0A                 	db	10
   311  000F19  00                 	db	0
   312  000F1A                     STR_1:
   313                           
   314                           ; BSR set to: 0
   315  000F1A  42                 	db	66	;'B'
   316  000F1B  79                 	db	121	;'y'
   317  000F1C  74                 	db	116	;'t'
   318  000F1D  65                 	db	101	;'e'
   319  000F1E  20                 	db	32
   320  000F1F  25                 	db	37
   321  000F20  69                 	db	105	;'i'
   322  000F21  2E                 	db	46
   323  000F22  20                 	db	32
   324  000F23  56                 	db	86	;'V'
   325  000F24  61                 	db	97	;'a'
   326  000F25  6C                 	db	108	;'l'
   327  000F26  3A                 	db	58	;':'
   328  000F27  20                 	db	32
   329  000F28  30                 	db	48	;'0'
   330  000F29  78                 	db	120	;'x'
   331  000F2A  25                 	db	37
   332  000F2B  30                 	db	48	;'0'
   333  000F2C  32                 	db	50	;'2'
   334  000F2D  78                 	db	120	;'x'
   335  000F2E  20                 	db	32
   336  000F2F  0D                 	db	13
   337  000F30  0A                 	db	10
   338  000F31  00                 	db	0
   339  000F32                     STR_2:
   340                           
   341                           ; BSR set to: 0
   342  000F32  49                 	db	73	;'I'
   343  000F33  6E                 	db	110	;'n'
   344  000F34  69                 	db	105	;'i'
   345  000F35  74                 	db	116	;'t'
   346  000F36  61                 	db	97	;'a'
   347  000F37  6C                 	db	108	;'l'
   348  000F38  69                 	db	105	;'i'
   349  000F39  73                 	db	115	;'s'
   350  000F3A  65                 	db	101	;'e'
   351  000F3B  64                 	db	100	;'d'
   352  000F3C  0D                 	db	13
   353  000F3D  0A                 	db	10
   354  000F3E  0A                 	db	10
   355  000F3F  00                 	db	0
   356                           
   357                           ; #config settings
   358  000F40  00                 	db	0	; dummy byte at the end
   359  0000                     
   360                           	psect	cinit
   361  00234E                     __pcinit:
   362                           	opt callstack 0
   363  00234E                     start_initialization:
   364                           	opt callstack 0
   365  00234E                     __initialization:
   366                           	opt callstack 0
   367                           
   368                           ; Initialize objects allocated to BANK1 (26 bytes)
   369                           ; load TBLPTR registers with __pidataBANK1
   370  00234E  0EA4               	movlw	low __pidataBANK1
   371  002350  6EF6               	movwf	tblptrl,c
   372  002352  0E28               	movlw	high __pidataBANK1
   373  002354  6EF7               	movwf	tblptrh,c
   374  002356  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   375  002358  6EF8               	movwf	tblptru,c
   376  00235A  EE01  F020         	lfsr	0,__pdataBANK1
   377  00235E  EE10 F01A          	lfsr	1,26
   378  002362                     copy_data0:
   379  002362  0009               	tblrd		*+
   380  002364  CFF5 FFEE          	movff	tablat,postinc0
   381  002368  50E5               	movf	postdec1,w,c
   382  00236A  50E1               	movf	fsr1l,w,c
   383  00236C  E1FA               	bnz	copy_data0
   384                           
   385                           ; Initialize objects allocated to BANK0 (2 bytes)
   386                           ; load TBLPTR registers with __pidataBANK0
   387  00236E  0E9A               	movlw	low __pidataBANK0
   388  002370  6EF6               	movwf	tblptrl,c
   389  002372  0E29               	movlw	high __pidataBANK0
   390  002374  6EF7               	movwf	tblptrh,c
   391  002376  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   392  002378  6EF8               	movwf	tblptru,c
   393  00237A  0009               	tblrd		*+	;fetch initializer
   394  00237C  CFF5 F0FB          	movff	tablat,__pdataBANK0
   395  002380  0009               	tblrd		*+	;fetch initializer
   396  002382  CFF5 F0FC          	movff	tablat,__pdataBANK0+1
   397                           
   398                           ; Clear objects allocated to BANK1 (32 bytes)
   399  002386  EE01  F000         	lfsr	0,__pbssBANK1
   400  00238A  0E20               	movlw	32
   401  00238C                     clear_0:
   402  00238C  6AEE               	clrf	postinc0,c
   403  00238E  06E8               	decf	wreg,f,c
   404  002390  E1FD               	bnz	clear_0
   405                           
   406                           ; Clear objects allocated to BANK0 (94 bytes)
   407  002392  EE00  F060         	lfsr	0,__pbssBANK0
   408  002396  0E5E               	movlw	94
   409  002398                     clear_1:
   410  002398  6AEE               	clrf	postinc0,c
   411  00239A  06E8               	decf	wreg,f,c
   412  00239C  E1FD               	bnz	clear_1
   413                           
   414                           ; Clear objects allocated to COMRAM (4 bytes)
   415  00239E  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   416  0023A0  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   417  0023A2  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   418  0023A4  6A57               	clrf	__pbssCOMRAM& (0+255),c
   419  0023A6                     end_of_initialization:
   420                           	opt callstack 0
   421  0023A6                     __end_of__initialization:
   422                           	opt callstack 0
   423  0023A6  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   424  0023A8  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   425  0023AA  0100               	movlb	0
   426  0023AC  EF11  F010         	goto	_main	;jump to C main() function
   427                           
   428                           	psect	bssCOMRAM
   429  000057                     __pbssCOMRAM:
   430                           	opt callstack 0
   431  000057                     _flags:
   432                           	opt callstack 0
   433  000057                     	ds	2
   434  000059                     _eusart1RxHead:
   435                           	opt callstack 0
   436  000059                     	ds	1
   437  00005A                     _eusart2RxHead:
   438                           	opt callstack 0
   439  00005A                     	ds	1
   440                           
   441                           	psect	bssBANK0
   442  000060                     __pbssBANK0:
   443                           	opt callstack 0
   444  000060                     _eusart1RxStatusBuffer:
   445                           	opt callstack 0
   446  000060                     	ds	16
   447  000070                     _eusart1RxBuffer:
   448                           	opt callstack 0
   449  000070                     	ds	16
   450  000080                     _eusart1TxBuffer:
   451                           	opt callstack 0
   452  000080                     	ds	16
   453  000090                     _eusart2RxStatusBuffer:
   454                           	opt callstack 0
   455  000090                     	ds	8
   456  000098                     _eusart2RxBuffer:
   457                           	opt callstack 0
   458  000098                     	ds	8
   459  0000A0                     _eusart2TxBuffer:
   460                           	opt callstack 0
   461  0000A0                     	ds	8
   462  0000A8                     _nout:
   463                           	opt callstack 0
   464  0000A8                     	ds	2
   465  0000AA                     _width:
   466                           	opt callstack 0
   467  0000AA                     	ds	2
   468  0000AC                     _prec:
   469                           	opt callstack 0
   470  0000AC                     	ds	2
   471  0000AE                     _ByteNum:
   472                           	opt callstack 0
   473  0000AE                     	ds	2
   474  0000B0                     _loop:
   475                           	opt callstack 0
   476  0000B0                     	ds	2
   477  0000B2                     _rxStatus:
   478                           	opt callstack 0
   479  0000B2                     	ds	1
   480  0000B3                     _Debug:
   481                           	opt callstack 0
   482  0000B3                     	ds	1
   483  0000B4                     _eusart1RxLastError:
   484                           	opt callstack 0
   485  0000B4                     	ds	1
   486  0000B5                     _eusart1RxCount:
   487                           	opt callstack 0
   488  0000B5                     	ds	1
   489  0000B6                     _eusart1RxTail:
   490                           	opt callstack 0
   491  0000B6                     	ds	1
   492  0000B7                     _eusart1TxTail:
   493                           	opt callstack 0
   494  0000B7                     	ds	1
   495  0000B8                     _eusart1TxHead:
   496                           	opt callstack 0
   497  0000B8                     	ds	1
   498  0000B9                     _eusart2RxLastError:
   499                           	opt callstack 0
   500  0000B9                     	ds	1
   501  0000BA                     _eusart2RxCount:
   502                           	opt callstack 0
   503  0000BA                     	ds	1
   504  0000BB                     _eusart2RxTail:
   505                           	opt callstack 0
   506  0000BB                     	ds	1
   507  0000BC                     _eusart2TxTail:
   508                           	opt callstack 0
   509  0000BC                     	ds	1
   510  0000BD                     _eusart2TxHead:
   511                           	opt callstack 0
   512  0000BD                     	ds	1
   513                           
   514                           	psect	dataBANK0
   515  0000FB                     __pdataBANK0:
   516                           	opt callstack 0
   517  0000FB                     _temp:
   518                           	opt callstack 0
   519  0000FB                     	ds	2
   520                           
   521                           	psect	bssBANK1
   522  000100                     __pbssBANK1:
   523                           	opt callstack 0
   524  000100                     _dbuf:
   525                           	opt callstack 0
   526  000100                     	ds	32
   527                           
   528                           	psect	dataBANK1
   529  000120                     __pdataBANK1:
   530                           	opt callstack 0
   531  000120                     _rxData:
   532                           	opt callstack 0
   533  000120                     	ds	15
   534  00012F                     _data1:
   535                           	opt callstack 0
   536  00012F                     	ds	11
   537                           
   538                           	psect	cstackBANK0
   539  0000BE                     __pcstackBANK0:
   540                           	opt callstack 0
   541  0000BE                     vfpfcnvrt@ll:
   542                           	opt callstack 0
   543                           
   544                           ; 8 bytes @ 0x0
   545  0000BE                     	ds	8
   546  0000C6                     vfpfcnvrt@llu:
   547                           	opt callstack 0
   548                           
   549                           ; 8 bytes @ 0x8
   550  0000C6                     	ds	8
   551  0000CE                     vfpfcnvrt@done:
   552                           	opt callstack 0
   553                           
   554                           ; 2 bytes @ 0x10
   555  0000CE                     	ds	2
   556  0000D0                     _vfpfcnvrt$1235:
   557                           	opt callstack 0
   558                           
   559                           ; 2 bytes @ 0x12
   560  0000D0                     	ds	2
   561  0000D2                     vfpfcnvrt@c:
   562                           	opt callstack 0
   563                           
   564                           ; 1 bytes @ 0x14
   565  0000D2                     	ds	1
   566  0000D3                     ?_vfprintf:
   567                           	opt callstack 0
   568  0000D3                     vfprintf@fp:
   569                           	opt callstack 0
   570                           
   571                           ; 2 bytes @ 0x15
   572  0000D3                     	ds	2
   573  0000D5                     vfprintf@fmt:
   574                           	opt callstack 0
   575                           
   576                           ; 2 bytes @ 0x17
   577  0000D5                     	ds	2
   578  0000D7                     vfprintf@ap:
   579                           	opt callstack 0
   580                           
   581                           ; 2 bytes @ 0x19
   582  0000D7                     	ds	2
   583  0000D9                     ?_printf:
   584                           	opt callstack 0
   585  0000D9                     printf@fmt:
   586                           	opt callstack 0
   587                           
   588                           ; 2 bytes @ 0x1B
   589  0000D9                     	ds	8
   590  0000E1                     printf@ap:
   591                           	opt callstack 0
   592                           
   593                           ; 2 bytes @ 0x23
   594  0000E1                     	ds	2
   595  0000E3                     PrintRXBuff@i:
   596                           	opt callstack 0
   597                           
   598                           ; 2 bytes @ 0x25
   599  0000E3                     	ds	2
   600                           
   601                           	psect	cstackCOMRAM
   602  000001                     __pcstackCOMRAM:
   603                           	opt callstack 0
   604  000001                     ??_INTERRUPT_InterruptManager:
   605  000001                     
   606                           ; 1 bytes @ 0x0
   607  000001                     	ds	4
   608  000005                     ?_strlen:
   609                           	opt callstack 0
   610  000005                     ?_isupper:
   611                           	opt callstack 0
   612  000005                     ?_isalpha:
   613                           	opt callstack 0
   614  000005                     ?_isdigit:
   615                           	opt callstack 0
   616  000005                     ?_isspace:
   617                           	opt callstack 0
   618  000005                     ?_islower:
   619                           	opt callstack 0
   620  000005                     ?___wmul:
   621                           	opt callstack 0
   622  000005                     ?___aodiv:
   623                           	opt callstack 0
   624  000005                     ?___aomod:
   625                           	opt callstack 0
   626  000005                     EUSART2_Write@txData:
   627                           	opt callstack 0
   628  000005                     EUSART1_Read@readValue:
   629                           	opt callstack 0
   630  000005                     EUSART2_SetFramingErrorHandler@interruptHandler:
   631                           	opt callstack 0
   632  000005                     EUSART2_SetOverrunErrorHandler@interruptHandler:
   633                           	opt callstack 0
   634  000005                     EUSART2_SetErrorHandler@interruptHandler:
   635                           	opt callstack 0
   636  000005                     EUSART2_SetTxInterruptHandler@interruptHandler:
   637                           	opt callstack 0
   638  000005                     EUSART2_SetRxInterruptHandler@interruptHandler:
   639                           	opt callstack 0
   640  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
   641                           	opt callstack 0
   642  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   643                           	opt callstack 0
   644  000005                     EUSART1_SetErrorHandler@interruptHandler:
   645                           	opt callstack 0
   646  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
   647                           	opt callstack 0
   648  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
   649                           	opt callstack 0
   650  000005                     ClearRxBuff@i:
   651                           	opt callstack 0
   652  000005                     ___wmul@multiplier:
   653                           	opt callstack 0
   654  000005                     isalpha@c:
   655                           	opt callstack 0
   656  000005                     isdigit@c:
   657                           	opt callstack 0
   658  000005                     isspace@c:
   659                           	opt callstack 0
   660  000005                     isupper@c:
   661                           	opt callstack 0
   662  000005                     strlen@s:
   663                           	opt callstack 0
   664  000005                     islower@c:
   665                           	opt callstack 0
   666  000005                     ___aodiv@dividend:
   667                           	opt callstack 0
   668  000005                     ___aomod@dividend:
   669                           	opt callstack 0
   670                           
   671                           ; 8 bytes @ 0x4
   672  000005                     	ds	1
   673  000006                     putch@txData:
   674                           	opt callstack 0
   675                           
   676                           ; 1 bytes @ 0x5
   677  000006                     	ds	1
   678  000007                     ??_isupper:
   679  000007                     ??_isalpha:
   680  000007                     ??_isdigit:
   681  000007                     ??_isspace:
   682  000007                     ??_islower:
   683  000007                     ___wmul@multiplicand:
   684                           	opt callstack 0
   685  000007                     fputc@c:
   686                           	opt callstack 0
   687  000007                     strlen@a:
   688                           	opt callstack 0
   689                           
   690                           ; 2 bytes @ 0x6
   691  000007                     	ds	2
   692  000009                     ___wmul@product:
   693                           	opt callstack 0
   694  000009                     fputc@fp:
   695                           	opt callstack 0
   696                           
   697                           ; 2 bytes @ 0x8
   698  000009                     	ds	2
   699  00000B                     ??_fputc:
   700  00000B                     ?_toupper:
   701                           	opt callstack 0
   702  00000B                     _isspace$1720:
   703                           	opt callstack 0
   704  00000B                     toupper@c:
   705                           	opt callstack 0
   706                           
   707                           ; 2 bytes @ 0xA
   708  00000B                     	ds	1
   709  00000C                     ?_atoi:
   710                           	opt callstack 0
   711  00000C                     atoi@s:
   712                           	opt callstack 0
   713                           
   714                           ; 2 bytes @ 0xB
   715  00000C                     	ds	1
   716  00000D                     ??_toupper:
   717  00000D                     ___aodiv@divisor:
   718                           	opt callstack 0
   719  00000D                     ___aomod@divisor:
   720                           	opt callstack 0
   721                           
   722                           ; 8 bytes @ 0xC
   723  00000D                     	ds	1
   724  00000E                     ??_atoi:
   725                           
   726                           ; 1 bytes @ 0xD
   727  00000E                     	ds	2
   728  000010                     fputs@s:
   729                           	opt callstack 0
   730                           
   731                           ; 2 bytes @ 0xF
   732  000010                     	ds	1
   733  000011                     _toupper$1785:
   734                           	opt callstack 0
   735                           
   736                           ; 2 bytes @ 0x10
   737  000011                     	ds	1
   738  000012                     atoi@neg:
   739                           	opt callstack 0
   740  000012                     fputs@fp:
   741                           	opt callstack 0
   742                           
   743                           ; 2 bytes @ 0x11
   744  000012                     	ds	2
   745  000014                     fputs@c:
   746                           	opt callstack 0
   747  000014                     _atoi$1693:
   748                           	opt callstack 0
   749                           
   750                           ; 2 bytes @ 0x13
   751  000014                     	ds	1
   752  000015                     ___aodiv@counter:
   753                           	opt callstack 0
   754  000015                     ___aomod@counter:
   755                           	opt callstack 0
   756  000015                     fputs@i:
   757                           	opt callstack 0
   758                           
   759                           ; 2 bytes @ 0x14
   760  000015                     	ds	1
   761  000016                     ___aodiv@sign:
   762                           	opt callstack 0
   763  000016                     ___aomod@sign:
   764                           	opt callstack 0
   765  000016                     _atoi$1695:
   766                           	opt callstack 0
   767                           
   768                           ; 2 bytes @ 0x15
   769  000016                     	ds	1
   770  000017                     ?_abs:
   771                           	opt callstack 0
   772  000017                     ?_pad:
   773                           	opt callstack 0
   774  000017                     pad@fp:
   775                           	opt callstack 0
   776  000017                     abs@a:
   777                           	opt callstack 0
   778  000017                     ___aodiv@quotient:
   779                           	opt callstack 0
   780                           
   781                           ; 8 bytes @ 0x16
   782  000017                     	ds	1
   783  000018                     _atoi$1694:
   784                           	opt callstack 0
   785                           
   786                           ; 1 bytes @ 0x17
   787  000018                     	ds	1
   788  000019                     ??_abs:
   789  000019                     pad@buf:
   790                           	opt callstack 0
   791  000019                     atoi@n:
   792                           	opt callstack 0
   793                           
   794                           ; 2 bytes @ 0x18
   795  000019                     	ds	2
   796  00001B                     pad@p:
   797                           	opt callstack 0
   798                           
   799                           ; 2 bytes @ 0x1A
   800  00001B                     	ds	2
   801  00001D                     ??_pad:
   802                           
   803                           ; 1 bytes @ 0x1C
   804  00001D                     	ds	1
   805  00001E                     pad@i:
   806                           	opt callstack 0
   807                           
   808                           ; 2 bytes @ 0x1D
   809  00001E                     	ds	2
   810  000020                     pad@w:
   811                           	opt callstack 0
   812                           
   813                           ; 2 bytes @ 0x1F
   814  000020                     	ds	2
   815  000022                     ?_dtoa:
   816                           	opt callstack 0
   817  000022                     ?_xtoa:
   818                           	opt callstack 0
   819  000022                     dtoa@fp:
   820                           	opt callstack 0
   821  000022                     xtoa@fp:
   822                           	opt callstack 0
   823                           
   824                           ; 2 bytes @ 0x21
   825  000022                     	ds	2
   826  000024                     dtoa@d:
   827                           	opt callstack 0
   828  000024                     xtoa@d:
   829                           	opt callstack 0
   830                           
   831                           ; 8 bytes @ 0x23
   832  000024                     	ds	8
   833  00002C                     ??_dtoa:
   834  00002C                     xtoa@x:
   835                           	opt callstack 0
   836                           
   837                           ; 1 bytes @ 0x2B
   838  00002C                     	ds	1
   839  00002D                     ??_xtoa:
   840                           
   841                           ; 1 bytes @ 0x2C
   842  00002D                     	ds	7
   843  000034                     _dtoa$1209:
   844                           	opt callstack 0
   845                           
   846                           ; 2 bytes @ 0x33
   847  000034                     	ds	1
   848  000035                     _xtoa$1220:
   849                           	opt callstack 0
   850                           
   851                           ; 2 bytes @ 0x34
   852  000035                     	ds	1
   853  000036                     dtoa@p:
   854                           	opt callstack 0
   855                           
   856                           ; 2 bytes @ 0x35
   857  000036                     	ds	1
   858  000037                     _xtoa$1221:
   859                           	opt callstack 0
   860                           
   861                           ; 2 bytes @ 0x36
   862  000037                     	ds	1
   863  000038                     dtoa@w:
   864                           	opt callstack 0
   865                           
   866                           ; 2 bytes @ 0x37
   867  000038                     	ds	1
   868  000039                     xtoa@p:
   869                           	opt callstack 0
   870                           
   871                           ; 2 bytes @ 0x38
   872  000039                     	ds	1
   873  00003A                     dtoa@s:
   874                           	opt callstack 0
   875                           
   876                           ; 2 bytes @ 0x39
   877  00003A                     	ds	1
   878  00003B                     xtoa@w:
   879                           	opt callstack 0
   880                           
   881                           ; 2 bytes @ 0x3A
   882  00003B                     	ds	1
   883  00003C                     dtoa@n:
   884                           	opt callstack 0
   885                           
   886                           ; 8 bytes @ 0x3B
   887  00003C                     	ds	1
   888  00003D                     xtoa@n:
   889                           	opt callstack 0
   890                           
   891                           ; 8 bytes @ 0x3C
   892  00003D                     	ds	7
   893  000044                     dtoa@i:
   894                           	opt callstack 0
   895                           
   896                           ; 2 bytes @ 0x43
   897  000044                     	ds	1
   898  000045                     xtoa@i:
   899                           	opt callstack 0
   900                           
   901                           ; 2 bytes @ 0x44
   902  000045                     	ds	2
   903  000047                     xtoa@c:
   904                           	opt callstack 0
   905                           
   906                           ; 2 bytes @ 0x46
   907  000047                     	ds	2
   908  000049                     ?_vfpfcnvrt:
   909                           	opt callstack 0
   910  000049                     vfpfcnvrt@fp:
   911                           	opt callstack 0
   912                           
   913                           ; 2 bytes @ 0x48
   914  000049                     	ds	2
   915  00004B                     vfpfcnvrt@fmt:
   916                           	opt callstack 0
   917                           
   918                           ; 2 bytes @ 0x4A
   919  00004B                     	ds	2
   920  00004D                     vfpfcnvrt@ap:
   921                           	opt callstack 0
   922                           
   923                           ; 2 bytes @ 0x4C
   924  00004D                     	ds	2
   925  00004F                     ??_vfpfcnvrt:
   926                           
   927                           ; 1 bytes @ 0x4E
   928  00004F                     	ds	4
   929  000053                     vfprintf@cfmt:
   930                           	opt callstack 0
   931                           
   932                           ; 2 bytes @ 0x52
   933  000053                     	ds	2
   934  000055                     ??_PrintRXBuff:
   935                           
   936                           ; 1 bytes @ 0x54
   937  000055                     	ds	1
   938  000056                     ??_main:
   939                           
   940                           ; 1 bytes @ 0x55
   941  000056                     	ds	1
   942                           
   943 ;;
   944 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   945 ;;
   946 ;; *************** function _main *****************
   947 ;; Defined at:
   948 ;;		line 108 in file "main.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;		None
   951 ;; Auto vars:     Size  Location     Type
   952 ;;		None
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   964 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   965 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   966 ;;Total ram usage:        1 bytes
   967 ;; Hardware stack levels required when called:   14
   968 ;; This function calls:
   969 ;;		_ClearRxBuff
   970 ;;		_EUSART1_Read
   971 ;;		_EUSART1_is_rx_ready
   972 ;;		_PrintRXBuff
   973 ;;		_RXMode
   974 ;;		_SYSTEM_Initialize
   975 ;;		_printf
   976 ;; This function is called by:
   977 ;;		Startup code after reset
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           	psect	text0
   982  002022                     __ptext0:
   983                           	opt callstack 0
   984  002022                     _main:
   985                           	opt callstack 17
   986  002022                     
   987                           ;main.c: 111:     SYSTEM_Initialize();
   988  002022  EC5F  F014         	call	_SYSTEM_Initialize	;wreg free
   989  002026                     
   990                           ;main.c: 118:     (INTCONbits.GIE = 1);
   991  002026  8EF2               	bsf	242,7,c	;volatile
   992  002028                     
   993                           ;main.c: 124:     (INTCONbits.PEIE = 1);
   994  002028  8CF2               	bsf	242,6,c	;volatile
   995  00202A  9883               	bcf	131,4,c	;volatile
   996  00202C  9A83               	bcf	131,5,c	;volatile
   997  00202E  9C83               	bcf	131,6,c	;volatile
   998  002030  9E83               	bcf	131,7,c	;volatile
   999  002032                     
  1000                           ;main.c: 139:     printf("Initalised\r\n\n");
  1001  002032  0E32               	movlw	low STR_2
  1002  002034  0100               	movlb	0	; () banked
  1003  002036  6FD9               	movwf	printf@fmt& (0+255),b
  1004  002038  0E0F               	movlw	high STR_2
  1005  00203A  6FDA               	movwf	(printf@fmt+1)& (0+255),b
  1006  00203C  EC1D  F014         	call	_printf	;wreg free
  1007  002040                     
  1008                           ;main.c: 141:     RXMode();
  1009  002040  ECBF  F014         	call	_RXMode	;wreg free
  1010  002044                     
  1011                           ;main.c: 142:     ClearRxBuff();
  1012  002044  EC23  F013         	call	_ClearRxBuff	;wreg free
  1013  002048                     
  1014                           ;main.c: 143:     PrintRXBuff();
  1015  002048  ECD8  F011         	call	_PrintRXBuff	;wreg free
  1016  00204C                     l3560:
  1017                           
  1018                           ;main.c: 146:     {;main.c: 147:         if(EUSART1_is_rx_ready()){
  1019  00204C  EC78  F014         	call	_EUSART1_is_rx_ready	;wreg free
  1020  002050  0900               	iorlw	0
  1021  002052  B4D8               	btfsc	status,2,c
  1022  002054  EF2E  F010         	goto	u2871
  1023  002058  EF30  F010         	goto	u2870
  1024  00205C                     u2871:
  1025  00205C  EF26  F010         	goto	l3560
  1026  002060                     u2870:
  1027  002060                     
  1028                           ;main.c: 152:             ByteNum = 0;
  1029  002060  0E00               	movlw	0
  1030  002062  0100               	movlb	0	; () banked
  1031  002064  6FAF               	movwf	(_ByteNum+1)& (0+255),b
  1032  002066  0E00               	movlw	0
  1033  002068  6FAE               	movwf	_ByteNum& (0+255),b
  1034                           
  1035                           ;main.c: 153:             while(EUSART1_is_rx_ready()){
  1036  00206A  EF4D  F010         	goto	l3570
  1037  00206E                     l3564:
  1038                           
  1039                           ;main.c: 155:                 rxData[ByteNum] = EUSART1_Read();
  1040  00206E  EC66  F012         	call	_EUSART1_Read	;wreg free
  1041  002072  6E56               	movwf	??_main^0,c
  1042  002074  0E20               	movlw	low _rxData
  1043  002076  0100               	movlb	0	; () banked
  1044  002078  25AE               	addwf	_ByteNum& (0+255),w,b
  1045  00207A  6ED9               	movwf	fsr2l,c
  1046  00207C  0E01               	movlw	high _rxData
  1047  00207E  21AF               	addwfc	(_ByteNum+1)& (0+255),w,b
  1048  002080  6EDA               	movwf	fsr2h,c
  1049  002082  C056  FFDF         	movff	??_main,indf2
  1050  002086                     
  1051                           ; BSR set to: 0
  1052                           ;main.c: 156:                 _delay((unsigned long)((5)*(32000000/4000.0)));
  1053  002086  0E34               	movlw	52
  1054  002088  6E56               	movwf	??_main^0,c
  1055  00208A  0EF2               	movlw	242
  1056  00208C                     u2897:
  1057  00208C  2EE8               	decfsz	wreg,f,c
  1058  00208E  D7FE               	bra	u2897
  1059  002090  2E56               	decfsz	??_main^0,f,c
  1060  002092  D7FC               	bra	u2897
  1061  002094                     
  1062                           ;main.c: 157:                 ByteNum++;
  1063  002094  0100               	movlb	0	; () banked
  1064  002096  4BAE               	infsnz	_ByteNum& (0+255),f,b
  1065  002098  2BAF               	incf	(_ByteNum+1)& (0+255),f,b
  1066  00209A                     l3570:
  1067                           
  1068                           ; BSR set to: 0
  1069                           ;main.c: 153:             while(EUSART1_is_rx_ready()){
  1070  00209A  EC78  F014         	call	_EUSART1_is_rx_ready	;wreg free
  1071  00209E  0900               	iorlw	0
  1072  0020A0  A4D8               	btfss	status,2,c
  1073  0020A2  EF55  F010         	goto	u2881
  1074  0020A6  EF57  F010         	goto	u2880
  1075  0020AA                     u2881:
  1076  0020AA  EF37  F010         	goto	l3564
  1077  0020AE                     u2880:
  1078  0020AE                     
  1079                           ;main.c: 159:             printf("EUSART Read Complete.\r\n\n");
  1080  0020AE  0E01               	movlw	low STR_3
  1081  0020B0  0100               	movlb	0	; () banked
  1082  0020B2  6FD9               	movwf	printf@fmt& (0+255),b
  1083  0020B4  0E0F               	movlw	high STR_3
  1084  0020B6  6FDA               	movwf	(printf@fmt+1)& (0+255),b
  1085  0020B8  EC1D  F014         	call	_printf	;wreg free
  1086                           
  1087                           ;main.c: 161:             PrintRXBuff();
  1088  0020BC  ECD8  F011         	call	_PrintRXBuff	;wreg free
  1089  0020C0                     
  1090                           ;main.c: 162:             ClearRxBuff();
  1091  0020C0  EC23  F013         	call	_ClearRxBuff	;wreg free
  1092  0020C4  EF26  F010         	goto	l3560
  1093  0020C8  EF93  F000         	goto	start
  1094  0020CC                     __end_of_main:
  1095                           	opt callstack 0
  1096                           
  1097 ;; *************** function _SYSTEM_Initialize *****************
  1098 ;; Defined at:
  1099 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;		None
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;		None
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      void 
  1106 ;; Registers used:
  1107 ;;		wreg, status,2, status,0, cstack
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1117 ;;Total ram usage:        0 bytes
  1118 ;; Hardware stack levels used:    1
  1119 ;; Hardware stack levels required when called:    6
  1120 ;; This function calls:
  1121 ;;		_EUSART1_Initialize
  1122 ;;		_EUSART2_Initialize
  1123 ;;		_INTERRUPT_Initialize
  1124 ;;		_OSCILLATOR_Initialize
  1125 ;;		_PIN_MANAGER_Initialize
  1126 ;;		_PMD_Initialize
  1127 ;; This function is called by:
  1128 ;;		_main
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           	psect	text1
  1133  0028BE                     __ptext1:
  1134                           	opt callstack 0
  1135  0028BE                     _SYSTEM_Initialize:
  1136                           	opt callstack 24
  1137  0028BE                     
  1138                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  1139  0028BE  ECCB  F014         	call	_INTERRUPT_Initialize	;wreg free
  1140  0028C2                     
  1141                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  1142  0028C2  EC44  F014         	call	_PMD_Initialize	;wreg free
  1143  0028C6                     
  1144                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1145  0028C6  ECB1  F010         	call	_PIN_MANAGER_Initialize	;wreg free
  1146  0028CA                     
  1147                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1148  0028CA  EC6C  F014         	call	_OSCILLATOR_Initialize	;wreg free
  1149  0028CE                     
  1150                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  1151  0028CE  EC37  F011         	call	_EUSART1_Initialize	;wreg free
  1152  0028D2                     
  1153                           ;mcc_generated_files/mcc.c: 57:     EUSART2_Initialize();
  1154  0028D2  ECF8  F010         	call	_EUSART2_Initialize	;wreg free
  1155  0028D6  0012               	return		;funcret
  1156  0028D8                     __end_of_SYSTEM_Initialize:
  1157                           	opt callstack 0
  1158                           
  1159 ;; *************** function _PMD_Initialize *****************
  1160 ;; Defined at:
  1161 ;;		line 74 in file "mcc_generated_files/mcc.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;		None
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;		None
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  1    wreg      void 
  1168 ;; Registers used:
  1169 ;;		wreg, status,2
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1179 ;;Total ram usage:        0 bytes
  1180 ;; Hardware stack levels used:    1
  1181 ;; Hardware stack levels required when called:    4
  1182 ;; This function calls:
  1183 ;;		Nothing
  1184 ;; This function is called by:
  1185 ;;		_SYSTEM_Initialize
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           	psect	text2
  1190  002888                     __ptext2:
  1191                           	opt callstack 0
  1192  002888                     _PMD_Initialize:
  1193                           	opt callstack 25
  1194  002888                     
  1195                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  1196  002888  0E00               	movlw	0
  1197  00288A  010E               	movlb	14	; () banked
  1198  00288C  6FE1               	movwf	225,b	;volatile
  1199                           
  1200                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  1201  00288E  0E00               	movlw	0
  1202  002890  6FE2               	movwf	226,b	;volatile
  1203                           
  1204                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  1205  002892  0E00               	movlw	0
  1206  002894  6FE3               	movwf	227,b	;volatile
  1207                           
  1208                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  1209  002896  0E00               	movlw	0
  1210  002898  6FE4               	movwf	228,b	;volatile
  1211                           
  1212                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  1213  00289A  0E00               	movlw	0
  1214  00289C  6FE5               	movwf	229,b	;volatile
  1215                           
  1216                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  1217  00289E  0E00               	movlw	0
  1218  0028A0  6FE6               	movwf	230,b	;volatile
  1219  0028A2                     
  1220                           ; BSR set to: 14
  1221  0028A2  0012               	return		;funcret
  1222  0028A4                     __end_of_PMD_Initialize:
  1223                           	opt callstack 0
  1224                           
  1225 ;; *************** function _PIN_MANAGER_Initialize *****************
  1226 ;; Defined at:
  1227 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;		None
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;		None
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  1    wreg      void 
  1234 ;; Registers used:
  1235 ;;		wreg, status,2
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1245 ;;Total ram usage:        0 bytes
  1246 ;; Hardware stack levels used:    1
  1247 ;; Hardware stack levels required when called:    4
  1248 ;; This function calls:
  1249 ;;		Nothing
  1250 ;; This function is called by:
  1251 ;;		_SYSTEM_Initialize
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           	psect	text3
  1256  002162                     __ptext3:
  1257                           	opt callstack 0
  1258  002162                     _PIN_MANAGER_Initialize:
  1259                           	opt callstack 25
  1260  002162                     
  1261                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1262  002162  0E00               	movlw	0
  1263  002164  6E87               	movwf	135,c	;volatile
  1264                           
  1265                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  1266  002166  0E00               	movlw	0
  1267  002168  6E86               	movwf	134,c	;volatile
  1268                           
  1269                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1270  00216A  0E00               	movlw	0
  1271  00216C  6E83               	movwf	131,c	;volatile
  1272                           
  1273                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  1274  00216E  0E00               	movlw	0
  1275  002170  6E84               	movwf	132,c	;volatile
  1276                           
  1277                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  1278  002172  0E00               	movlw	0
  1279  002174  6E85               	movwf	133,c	;volatile
  1280                           
  1281                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  1282  002176  0E07               	movlw	7
  1283  002178  6E8C               	movwf	140,c	;volatile
  1284                           
  1285                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x07;
  1286  00217A  0E07               	movlw	7
  1287  00217C  6E88               	movwf	136,c	;volatile
  1288                           
  1289                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  1290  00217E  0EBF               	movlw	191
  1291  002180  6E89               	movwf	137,c	;volatile
  1292                           
  1293                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  1294  002182  0EBF               	movlw	191
  1295  002184  6E8A               	movwf	138,c	;volatile
  1296                           
  1297                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  1298  002186  0EFE               	movlw	254
  1299  002188  6E8B               	movwf	139,c	;volatile
  1300  00218A                     
  1301                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  1302  00218A  010F               	movlb	15	; () banked
  1303  00218C  6926               	setf	38,b	;volatile
  1304                           
  1305                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x3B;
  1306  00218E  0E3B               	movlw	59
  1307  002190  6F21               	movwf	33,b	;volatile
  1308                           
  1309                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x37;
  1310  002192  0E37               	movlw	55
  1311  002194  6F19               	movwf	25,b	;volatile
  1312                           
  1313                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  1314  002196  0E07               	movlw	7
  1315  002198  6F2E               	movwf	46,b	;volatile
  1316  00219A                     
  1317                           ; BSR set to: 15
  1318                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  1319  00219A  6911               	setf	17,b	;volatile
  1320                           
  1321                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  1322  00219C  0E00               	movlw	0
  1323  00219E  6F25               	movwf	37,b	;volatile
  1324                           
  1325                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  1326  0021A0  0E00               	movlw	0
  1327  0021A2  6F2D               	movwf	45,b	;volatile
  1328                           
  1329                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  1330  0021A4  0E00               	movlw	0
  1331  0021A6  6F18               	movwf	24,b	;volatile
  1332                           
  1333                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  1334  0021A8  0E00               	movlw	0
  1335  0021AA  6F10               	movwf	16,b	;volatile
  1336                           
  1337                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  1338  0021AC  0E00               	movlw	0
  1339  0021AE  6F20               	movwf	32,b	;volatile
  1340                           
  1341                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  1342  0021B0  0E00               	movlw	0
  1343  0021B2  6F2C               	movwf	44,b	;volatile
  1344                           
  1345                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  1346  0021B4  0E00               	movlw	0
  1347  0021B6  6F0F               	movwf	15,b	;volatile
  1348                           
  1349                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  1350  0021B8  0E00               	movlw	0
  1351  0021BA  6F17               	movwf	23,b	;volatile
  1352                           
  1353                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  1354  0021BC  0E00               	movlw	0
  1355  0021BE  6F1F               	movwf	31,b	;volatile
  1356                           
  1357                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  1358  0021C0  0E00               	movlw	0
  1359  0021C2  6F24               	movwf	36,b	;volatile
  1360  0021C4                     
  1361                           ; BSR set to: 15
  1362                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  1363  0021C4  690E               	setf	14,b	;volatile
  1364  0021C6                     
  1365                           ; BSR set to: 15
  1366                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  1367  0021C6  6916               	setf	22,b	;volatile
  1368  0021C8                     
  1369                           ; BSR set to: 15
  1370                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  1371  0021C8  691E               	setf	30,b	;volatile
  1372  0021CA                     
  1373                           ; BSR set to: 15
  1374                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  1375  0021CA  6923               	setf	35,b	;volatile
  1376                           
  1377                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  1378  0021CC  0E07               	movlw	7
  1379  0021CE  6F2B               	movwf	43,b	;volatile
  1380  0021D0                     
  1381                           ; BSR set to: 15
  1382                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  1383  0021D0  690D               	setf	13,b	;volatile
  1384  0021D2                     
  1385                           ; BSR set to: 15
  1386                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  1387  0021D2  6915               	setf	21,b	;volatile
  1388  0021D4                     
  1389                           ; BSR set to: 15
  1390                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  1391  0021D4  691D               	setf	29,b	;volatile
  1392  0021D6                     
  1393                           ; BSR set to: 15
  1394                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  1395  0021D6  6922               	setf	34,b	;volatile
  1396                           
  1397                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  1398  0021D8  0E0F               	movlw	15
  1399  0021DA  6F2A               	movwf	42,b	;volatile
  1400                           
  1401                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x17;
  1402  0021DC  0E17               	movlw	23
  1403  0021DE  010E               	movlb	14	; () banked
  1404  0021E0  6FB5               	movwf	181,b	;volatile
  1405                           
  1406                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x0B;
  1407  0021E2  0E0B               	movlw	11
  1408  0021E4  6FF5               	movwf	245,b	;volatile
  1409                           
  1410                           ;mcc_generated_files/pin_manager.c: 129:     RC6PPS = 0x09;
  1411  0021E6  0E09               	movlw	9
  1412  0021E8  6FFD               	movwf	253,b	;volatile
  1413                           
  1414                           ;mcc_generated_files/pin_manager.c: 130:     RX2PPS = 0x0F;
  1415  0021EA  0E0F               	movlw	15
  1416  0021EC  6F8D               	movwf	141,b	;volatile
  1417  0021EE                     
  1418                           ; BSR set to: 14
  1419  0021EE  0012               	return		;funcret
  1420  0021F0                     __end_of_PIN_MANAGER_Initialize:
  1421                           	opt callstack 0
  1422                           
  1423 ;; *************** function _OSCILLATOR_Initialize *****************
  1424 ;; Defined at:
  1425 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;		None
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;		None
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      void 
  1432 ;; Registers used:
  1433 ;;		wreg, status,2
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1443 ;;Total ram usage:        0 bytes
  1444 ;; Hardware stack levels used:    1
  1445 ;; Hardware stack levels required when called:    4
  1446 ;; This function calls:
  1447 ;;		Nothing
  1448 ;; This function is called by:
  1449 ;;		_SYSTEM_Initialize
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text4
  1454  0028D8                     __ptext4:
  1455                           	opt callstack 0
  1456  0028D8                     _OSCILLATOR_Initialize:
  1457                           	opt callstack 25
  1458  0028D8                     
  1459                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
  1460  0028D8  0E60               	movlw	96
  1461  0028DA  010E               	movlb	14	; () banked
  1462  0028DC  6FD8               	movwf	216,b	;volatile
  1463                           
  1464                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  1465  0028DE  0E00               	movlw	0
  1466  0028E0  6FDA               	movwf	218,b	;volatile
  1467                           
  1468                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  1469  0028E2  0E00               	movlw	0
  1470  0028E4  6FDC               	movwf	220,b	;volatile
  1471                           
  1472                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x06;
  1473  0028E6  0E06               	movlw	6
  1474  0028E8  6FDE               	movwf	222,b	;volatile
  1475                           
  1476                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  1477  0028EA  0E00               	movlw	0
  1478  0028EC  6FDD               	movwf	221,b	;volatile
  1479  0028EE                     
  1480                           ; BSR set to: 14
  1481  0028EE  0012               	return		;funcret
  1482  0028F0                     __end_of_OSCILLATOR_Initialize:
  1483                           	opt callstack 0
  1484                           
  1485 ;; *************** function _INTERRUPT_Initialize *****************
  1486 ;; Defined at:
  1487 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;		None
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;		None
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1    wreg      void 
  1494 ;; Registers used:
  1495 ;;		None
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1505 ;;Total ram usage:        0 bytes
  1506 ;; Hardware stack levels used:    1
  1507 ;; Hardware stack levels required when called:    4
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_SYSTEM_Initialize
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           	psect	text5
  1516  002996                     __ptext5:
  1517                           	opt callstack 0
  1518  002996                     _INTERRUPT_Initialize:
  1519                           	opt callstack 25
  1520  002996                     
  1521                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  1522  002996  9AF2               	bcf	242,5,c	;volatile
  1523  002998  0012               	return		;funcret
  1524  00299A                     __end_of_INTERRUPT_Initialize:
  1525                           	opt callstack 0
  1526                           
  1527 ;; *************** function _EUSART2_Initialize *****************
  1528 ;; Defined at:
  1529 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;		None
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;		None
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  1    wreg      void 
  1536 ;; Registers used:
  1537 ;;		wreg, status,2, status,0, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1547 ;;Total ram usage:        0 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; Hardware stack levels required when called:    5
  1550 ;; This function calls:
  1551 ;;		_EUSART2_SetErrorHandler
  1552 ;;		_EUSART2_SetFramingErrorHandler
  1553 ;;		_EUSART2_SetOverrunErrorHandler
  1554 ;;		_EUSART2_SetRxInterruptHandler
  1555 ;;		_EUSART2_SetTxInterruptHandler
  1556 ;; This function is called by:
  1557 ;;		_SYSTEM_Initialize
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           	psect	text6
  1562  0021F0                     __ptext6:
  1563                           	opt callstack 0
  1564  0021F0                     _EUSART2_Initialize:
  1565                           	opt callstack 24
  1566  0021F0                     
  1567                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  1568  0021F0  010E               	movlb	14	; () banked
  1569  0021F2  9FC5               	bcf	197,7,b	;volatile
  1570  0021F4                     
  1571                           ; BSR set to: 14
  1572                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  1573  0021F4  0EA6               	movlw	low _EUSART2_Receive_ISR
  1574  0021F6  6E05               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler^0,c
  1575  0021F8  0E1E               	movlw	high _EUSART2_Receive_ISR
  1576  0021FA  6E06               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)^0,c
  1577  0021FC  EC89  F014         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  1578  002200                     
  1579                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  1580  002200  010E               	movlb	14	; () banked
  1581  002202  9DC5               	bcf	197,6,b	;volatile
  1582                           
  1583                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  1584  002204  0E76               	movlw	low _EUSART2_Transmit_ISR
  1585  002206  6E05               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler^0,c
  1586  002208  0E25               	movlw	high _EUSART2_Transmit_ISR
  1587  00220A  6E06               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)^0,c
  1588  00220C  EC84  F014         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  1589  002210                     
  1590                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
  1591  002210  0E08               	movlw	8
  1592  002212  010E               	movlb	14	; () banked
  1593  002214  6F9F               	movwf	159,b	;volatile
  1594  002216                     
  1595                           ; BSR set to: 14
  1596                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
  1597  002216  0E90               	movlw	144
  1598  002218  6F9D               	movwf	157,b	;volatile
  1599  00221A                     
  1600                           ; BSR set to: 14
  1601                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
  1602  00221A  0E24               	movlw	36
  1603  00221C  6F9E               	movwf	158,b	;volatile
  1604  00221E                     
  1605                           ; BSR set to: 14
  1606                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x40;
  1607  00221E  0E40               	movlw	64
  1608  002220  6F9B               	movwf	155,b	;volatile
  1609  002222                     
  1610                           ; BSR set to: 14
  1611                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x03;
  1612  002222  0E03               	movlw	3
  1613  002224  6F9C               	movwf	156,b	;volatile
  1614  002226                     
  1615                           ; BSR set to: 14
  1616                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  1617  002226  0E9C               	movlw	low _EUSART2_DefaultFramingErrorHandler
  1618  002228  6E05               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  1619  00222A  0E29               	movlw	high _EUSART2_DefaultFramingErrorHandler
  1620  00222C  6E06               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  1621  00222E  EC93  F014         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  1622  002232                     
  1623                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  1624  002232  0E76               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  1625  002234  6E05               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  1626  002236  0E29               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  1627  002238  6E06               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  1628  00223A  EC8E  F014         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  1629  00223E                     
  1630                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  1631  00223E  0E84               	movlw	low _EUSART2_DefaultErrorHandler
  1632  002240  6E05               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  1633  002242  0E29               	movlw	high _EUSART2_DefaultErrorHandler
  1634  002244  6E06               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  1635  002246  EC98  F014         	call	_EUSART2_SetErrorHandler	;wreg free
  1636                           
  1637                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
  1638  00224A  0E00               	movlw	0
  1639  00224C  0100               	movlb	0	; () banked
  1640  00224E  6FB9               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  1641                           
  1642                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
  1643  002250  0E00               	movlw	0
  1644  002252  6FBD               	movwf	_eusart2TxHead& (0+255),b	;volatile
  1645                           
  1646                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
  1647  002254  0E00               	movlw	0
  1648  002256  6FBC               	movwf	_eusart2TxTail& (0+255),b	;volatile
  1649                           
  1650                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  1651  002258  0E08               	movlw	8
  1652  00225A  6FFA               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  1653                           
  1654                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
  1655  00225C  0E00               	movlw	0
  1656  00225E  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
  1657                           
  1658                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
  1659  002260  0E00               	movlw	0
  1660  002262  6FBB               	movwf	_eusart2RxTail& (0+255),b	;volatile
  1661                           
  1662                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
  1663  002264  0E00               	movlw	0
  1664  002266  6FBA               	movwf	_eusart2RxCount& (0+255),b	;volatile
  1665  002268                     
  1666                           ; BSR set to: 0
  1667                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
  1668  002268  010E               	movlb	14	; () banked
  1669  00226A  8FC5               	bsf	197,7,b	;volatile
  1670  00226C                     
  1671                           ; BSR set to: 14
  1672  00226C  0012               	return		;funcret
  1673  00226E                     __end_of_EUSART2_Initialize:
  1674                           	opt callstack 0
  1675                           
  1676 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  1677 ;; Defined at:
  1678 ;;		line 285 in file "mcc_generated_files/eusart2.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1681 ;;		 -> EUSART2_Transmit_ISR(1), 
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;		None
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      void 
  1686 ;; Registers used:
  1687 ;;		wreg, status,2, status,0
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1693 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1696 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1697 ;;Total ram usage:        2 bytes
  1698 ;; Hardware stack levels used:    1
  1699 ;; Hardware stack levels required when called:    4
  1700 ;; This function calls:
  1701 ;;		Nothing
  1702 ;; This function is called by:
  1703 ;;		_EUSART2_Initialize
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           	psect	text7
  1708  002908                     __ptext7:
  1709                           	opt callstack 0
  1710  002908                     _EUSART2_SetTxInterruptHandler:
  1711                           	opt callstack 24
  1712  002908                     
  1713                           ;mcc_generated_files/eusart2.c: 286:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  1714  002908  C005  F0F7         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  1715  00290C  C006  F0F8         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  1716  002910  0012               	return		;funcret
  1717  002912                     __end_of_EUSART2_SetTxInterruptHandler:
  1718                           	opt callstack 0
  1719                           
  1720 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  1721 ;; Defined at:
  1722 ;;		line 289 in file "mcc_generated_files/eusart2.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1725 ;;		 -> EUSART2_Receive_ISR(1), 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg, status,2, status,0
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1737 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1740 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1741 ;;Total ram usage:        2 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    4
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_EUSART2_Initialize
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text8
  1752  002912                     __ptext8:
  1753                           	opt callstack 0
  1754  002912                     _EUSART2_SetRxInterruptHandler:
  1755                           	opt callstack 24
  1756  002912                     
  1757                           ;mcc_generated_files/eusart2.c: 290:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  1758  002912  C005  F0F5         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  1759  002916  C006  F0F6         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  1760  00291A  0012               	return		;funcret
  1761  00291C                     __end_of_EUSART2_SetRxInterruptHandler:
  1762                           	opt callstack 0
  1763                           
  1764 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  1765 ;; Defined at:
  1766 ;;		line 277 in file "mcc_generated_files/eusart2.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1769 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;		None
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		wreg, status,2, status,0
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1781 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1784 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1785 ;;Total ram usage:        2 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; Hardware stack levels required when called:    4
  1788 ;; This function calls:
  1789 ;;		Nothing
  1790 ;; This function is called by:
  1791 ;;		_EUSART2_Initialize
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text9
  1796  00291C                     __ptext9:
  1797                           	opt callstack 0
  1798  00291C                     _EUSART2_SetOverrunErrorHandler:
  1799                           	opt callstack 24
  1800  00291C                     
  1801                           ;mcc_generated_files/eusart2.c: 278:     EUSART2_OverrunErrorHandler = interruptHandler;
  1802  00291C  C005  F0ED         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  1803  002920  C006  F0EE         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  1804  002924  0012               	return		;funcret
  1805  002926                     __end_of_EUSART2_SetOverrunErrorHandler:
  1806                           	opt callstack 0
  1807                           
  1808 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  1809 ;; Defined at:
  1810 ;;		line 273 in file "mcc_generated_files/eusart2.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1813 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;		None
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      void 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2, status,0
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1825 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1828 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1829 ;;Total ram usage:        2 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; Hardware stack levels required when called:    4
  1832 ;; This function calls:
  1833 ;;		Nothing
  1834 ;; This function is called by:
  1835 ;;		_EUSART2_Initialize
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           	psect	text10
  1840  002926                     __ptext10:
  1841                           	opt callstack 0
  1842  002926                     _EUSART2_SetFramingErrorHandler:
  1843                           	opt callstack 24
  1844  002926                     
  1845                           ;mcc_generated_files/eusart2.c: 274:     EUSART2_FramingErrorHandler = interruptHandler;
  1846  002926  C005  F0EF         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  1847  00292A  C006  F0F0         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  1848  00292E  0012               	return		;funcret
  1849  002930                     __end_of_EUSART2_SetFramingErrorHandler:
  1850                           	opt callstack 0
  1851                           
  1852 ;; *************** function _EUSART2_SetErrorHandler *****************
  1853 ;; Defined at:
  1854 ;;		line 281 in file "mcc_generated_files/eusart2.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1857 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;		None
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      void 
  1862 ;; Registers used:
  1863 ;;		wreg, status,2, status,0
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1869 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1872 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1873 ;;Total ram usage:        2 bytes
  1874 ;; Hardware stack levels used:    1
  1875 ;; Hardware stack levels required when called:    4
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_EUSART2_Initialize
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           	psect	text11
  1884  002930                     __ptext11:
  1885                           	opt callstack 0
  1886  002930                     _EUSART2_SetErrorHandler:
  1887                           	opt callstack 24
  1888  002930                     
  1889                           ;mcc_generated_files/eusart2.c: 282:     EUSART2_ErrorHandler = interruptHandler;
  1890  002930  C005  F0EB         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  1891  002934  C006  F0EC         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  1892  002938  0012               	return		;funcret
  1893  00293A                     __end_of_EUSART2_SetErrorHandler:
  1894                           	opt callstack 0
  1895                           
  1896 ;; *************** function _EUSART1_Initialize *****************
  1897 ;; Defined at:
  1898 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;		None
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;		None
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      void 
  1905 ;; Registers used:
  1906 ;;		wreg, status,2, status,0, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1916 ;;Total ram usage:        0 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; Hardware stack levels required when called:    5
  1919 ;; This function calls:
  1920 ;;		_EUSART1_SetErrorHandler
  1921 ;;		_EUSART1_SetFramingErrorHandler
  1922 ;;		_EUSART1_SetOverrunErrorHandler
  1923 ;;		_EUSART1_SetRxInterruptHandler
  1924 ;;		_EUSART1_SetTxInterruptHandler
  1925 ;; This function is called by:
  1926 ;;		_SYSTEM_Initialize
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           	psect	text12
  1931  00226E                     __ptext12:
  1932                           	opt callstack 0
  1933  00226E                     _EUSART1_Initialize:
  1934                           	opt callstack 24
  1935  00226E                     
  1936                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  1937  00226E  010E               	movlb	14	; () banked
  1938  002270  9BC5               	bcf	197,5,b	;volatile
  1939  002272                     
  1940                           ; BSR set to: 14
  1941                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  1942  002272  0E66               	movlw	low _EUSART1_Receive_ISR
  1943  002274  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  1944  002276  0E1F               	movlw	high _EUSART1_Receive_ISR
  1945  002278  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  1946  00227A  ECA2  F014         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  1947  00227E                     
  1948                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  1949  00227E  010E               	movlb	14	; () banked
  1950  002280  99C5               	bcf	197,4,b	;volatile
  1951                           
  1952                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  1953  002282  0E02               	movlw	low _EUSART1_Transmit_ISR
  1954  002284  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  1955  002286  0E26               	movlw	high _EUSART1_Transmit_ISR
  1956  002288  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  1957  00228A  EC9D  F014         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  1958  00228E                     
  1959                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  1960  00228E  0E08               	movlw	8
  1961  002290  6E9F               	movwf	159,c	;volatile
  1962  002292                     
  1963                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  1964  002292  0E90               	movlw	144
  1965  002294  6E9D               	movwf	157,c	;volatile
  1966  002296                     
  1967                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  1968  002296  0E24               	movlw	36
  1969  002298  6E9E               	movwf	158,c	;volatile
  1970  00229A                     
  1971                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x40;
  1972  00229A  0E40               	movlw	64
  1973  00229C  6E9B               	movwf	155,c	;volatile
  1974  00229E                     
  1975                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x03;
  1976  00229E  0E03               	movlw	3
  1977  0022A0  6E9C               	movwf	156,c	;volatile
  1978  0022A2                     
  1979                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  1980  0022A2  0E9E               	movlw	low _EUSART1_DefaultFramingErrorHandler
  1981  0022A4  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  1982  0022A6  0E29               	movlw	high _EUSART1_DefaultFramingErrorHandler
  1983  0022A8  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  1984  0022AA  ECAC  F014         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  1985  0022AE                     
  1986                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  1987  0022AE  0E8A               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  1988  0022B0  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  1989  0022B2  0E29               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  1990  0022B4  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  1991  0022B6  ECA7  F014         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  1992  0022BA                     
  1993                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  1994  0022BA  0E90               	movlw	low _EUSART1_DefaultErrorHandler
  1995  0022BC  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  1996  0022BE  0E29               	movlw	high _EUSART1_DefaultErrorHandler
  1997  0022C0  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  1998  0022C2  ECB1  F014         	call	_EUSART1_SetErrorHandler	;wreg free
  1999                           
  2000                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  2001  0022C6  0E00               	movlw	0
  2002  0022C8  0100               	movlb	0	; () banked
  2003  0022CA  6FB4               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  2004                           
  2005                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  2006  0022CC  0E00               	movlw	0
  2007  0022CE  6FB8               	movwf	_eusart1TxHead& (0+255),b	;volatile
  2008                           
  2009                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  2010  0022D0  0E00               	movlw	0
  2011  0022D2  6FB7               	movwf	_eusart1TxTail& (0+255),b	;volatile
  2012                           
  2013                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  2014  0022D4  0E10               	movlw	16
  2015  0022D6  6FF9               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  2016                           
  2017                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  2018  0022D8  0E00               	movlw	0
  2019  0022DA  6E59               	movwf	_eusart1RxHead^0,c	;volatile
  2020                           
  2021                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  2022  0022DC  0E00               	movlw	0
  2023  0022DE  6FB6               	movwf	_eusart1RxTail& (0+255),b	;volatile
  2024                           
  2025                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  2026  0022E0  0E00               	movlw	0
  2027  0022E2  6FB5               	movwf	_eusart1RxCount& (0+255),b	;volatile
  2028  0022E4                     
  2029                           ; BSR set to: 0
  2030                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  2031  0022E4  010E               	movlb	14	; () banked
  2032  0022E6  8BC5               	bsf	197,5,b	;volatile
  2033  0022E8                     
  2034                           ; BSR set to: 14
  2035  0022E8  0012               	return		;funcret
  2036  0022EA                     __end_of_EUSART1_Initialize:
  2037                           	opt callstack 0
  2038                           
  2039 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  2040 ;; Defined at:
  2041 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2044 ;;		 -> EUSART1_Transmit_ISR(1), 
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;		None
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1    wreg      void 
  2049 ;; Registers used:
  2050 ;;		wreg, status,2, status,0
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2056 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2059 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2060 ;;Total ram usage:        2 bytes
  2061 ;; Hardware stack levels used:    1
  2062 ;; Hardware stack levels required when called:    4
  2063 ;; This function calls:
  2064 ;;		Nothing
  2065 ;; This function is called by:
  2066 ;;		_EUSART1_Initialize
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           	psect	text13
  2071  00293A                     __ptext13:
  2072                           	opt callstack 0
  2073  00293A                     _EUSART1_SetTxInterruptHandler:
  2074                           	opt callstack 24
  2075  00293A                     
  2076                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2077  00293A  C005  F0F3         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  2078  00293E  C006  F0F4         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  2079  002942  0012               	return		;funcret
  2080  002944                     __end_of_EUSART1_SetTxInterruptHandler:
  2081                           	opt callstack 0
  2082                           
  2083 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  2084 ;; Defined at:
  2085 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2088 ;;		 -> EUSART1_Receive_ISR(1), 
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;		None
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  1    wreg      void 
  2093 ;; Registers used:
  2094 ;;		wreg, status,2, status,0
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2100 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2103 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2104 ;;Total ram usage:        2 bytes
  2105 ;; Hardware stack levels used:    1
  2106 ;; Hardware stack levels required when called:    4
  2107 ;; This function calls:
  2108 ;;		Nothing
  2109 ;; This function is called by:
  2110 ;;		_EUSART1_Initialize
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           	psect	text14
  2115  002944                     __ptext14:
  2116                           	opt callstack 0
  2117  002944                     _EUSART1_SetRxInterruptHandler:
  2118                           	opt callstack 24
  2119  002944                     
  2120                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2121  002944  C005  F0F1         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  2122  002948  C006  F0F2         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  2123  00294C  0012               	return		;funcret
  2124  00294E                     __end_of_EUSART1_SetRxInterruptHandler:
  2125                           	opt callstack 0
  2126                           
  2127 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  2128 ;; Defined at:
  2129 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2132 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;		None
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      void 
  2137 ;; Registers used:
  2138 ;;		wreg, status,2, status,0
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2144 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2147 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2148 ;;Total ram usage:        2 bytes
  2149 ;; Hardware stack levels used:    1
  2150 ;; Hardware stack levels required when called:    4
  2151 ;; This function calls:
  2152 ;;		Nothing
  2153 ;; This function is called by:
  2154 ;;		_EUSART1_Initialize
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           	psect	text15
  2159  00294E                     __ptext15:
  2160                           	opt callstack 0
  2161  00294E                     _EUSART1_SetOverrunErrorHandler:
  2162                           	opt callstack 24
  2163  00294E                     
  2164                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
  2165  00294E  C005  F0E7         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  2166  002952  C006  F0E8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  2167  002956  0012               	return		;funcret
  2168  002958                     __end_of_EUSART1_SetOverrunErrorHandler:
  2169                           	opt callstack 0
  2170                           
  2171 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  2172 ;; Defined at:
  2173 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2176 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;		None
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  1    wreg      void 
  2181 ;; Registers used:
  2182 ;;		wreg, status,2, status,0
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2188 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2191 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2192 ;;Total ram usage:        2 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; Hardware stack levels required when called:    4
  2195 ;; This function calls:
  2196 ;;		Nothing
  2197 ;; This function is called by:
  2198 ;;		_EUSART1_Initialize
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text16
  2203  002958                     __ptext16:
  2204                           	opt callstack 0
  2205  002958                     _EUSART1_SetFramingErrorHandler:
  2206                           	opt callstack 24
  2207  002958                     
  2208                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
  2209  002958  C005  F0E9         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  2210  00295C  C006  F0EA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  2211  002960  0012               	return		;funcret
  2212  002962                     __end_of_EUSART1_SetFramingErrorHandler:
  2213                           	opt callstack 0
  2214                           
  2215 ;; *************** function _EUSART1_SetErrorHandler *****************
  2216 ;; Defined at:
  2217 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2220 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;		None
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		wreg, status,2, status,0
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2232 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2235 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2236 ;;Total ram usage:        2 bytes
  2237 ;; Hardware stack levels used:    1
  2238 ;; Hardware stack levels required when called:    4
  2239 ;; This function calls:
  2240 ;;		Nothing
  2241 ;; This function is called by:
  2242 ;;		_EUSART1_Initialize
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text17
  2247  002962                     __ptext17:
  2248                           	opt callstack 0
  2249  002962                     _EUSART1_SetErrorHandler:
  2250                           	opt callstack 24
  2251  002962                     
  2252                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
  2253  002962  C005  F0E5         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  2254  002966  C006  F0E6         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  2255  00296A  0012               	return		;funcret
  2256  00296C                     __end_of_EUSART1_SetErrorHandler:
  2257                           	opt callstack 0
  2258                           
  2259 ;; *************** function _RXMode *****************
  2260 ;; Defined at:
  2261 ;;		line 83 in file "main.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;		None
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;		None
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		None
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2279 ;;Total ram usage:        0 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; Hardware stack levels required when called:    4
  2282 ;; This function calls:
  2283 ;;		Nothing
  2284 ;; This function is called by:
  2285 ;;		_main
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text18
  2290  00297E                     __ptext18:
  2291                           	opt callstack 0
  2292  00297E                     _RXMode:
  2293                           	opt callstack 26
  2294  00297E  9086               	bcf	134,0,c	;volatile
  2295  002980  9683               	bcf	131,3,c	;volatile
  2296  002982  0012               	return		;funcret
  2297  002984                     __end_of_RXMode:
  2298                           	opt callstack 0
  2299                           
  2300 ;; *************** function _PrintRXBuff *****************
  2301 ;; Defined at:
  2302 ;;		line 98 in file "main.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;		None
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;  i               2   37[BANK0 ] int 
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      void 
  2309 ;; Registers used:
  2310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2317 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2318 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2319 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2320 ;;Total ram usage:        3 bytes
  2321 ;; Hardware stack levels used:    1
  2322 ;; Hardware stack levels required when called:   13
  2323 ;; This function calls:
  2324 ;;		_printf
  2325 ;; This function is called by:
  2326 ;;		_main
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           	psect	text19
  2331  0023B0                     __ptext19:
  2332                           	opt callstack 0
  2333  0023B0                     _PrintRXBuff:
  2334                           	opt callstack 17
  2335  0023B0                     
  2336                           ;main.c: 100:     int i=0;
  2337  0023B0  0E00               	movlw	0
  2338  0023B2  0100               	movlb	0	; () banked
  2339  0023B4  6FE4               	movwf	(PrintRXBuff@i+1)& (0+255),b
  2340  0023B6  0E00               	movlw	0
  2341  0023B8  6FE3               	movwf	PrintRXBuff@i& (0+255),b
  2342                           
  2343                           ;main.c: 102:     for(i=0; i<50; i++ ){
  2344  0023BA  0E00               	movlw	0
  2345  0023BC  6FE4               	movwf	(PrintRXBuff@i+1)& (0+255),b
  2346  0023BE  0E00               	movlw	0
  2347  0023C0  6FE3               	movwf	PrintRXBuff@i& (0+255),b
  2348  0023C2                     l3532:
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;main.c: 103:         printf("Byte %i. Val: 0x%02x \r\n", i, rxData[i]);
  2352  0023C2  0E1A               	movlw	low STR_1
  2353  0023C4  6FD9               	movwf	printf@fmt& (0+255),b
  2354  0023C6  0E0F               	movlw	high STR_1
  2355  0023C8  6FDA               	movwf	(printf@fmt+1)& (0+255),b
  2356  0023CA  C0E3  F0DB         	movff	PrintRXBuff@i,?_printf+2
  2357  0023CE  C0E4  F0DC         	movff	PrintRXBuff@i+1,?_printf+3
  2358  0023D2  0E20               	movlw	low _rxData
  2359  0023D4  25E3               	addwf	PrintRXBuff@i& (0+255),w,b
  2360  0023D6  6ED9               	movwf	fsr2l,c
  2361  0023D8  0E01               	movlw	high _rxData
  2362  0023DA  21E4               	addwfc	(PrintRXBuff@i+1)& (0+255),w,b
  2363  0023DC  6EDA               	movwf	fsr2h,c
  2364  0023DE  50DF               	movf	indf2,w,c
  2365  0023E0  6E55               	movwf	??_PrintRXBuff^0,c
  2366  0023E2  5055               	movf	??_PrintRXBuff^0,w,c
  2367  0023E4  6FDD               	movwf	(?_printf+4)& (0+255),b
  2368  0023E6  6BDE               	clrf	(?_printf+5)& (0+255),b
  2369  0023E8  EC1D  F014         	call	_printf	;wreg free
  2370  0023EC                     
  2371                           ;main.c: 104:     }
  2372  0023EC  0100               	movlb	0	; () banked
  2373  0023EE  4BE3               	infsnz	PrintRXBuff@i& (0+255),f,b
  2374  0023F0  2BE4               	incf	(PrintRXBuff@i+1)& (0+255),f,b
  2375  0023F2                     
  2376                           ; BSR set to: 0
  2377  0023F2  BFE4               	btfsc	(PrintRXBuff@i+1)& (0+255),7,b
  2378  0023F4  EF05  F012         	goto	u2861
  2379  0023F8  51E4               	movf	(PrintRXBuff@i+1)& (0+255),w,b
  2380  0023FA  E109               	bnz	u2860
  2381  0023FC  0E32               	movlw	50
  2382  0023FE  5DE3               	subwf	PrintRXBuff@i& (0+255),w,b
  2383  002400  A0D8               	btfss	status,0,c
  2384  002402  EF05  F012         	goto	u2861
  2385  002406  EF07  F012         	goto	u2860
  2386  00240A                     u2861:
  2387  00240A  EFE1  F011         	goto	l3532
  2388  00240E                     u2860:
  2389  00240E                     
  2390                           ; BSR set to: 0
  2391  00240E  0012               	return		;funcret
  2392  002410                     __end_of_PrintRXBuff:
  2393                           	opt callstack 0
  2394                           
  2395 ;; *************** function _printf *****************
  2396 ;; Defined at:
  2397 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;  fmt             2   27[BANK0 ] PTR const unsigned char 
  2400 ;;		 -> STR_3(25), STR_2(14), STR_1(24), 
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  ap              2   35[BANK0 ] PTR void [1]
  2403 ;;		 -> ?_printf(2), 
  2404 ;;  ret             2    0        int 
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  2   27[BANK0 ] int 
  2407 ;; Registers used:
  2408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2414 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2415 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2417 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2418 ;;Total ram usage:       10 bytes
  2419 ;; Hardware stack levels used:    1
  2420 ;; Hardware stack levels required when called:   12
  2421 ;; This function calls:
  2422 ;;		_vfprintf
  2423 ;; This function is called by:
  2424 ;;		_PrintRXBuff
  2425 ;;		_main
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           	psect	text20
  2430  00283A                     __ptext20:
  2431                           	opt callstack 0
  2432  00283A                     _printf:
  2433                           	opt callstack 18
  2434  00283A  0EDB               	movlw	low (?_printf+2)
  2435  00283C  0100               	movlb	0	; () banked
  2436  00283E  6FE1               	movwf	printf@ap& (0+255),b
  2437  002840  0E00               	movlw	high (?_printf+2)
  2438  002842  6FE2               	movwf	(printf@ap+1)& (0+255),b
  2439  002844                     
  2440                           ; BSR set to: 0
  2441  002844  0E00               	movlw	0
  2442  002846  6FD3               	movwf	vfprintf@fp& (0+255),b
  2443  002848  0E00               	movlw	0
  2444  00284A  6FD4               	movwf	(vfprintf@fp+1)& (0+255),b
  2445  00284C  C0D9  F0D5         	movff	printf@fmt,vfprintf@fmt
  2446  002850  C0DA  F0D6         	movff	printf@fmt+1,vfprintf@fmt+1
  2447  002854  0EE1               	movlw	low printf@ap
  2448  002856  6FD7               	movwf	vfprintf@ap& (0+255),b
  2449  002858  0E00               	movlw	high printf@ap
  2450  00285A  6FD8               	movwf	(vfprintf@ap+1)& (0+255),b
  2451  00285C  EC75  F011         	call	_vfprintf	;wreg free
  2452  002860  0012               	return		;funcret
  2453  002862                     __end_of_printf:
  2454                           	opt callstack 0
  2455                           
  2456 ;; *************** function _vfprintf *****************
  2457 ;; Defined at:
  2458 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  fp              2   21[BANK0 ] PTR struct _IO_FILE
  2461 ;;		 -> NULL(0), 
  2462 ;;  fmt             2   23[BANK0 ] PTR const unsigned char 
  2463 ;;		 -> STR_3(25), STR_2(14), STR_1(24), 
  2464 ;;  ap              2   25[BANK0 ] PTR PTR void 
  2465 ;;		 -> printf@ap(2), 
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
  2468 ;;		 -> STR_3(25), STR_2(14), STR_1(24), 
  2469 ;; Return value:  Size  Location     Type
  2470 ;;                  2   21[BANK0 ] int 
  2471 ;; Registers used:
  2472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2473 ;; Tracked objects:
  2474 ;;		On entry : 0/0
  2475 ;;		On exit  : 0/0
  2476 ;;		Unchanged: 0/0
  2477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2478 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2479 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2481 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2482 ;;Total ram usage:        8 bytes
  2483 ;; Hardware stack levels used:    1
  2484 ;; Hardware stack levels required when called:   11
  2485 ;; This function calls:
  2486 ;;		_vfpfcnvrt
  2487 ;; This function is called by:
  2488 ;;		_printf
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492                           	psect	text21
  2493  0022EA                     __ptext21:
  2494                           	opt callstack 0
  2495  0022EA                     _vfprintf:
  2496                           	opt callstack 18
  2497  0022EA                     
  2498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2499  0022EA  C0D5  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  2500  0022EE  C0D6  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2501  0022F2                     
  2502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2503  0022F2  0E00               	movlw	0
  2504  0022F4  0100               	movlb	0	; () banked
  2505  0022F6  6FA9               	movwf	(_nout+1)& (0+255),b
  2506  0022F8  0E00               	movlw	0
  2507  0022FA  6FA8               	movwf	_nout& (0+255),b
  2508                           
  2509                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2510  0022FC  EF93  F011         	goto	l3518
  2511  002300                     l3516:
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2515  002300  C0D3  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
  2516  002304  C0D4  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2517  002308  0E53               	movlw	low vfprintf@cfmt
  2518  00230A  6E4B               	movwf	vfpfcnvrt@fmt^0,c
  2519  00230C  0E00               	movlw	high vfprintf@cfmt
  2520  00230E  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2521  002310  C0D7  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
  2522  002314  C0D8  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2523  002318  ECA1  F007         	call	_vfpfcnvrt	;wreg free
  2524  00231C  5049               	movf	?_vfpfcnvrt^0,w,c
  2525  00231E  0100               	movlb	0	; () banked
  2526  002320  27A8               	addwf	_nout& (0+255),f,b
  2527  002322  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
  2528  002324  23A9               	addwfc	(_nout+1)& (0+255),f,b
  2529  002326                     l3518:
  2530                           
  2531                           ; BSR set to: 0
  2532                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2533  002326  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
  2534  00232A  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2535  00232E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2536  00232E  6AF8               	clrf	tblptru,c
  2537  002330                     	endif
  2538  002330                     	if	0	;tblptru may be non-zero
  2539  002330                     	endif
  2540  002330  0008               	tblrd		*
  2541  002332  50F5               	movf	tablat,w,c
  2542  002334  0900               	iorlw	0
  2543  002336  A4D8               	btfss	status,2,c
  2544  002338  EFA0  F011         	goto	u2851
  2545  00233C  EFA2  F011         	goto	u2850
  2546  002340                     u2851:
  2547  002340  EF80  F011         	goto	l3516
  2548  002344                     u2850:
  2549  002344                     
  2550                           ; BSR set to: 0
  2551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2552  002344  C0A8  F0D3         	movff	_nout,?_vfprintf
  2553  002348  C0A9  F0D4         	movff	_nout+1,?_vfprintf+1
  2554  00234C                     
  2555                           ; BSR set to: 0
  2556  00234C  0012               	return		;funcret
  2557  00234E                     __end_of_vfprintf:
  2558                           	opt callstack 0
  2559                           
  2560 ;; *************** function _vfpfcnvrt *****************
  2561 ;; Defined at:
  2562 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
  2565 ;;		 -> NULL(0), 
  2566 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
  2567 ;;		 -> vfprintf@cfmt(2), 
  2568 ;;  ap              2   76[COMRAM] PTR PTR void 
  2569 ;;		 -> printf@ap(2), 
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;  llu             8    8[BANK0 ] unsigned long long 
  2572 ;;  ll              8    0[BANK0 ] long long 
  2573 ;;  f               4    0        long long 
  2574 ;;  vp              3    0        PTR void 
  2575 ;;  ct              3    0        unsigned char [3]
  2576 ;;  cp              3    0        PTR unsigned char 
  2577 ;;  done            2   16[BANK0 ] int 
  2578 ;;  i               2    0        int 
  2579 ;;  c               1   20[BANK0 ] unsigned char 
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  2   72[COMRAM] int 
  2582 ;; Registers used:
  2583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2589 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2590 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2591 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2592 ;;      Totals:        10      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2593 ;;Total ram usage:       31 bytes
  2594 ;; Hardware stack levels used:    1
  2595 ;; Hardware stack levels required when called:   10
  2596 ;; This function calls:
  2597 ;;		_atoi
  2598 ;;		_dtoa
  2599 ;;		_fputc
  2600 ;;		_isdigit
  2601 ;;		_xtoa
  2602 ;; This function is called by:
  2603 ;;		_vfprintf
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607                           	psect	text22
  2608  000F42                     __ptext22:
  2609                           	opt callstack 0
  2610  000F42                     _vfpfcnvrt:
  2611                           	opt callstack 18
  2612  000F42                     
  2613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2614  000F42  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2615  000F46  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2616  000F4A  CFDE FFF6          	movff	postinc2,tblptrl
  2617  000F4E  CFDD FFF7          	movff	postdec2,tblptrh
  2618  000F52                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2619  000F52  6AF8               	clrf	tblptru,c
  2620  000F54                     	endif
  2621  000F54                     	if	0	;tblptru may be non-zero
  2622  000F54                     	endif
  2623  000F54  0008               	tblrd		*
  2624  000F56  50F5               	movf	tablat,w,c
  2625  000F58  0A25               	xorlw	37
  2626  000F5A  A4D8               	btfss	status,2,c
  2627  000F5C  EFB2  F007         	goto	u2261
  2628  000F60  EFB4  F007         	goto	u2260
  2629  000F64                     u2261:
  2630  000F64  EFB7  F009         	goto	l3050
  2631  000F68                     u2260:
  2632  000F68                     
  2633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2634  000F68  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2635  000F6C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2636  000F70  2ADE               	incf	postinc2,f,c
  2637  000F72  0E00               	movlw	0
  2638  000F74  22DD               	addwfc	postdec2,f,c
  2639  000F76                     
  2640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2641  000F76  0E00               	movlw	0
  2642  000F78  0100               	movlb	0	; () banked
  2643  000F7A  6FAB               	movwf	(_width+1)& (0+255),b
  2644  000F7C  0E00               	movlw	0
  2645  000F7E  6FAA               	movwf	_width& (0+255),b
  2646  000F80  C0AA  F057         	movff	_width,_flags
  2647  000F84  C0AB  F058         	movff	_width+1,_flags+1
  2648  000F88                     
  2649                           ; BSR set to: 0
  2650                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2651  000F88  69AC               	setf	_prec& (0+255),b
  2652  000F8A  69AD               	setf	(_prec+1)& (0+255),b
  2653  000F8C                     
  2654                           ; BSR set to: 0
  2655                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  2656  000F8C  0E00               	movlw	0
  2657  000F8E  6FCF               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2658  000F90  0E00               	movlw	0
  2659  000F92  6FCE               	movwf	vfpfcnvrt@done& (0+255),b
  2660                           
  2661                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  2662  000F94  EF13  F008         	goto	l2988
  2663  000F98                     l2962:
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  2667  000F98  8057               	bsf	_flags^0,0,c
  2668  000F9A                     l2964:
  2669                           
  2670                           ; BSR set to: 0
  2671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  2672  000F9A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2673  000F9E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2674  000FA2  2ADE               	incf	postinc2,f,c
  2675  000FA4  0E00               	movlw	0
  2676  000FA6  22DD               	addwfc	postdec2,f,c
  2677                           
  2678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  2679  000FA8  EF13  F008         	goto	l2988
  2680  000FAC                     l2966:
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  2684  000FAC  8257               	bsf	_flags^0,1,c
  2685  000FAE  EFCD  F007         	goto	l2964
  2686  000FB2                     l2970:
  2687                           
  2688                           ; BSR set to: 0
  2689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  2690  000FB2  8457               	bsf	_flags^0,2,c
  2691  000FB4  EFCD  F007         	goto	l2964
  2692  000FB8                     l2974:
  2693                           
  2694                           ; BSR set to: 0
  2695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  2696  000FB8  8657               	bsf	_flags^0,3,c
  2697  000FBA  EFCD  F007         	goto	l2964
  2698  000FBE                     l2978:
  2699                           
  2700                           ; BSR set to: 0
  2701                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  2702  000FBE  8857               	bsf	_flags^0,4,c
  2703  000FC0  EFCD  F007         	goto	l2964
  2704  000FC4                     l2982:
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  2708  000FC4  0E00               	movlw	0
  2709  000FC6  6FCF               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2710  000FC8  0E01               	movlw	1
  2711  000FCA  6FCE               	movwf	vfpfcnvrt@done& (0+255),b
  2712                           
  2713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  2714  000FCC  EF13  F008         	goto	l2988
  2715  000FD0                     l2986:
  2716                           
  2717                           ; BSR set to: 0
  2718  000FD0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2719  000FD4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2720  000FD8  CFDE FFF6          	movff	postinc2,tblptrl
  2721  000FDC  CFDD FFF7          	movff	postdec2,tblptrh
  2722  000FE0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2723  000FE0  6AF8               	clrf	tblptru,c
  2724  000FE2                     	endif
  2725  000FE2                     	if	0	;tblptru may be non-zero
  2726  000FE2                     	endif
  2727  000FE2  0008               	tblrd		*
  2728  000FE4  50F5               	movf	tablat,w,c
  2729  000FE6  6E4F               	movwf	??_vfpfcnvrt^0,c
  2730  000FE8  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
  2731                           
  2732                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2733                           ; Switch size 1, requested type "simple"
  2734                           ; Number of cases is 1, Range of values is 0 to 0
  2735                           ; switch strategies available:
  2736                           ; Name         Instructions Cycles
  2737                           ; simple_byte            4     3 (average)
  2738                           ;	Chosen strategy is simple_byte
  2739  000FEA  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  2740  000FEC  0A00               	xorlw	0	; case 0
  2741  000FEE  B4D8               	btfsc	status,2,c
  2742  000FF0  EFFC  F007         	goto	l3646
  2743  000FF4  EFE2  F007         	goto	l2982
  2744  000FF8                     l3646:
  2745                           
  2746                           ; BSR set to: 0
  2747                           ; Switch size 1, requested type "simple"
  2748                           ; Number of cases is 5, Range of values is 32 to 48
  2749                           ; switch strategies available:
  2750                           ; Name         Instructions Cycles
  2751                           ; simple_byte           16     9 (average)
  2752                           ;	Chosen strategy is simple_byte
  2753  000FF8  504F               	movf	??_vfpfcnvrt^0,w,c
  2754  000FFA  0A20               	xorlw	32	; case 32
  2755  000FFC  B4D8               	btfsc	status,2,c
  2756  000FFE  EFDC  F007         	goto	l2974
  2757  001002  0A03               	xorlw	3	; case 35
  2758  001004  B4D8               	btfsc	status,2,c
  2759  001006  EFDF  F007         	goto	l2978
  2760  00100A  0A08               	xorlw	8	; case 43
  2761  00100C  B4D8               	btfsc	status,2,c
  2762  00100E  EFD9  F007         	goto	l2970
  2763  001012  0A06               	xorlw	6	; case 45
  2764  001014  B4D8               	btfsc	status,2,c
  2765  001016  EFCC  F007         	goto	l2962
  2766  00101A  0A1D               	xorlw	29	; case 48
  2767  00101C  B4D8               	btfsc	status,2,c
  2768  00101E  EFD6  F007         	goto	l2966
  2769  001022  EFE2  F007         	goto	l2982
  2770  001026                     l2988:
  2771                           
  2772                           ; BSR set to: 0
  2773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  2774  001026  51CE               	movf	vfpfcnvrt@done& (0+255),w,b
  2775  001028  11CF               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2776  00102A  B4D8               	btfsc	status,2,c
  2777  00102C  EF1A  F008         	goto	u2271
  2778  001030  EF1C  F008         	goto	u2270
  2779  001034                     u2271:
  2780  001034  EFE8  F007         	goto	l2986
  2781  001038                     u2270:
  2782  001038                     
  2783                           ; BSR set to: 0
  2784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  2785  001038  A057               	btfss	_flags^0,0,c
  2786  00103A  EF21  F008         	goto	u2281
  2787  00103E  EF23  F008         	goto	u2280
  2788  001042                     u2281:
  2789  001042  EF24  F008         	goto	l2992
  2790  001046                     u2280:
  2791  001046                     
  2792                           ; BSR set to: 0
  2793                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  2794  001046  9257               	bcf	_flags^0,1,c
  2795  001048                     l2992:
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  2799  001048  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2800  00104C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2801  001050  CFDE FFF6          	movff	postinc2,tblptrl
  2802  001054  CFDD FFF7          	movff	postdec2,tblptrh
  2803  001058                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2804  001058  6AF8               	clrf	tblptru,c
  2805  00105A                     	endif
  2806  00105A                     	if	0	;tblptru may be non-zero
  2807  00105A                     	endif
  2808  00105A  0008               	tblrd		*
  2809  00105C  50F5               	movf	tablat,w,c
  2810  00105E  0A2A               	xorlw	42
  2811  001060  A4D8               	btfss	status,2,c
  2812  001062  EF35  F008         	goto	u2291
  2813  001066  EF37  F008         	goto	u2290
  2814  00106A                     u2291:
  2815  00106A  EF60  F008         	goto	l3000
  2816  00106E                     u2290:
  2817  00106E                     
  2818                           ; BSR set to: 0
  2819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  2820  00106E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2821  001072  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2822  001076  2ADE               	incf	postinc2,f,c
  2823  001078  0E00               	movlw	0
  2824  00107A  22DD               	addwfc	postdec2,f,c
  2825                           
  2826                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2827  00107C  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2828  001080  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2829  001084  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  2830  001088  0E02               	movlw	2
  2831  00108A  26DE               	addwf	postinc2,f,c
  2832  00108C  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  2833  001090  0E00               	movlw	0
  2834  001092  22DD               	addwfc	postdec2,f,c
  2835  001094  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2836  001098  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2837  00109C  CFDE F0AA          	movff	postinc2,_width
  2838  0010A0  CFDD F0AB          	movff	postdec2,_width+1
  2839  0010A4                     
  2840                           ; BSR set to: 0
  2841                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  2842  0010A4  BFAB               	btfsc	(_width+1)& (0+255),7,b
  2843  0010A6  EF59  F008         	goto	u2300
  2844  0010AA  EF57  F008         	goto	u2301
  2845  0010AE                     u2301:
  2846  0010AE  EFA5  F008         	goto	l3010
  2847  0010B2                     u2300:
  2848  0010B2                     
  2849                           ; BSR set to: 0
  2850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  2851  0010B2  8057               	bsf	_flags^0,0,c
  2852                           
  2853                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  2854  0010B4  6DAA               	negf	_width& (0+255),b
  2855  0010B6  1FAB               	comf	(_width+1)& (0+255),f,b
  2856  0010B8  B0D8               	btfsc	status,0,c
  2857  0010BA  2BAB               	incf	(_width+1)& (0+255),f,b
  2858  0010BC  EFA5  F008         	goto	l3010
  2859  0010C0                     l3000:
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  2863  0010C0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2864  0010C4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2865  0010C8  CFDE F00C          	movff	postinc2,atoi@s
  2866  0010CC  CFDD F00D          	movff	postdec2,atoi@s+1
  2867  0010D0  ECAF  F00C         	call	_atoi	;wreg free
  2868  0010D4  C00C  F0AA         	movff	?_atoi,_width
  2869  0010D8  C00D  F0AB         	movff	?_atoi+1,_width+1
  2870                           
  2871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2872  0010DC  EF77  F008         	goto	l3004
  2873  0010E0                     l3002:
  2874                           
  2875                           ; BSR set to: 0
  2876                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  2877  0010E0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2878  0010E4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2879  0010E8  2ADE               	incf	postinc2,f,c
  2880  0010EA  0E00               	movlw	0
  2881  0010EC  22DD               	addwfc	postdec2,f,c
  2882  0010EE                     l3004:
  2883  0010EE  0ED0               	movlw	208
  2884  0010F0  6E4F               	movwf	??_vfpfcnvrt^0,c
  2885  0010F2  0EFF               	movlw	255
  2886  0010F4  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
  2887  0010F6  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2888  0010FA  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2889  0010FE  CFDE FFF6          	movff	postinc2,tblptrl
  2890  001102  CFDD FFF7          	movff	postdec2,tblptrh
  2891  001106                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2892  001106  6AF8               	clrf	tblptru,c
  2893  001108                     	endif
  2894  001108                     	if	0	;tblptru may be non-zero
  2895  001108                     	endif
  2896  001108  0008               	tblrd		*
  2897  00110A  50F5               	movf	tablat,w,c
  2898  00110C  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
  2899  00110E  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
  2900  001110  504F               	movf	??_vfpfcnvrt^0,w,c
  2901  001112  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2902  001114  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  2903  001116  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2904  001118  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
  2905  00111A  E10A               	bnz	u2310
  2906  00111C  0E0A               	movlw	10
  2907  00111E  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2908  001120  A0D8               	btfss	status,0,c
  2909  001122  EF95  F008         	goto	u2311
  2910  001126  EF98  F008         	goto	u2310
  2911  00112A                     u2311:
  2912  00112A  0E01               	movlw	1
  2913  00112C  EF99  F008         	goto	u2320
  2914  001130                     u2310:
  2915  001130  0E00               	movlw	0
  2916  001132                     u2320:
  2917  001132  0100               	movlb	0	; () banked
  2918  001134  6FD0               	movwf	_vfpfcnvrt$1235& (0+255),b
  2919  001136  6BD1               	clrf	(_vfpfcnvrt$1235+1)& (0+255),b
  2920  001138                     
  2921                           ; BSR set to: 0
  2922  001138  51D0               	movf	_vfpfcnvrt$1235& (0+255),w,b
  2923  00113A  11D1               	iorwf	(_vfpfcnvrt$1235+1)& (0+255),w,b
  2924  00113C  A4D8               	btfss	status,2,c
  2925  00113E  EFA3  F008         	goto	u2331
  2926  001142  EFA5  F008         	goto	u2330
  2927  001146                     u2331:
  2928  001146  EF70  F008         	goto	l3002
  2929  00114A                     u2330:
  2930  00114A                     l3010:
  2931                           
  2932                           ; BSR set to: 0
  2933                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2934  00114A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2935  00114E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2936  001152  CFDE FFF6          	movff	postinc2,tblptrl
  2937  001156  CFDD FFF7          	movff	postdec2,tblptrh
  2938  00115A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2939  00115A  6AF8               	clrf	tblptru,c
  2940  00115C                     	endif
  2941  00115C                     	if	0	;tblptru may be non-zero
  2942  00115C                     	endif
  2943  00115C  0008               	tblrd		*
  2944  00115E  50F5               	movf	tablat,w,c
  2945  001160  0A64               	xorlw	100
  2946  001162  B4D8               	btfsc	status,2,c
  2947  001164  EFB6  F008         	goto	u2341
  2948  001168  EFB8  F008         	goto	u2340
  2949  00116C                     u2341:
  2950  00116C  EFCB  F008         	goto	l3014
  2951  001170                     u2340:
  2952  001170                     
  2953                           ; BSR set to: 0
  2954  001170  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2955  001174  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2956  001178  CFDE FFF6          	movff	postinc2,tblptrl
  2957  00117C  CFDD FFF7          	movff	postdec2,tblptrh
  2958  001180                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2959  001180  6AF8               	clrf	tblptru,c
  2960  001182                     	endif
  2961  001182                     	if	0	;tblptru may be non-zero
  2962  001182                     	endif
  2963  001182  0008               	tblrd		*
  2964  001184  50F5               	movf	tablat,w,c
  2965  001186  0A69               	xorlw	105
  2966  001188  A4D8               	btfss	status,2,c
  2967  00118A  EFC9  F008         	goto	u2351
  2968  00118E  EFCB  F008         	goto	u2350
  2969  001192                     u2351:
  2970  001192  EF0B  F009         	goto	l3020
  2971  001196                     u2350:
  2972  001196                     l3014:
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2976  001196  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2977  00119A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2978  00119E  2ADE               	incf	postinc2,f,c
  2979  0011A0  0E00               	movlw	0
  2980  0011A2  22DD               	addwfc	postdec2,f,c
  2981                           
  2982                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2983  0011A4  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2984  0011A8  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2985  0011AC  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  2986  0011B0  0E02               	movlw	2
  2987  0011B2  26DE               	addwf	postinc2,f,c
  2988  0011B4  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  2989  0011B8  0E00               	movlw	0
  2990  0011BA  22DD               	addwfc	postdec2,f,c
  2991  0011BC  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2992  0011C0  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2993  0011C4  CFDE F0BE          	movff	postinc2,vfpfcnvrt@ll
  2994  0011C8  CFDD F0BF          	movff	postdec2,vfpfcnvrt@ll+1
  2995  0011CC  0E00               	movlw	0
  2996  0011CE  BFBF               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2997  0011D0  0EFF               	movlw	-1
  2998  0011D2  6FC0               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2999  0011D4  6FC1               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3000  0011D6  6FC2               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3001  0011D8  6FC3               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3002  0011DA  6FC4               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3003  0011DC  6FC5               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3004  0011DE                     
  3005                           ; BSR set to: 0
  3006                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  3007  0011DE  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  3008  0011E2  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3009  0011E6  C0BE  F024         	movff	vfpfcnvrt@ll,dtoa@d
  3010  0011EA  C0BF  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3011  0011EE  C0C0  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3012  0011F2  C0C1  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3013  0011F6  C0C2  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3014  0011FA  C0C3  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3015  0011FE  C0C4  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3016  001202  C0C5  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3017  001206  ECD4  F009         	call	_dtoa	;wreg free
  3018  00120A  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
  3019  00120E  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3020  001212  EFD3  F009         	goto	l724
  3021  001216                     l3020:
  3022                           
  3023                           ; BSR set to: 0
  3024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3025  001216  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3026  00121A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3027  00121E  CFDE FFF6          	movff	postinc2,tblptrl
  3028  001222  CFDD FFF7          	movff	postdec2,tblptrh
  3029  001226                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3030  001226  6AF8               	clrf	tblptru,c
  3031  001228                     	endif
  3032  001228                     	if	0	;tblptru may be non-zero
  3033  001228                     	endif
  3034  001228  0008               	tblrd		*
  3035  00122A  50F5               	movf	tablat,w,c
  3036  00122C  0A78               	xorlw	120
  3037  00122E  B4D8               	btfsc	status,2,c
  3038  001230  EF1C  F009         	goto	u2361
  3039  001234  EF1E  F009         	goto	u2360
  3040  001238                     u2361:
  3041  001238  EF31  F009         	goto	l3024
  3042  00123C                     u2360:
  3043  00123C                     
  3044                           ; BSR set to: 0
  3045  00123C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3046  001240  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3047  001244  CFDE FFF6          	movff	postinc2,tblptrl
  3048  001248  CFDD FFF7          	movff	postdec2,tblptrh
  3049  00124C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3050  00124C  6AF8               	clrf	tblptru,c
  3051  00124E                     	endif
  3052  00124E                     	if	0	;tblptru may be non-zero
  3053  00124E                     	endif
  3054  00124E  0008               	tblrd		*
  3055  001250  50F5               	movf	tablat,w,c
  3056  001252  0A58               	xorlw	88
  3057  001254  A4D8               	btfss	status,2,c
  3058  001256  EF2F  F009         	goto	u2371
  3059  00125A  EF31  F009         	goto	u2370
  3060  00125E                     u2371:
  3061  00125E  EF80  F009         	goto	l3034
  3062  001262                     u2370:
  3063  001262                     l3024:
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  3067  001262  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3068  001266  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3069  00126A  CFDE FFF6          	movff	postinc2,tblptrl
  3070  00126E  CFDD FFF7          	movff	postdec2,tblptrh
  3071  001272                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3072  001272  6AF8               	clrf	tblptru,c
  3073  001274                     	endif
  3074  001274                     	if	0	;tblptru may be non-zero
  3075  001274                     	endif
  3076  001274  0008               	tblrd		*
  3077  001276  CFF5 F0D2          	movff	tablat,vfpfcnvrt@c
  3078  00127A                     
  3079                           ; BSR set to: 0
  3080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  3081  00127A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3082  00127E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3083  001282  2ADE               	incf	postinc2,f,c
  3084  001284  0E00               	movlw	0
  3085  001286  22DD               	addwfc	postdec2,f,c
  3086  001288                     
  3087                           ; BSR set to: 0
  3088                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  3089  001288  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3090  00128C  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3091  001290  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  3092  001294  0E02               	movlw	2
  3093  001296  26DE               	addwf	postinc2,f,c
  3094  001298  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  3095  00129C  0E00               	movlw	0
  3096  00129E  22DD               	addwfc	postdec2,f,c
  3097  0012A0  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3098  0012A4  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3099  0012A8  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  3100  0012AC  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  3101  0012B0  C051  F0C6         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3102  0012B4  C052  F0C7         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3103  0012B8  6BC8               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3104  0012BA  6BC9               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3105  0012BC  6BCA               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3106  0012BE  6BCB               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3107  0012C0  6BCC               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3108  0012C2  6BCD               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3109  0012C4                     
  3110                           ; BSR set to: 0
  3111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  3112  0012C4  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
  3113  0012C8  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3114  0012CC  C0C6  F024         	movff	vfpfcnvrt@llu,xtoa@d
  3115  0012D0  C0C7  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3116  0012D4  C0C8  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3117  0012D8  C0C9  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3118  0012DC  C0CA  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3119  0012E0  C0CB  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3120  0012E4  C0CC  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3121  0012E8  C0CD  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3122  0012EC  C0D2  F02C         	movff	vfpfcnvrt@c,xtoa@x
  3123  0012F0  EC44  F00B         	call	_xtoa	;wreg free
  3124  0012F4  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
  3125  0012F8  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3126  0012FC  EFD3  F009         	goto	l724
  3127  001300                     l3034:
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3131  001300  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3132  001304  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3133  001308  CFDE FFF6          	movff	postinc2,tblptrl
  3134  00130C  CFDD FFF7          	movff	postdec2,tblptrh
  3135  001310                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3136  001310  6AF8               	clrf	tblptru,c
  3137  001312                     	endif
  3138  001312                     	if	0	;tblptru may be non-zero
  3139  001312                     	endif
  3140  001312  0008               	tblrd		*
  3141  001314  50F5               	movf	tablat,w,c
  3142  001316  0A25               	xorlw	37
  3143  001318  A4D8               	btfss	status,2,c
  3144  00131A  EF91  F009         	goto	u2381
  3145  00131E  EF93  F009         	goto	u2380
  3146  001322                     u2381:
  3147  001322  EFAA  F009         	goto	l3044
  3148  001326                     u2380:
  3149  001326                     
  3150                           ; BSR set to: 0
  3151                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3152  001326  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3153  00132A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3154  00132E  2ADE               	incf	postinc2,f,c
  3155  001330  0E00               	movlw	0
  3156  001332  22DD               	addwfc	postdec2,f,c
  3157  001334                     
  3158                           ; BSR set to: 0
  3159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3160  001334  0E00               	movlw	0
  3161  001336  6E08               	movwf	(fputc@c+1)^0,c
  3162  001338  0E25               	movlw	37
  3163  00133A  6E07               	movwf	fputc@c^0,c
  3164  00133C  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  3165  001340  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3166  001344  EC66  F010         	call	_fputc	;wreg free
  3167  001348                     l3040:
  3168                           
  3169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3170  001348  0E00               	movlw	0
  3171  00134A  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  3172  00134C  0E01               	movlw	1
  3173  00134E  6E49               	movwf	?_vfpfcnvrt^0,c
  3174  001350  EFD3  F009         	goto	l724
  3175  001354                     l3044:
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3179  001354  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3180  001358  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3181  00135C  2ADE               	incf	postinc2,f,c
  3182  00135E  0E00               	movlw	0
  3183  001360  22DD               	addwfc	postdec2,f,c
  3184  001362                     
  3185                           ; BSR set to: 0
  3186                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3187  001362  0E00               	movlw	0
  3188  001364  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  3189  001366  0E00               	movlw	0
  3190  001368  6E49               	movwf	?_vfpfcnvrt^0,c
  3191  00136A  EFD3  F009         	goto	l724
  3192  00136E                     l3050:
  3193                           
  3194                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3195  00136E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3196  001372  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3197  001376  CFDE FFF6          	movff	postinc2,tblptrl
  3198  00137A  CFDD FFF7          	movff	postdec2,tblptrh
  3199  00137E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3200  00137E  6AF8               	clrf	tblptru,c
  3201  001380                     	endif
  3202  001380                     	if	0	;tblptru may be non-zero
  3203  001380                     	endif
  3204  001380  0008               	tblrd		*
  3205  001382  50F5               	movf	tablat,w,c
  3206  001384  6E07               	movwf	fputc@c^0,c
  3207  001386  6A08               	clrf	(fputc@c+1)^0,c
  3208  001388  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  3209  00138C  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3210  001390  EC66  F010         	call	_fputc	;wreg free
  3211  001394                     
  3212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3213  001394  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3214  001398  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3215  00139C  2ADE               	incf	postinc2,f,c
  3216  00139E  0E00               	movlw	0
  3217  0013A0  22DD               	addwfc	postdec2,f,c
  3218  0013A2  EFA4  F009         	goto	l3040
  3219  0013A6                     l724:
  3220  0013A6  0012               	return		;funcret
  3221  0013A8                     __end_of_vfpfcnvrt:
  3222                           	opt callstack 0
  3223                           
  3224 ;; *************** function _xtoa *****************
  3225 ;; Defined at:
  3226 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  3229 ;;		 -> NULL(0), 
  3230 ;;  d               8   35[COMRAM] unsigned long long 
  3231 ;;  x               1   43[COMRAM] unsigned char 
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;  n               8   60[COMRAM] unsigned long long 
  3234 ;;  c               2   70[COMRAM] int 
  3235 ;;  i               2   68[COMRAM] int 
  3236 ;;  w               2   58[COMRAM] int 
  3237 ;;  p               2   56[COMRAM] int 
  3238 ;; Return value:  Size  Location     Type
  3239 ;;                  2   33[COMRAM] int 
  3240 ;; Registers used:
  3241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/0
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3247 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3248 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3249 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3250 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3251 ;;Total ram usage:       39 bytes
  3252 ;; Hardware stack levels used:    1
  3253 ;; Hardware stack levels required when called:    9
  3254 ;; This function calls:
  3255 ;;		_isalpha
  3256 ;;		_isupper
  3257 ;;		_pad
  3258 ;;		_toupper
  3259 ;; This function is called by:
  3260 ;;		_vfpfcnvrt
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           	psect	text23
  3265  001688                     __ptext23:
  3266                           	opt callstack 0
  3267  001688                     _xtoa:
  3268                           	opt callstack 18
  3269  001688                     
  3270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  3271  001688  0100               	movlb	0	; () banked
  3272  00168A  BFAD               	btfsc	(_prec+1)& (0+255),7,b
  3273  00168C  EF4A  F00B         	goto	u2021
  3274  001690  EF4C  F00B         	goto	u2020
  3275  001694                     u2021:
  3276  001694  EF4D  F00B         	goto	l2848
  3277  001698                     u2020:
  3278  001698                     
  3279                           ; BSR set to: 0
  3280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  3281  001698  9257               	bcf	_flags^0,1,c
  3282  00169A                     l2848:
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  3286  00169A  BFAD               	btfsc	(_prec+1)& (0+255),7,b
  3287  00169C  EF5A  F00B         	goto	u2030
  3288  0016A0  51AD               	movf	(_prec+1)& (0+255),w,b
  3289  0016A2  E106               	bnz	u2031
  3290  0016A4  05AC               	decf	_prec& (0+255),w,b
  3291  0016A6  B0D8               	btfsc	status,0,c
  3292  0016A8  EF58  F00B         	goto	u2031
  3293  0016AC  EF5A  F00B         	goto	u2030
  3294  0016B0                     u2031:
  3295  0016B0  EF60  F00B         	goto	l670
  3296  0016B4                     u2030:
  3297  0016B4                     
  3298                           ; BSR set to: 0
  3299  0016B4  0E00               	movlw	0
  3300  0016B6  6E3A               	movwf	(xtoa@p+1)^0,c
  3301  0016B8  0E01               	movlw	1
  3302  0016BA  6E39               	movwf	xtoa@p^0,c
  3303  0016BC  EF64  F00B         	goto	l672
  3304  0016C0                     l670:
  3305                           
  3306                           ; BSR set to: 0
  3307  0016C0  C0AC  F039         	movff	_prec,xtoa@p
  3308  0016C4  C0AD  F03A         	movff	_prec+1,xtoa@p+1
  3309  0016C8                     l672:
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  3313  0016C8  C0AA  F03B         	movff	_width,xtoa@w
  3314  0016CC  C0AB  F03C         	movff	_width+1,xtoa@w+1
  3315                           
  3316                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  3317  0016D0  A857               	btfss	_flags^0,4,c
  3318  0016D2  EF6D  F00B         	goto	u2041
  3319  0016D6  EF6F  F00B         	goto	u2040
  3320  0016DA                     u2041:
  3321  0016DA  EF73  F00B         	goto	l2854
  3322  0016DE                     u2040:
  3323  0016DE                     
  3324                           ; BSR set to: 0
  3325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  3326  0016DE  0EFE               	movlw	254
  3327  0016E0  263B               	addwf	xtoa@w^0,f,c
  3328  0016E2  0EFF               	movlw	255
  3329  0016E4  223C               	addwfc	(xtoa@w+1)^0,f,c
  3330  0016E6                     l2854:
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  3334  0016E6  C024  F03D         	movff	xtoa@d,xtoa@n
  3335  0016EA  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
  3336  0016EE  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
  3337  0016F2  C027  F040         	movff	xtoa@d+3,xtoa@n+3
  3338  0016F6  C028  F041         	movff	xtoa@d+4,xtoa@n+4
  3339  0016FA  C029  F042         	movff	xtoa@d+5,xtoa@n+5
  3340  0016FE  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
  3341  001702  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
  3342  001706                     
  3343                           ; BSR set to: 0
  3344                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  3345  001706  0E00               	movlw	0
  3346  001708  6E46               	movwf	(xtoa@i+1)^0,c
  3347  00170A  0E1F               	movlw	31
  3348  00170C  6E45               	movwf	xtoa@i^0,c
  3349  00170E                     
  3350                           ; BSR set to: 0
  3351                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  3352  00170E  0E00               	movlw	0
  3353  001710  0101               	movlb	1	; () banked
  3354  001712  6F1F               	movwf	(_dbuf+31)& (0+255),b
  3355                           
  3356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3357  001714  EF3F  F00C         	goto	l2890
  3358  001718                     l2860:
  3359                           
  3360                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  3361  001718  0645               	decf	xtoa@i^0,f,c
  3362  00171A  A0D8               	btfss	status,0,c
  3363  00171C  0646               	decf	(xtoa@i+1)^0,f,c
  3364  00171E                     
  3365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  3366  00171E  0E0F               	movlw	15
  3367  001720  143D               	andwf	xtoa@n^0,w,c
  3368  001722  6E47               	movwf	xtoa@c^0,c
  3369  001724  6A48               	clrf	(xtoa@c+1)^0,c
  3370  001726                     
  3371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  3372  001726  BE48               	btfsc	(xtoa@c+1)^0,7,c
  3373  001728  EF9F  F00B         	goto	u2051
  3374  00172C  5048               	movf	(xtoa@c+1)^0,w,c
  3375  00172E  E109               	bnz	u2050
  3376  001730  0E0A               	movlw	10
  3377  001732  5C47               	subwf	xtoa@c^0,w,c
  3378  001734  A0D8               	btfss	status,0,c
  3379  001736  EF9F  F00B         	goto	u2051
  3380  00173A  EFA1  F00B         	goto	u2050
  3381  00173E                     u2051:
  3382  00173E  EFA9  F00B         	goto	l2868
  3383  001742                     u2050:
  3384  001742  0E57               	movlw	87
  3385  001744  2447               	addwf	xtoa@c^0,w,c
  3386  001746  6E47               	movwf	xtoa@c^0,c
  3387  001748  0E00               	movlw	0
  3388  00174A  2048               	addwfc	(xtoa@c+1)^0,w,c
  3389  00174C  6E48               	movwf	(xtoa@c+1)^0,c
  3390  00174E  EFAF  F00B         	goto	l679
  3391  001752                     l2868:
  3392  001752  0E30               	movlw	48
  3393  001754  2447               	addwf	xtoa@c^0,w,c
  3394  001756  6E47               	movwf	xtoa@c^0,c
  3395  001758  0E00               	movlw	0
  3396  00175A  2048               	addwfc	(xtoa@c+1)^0,w,c
  3397  00175C  6E48               	movwf	(xtoa@c+1)^0,c
  3398  00175E                     l679:
  3399  00175E  0EBF               	movlw	191
  3400  001760  6E2D               	movwf	??_xtoa^0,c
  3401  001762  0EFF               	movlw	255
  3402  001764  6E2E               	movwf	(??_xtoa+1)^0,c
  3403  001766  502C               	movf	xtoa@x^0,w,c
  3404  001768  6E2F               	movwf	(??_xtoa+2)^0,c
  3405  00176A  6A30               	clrf	(??_xtoa+3)^0,c
  3406  00176C  502D               	movf	??_xtoa^0,w,c
  3407  00176E  262F               	addwf	(??_xtoa+2)^0,f,c
  3408  001770  502E               	movf	(??_xtoa+1)^0,w,c
  3409  001772  2230               	addwfc	(??_xtoa+3)^0,f,c
  3410  001774  5030               	movf	(??_xtoa+3)^0,w,c
  3411  001776  E10A               	bnz	u2060
  3412  001778  0E1A               	movlw	26
  3413  00177A  5C2F               	subwf	(??_xtoa+2)^0,w,c
  3414  00177C  A0D8               	btfss	status,0,c
  3415  00177E  EFC3  F00B         	goto	u2061
  3416  001782  EFC6  F00B         	goto	u2060
  3417  001786                     u2061:
  3418  001786  0E01               	movlw	1
  3419  001788  EFC7  F00B         	goto	u2070
  3420  00178C                     u2060:
  3421  00178C  0E00               	movlw	0
  3422  00178E                     u2070:
  3423  00178E  6E35               	movwf	_xtoa$1220^0,c
  3424  001790  6A36               	clrf	(_xtoa$1220+1)^0,c
  3425  001792  5035               	movf	_xtoa$1220^0,w,c
  3426  001794  1036               	iorwf	(_xtoa$1220+1)^0,w,c
  3427  001796  B4D8               	btfsc	status,2,c
  3428  001798  EFD0  F00B         	goto	u2081
  3429  00179C  EFD2  F00B         	goto	u2080
  3430  0017A0                     u2081:
  3431  0017A0  EF02  F00C         	goto	l2882
  3432  0017A4                     u2080:
  3433  0017A4  0E9F               	movlw	159
  3434  0017A6  6E2D               	movwf	??_xtoa^0,c
  3435  0017A8  0EFF               	movlw	255
  3436  0017AA  6E2E               	movwf	(??_xtoa+1)^0,c
  3437  0017AC  0E20               	movlw	32
  3438  0017AE  1047               	iorwf	xtoa@c^0,w,c
  3439  0017B0  6E2F               	movwf	(??_xtoa+2)^0,c
  3440  0017B2  0E00               	movlw	0
  3441  0017B4  1048               	iorwf	(xtoa@c+1)^0,w,c
  3442  0017B6  6E30               	movwf	(??_xtoa+3)^0,c
  3443  0017B8  502D               	movf	??_xtoa^0,w,c
  3444  0017BA  262F               	addwf	(??_xtoa+2)^0,f,c
  3445  0017BC  502E               	movf	(??_xtoa+1)^0,w,c
  3446  0017BE  2230               	addwfc	(??_xtoa+3)^0,f,c
  3447  0017C0  5030               	movf	(??_xtoa+3)^0,w,c
  3448  0017C2  E10A               	bnz	u2090
  3449  0017C4  0E1A               	movlw	26
  3450  0017C6  5C2F               	subwf	(??_xtoa+2)^0,w,c
  3451  0017C8  A0D8               	btfss	status,0,c
  3452  0017CA  EFE9  F00B         	goto	u2091
  3453  0017CE  EFEC  F00B         	goto	u2090
  3454  0017D2                     u2091:
  3455  0017D2  0E01               	movlw	1
  3456  0017D4  EFED  F00B         	goto	u2100
  3457  0017D8                     u2090:
  3458  0017D8  0E00               	movlw	0
  3459  0017DA                     u2100:
  3460  0017DA  6E37               	movwf	_xtoa$1221^0,c
  3461  0017DC  6A38               	clrf	(_xtoa$1221+1)^0,c
  3462  0017DE  5037               	movf	_xtoa$1221^0,w,c
  3463  0017E0  1038               	iorwf	(_xtoa$1221+1)^0,w,c
  3464  0017E2  B4D8               	btfsc	status,2,c
  3465  0017E4  EFF6  F00B         	goto	u2111
  3466  0017E8  EFF8  F00B         	goto	u2110
  3467  0017EC                     u2111:
  3468  0017EC  EF02  F00C         	goto	l2882
  3469  0017F0                     u2110:
  3470  0017F0                     
  3471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  3472  0017F0  C047  F00B         	movff	xtoa@c,toupper@c
  3473  0017F4  C048  F00C         	movff	xtoa@c+1,toupper@c+1
  3474  0017F8  EC08  F012         	call	_toupper	;wreg free
  3475  0017FC  C00B  F047         	movff	?_toupper,xtoa@c
  3476  001800  C00C  F048         	movff	?_toupper+1,xtoa@c+1
  3477  001804                     l2882:
  3478                           
  3479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  3480  001804  0E00               	movlw	low _dbuf
  3481  001806  2445               	addwf	xtoa@i^0,w,c
  3482  001808  6ED9               	movwf	fsr2l,c
  3483  00180A  0E01               	movlw	high _dbuf
  3484  00180C  2046               	addwfc	(xtoa@i+1)^0,w,c
  3485  00180E  6EDA               	movwf	fsr2h,c
  3486  001810  C047  FFDF         	movff	xtoa@c,indf2
  3487  001814                     
  3488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  3489  001814  0639               	decf	xtoa@p^0,f,c
  3490  001816  A0D8               	btfss	status,0,c
  3491  001818  063A               	decf	(xtoa@p+1)^0,f,c
  3492  00181A                     
  3493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  3494  00181A  063B               	decf	xtoa@w^0,f,c
  3495  00181C  A0D8               	btfss	status,0,c
  3496  00181E  063C               	decf	(xtoa@w+1)^0,f,c
  3497  001820                     
  3498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  3499  001820  C03D  F02D         	movff	xtoa@n,??_xtoa
  3500  001824  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
  3501  001828  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
  3502  00182C  C040  F030         	movff	xtoa@n+3,??_xtoa+3
  3503  001830  C041  F031         	movff	xtoa@n+4,??_xtoa+4
  3504  001834  C042  F032         	movff	xtoa@n+5,??_xtoa+5
  3505  001838  C043  F033         	movff	xtoa@n+6,??_xtoa+6
  3506  00183C  C044  F034         	movff	xtoa@n+7,??_xtoa+7
  3507  001840  0E05               	movlw	5
  3508  001842  EF2C  F00C         	goto	u2120
  3509  001846                     u2125:
  3510  001846  90D8               	bcf	status,0,c
  3511  001848  3234               	rrcf	(??_xtoa+7)^0,f,c
  3512  00184A  3233               	rrcf	(??_xtoa+6)^0,f,c
  3513  00184C  3232               	rrcf	(??_xtoa+5)^0,f,c
  3514  00184E  3231               	rrcf	(??_xtoa+4)^0,f,c
  3515  001850  3230               	rrcf	(??_xtoa+3)^0,f,c
  3516  001852  322F               	rrcf	(??_xtoa+2)^0,f,c
  3517  001854  322E               	rrcf	(??_xtoa+1)^0,f,c
  3518  001856  322D               	rrcf	??_xtoa^0,f,c
  3519  001858                     u2120:
  3520  001858  2EE8               	decfsz	wreg,f,c
  3521  00185A  EF23  F00C         	goto	u2125
  3522  00185E  C02D  F03D         	movff	??_xtoa,xtoa@n
  3523  001862  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
  3524  001866  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
  3525  00186A  C030  F040         	movff	??_xtoa+3,xtoa@n+3
  3526  00186E  C031  F041         	movff	??_xtoa+4,xtoa@n+4
  3527  001872  C032  F042         	movff	??_xtoa+5,xtoa@n+5
  3528  001876  C033  F043         	movff	??_xtoa+6,xtoa@n+6
  3529  00187A  C034  F044         	movff	??_xtoa+7,xtoa@n+7
  3530  00187E                     l2890:
  3531                           
  3532                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3533  00187E  BE46               	btfsc	(xtoa@i+1)^0,7,c
  3534  001880  EF4B  F00C         	goto	u2131
  3535  001884  5046               	movf	(xtoa@i+1)^0,w,c
  3536  001886  E109               	bnz	u2130
  3537  001888  0E02               	movlw	2
  3538  00188A  5C45               	subwf	xtoa@i^0,w,c
  3539  00188C  A0D8               	btfss	status,0,c
  3540  00188E  EF4B  F00C         	goto	u2131
  3541  001892  EF4D  F00C         	goto	u2130
  3542  001896                     u2131:
  3543  001896  EF7D  F00C         	goto	l693
  3544  00189A                     u2130:
  3545  00189A  503D               	movf	xtoa@n^0,w,c
  3546  00189C  103E               	iorwf	(xtoa@n+1)^0,w,c
  3547  00189E  103F               	iorwf	(xtoa@n+2)^0,w,c
  3548  0018A0  1040               	iorwf	(xtoa@n+3)^0,w,c
  3549  0018A2  1041               	iorwf	(xtoa@n+4)^0,w,c
  3550  0018A4  1042               	iorwf	(xtoa@n+5)^0,w,c
  3551  0018A6  1043               	iorwf	(xtoa@n+6)^0,w,c
  3552  0018A8  1044               	iorwf	(xtoa@n+7)^0,w,c
  3553  0018AA  A4D8               	btfss	status,2,c
  3554  0018AC  EF5A  F00C         	goto	u2141
  3555  0018B0  EF5C  F00C         	goto	u2140
  3556  0018B4                     u2141:
  3557  0018B4  EF8C  F00B         	goto	l2860
  3558  0018B8                     u2140:
  3559  0018B8  BE3A               	btfsc	(xtoa@p+1)^0,7,c
  3560  0018BA  EF69  F00C         	goto	u2150
  3561  0018BE  503A               	movf	(xtoa@p+1)^0,w,c
  3562  0018C0  E106               	bnz	u2151
  3563  0018C2  0439               	decf	xtoa@p^0,w,c
  3564  0018C4  B0D8               	btfsc	status,0,c
  3565  0018C6  EF67  F00C         	goto	u2151
  3566  0018CA  EF69  F00C         	goto	u2150
  3567  0018CE                     u2151:
  3568  0018CE  EF8C  F00B         	goto	l2860
  3569  0018D2                     u2150:
  3570  0018D2  BE3C               	btfsc	(xtoa@w+1)^0,7,c
  3571  0018D4  EF74  F00C         	goto	u2161
  3572  0018D8  503C               	movf	(xtoa@w+1)^0,w,c
  3573  0018DA  E108               	bnz	u2160
  3574  0018DC  043B               	decf	xtoa@w^0,w,c
  3575  0018DE  A0D8               	btfss	status,0,c
  3576  0018E0  EF74  F00C         	goto	u2161
  3577  0018E4  EF76  F00C         	goto	u2160
  3578  0018E8                     u2161:
  3579  0018E8  EF7D  F00C         	goto	l693
  3580  0018EC                     u2160:
  3581  0018EC  B257               	btfsc	_flags^0,1,c
  3582  0018EE  EF7B  F00C         	goto	u2171
  3583  0018F2  EF7D  F00C         	goto	u2170
  3584  0018F6                     u2171:
  3585  0018F6  EF8C  F00B         	goto	l2860
  3586  0018FA                     u2170:
  3587  0018FA                     l693:
  3588                           
  3589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  3590  0018FA  A857               	btfss	_flags^0,4,c
  3591  0018FC  EF82  F00C         	goto	u2181
  3592  001900  EF84  F00C         	goto	u2180
  3593  001904                     u2181:
  3594  001904  EF9A  F00C         	goto	l2906
  3595  001908                     u2180:
  3596  001908                     
  3597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  3598  001908  0645               	decf	xtoa@i^0,f,c
  3599  00190A  A0D8               	btfss	status,0,c
  3600  00190C  0646               	decf	(xtoa@i+1)^0,f,c
  3601  00190E                     
  3602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  3603  00190E  0E00               	movlw	low _dbuf
  3604  001910  2445               	addwf	xtoa@i^0,w,c
  3605  001912  6ED9               	movwf	fsr2l,c
  3606  001914  0E01               	movlw	high _dbuf
  3607  001916  2046               	addwfc	(xtoa@i+1)^0,w,c
  3608  001918  6EDA               	movwf	fsr2h,c
  3609  00191A  C02C  FFDF         	movff	xtoa@x,indf2
  3610  00191E                     
  3611                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  3612  00191E  0645               	decf	xtoa@i^0,f,c
  3613  001920  A0D8               	btfss	status,0,c
  3614  001922  0646               	decf	(xtoa@i+1)^0,f,c
  3615                           
  3616                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  3617  001924  0E00               	movlw	low _dbuf
  3618  001926  2445               	addwf	xtoa@i^0,w,c
  3619  001928  6ED9               	movwf	fsr2l,c
  3620  00192A  0E01               	movlw	high _dbuf
  3621  00192C  2046               	addwfc	(xtoa@i+1)^0,w,c
  3622  00192E  6EDA               	movwf	fsr2h,c
  3623  001930  0E30               	movlw	48
  3624  001932  6EDF               	movwf	indf2,c
  3625  001934                     l2906:
  3626                           
  3627                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  3628  001934  C022  F017         	movff	xtoa@fp,pad@fp
  3629  001938  C023  F018         	movff	xtoa@fp+1,pad@fp+1
  3630  00193C  0E00               	movlw	low _dbuf
  3631  00193E  2445               	addwf	xtoa@i^0,w,c
  3632  001940  6E19               	movwf	pad@buf^0,c
  3633  001942  0E01               	movlw	high _dbuf
  3634  001944  2046               	addwfc	(xtoa@i+1)^0,w,c
  3635  001946  6E1A               	movwf	(pad@buf+1)^0,c
  3636  001948  C03B  F01B         	movff	xtoa@w,pad@p
  3637  00194C  C03C  F01C         	movff	xtoa@w+1,pad@p+1
  3638  001950  ECF2  F00E         	call	_pad	;wreg free
  3639  001954  C017  F022         	movff	?_pad,?_xtoa
  3640  001958  C018  F023         	movff	?_pad+1,?_xtoa+1
  3641  00195C  0012               	return		;funcret
  3642  00195E                     __end_of_xtoa:
  3643                           	opt callstack 0
  3644                           
  3645 ;; *************** function _toupper *****************
  3646 ;; Defined at:
  3647 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  c               2   10[COMRAM] int 
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;		None
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  2   10[COMRAM] int 
  3654 ;; Registers used:
  3655 ;;		wreg, status,2, status,0
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3661 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3662 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3663 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3664 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3665 ;;Total ram usage:        8 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; Hardware stack levels required when called:    5
  3668 ;; This function calls:
  3669 ;;		_islower
  3670 ;; This function is called by:
  3671 ;;		_xtoa
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           	psect	text24
  3676  002410                     __ptext24:
  3677                           	opt callstack 0
  3678  002410                     _toupper:
  3679                           	opt callstack 21
  3680  002410  0E9F               	movlw	159
  3681  002412  6E0D               	movwf	??_toupper^0,c
  3682  002414  0EFF               	movlw	255
  3683  002416  6E0E               	movwf	(??_toupper+1)^0,c
  3684  002418  C00B  F00F         	movff	toupper@c,??_toupper+2
  3685  00241C  C00C  F010         	movff	toupper@c+1,??_toupper+3
  3686  002420  500D               	movf	??_toupper^0,w,c
  3687  002422  260F               	addwf	(??_toupper+2)^0,f,c
  3688  002424  500E               	movf	(??_toupper+1)^0,w,c
  3689  002426  2210               	addwfc	(??_toupper+3)^0,f,c
  3690  002428  5010               	movf	(??_toupper+3)^0,w,c
  3691  00242A  E10A               	bnz	u1670
  3692  00242C  0E1A               	movlw	26
  3693  00242E  5C0F               	subwf	(??_toupper+2)^0,w,c
  3694  002430  A0D8               	btfss	status,0,c
  3695  002432  EF1D  F012         	goto	u1671
  3696  002436  EF20  F012         	goto	u1670
  3697  00243A                     u1671:
  3698  00243A  0E01               	movlw	1
  3699  00243C  EF21  F012         	goto	u1680
  3700  002440                     u1670:
  3701  002440  0E00               	movlw	0
  3702  002442                     u1680:
  3703  002442  6E11               	movwf	_toupper$1785^0,c
  3704  002444  6A12               	clrf	(_toupper$1785+1)^0,c
  3705  002446  5011               	movf	_toupper$1785^0,w,c
  3706  002448  1012               	iorwf	(_toupper$1785+1)^0,w,c
  3707  00244A  B4D8               	btfsc	status,2,c
  3708  00244C  EF2A  F012         	goto	u1691
  3709  002450  EF2C  F012         	goto	u1690
  3710  002454                     u1691:
  3711  002454  EF32  F012         	goto	l1510
  3712  002458                     u1690:
  3713  002458  0E5F               	movlw	95
  3714  00245A  140B               	andwf	toupper@c^0,w,c
  3715  00245C  6E0B               	movwf	?_toupper^0,c
  3716  00245E  6A0C               	clrf	(?_toupper+1)^0,c
  3717  002460  EF36  F012         	goto	l1515
  3718  002464                     l1510:
  3719  002464  C00B  F00B         	movff	toupper@c,?_toupper
  3720  002468  C00C  F00C         	movff	toupper@c+1,?_toupper+1
  3721  00246C                     l1515:
  3722  00246C  0012               	return		;funcret
  3723  00246E                     __end_of_toupper:
  3724                           	opt callstack 0
  3725                           
  3726 ;; *************** function _islower *****************
  3727 ;; Defined at:
  3728 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;  c               2    4[COMRAM] int 
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;		None
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  2    4[COMRAM] int 
  3735 ;; Registers used:
  3736 ;;		wreg, status,2, status,0
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3742 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3744 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3745 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3746 ;;Total ram usage:        6 bytes
  3747 ;; Hardware stack levels used:    1
  3748 ;; Hardware stack levels required when called:    4
  3749 ;; This function calls:
  3750 ;;		Nothing
  3751 ;; This function is called by:
  3752 ;;		_toupper
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           	psect	text25
  3757  002704                     __ptext25:
  3758                           	opt callstack 0
  3759  002704                     _islower:
  3760                           	opt callstack 21
  3761  002704  0E9F               	movlw	159
  3762  002706  6E07               	movwf	??_islower^0,c
  3763  002708  0EFF               	movlw	255
  3764  00270A  6E08               	movwf	(??_islower+1)^0,c
  3765  00270C  C005  F009         	movff	islower@c,??_islower+2
  3766  002710  C006  F00A         	movff	islower@c+1,??_islower+3
  3767  002714  5007               	movf	??_islower^0,w,c
  3768  002716  2609               	addwf	(??_islower+2)^0,f,c
  3769  002718  5008               	movf	(??_islower+1)^0,w,c
  3770  00271A  220A               	addwfc	(??_islower+3)^0,f,c
  3771  00271C  500A               	movf	(??_islower+3)^0,w,c
  3772  00271E  E10A               	bnz	u1560
  3773  002720  0E1A               	movlw	26
  3774  002722  5C09               	subwf	(??_islower+2)^0,w,c
  3775  002724  A0D8               	btfss	status,0,c
  3776  002726  EF97  F013         	goto	u1561
  3777  00272A  EF9A  F013         	goto	u1560
  3778  00272E                     u1561:
  3779  00272E  0E01               	movlw	1
  3780  002730  EF9B  F013         	goto	u1570
  3781  002734                     u1560:
  3782  002734  0E00               	movlw	0
  3783  002736                     u1570:
  3784  002736  6E05               	movwf	?_islower^0,c
  3785  002738  6A06               	clrf	(?_islower+1)^0,c
  3786  00273A  0012               	return		;funcret
  3787  00273C                     __end_of_islower:
  3788                           	opt callstack 0
  3789                           
  3790 ;; *************** function _isupper *****************
  3791 ;; Defined at:
  3792 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  3793 ;; Parameters:    Size  Location     Type
  3794 ;;  c               2    4[COMRAM] int 
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;		None
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  2    4[COMRAM] int 
  3799 ;; Registers used:
  3800 ;;		wreg, status,2, status,0
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3806 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3808 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3809 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3810 ;;Total ram usage:        6 bytes
  3811 ;; Hardware stack levels used:    1
  3812 ;; Hardware stack levels required when called:    4
  3813 ;; This function calls:
  3814 ;;		Nothing
  3815 ;; This function is called by:
  3816 ;;		_xtoa
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           	psect	text26
  3821  00273C                     __ptext26:
  3822                           	opt callstack 0
  3823  00273C                     _isupper:
  3824                           	opt callstack 22
  3825  00273C  0EBF               	movlw	191
  3826  00273E  6E07               	movwf	??_isupper^0,c
  3827  002740  0EFF               	movlw	255
  3828  002742  6E08               	movwf	(??_isupper+1)^0,c
  3829  002744  C005  F009         	movff	isupper@c,??_isupper+2
  3830  002748  C006  F00A         	movff	isupper@c+1,??_isupper+3
  3831  00274C  5007               	movf	??_isupper^0,w,c
  3832  00274E  2609               	addwf	(??_isupper+2)^0,f,c
  3833  002750  5008               	movf	(??_isupper+1)^0,w,c
  3834  002752  220A               	addwfc	(??_isupper+3)^0,f,c
  3835  002754  500A               	movf	(??_isupper+3)^0,w,c
  3836  002756  E10A               	bnz	u1630
  3837  002758  0E1A               	movlw	26
  3838  00275A  5C09               	subwf	(??_isupper+2)^0,w,c
  3839  00275C  A0D8               	btfss	status,0,c
  3840  00275E  EFB3  F013         	goto	u1631
  3841  002762  EFB6  F013         	goto	u1630
  3842  002766                     u1631:
  3843  002766  0E01               	movlw	1
  3844  002768  EFB7  F013         	goto	u1640
  3845  00276C                     u1630:
  3846  00276C  0E00               	movlw	0
  3847  00276E                     u1640:
  3848  00276E  6E05               	movwf	?_isupper^0,c
  3849  002770  6A06               	clrf	(?_isupper+1)^0,c
  3850  002772  0012               	return		;funcret
  3851  002774                     __end_of_isupper:
  3852                           	opt callstack 0
  3853                           
  3854 ;; *************** function _isalpha *****************
  3855 ;; Defined at:
  3856 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;  c               2    4[COMRAM] int 
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;		None
  3861 ;; Return value:  Size  Location     Type
  3862 ;;                  2    4[COMRAM] int 
  3863 ;; Registers used:
  3864 ;;		wreg, status,2, status,0
  3865 ;; Tracked objects:
  3866 ;;		On entry : 0/0
  3867 ;;		On exit  : 0/0
  3868 ;;		Unchanged: 0/0
  3869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3870 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3872 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3873 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3874 ;;Total ram usage:        6 bytes
  3875 ;; Hardware stack levels used:    1
  3876 ;; Hardware stack levels required when called:    4
  3877 ;; This function calls:
  3878 ;;		Nothing
  3879 ;; This function is called by:
  3880 ;;		_xtoa
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           
  3884                           	psect	text27
  3885  0026C8                     __ptext27:
  3886                           	opt callstack 0
  3887  0026C8                     _isalpha:
  3888                           	opt callstack 22
  3889  0026C8  0E9F               	movlw	159
  3890  0026CA  6E07               	movwf	??_isalpha^0,c
  3891  0026CC  0EFF               	movlw	255
  3892  0026CE  6E08               	movwf	(??_isalpha+1)^0,c
  3893  0026D0  0E20               	movlw	32
  3894  0026D2  1005               	iorwf	isalpha@c^0,w,c
  3895  0026D4  6E09               	movwf	(??_isalpha+2)^0,c
  3896  0026D6  0E00               	movlw	0
  3897  0026D8  1006               	iorwf	(isalpha@c+1)^0,w,c
  3898  0026DA  6E0A               	movwf	(??_isalpha+3)^0,c
  3899  0026DC  5007               	movf	??_isalpha^0,w,c
  3900  0026DE  2609               	addwf	(??_isalpha+2)^0,f,c
  3901  0026E0  5008               	movf	(??_isalpha+1)^0,w,c
  3902  0026E2  220A               	addwfc	(??_isalpha+3)^0,f,c
  3903  0026E4  500A               	movf	(??_isalpha+3)^0,w,c
  3904  0026E6  E10A               	bnz	u1650
  3905  0026E8  0E1A               	movlw	26
  3906  0026EA  5C09               	subwf	(??_isalpha+2)^0,w,c
  3907  0026EC  A0D8               	btfss	status,0,c
  3908  0026EE  EF7B  F013         	goto	u1651
  3909  0026F2  EF7E  F013         	goto	u1650
  3910  0026F6                     u1651:
  3911  0026F6  0E01               	movlw	1
  3912  0026F8  EF7F  F013         	goto	u1660
  3913  0026FC                     u1650:
  3914  0026FC  0E00               	movlw	0
  3915  0026FE                     u1660:
  3916  0026FE  6E05               	movwf	?_isalpha^0,c
  3917  002700  6A06               	clrf	(?_isalpha+1)^0,c
  3918  002702  0012               	return		;funcret
  3919  002704                     __end_of_isalpha:
  3920                           	opt callstack 0
  3921                           
  3922 ;; *************** function _dtoa *****************
  3923 ;; Defined at:
  3924 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3925 ;; Parameters:    Size  Location     Type
  3926 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  3927 ;;		 -> NULL(0), 
  3928 ;;  d               8   35[COMRAM] long long 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;  n               8   59[COMRAM] long long 
  3931 ;;  i               2   67[COMRAM] int 
  3932 ;;  s               2   57[COMRAM] int 
  3933 ;;  w               2   55[COMRAM] int 
  3934 ;;  p               2   53[COMRAM] int 
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  2   33[COMRAM] int 
  3937 ;; Registers used:
  3938 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3944 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3945 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3946 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3947 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3948 ;;Total ram usage:       36 bytes
  3949 ;; Hardware stack levels used:    1
  3950 ;; Hardware stack levels required when called:    9
  3951 ;; This function calls:
  3952 ;;		___aodiv
  3953 ;;		___aomod
  3954 ;;		_abs
  3955 ;;		_pad
  3956 ;; This function is called by:
  3957 ;;		_vfpfcnvrt
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           	psect	text28
  3962  0013A8                     __ptext28:
  3963                           	opt callstack 0
  3964  0013A8                     _dtoa:
  3965                           	opt callstack 18
  3966  0013A8                     
  3967                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  3968  0013A8  C024  F03C         	movff	dtoa@d,dtoa@n
  3969  0013AC  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  3970  0013B0  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  3971  0013B4  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  3972  0013B8  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  3973  0013BC  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  3974  0013C0  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  3975  0013C4  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  3976  0013C8                     
  3977                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  3978  0013C8  BE43               	btfsc	(dtoa@n+7)^0,7,c
  3979  0013CA  EFE9  F009         	goto	u1871
  3980  0013CE  EFEC  F009         	goto	u1870
  3981  0013D2                     u1871:
  3982  0013D2  0E01               	movlw	1
  3983  0013D4  EFED  F009         	goto	u1880
  3984  0013D8                     u1870:
  3985  0013D8  0E00               	movlw	0
  3986  0013DA                     u1880:
  3987  0013DA  6E3A               	movwf	dtoa@s^0,c
  3988  0013DC  6A3B               	clrf	(dtoa@s+1)^0,c
  3989                           
  3990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  3991  0013DE  503A               	movf	dtoa@s^0,w,c
  3992  0013E0  103B               	iorwf	(dtoa@s+1)^0,w,c
  3993  0013E2  B4D8               	btfsc	status,2,c
  3994  0013E4  EFF6  F009         	goto	u1891
  3995  0013E8  EFF8  F009         	goto	u1890
  3996  0013EC                     u1891:
  3997  0013EC  EF08  F00A         	goto	l2788
  3998  0013F0                     u1890:
  3999  0013F0                     
  4000                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  4001  0013F0  1E43               	comf	(dtoa@n+7)^0,f,c
  4002  0013F2  1E42               	comf	(dtoa@n+6)^0,f,c
  4003  0013F4  1E41               	comf	(dtoa@n+5)^0,f,c
  4004  0013F6  1E40               	comf	(dtoa@n+4)^0,f,c
  4005  0013F8  1E3F               	comf	(dtoa@n+3)^0,f,c
  4006  0013FA  1E3E               	comf	(dtoa@n+2)^0,f,c
  4007  0013FC  1E3D               	comf	(dtoa@n+1)^0,f,c
  4008  0013FE  6C3C               	negf	dtoa@n^0,c
  4009  001400  0E00               	movlw	0
  4010  001402  223D               	addwfc	(dtoa@n+1)^0,f,c
  4011  001404  223E               	addwfc	(dtoa@n+2)^0,f,c
  4012  001406  223F               	addwfc	(dtoa@n+3)^0,f,c
  4013  001408  2240               	addwfc	(dtoa@n+4)^0,f,c
  4014  00140A  2241               	addwfc	(dtoa@n+5)^0,f,c
  4015  00140C  2242               	addwfc	(dtoa@n+6)^0,f,c
  4016  00140E  2243               	addwfc	(dtoa@n+7)^0,f,c
  4017  001410                     l2788:
  4018                           
  4019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  4020  001410  0100               	movlb	0	; () banked
  4021  001412  BFAD               	btfsc	(_prec+1)& (0+255),7,b
  4022  001414  EF0E  F00A         	goto	u1901
  4023  001418  EF10  F00A         	goto	u1900
  4024  00141C                     u1901:
  4025  00141C  EF11  F00A         	goto	l2792
  4026  001420                     u1900:
  4027  001420                     
  4028                           ; BSR set to: 0
  4029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  4030  001420  9257               	bcf	_flags^0,1,c
  4031  001422                     l2792:
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  4035  001422  BFAD               	btfsc	(_prec+1)& (0+255),7,b
  4036  001424  EF1E  F00A         	goto	u1910
  4037  001428  51AD               	movf	(_prec+1)& (0+255),w,b
  4038  00142A  E106               	bnz	u1911
  4039  00142C  05AC               	decf	_prec& (0+255),w,b
  4040  00142E  B0D8               	btfsc	status,0,c
  4041  001430  EF1C  F00A         	goto	u1911
  4042  001434  EF1E  F00A         	goto	u1910
  4043  001438                     u1911:
  4044  001438  EF24  F00A         	goto	l645
  4045  00143C                     u1910:
  4046  00143C                     
  4047                           ; BSR set to: 0
  4048  00143C  0E00               	movlw	0
  4049  00143E  6E37               	movwf	(dtoa@p+1)^0,c
  4050  001440  0E01               	movlw	1
  4051  001442  6E36               	movwf	dtoa@p^0,c
  4052  001444  EF28  F00A         	goto	l647
  4053  001448                     l645:
  4054                           
  4055                           ; BSR set to: 0
  4056  001448  C0AC  F036         	movff	_prec,dtoa@p
  4057  00144C  C0AD  F037         	movff	_prec+1,dtoa@p+1
  4058  001450                     l647:
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  4062  001450  C0AA  F038         	movff	_width,dtoa@w
  4063  001454  C0AB  F039         	movff	_width+1,dtoa@w+1
  4064  001458                     
  4065                           ; BSR set to: 0
  4066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  4067  001458  503A               	movf	dtoa@s^0,w,c
  4068  00145A  103B               	iorwf	(dtoa@s+1)^0,w,c
  4069  00145C  A4D8               	btfss	status,2,c
  4070  00145E  EF33  F00A         	goto	u1921
  4071  001462  EF35  F00A         	goto	u1920
  4072  001466                     u1921:
  4073  001466  EF3C  F00A         	goto	l2800
  4074  00146A                     u1920:
  4075  00146A                     
  4076                           ; BSR set to: 0
  4077  00146A  A457               	btfss	_flags^0,2,c
  4078  00146C  EF3A  F00A         	goto	u1931
  4079  001470  EF3C  F00A         	goto	u1930
  4080  001474                     u1931:
  4081  001474  EF3F  F00A         	goto	l2802
  4082  001478                     u1930:
  4083  001478                     l2800:
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  4087  001478  0638               	decf	dtoa@w^0,f,c
  4088  00147A  A0D8               	btfss	status,0,c
  4089  00147C  0639               	decf	(dtoa@w+1)^0,f,c
  4090  00147E                     l2802:
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  4094  00147E  0E00               	movlw	0
  4095  001480  6E45               	movwf	(dtoa@i+1)^0,c
  4096  001482  0E1F               	movlw	31
  4097  001484  6E44               	movwf	dtoa@i^0,c
  4098  001486                     
  4099                           ; BSR set to: 0
  4100                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  4101  001486  0E00               	movlw	0
  4102  001488  0101               	movlb	1	; () banked
  4103  00148A  6F1F               	movwf	(_dbuf+31)& (0+255),b
  4104                           
  4105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4106  00148C  EFC4  F00A         	goto	l2816
  4107  001490                     l2806:
  4108                           
  4109                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  4110  001490  0644               	decf	dtoa@i^0,f,c
  4111  001492  A0D8               	btfss	status,0,c
  4112  001494  0645               	decf	(dtoa@i+1)^0,f,c
  4113  001496                     
  4114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  4115  001496  0E00               	movlw	low _dbuf
  4116  001498  2444               	addwf	dtoa@i^0,w,c
  4117  00149A  6ED9               	movwf	fsr2l,c
  4118  00149C  0E01               	movlw	high _dbuf
  4119  00149E  2045               	addwfc	(dtoa@i+1)^0,w,c
  4120  0014A0  6EDA               	movwf	fsr2h,c
  4121  0014A2  C03C  F005         	movff	dtoa@n,___aomod@dividend
  4122  0014A6  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
  4123  0014AA  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
  4124  0014AE  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
  4125  0014B2  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
  4126  0014B6  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  4127  0014BA  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  4128  0014BE  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  4129  0014C2  0E0A               	movlw	10
  4130  0014C4  6E0D               	movwf	___aomod@divisor^0,c
  4131  0014C6  0E00               	movlw	0
  4132  0014C8  6E0E               	movwf	(___aomod@divisor+1)^0,c
  4133  0014CA  0E00               	movlw	0
  4134  0014CC  6E0F               	movwf	(___aomod@divisor+2)^0,c
  4135  0014CE  0E00               	movlw	0
  4136  0014D0  6E10               	movwf	(___aomod@divisor+3)^0,c
  4137  0014D2  0E00               	movlw	0
  4138  0014D4  6E11               	movwf	(___aomod@divisor+4)^0,c
  4139  0014D6  0E00               	movlw	0
  4140  0014D8  6E12               	movwf	(___aomod@divisor+5)^0,c
  4141  0014DA  0E00               	movlw	0
  4142  0014DC  6E13               	movwf	(___aomod@divisor+6)^0,c
  4143  0014DE  0E00               	movlw	0
  4144  0014E0  6E14               	movwf	(___aomod@divisor+7)^0,c
  4145  0014E2  EC40  F00E         	call	___aomod	;wreg free
  4146  0014E6  C005  F02C         	movff	?___aomod,??_dtoa
  4147  0014EA  C006  F02D         	movff	?___aomod+1,??_dtoa+1
  4148  0014EE  C007  F02E         	movff	?___aomod+2,??_dtoa+2
  4149  0014F2  C008  F02F         	movff	?___aomod+3,??_dtoa+3
  4150  0014F6  C009  F030         	movff	?___aomod+4,??_dtoa+4
  4151  0014FA  C00A  F031         	movff	?___aomod+5,??_dtoa+5
  4152  0014FE  C00B  F032         	movff	?___aomod+6,??_dtoa+6
  4153  001502  C00C  F033         	movff	?___aomod+7,??_dtoa+7
  4154  001506  C02C  F017         	movff	??_dtoa,abs@a
  4155  00150A  C02E  F018         	movff	??_dtoa+2,abs@a+1
  4156  00150E  EC44  F013         	call	_abs	;wreg free
  4157  001512  5017               	movf	?_abs^0,w,c
  4158  001514  0F30               	addlw	48
  4159  001516  6EDF               	movwf	indf2,c
  4160  001518                     
  4161                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  4162  001518  0636               	decf	dtoa@p^0,f,c
  4163  00151A  A0D8               	btfss	status,0,c
  4164  00151C  0637               	decf	(dtoa@p+1)^0,f,c
  4165  00151E                     
  4166                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  4167  00151E  0638               	decf	dtoa@w^0,f,c
  4168  001520  A0D8               	btfss	status,0,c
  4169  001522  0639               	decf	(dtoa@w+1)^0,f,c
  4170  001524                     
  4171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  4172  001524  C03C  F005         	movff	dtoa@n,___aodiv@dividend
  4173  001528  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  4174  00152C  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  4175  001530  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  4176  001534  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  4177  001538  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  4178  00153C  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  4179  001540  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  4180  001544  0E0A               	movlw	10
  4181  001546  6E0D               	movwf	___aodiv@divisor^0,c
  4182  001548  0E00               	movlw	0
  4183  00154A  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  4184  00154C  0E00               	movlw	0
  4185  00154E  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  4186  001550  0E00               	movlw	0
  4187  001552  6E10               	movwf	(___aodiv@divisor+3)^0,c
  4188  001554  0E00               	movlw	0
  4189  001556  6E11               	movwf	(___aodiv@divisor+4)^0,c
  4190  001558  0E00               	movlw	0
  4191  00155A  6E12               	movwf	(___aodiv@divisor+5)^0,c
  4192  00155C  0E00               	movlw	0
  4193  00155E  6E13               	movwf	(___aodiv@divisor+6)^0,c
  4194  001560  0E00               	movlw	0
  4195  001562  6E14               	movwf	(___aodiv@divisor+7)^0,c
  4196  001564  EC7C  F00D         	call	___aodiv	;wreg free
  4197  001568  C005  F03C         	movff	?___aodiv,dtoa@n
  4198  00156C  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
  4199  001570  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
  4200  001574  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
  4201  001578  C009  F040         	movff	?___aodiv+4,dtoa@n+4
  4202  00157C  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
  4203  001580  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
  4204  001584  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
  4205  001588                     l2816:
  4206                           
  4207                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4208  001588  BE45               	btfsc	(dtoa@i+1)^0,7,c
  4209  00158A  EFCF  F00A         	goto	u1941
  4210  00158E  5045               	movf	(dtoa@i+1)^0,w,c
  4211  001590  E108               	bnz	u1940
  4212  001592  0444               	decf	dtoa@i^0,w,c
  4213  001594  A0D8               	btfss	status,0,c
  4214  001596  EFCF  F00A         	goto	u1941
  4215  00159A  EFD1  F00A         	goto	u1940
  4216  00159E                     u1941:
  4217  00159E  EF01  F00B         	goto	l2826
  4218  0015A2                     u1940:
  4219  0015A2  503C               	movf	dtoa@n^0,w,c
  4220  0015A4  103D               	iorwf	(dtoa@n+1)^0,w,c
  4221  0015A6  103E               	iorwf	(dtoa@n+2)^0,w,c
  4222  0015A8  103F               	iorwf	(dtoa@n+3)^0,w,c
  4223  0015AA  1040               	iorwf	(dtoa@n+4)^0,w,c
  4224  0015AC  1041               	iorwf	(dtoa@n+5)^0,w,c
  4225  0015AE  1042               	iorwf	(dtoa@n+6)^0,w,c
  4226  0015B0  1043               	iorwf	(dtoa@n+7)^0,w,c
  4227  0015B2  A4D8               	btfss	status,2,c
  4228  0015B4  EFDE  F00A         	goto	u1951
  4229  0015B8  EFE0  F00A         	goto	u1950
  4230  0015BC                     u1951:
  4231  0015BC  EF48  F00A         	goto	l2806
  4232  0015C0                     u1950:
  4233  0015C0  BE37               	btfsc	(dtoa@p+1)^0,7,c
  4234  0015C2  EFED  F00A         	goto	u1960
  4235  0015C6  5037               	movf	(dtoa@p+1)^0,w,c
  4236  0015C8  E106               	bnz	u1961
  4237  0015CA  0436               	decf	dtoa@p^0,w,c
  4238  0015CC  B0D8               	btfsc	status,0,c
  4239  0015CE  EFEB  F00A         	goto	u1961
  4240  0015D2  EFED  F00A         	goto	u1960
  4241  0015D6                     u1961:
  4242  0015D6  EF48  F00A         	goto	l2806
  4243  0015DA                     u1960:
  4244  0015DA  BE39               	btfsc	(dtoa@w+1)^0,7,c
  4245  0015DC  EFF8  F00A         	goto	u1971
  4246  0015E0  5039               	movf	(dtoa@w+1)^0,w,c
  4247  0015E2  E108               	bnz	u1970
  4248  0015E4  0438               	decf	dtoa@w^0,w,c
  4249  0015E6  A0D8               	btfss	status,0,c
  4250  0015E8  EFF8  F00A         	goto	u1971
  4251  0015EC  EFFA  F00A         	goto	u1970
  4252  0015F0                     u1971:
  4253  0015F0  EF01  F00B         	goto	l2826
  4254  0015F4                     u1970:
  4255  0015F4  B257               	btfsc	_flags^0,1,c
  4256  0015F6  EFFF  F00A         	goto	u1981
  4257  0015FA  EF01  F00B         	goto	u1980
  4258  0015FE                     u1981:
  4259  0015FE  EF48  F00A         	goto	l2806
  4260  001602                     u1980:
  4261  001602                     l2826:
  4262                           
  4263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  4264  001602  503A               	movf	dtoa@s^0,w,c
  4265  001604  103B               	iorwf	(dtoa@s+1)^0,w,c
  4266  001606  A4D8               	btfss	status,2,c
  4267  001608  EF08  F00B         	goto	u1991
  4268  00160C  EF0A  F00B         	goto	u1990
  4269  001610                     u1991:
  4270  001610  EF11  F00B         	goto	l2830
  4271  001614                     u1990:
  4272  001614  A457               	btfss	_flags^0,2,c
  4273  001616  EF0F  F00B         	goto	u2001
  4274  00161A  EF11  F00B         	goto	u2000
  4275  00161E                     u2001:
  4276  00161E  EF2F  F00B         	goto	l2840
  4277  001622                     u2000:
  4278  001622                     l2830:
  4279                           
  4280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  4281  001622  0644               	decf	dtoa@i^0,f,c
  4282  001624  A0D8               	btfss	status,0,c
  4283  001626  0645               	decf	(dtoa@i+1)^0,f,c
  4284  001628                     
  4285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  4286  001628  503A               	movf	dtoa@s^0,w,c
  4287  00162A  103B               	iorwf	(dtoa@s+1)^0,w,c
  4288  00162C  A4D8               	btfss	status,2,c
  4289  00162E  EF1B  F00B         	goto	u2011
  4290  001632  EF1D  F00B         	goto	u2010
  4291  001636                     u2011:
  4292  001636  EF23  F00B         	goto	l2836
  4293  00163A                     u2010:
  4294  00163A  0E00               	movlw	0
  4295  00163C  6E35               	movwf	(_dtoa$1209+1)^0,c
  4296  00163E  0E2B               	movlw	43
  4297  001640  6E34               	movwf	_dtoa$1209^0,c
  4298  001642  EF27  F00B         	goto	l2838
  4299  001646                     l2836:
  4300  001646  0E00               	movlw	0
  4301  001648  6E35               	movwf	(_dtoa$1209+1)^0,c
  4302  00164A  0E2D               	movlw	45
  4303  00164C  6E34               	movwf	_dtoa$1209^0,c
  4304  00164E                     l2838:
  4305  00164E  0E00               	movlw	low _dbuf
  4306  001650  2444               	addwf	dtoa@i^0,w,c
  4307  001652  6ED9               	movwf	fsr2l,c
  4308  001654  0E01               	movlw	high _dbuf
  4309  001656  2045               	addwfc	(dtoa@i+1)^0,w,c
  4310  001658  6EDA               	movwf	fsr2h,c
  4311  00165A  C034  FFDF         	movff	_dtoa$1209,indf2
  4312  00165E                     l2840:
  4313                           
  4314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  4315  00165E  C022  F017         	movff	dtoa@fp,pad@fp
  4316  001662  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  4317  001666  0E00               	movlw	low _dbuf
  4318  001668  2444               	addwf	dtoa@i^0,w,c
  4319  00166A  6E19               	movwf	pad@buf^0,c
  4320  00166C  0E01               	movlw	high _dbuf
  4321  00166E  2045               	addwfc	(dtoa@i+1)^0,w,c
  4322  001670  6E1A               	movwf	(pad@buf+1)^0,c
  4323  001672  C038  F01B         	movff	dtoa@w,pad@p
  4324  001676  C039  F01C         	movff	dtoa@w+1,pad@p+1
  4325  00167A  ECF2  F00E         	call	_pad	;wreg free
  4326  00167E  C017  F022         	movff	?_pad,?_dtoa
  4327  001682  C018  F023         	movff	?_pad+1,?_dtoa+1
  4328  001686  0012               	return		;funcret
  4329  001688                     __end_of_dtoa:
  4330                           	opt callstack 0
  4331                           
  4332 ;; *************** function _pad *****************
  4333 ;; Defined at:
  4334 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  4337 ;;		 -> NULL(0), 
  4338 ;;  buf             2   24[COMRAM] PTR unsigned char 
  4339 ;;		 -> dbuf(32), 
  4340 ;;  p               2   26[COMRAM] int 
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;  w               2   31[COMRAM] int 
  4343 ;;  i               2   29[COMRAM] int 
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  2   22[COMRAM] int 
  4346 ;; Registers used:
  4347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4353 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4354 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4355 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4356 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4357 ;;Total ram usage:       11 bytes
  4358 ;; Hardware stack levels used:    1
  4359 ;; Hardware stack levels required when called:    8
  4360 ;; This function calls:
  4361 ;;		_fputc
  4362 ;;		_fputs
  4363 ;;		_strlen
  4364 ;; This function is called by:
  4365 ;;		_dtoa
  4366 ;;		_xtoa
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           	psect	text29
  4371  001DE4                     __ptext29:
  4372                           	opt callstack 0
  4373  001DE4                     _pad:
  4374                           	opt callstack 18
  4375  001DE4                     
  4376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4377  001DE4  A057               	btfss	_flags^0,0,c
  4378  001DE6  EFF7  F00E         	goto	u1581
  4379  001DEA  EFF9  F00E         	goto	u1580
  4380  001DEE                     u1581:
  4381  001DEE  EF03  F00F         	goto	l2640
  4382  001DF2                     u1580:
  4383  001DF2                     
  4384                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4385  001DF2  C019  F010         	movff	pad@buf,fputs@s
  4386  001DF6  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4387  001DFA  C017  F012         	movff	pad@fp,fputs@fp
  4388  001DFE  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4389  001E02  ECDF  F012         	call	_fputs	;wreg free
  4390  001E06                     l2640:
  4391                           
  4392                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4393  001E06  BE1C               	btfsc	(pad@p+1)^0,7,c
  4394  001E08  EF08  F00F         	goto	u1591
  4395  001E0C  EF0A  F00F         	goto	u1590
  4396  001E10                     u1591:
  4397  001E10  EF10  F00F         	goto	l2644
  4398  001E14                     u1590:
  4399  001E14  C01B  F020         	movff	pad@p,pad@w
  4400  001E18  C01C  F021         	movff	pad@p+1,pad@w+1
  4401  001E1C  EF14  F00F         	goto	l634
  4402  001E20                     l2644:
  4403  001E20  0E00               	movlw	0
  4404  001E22  6E21               	movwf	(pad@w+1)^0,c
  4405  001E24  0E00               	movlw	0
  4406  001E26  6E20               	movwf	pad@w^0,c
  4407  001E28                     l634:
  4408                           
  4409                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4410  001E28  0E00               	movlw	0
  4411  001E2A  6E1F               	movwf	(pad@i+1)^0,c
  4412  001E2C  0E00               	movlw	0
  4413  001E2E  6E1E               	movwf	pad@i^0,c
  4414                           
  4415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4416  001E30  EF26  F00F         	goto	l2650
  4417  001E34                     l2646:
  4418                           
  4419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4420  001E34  0E00               	movlw	0
  4421  001E36  6E08               	movwf	(fputc@c+1)^0,c
  4422  001E38  0E20               	movlw	32
  4423  001E3A  6E07               	movwf	fputc@c^0,c
  4424  001E3C  C017  F009         	movff	pad@fp,fputc@fp
  4425  001E40  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  4426  001E44  EC66  F010         	call	_fputc	;wreg free
  4427  001E48                     
  4428                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4429  001E48  4A1E               	infsnz	pad@i^0,f,c
  4430  001E4A  2A1F               	incf	(pad@i+1)^0,f,c
  4431  001E4C                     l2650:
  4432                           
  4433                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4434  001E4C  5020               	movf	pad@w^0,w,c
  4435  001E4E  5C1E               	subwf	pad@i^0,w,c
  4436  001E50  501F               	movf	(pad@i+1)^0,w,c
  4437  001E52  0A80               	xorlw	128
  4438  001E54  6E1D               	movwf	??_pad^0,c
  4439  001E56  5021               	movf	(pad@w+1)^0,w,c
  4440  001E58  0A80               	xorlw	128
  4441  001E5A  581D               	subwfb	??_pad^0,w,c
  4442  001E5C  A0D8               	btfss	status,0,c
  4443  001E5E  EF33  F00F         	goto	u1601
  4444  001E62  EF35  F00F         	goto	u1600
  4445  001E66                     u1601:
  4446  001E66  EF1A  F00F         	goto	l2646
  4447  001E6A                     u1600:
  4448  001E6A                     
  4449                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4450  001E6A  B057               	btfsc	_flags^0,0,c
  4451  001E6C  EF3A  F00F         	goto	u1611
  4452  001E70  EF3C  F00F         	goto	u1610
  4453  001E74                     u1611:
  4454  001E74  EF46  F00F         	goto	l2654
  4455  001E78                     u1610:
  4456  001E78                     
  4457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4458  001E78  C019  F010         	movff	pad@buf,fputs@s
  4459  001E7C  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4460  001E80  C017  F012         	movff	pad@fp,fputs@fp
  4461  001E84  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4462  001E88  ECDF  F012         	call	_fputs	;wreg free
  4463  001E8C                     l2654:
  4464                           
  4465                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4466  001E8C  C019  F005         	movff	pad@buf,strlen@s
  4467  001E90  C01A  F006         	movff	pad@buf+1,strlen@s+1
  4468  001E94  ECD6  F013         	call	_strlen	;wreg free
  4469  001E98  5020               	movf	pad@w^0,w,c
  4470  001E9A  2405               	addwf	?_strlen^0,w,c
  4471  001E9C  6E17               	movwf	?_pad^0,c
  4472  001E9E  5021               	movf	(pad@w+1)^0,w,c
  4473  001EA0  2006               	addwfc	(?_strlen+1)^0,w,c
  4474  001EA2  6E18               	movwf	(?_pad+1)^0,c
  4475  001EA4  0012               	return		;funcret
  4476  001EA6                     __end_of_pad:
  4477                           	opt callstack 0
  4478                           
  4479 ;; *************** function _strlen *****************
  4480 ;; Defined at:
  4481 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4484 ;;		 -> dbuf(32), 
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;  a               2    6[COMRAM] PTR const unsigned char 
  4487 ;;		 -> dbuf(32), 
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  2    4[COMRAM] unsigned int 
  4490 ;; Registers used:
  4491 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4497 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4498 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4500 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4501 ;;Total ram usage:        4 bytes
  4502 ;; Hardware stack levels used:    1
  4503 ;; Hardware stack levels required when called:    4
  4504 ;; This function calls:
  4505 ;;		Nothing
  4506 ;; This function is called by:
  4507 ;;		_pad
  4508 ;; This function uses a non-reentrant model
  4509 ;;
  4510                           
  4511                           	psect	text30
  4512  0027AC                     __ptext30:
  4513                           	opt callstack 0
  4514  0027AC                     _strlen:
  4515                           	opt callstack 21
  4516  0027AC  C005  F007         	movff	strlen@s,strlen@a
  4517  0027B0  C006  F008         	movff	strlen@s+1,strlen@a+1
  4518  0027B4  EFDE  F013         	goto	l2626
  4519  0027B8                     l2624:
  4520  0027B8  4A05               	infsnz	strlen@s^0,f,c
  4521  0027BA  2A06               	incf	(strlen@s+1)^0,f,c
  4522  0027BC                     l2626:
  4523  0027BC  C005  FFD9         	movff	strlen@s,fsr2l
  4524  0027C0  C006  FFDA         	movff	strlen@s+1,fsr2h
  4525  0027C4  50DF               	movf	indf2,w,c
  4526  0027C6  A4D8               	btfss	status,2,c
  4527  0027C8  EFE8  F013         	goto	u1551
  4528  0027CC  EFEA  F013         	goto	u1550
  4529  0027D0                     u1551:
  4530  0027D0  EFDC  F013         	goto	l2624
  4531  0027D4                     u1550:
  4532  0027D4  5007               	movf	strlen@a^0,w,c
  4533  0027D6  5C05               	subwf	strlen@s^0,w,c
  4534  0027D8  6E05               	movwf	?_strlen^0,c
  4535  0027DA  5008               	movf	(strlen@a+1)^0,w,c
  4536  0027DC  5806               	subwfb	(strlen@s+1)^0,w,c
  4537  0027DE  6E06               	movwf	(?_strlen+1)^0,c
  4538  0027E0  0012               	return		;funcret
  4539  0027E2                     __end_of_strlen:
  4540                           	opt callstack 0
  4541                           
  4542 ;; *************** function _fputs *****************
  4543 ;; Defined at:
  4544 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;  s               2   15[COMRAM] PTR const unsigned char 
  4547 ;;		 -> dbuf(32), 
  4548 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  4549 ;;		 -> NULL(0), 
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;  i               2   20[COMRAM] int 
  4552 ;;  c               1   19[COMRAM] unsigned char 
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  2   15[COMRAM] int 
  4555 ;; Registers used:
  4556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4562 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4563 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4565 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4566 ;;Total ram usage:        7 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; Hardware stack levels required when called:    7
  4569 ;; This function calls:
  4570 ;;		_fputc
  4571 ;; This function is called by:
  4572 ;;		_pad
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           	psect	text31
  4577  0025BE                     __ptext31:
  4578                           	opt callstack 0
  4579  0025BE                     _fputs:
  4580                           	opt callstack 18
  4581  0025BE  0E00               	movlw	0
  4582  0025C0  6E16               	movwf	(fputs@i+1)^0,c
  4583  0025C2  0E00               	movlw	0
  4584  0025C4  6E15               	movwf	fputs@i^0,c
  4585  0025C6  EFF0  F012         	goto	l2620
  4586  0025CA                     l2616:
  4587  0025CA  C014  F007         	movff	fputs@c,fputc@c
  4588  0025CE  6A08               	clrf	(fputc@c+1)^0,c
  4589  0025D0  C012  F009         	movff	fputs@fp,fputc@fp
  4590  0025D4  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  4591  0025D8  EC66  F010         	call	_fputc	;wreg free
  4592  0025DC  4A15               	infsnz	fputs@i^0,f,c
  4593  0025DE  2A16               	incf	(fputs@i+1)^0,f,c
  4594  0025E0                     l2620:
  4595  0025E0  5015               	movf	fputs@i^0,w,c
  4596  0025E2  2410               	addwf	fputs@s^0,w,c
  4597  0025E4  6ED9               	movwf	fsr2l,c
  4598  0025E6  5016               	movf	(fputs@i+1)^0,w,c
  4599  0025E8  2011               	addwfc	(fputs@s+1)^0,w,c
  4600  0025EA  6EDA               	movwf	fsr2h,c
  4601  0025EC  50DF               	movf	indf2,w,c
  4602  0025EE  6E14               	movwf	fputs@c^0,c
  4603  0025F0  5014               	movf	fputs@c^0,w,c
  4604  0025F2  A4D8               	btfss	status,2,c
  4605  0025F4  EFFE  F012         	goto	u1541
  4606  0025F8  EF00  F013         	goto	u1540
  4607  0025FC                     u1541:
  4608  0025FC  EFE5  F012         	goto	l2616
  4609  002600                     u1540:
  4610  002600  0012               	return		;funcret
  4611  002602                     __end_of_fputs:
  4612                           	opt callstack 0
  4613                           
  4614 ;; *************** function _fputc *****************
  4615 ;; Defined at:
  4616 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;  c               2    6[COMRAM] int 
  4619 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  4620 ;;		 -> NULL(0), 
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;		None
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  2    6[COMRAM] int 
  4625 ;; Registers used:
  4626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4632 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4634 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4635 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4636 ;;Total ram usage:        9 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:    6
  4639 ;; This function calls:
  4640 ;;		_putch
  4641 ;; This function is called by:
  4642 ;;		_pad
  4643 ;;		_vfpfcnvrt
  4644 ;;		_fputs
  4645 ;; This function uses a non-reentrant model
  4646 ;;
  4647                           
  4648                           	psect	text32
  4649  0020CC                     __ptext32:
  4650                           	opt callstack 0
  4651  0020CC                     _fputc:
  4652                           	opt callstack 18
  4653  0020CC  5009               	movf	fputc@fp^0,w,c
  4654  0020CE  100A               	iorwf	(fputc@fp+1)^0,w,c
  4655  0020D0  B4D8               	btfsc	status,2,c
  4656  0020D2  EF6D  F010         	goto	u1501
  4657  0020D6  EF6F  F010         	goto	u1500
  4658  0020DA                     u1501:
  4659  0020DA  EF78  F010         	goto	l2604
  4660  0020DE                     u1500:
  4661  0020DE  5009               	movf	fputc@fp^0,w,c
  4662  0020E0  100A               	iorwf	(fputc@fp+1)^0,w,c
  4663  0020E2  A4D8               	btfss	status,2,c
  4664  0020E4  EF76  F010         	goto	u1511
  4665  0020E8  EF78  F010         	goto	u1510
  4666  0020EC                     u1511:
  4667  0020EC  EF7D  F010         	goto	l2606
  4668  0020F0                     u1510:
  4669  0020F0                     l2604:
  4670  0020F0  5007               	movf	fputc@c^0,w,c
  4671  0020F2  ECB6  F014         	call	_putch
  4672  0020F6  EFB0  F010         	goto	l1484
  4673  0020FA                     l2606:
  4674  0020FA  EE20 F004          	lfsr	2,4
  4675  0020FE  5009               	movf	fputc@fp^0,w,c
  4676  002100  26D9               	addwf	fsr2l,f,c
  4677  002102  500A               	movf	(fputc@fp+1)^0,w,c
  4678  002104  22DA               	addwfc	fsr2h,f,c
  4679  002106  50DE               	movf	postinc2,w,c
  4680  002108  10DE               	iorwf	postinc2,w,c
  4681  00210A  B4D8               	btfsc	status,2,c
  4682  00210C  EF8A  F010         	goto	u1521
  4683  002110  EF8C  F010         	goto	u1520
  4684  002114                     u1521:
  4685  002114  EFA7  F010         	goto	l2610
  4686  002118                     u1520:
  4687  002118  EE20 F004          	lfsr	2,4
  4688  00211C  5009               	movf	fputc@fp^0,w,c
  4689  00211E  26D9               	addwf	fsr2l,f,c
  4690  002120  500A               	movf	(fputc@fp+1)^0,w,c
  4691  002122  22DA               	addwfc	fsr2h,f,c
  4692  002124  EE10 F002          	lfsr	1,2
  4693  002128  5009               	movf	fputc@fp^0,w,c
  4694  00212A  26E1               	addwf	fsr1l,f,c
  4695  00212C  500A               	movf	(fputc@fp+1)^0,w,c
  4696  00212E  22E2               	addwfc	fsr1h,f,c
  4697  002130  50DE               	movf	postinc2,w,c
  4698  002132  5CE6               	subwf	postinc1,w,c
  4699  002134  50E6               	movf	postinc1,w,c
  4700  002136  0A80               	xorlw	128
  4701  002138  6E0F               	movwf	(??_fputc+4)^0,c
  4702  00213A  50DE               	movf	postinc2,w,c
  4703  00213C  0A80               	xorlw	128
  4704  00213E  580F               	subwfb	(??_fputc+4)^0,w,c
  4705  002140  B0D8               	btfsc	status,0,c
  4706  002142  EFA5  F010         	goto	u1531
  4707  002146  EFA7  F010         	goto	u1530
  4708  00214A                     u1531:
  4709  00214A  EFB0  F010         	goto	l1484
  4710  00214E                     u1530:
  4711  00214E                     l2610:
  4712  00214E  EE20 F002          	lfsr	2,2
  4713  002152  5009               	movf	fputc@fp^0,w,c
  4714  002154  26D9               	addwf	fsr2l,f,c
  4715  002156  500A               	movf	(fputc@fp+1)^0,w,c
  4716  002158  22DA               	addwfc	fsr2h,f,c
  4717  00215A  2ADE               	incf	postinc2,f,c
  4718  00215C  0E00               	movlw	0
  4719  00215E  22DD               	addwfc	postdec2,f,c
  4720  002160                     l1484:
  4721  002160  0012               	return		;funcret
  4722  002162                     __end_of_fputc:
  4723                           	opt callstack 0
  4724                           
  4725 ;; *************** function _putch *****************
  4726 ;; Defined at:
  4727 ;;		line 201 in file "mcc_generated_files/eusart2.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  txData          1    wreg     unsigned char 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;  txData          1    5[COMRAM] unsigned char 
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  1    wreg      void 
  4734 ;; Registers used:
  4735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4744 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4745 ;;Total ram usage:        1 bytes
  4746 ;; Hardware stack levels used:    1
  4747 ;; Hardware stack levels required when called:    5
  4748 ;; This function calls:
  4749 ;;		_EUSART2_Write
  4750 ;; This function is called by:
  4751 ;;		_fputc
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           	psect	text33
  4756  00296C                     __ptext33:
  4757                           	opt callstack 0
  4758  00296C                     _putch:
  4759                           	opt callstack 18
  4760                           
  4761                           ;incstack = 0
  4762                           ;putch@txData stored from wreg
  4763  00296C  6E06               	movwf	putch@txData^0,c
  4764  00296E                     
  4765                           ;mcc_generated_files/eusart2.c: 201: void putch(char txData);mcc_generated_files/eusart2
      +                          .c: 202: {;mcc_generated_files/eusart2.c: 203:     EUSART2_Write(txData);
  4766  00296E  5006               	movf	putch@txData^0,w,c
  4767  002970  EC37  F012         	call	_EUSART2_Write
  4768  002974  0012               	return		;funcret
  4769  002976                     __end_of_putch:
  4770                           	opt callstack 0
  4771                           
  4772 ;; *************** function _EUSART2_Write *****************
  4773 ;; Defined at:
  4774 ;;		line 173 in file "mcc_generated_files/eusart2.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;  txData          1    wreg     unsigned char 
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;  txData          1    4[COMRAM] unsigned char 
  4779 ;; Return value:  Size  Location     Type
  4780 ;;                  1    wreg      void 
  4781 ;; Registers used:
  4782 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/0
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4789 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4791 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4792 ;;Total ram usage:        1 bytes
  4793 ;; Hardware stack levels used:    1
  4794 ;; Hardware stack levels required when called:    4
  4795 ;; This function calls:
  4796 ;;		Nothing
  4797 ;; This function is called by:
  4798 ;;		_putch
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           	psect	text34
  4803  00246E                     __ptext34:
  4804                           	opt callstack 0
  4805  00246E                     _EUSART2_Write:
  4806                           	opt callstack 18
  4807                           
  4808                           ;incstack = 0
  4809                           ;EUSART2_Write@txData stored from wreg
  4810  00246E  6E05               	movwf	EUSART2_Write@txData^0,c
  4811  002470                     l2582:
  4812                           
  4813                           ;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBufferRemaining)
  4814  002470  0100               	movlb	0	; () banked
  4815  002472  51FA               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
  4816  002474  B4D8               	btfsc	status,2,c
  4817  002476  EF3F  F012         	goto	u1471
  4818  00247A  EF41  F012         	goto	u1470
  4819  00247E                     u1471:
  4820  00247E  EF38  F012         	goto	l2582
  4821  002482                     u1470:
  4822  002482                     
  4823                           ; BSR set to: 0
  4824                           ;mcc_generated_files/eusart2.c: 179:     if(0 == PIE3bits.TX2IE)
  4825  002482  010E               	movlb	14	; () banked
  4826  002484  BDC5               	btfsc	197,6,b	;volatile
  4827  002486  EF47  F012         	goto	u1481
  4828  00248A  EF49  F012         	goto	u1480
  4829  00248E                     u1481:
  4830  00248E  EF4D  F012         	goto	l321
  4831  002492                     u1480:
  4832  002492                     
  4833                           ; BSR set to: 14
  4834                           ;mcc_generated_files/eusart2.c: 180:     {;mcc_generated_files/eusart2.c: 181:         T
      +                          X2REG = txData;
  4835  002492  C005  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
  4836                           
  4837                           ;mcc_generated_files/eusart2.c: 182:     }
  4838  002496  EF63  F012         	goto	l2596
  4839  00249A                     l321:
  4840                           
  4841                           ; BSR set to: 14
  4842                           ;mcc_generated_files/eusart2.c: 184:     {;mcc_generated_files/eusart2.c: 185:         P
      +                          IE3bits.TX2IE = 0;
  4843  00249A  9DC5               	bcf	197,6,b	;volatile
  4844  00249C                     
  4845                           ; BSR set to: 14
  4846                           ;mcc_generated_files/eusart2.c: 186:         eusart2TxBuffer[eusart2TxHead++] = txData;
  4847  00249C  0EA0               	movlw	low _eusart2TxBuffer
  4848  00249E  0100               	movlb	0	; () banked
  4849  0024A0  25BD               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
  4850  0024A2  6ED9               	movwf	fsr2l,c
  4851  0024A4  6ADA               	clrf	fsr2h,c
  4852  0024A6  0E00               	movlw	high _eusart2TxBuffer
  4853  0024A8  22DA               	addwfc	fsr2h,f,c
  4854  0024AA  C005  FFDF         	movff	EUSART2_Write@txData,indf2
  4855  0024AE                     
  4856                           ; BSR set to: 0
  4857  0024AE  2BBD               	incf	_eusart2TxHead& (0+255),f,b	;volatile
  4858  0024B0                     
  4859                           ; BSR set to: 0
  4860                           ;mcc_generated_files/eusart2.c: 187:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
  4861  0024B0  0E07               	movlw	7
  4862  0024B2  65BD               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
  4863  0024B4  EF5E  F012         	goto	u1491
  4864  0024B8  EF60  F012         	goto	u1490
  4865  0024BC                     u1491:
  4866  0024BC  EF62  F012         	goto	l2594
  4867  0024C0                     u1490:
  4868  0024C0                     
  4869                           ; BSR set to: 0
  4870                           ;mcc_generated_files/eusart2.c: 188:         {;mcc_generated_files/eusart2.c: 189:      
      +                                 eusart2TxHead = 0;
  4871  0024C0  0E00               	movlw	0
  4872  0024C2  6FBD               	movwf	_eusart2TxHead& (0+255),b	;volatile
  4873  0024C4                     l2594:
  4874                           
  4875                           ; BSR set to: 0
  4876                           ;mcc_generated_files/eusart2.c: 191:         eusart2TxBufferRemaining--;
  4877  0024C4  07FA               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  4878  0024C6                     l2596:
  4879                           
  4880                           ;mcc_generated_files/eusart2.c: 193:     PIE3bits.TX2IE = 1;
  4881  0024C6  010E               	movlb	14	; () banked
  4882  0024C8  8DC5               	bsf	197,6,b	;volatile
  4883  0024CA                     
  4884                           ; BSR set to: 14
  4885  0024CA  0012               	return		;funcret
  4886  0024CC                     __end_of_EUSART2_Write:
  4887                           	opt callstack 0
  4888                           
  4889 ;; *************** function _abs *****************
  4890 ;; Defined at:
  4891 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;  a               2   22[COMRAM] int 
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;		None
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  2   22[COMRAM] int 
  4898 ;; Registers used:
  4899 ;;		wreg, status,2, status,0
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4907 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4908 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4909 ;;Total ram usage:        4 bytes
  4910 ;; Hardware stack levels used:    1
  4911 ;; Hardware stack levels required when called:    4
  4912 ;; This function calls:
  4913 ;;		Nothing
  4914 ;; This function is called by:
  4915 ;;		_dtoa
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           	psect	text35
  4920  002688                     __ptext35:
  4921                           	opt callstack 0
  4922  002688                     _abs:
  4923                           	opt callstack 22
  4924  002688  BE18               	btfsc	(abs@a+1)^0,7,c
  4925  00268A  EF51  F013         	goto	u1620
  4926  00268E  5018               	movf	(abs@a+1)^0,w,c
  4927  002690  E106               	bnz	u1621
  4928  002692  0417               	decf	abs@a^0,w,c
  4929  002694  B0D8               	btfsc	status,0,c
  4930  002696  EF4F  F013         	goto	u1621
  4931  00269A  EF51  F013         	goto	u1620
  4932  00269E                     u1621:
  4933  00269E  EF5F  F013         	goto	l1412
  4934  0026A2                     u1620:
  4935  0026A2  C017  F019         	movff	abs@a,??_abs
  4936  0026A6  C018  F01A         	movff	abs@a+1,??_abs+1
  4937  0026AA  1E19               	comf	??_abs^0,f,c
  4938  0026AC  1E1A               	comf	(??_abs+1)^0,f,c
  4939  0026AE  4A19               	infsnz	??_abs^0,f,c
  4940  0026B0  2A1A               	incf	(??_abs+1)^0,f,c
  4941  0026B2  C019  F017         	movff	??_abs,?_abs
  4942  0026B6  C01A  F018         	movff	??_abs+1,?_abs+1
  4943  0026BA  EF63  F013         	goto	l1415
  4944  0026BE                     l1412:
  4945  0026BE  C017  F017         	movff	abs@a,?_abs
  4946  0026C2  C018  F018         	movff	abs@a+1,?_abs+1
  4947  0026C6                     l1415:
  4948  0026C6  0012               	return		;funcret
  4949  0026C8                     __end_of_abs:
  4950                           	opt callstack 0
  4951                           
  4952 ;; *************** function ___aomod *****************
  4953 ;; Defined at:
  4954 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;  dividend        8    4[COMRAM] long long 
  4957 ;;  divisor         8   12[COMRAM] long long 
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;  sign            1   21[COMRAM] unsigned char 
  4960 ;;  counter         1   20[COMRAM] unsigned char 
  4961 ;; Return value:  Size  Location     Type
  4962 ;;                  8    4[COMRAM] long long 
  4963 ;; Registers used:
  4964 ;;		wreg, status,2, status,0
  4965 ;; Tracked objects:
  4966 ;;		On entry : 0/0
  4967 ;;		On exit  : 0/0
  4968 ;;		Unchanged: 0/0
  4969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4970 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4971 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4973 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4974 ;;Total ram usage:       18 bytes
  4975 ;; Hardware stack levels used:    1
  4976 ;; Hardware stack levels required when called:    4
  4977 ;; This function calls:
  4978 ;;		Nothing
  4979 ;; This function is called by:
  4980 ;;		_dtoa
  4981 ;; This function uses a non-reentrant model
  4982 ;;
  4983                           
  4984                           	psect	text36
  4985  001C80                     __ptext36:
  4986                           	opt callstack 0
  4987  001C80                     ___aomod:
  4988                           	opt callstack 22
  4989  001C80  0E00               	movlw	0
  4990  001C82  6E16               	movwf	___aomod@sign^0,c
  4991  001C84  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  4992  001C86  EF49  F00E         	goto	u1790
  4993  001C8A  EF47  F00E         	goto	u1791
  4994  001C8E                     u1791:
  4995  001C8E  EF5B  F00E         	goto	l2742
  4996  001C92                     u1790:
  4997  001C92  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  4998  001C94  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  4999  001C96  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  5000  001C98  1E09               	comf	(___aomod@dividend+4)^0,f,c
  5001  001C9A  1E08               	comf	(___aomod@dividend+3)^0,f,c
  5002  001C9C  1E07               	comf	(___aomod@dividend+2)^0,f,c
  5003  001C9E  1E06               	comf	(___aomod@dividend+1)^0,f,c
  5004  001CA0  6C05               	negf	___aomod@dividend^0,c
  5005  001CA2  0E00               	movlw	0
  5006  001CA4  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  5007  001CA6  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  5008  001CA8  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  5009  001CAA  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  5010  001CAC  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  5011  001CAE  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  5012  001CB0  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  5013  001CB2  0E01               	movlw	1
  5014  001CB4  6E16               	movwf	___aomod@sign^0,c
  5015  001CB6                     l2742:
  5016  001CB6  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  5017  001CB8  EF62  F00E         	goto	u1800
  5018  001CBC  EF60  F00E         	goto	u1801
  5019  001CC0                     u1801:
  5020  001CC0  EF72  F00E         	goto	l2746
  5021  001CC4                     u1800:
  5022  001CC4  1E14               	comf	(___aomod@divisor+7)^0,f,c
  5023  001CC6  1E13               	comf	(___aomod@divisor+6)^0,f,c
  5024  001CC8  1E12               	comf	(___aomod@divisor+5)^0,f,c
  5025  001CCA  1E11               	comf	(___aomod@divisor+4)^0,f,c
  5026  001CCC  1E10               	comf	(___aomod@divisor+3)^0,f,c
  5027  001CCE  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  5028  001CD0  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  5029  001CD2  6C0D               	negf	___aomod@divisor^0,c
  5030  001CD4  0E00               	movlw	0
  5031  001CD6  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  5032  001CD8  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  5033  001CDA  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  5034  001CDC  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  5035  001CDE  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  5036  001CE0  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  5037  001CE2  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  5038  001CE4                     l2746:
  5039  001CE4  500D               	movf	___aomod@divisor^0,w,c
  5040  001CE6  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  5041  001CE8  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  5042  001CEA  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  5043  001CEC  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  5044  001CEE  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  5045  001CF0  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  5046  001CF2  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  5047  001CF4  B4D8               	btfsc	status,2,c
  5048  001CF6  EF7F  F00E         	goto	u1811
  5049  001CFA  EF81  F00E         	goto	u1810
  5050  001CFE                     u1811:
  5051  001CFE  EFC9  F00E         	goto	l2762
  5052  001D02                     u1810:
  5053  001D02  0E01               	movlw	1
  5054  001D04  6E15               	movwf	___aomod@counter^0,c
  5055  001D06  EF8F  F00E         	goto	l2752
  5056  001D0A                     l2750:
  5057  001D0A  90D8               	bcf	status,0,c
  5058  001D0C  360D               	rlcf	___aomod@divisor^0,f,c
  5059  001D0E  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  5060  001D10  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  5061  001D12  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  5062  001D14  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  5063  001D16  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  5064  001D18  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  5065  001D1A  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  5066  001D1C  2A15               	incf	___aomod@counter^0,f,c
  5067  001D1E                     l2752:
  5068  001D1E  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  5069  001D20  EF94  F00E         	goto	u1821
  5070  001D24  EF96  F00E         	goto	u1820
  5071  001D28                     u1821:
  5072  001D28  EF85  F00E         	goto	l2750
  5073  001D2C                     u1820:
  5074  001D2C                     l2754:
  5075  001D2C  500D               	movf	___aomod@divisor^0,w,c
  5076  001D2E  5C05               	subwf	___aomod@dividend^0,w,c
  5077  001D30  500E               	movf	(___aomod@divisor+1)^0,w,c
  5078  001D32  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  5079  001D34  500F               	movf	(___aomod@divisor+2)^0,w,c
  5080  001D36  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  5081  001D38  5010               	movf	(___aomod@divisor+3)^0,w,c
  5082  001D3A  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  5083  001D3C  5011               	movf	(___aomod@divisor+4)^0,w,c
  5084  001D3E  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  5085  001D40  5012               	movf	(___aomod@divisor+5)^0,w,c
  5086  001D42  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  5087  001D44  5013               	movf	(___aomod@divisor+6)^0,w,c
  5088  001D46  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  5089  001D48  5014               	movf	(___aomod@divisor+7)^0,w,c
  5090  001D4A  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  5091  001D4C  A0D8               	btfss	status,0,c
  5092  001D4E  EFAB  F00E         	goto	u1831
  5093  001D52  EFAD  F00E         	goto	u1830
  5094  001D56                     u1831:
  5095  001D56  EFBD  F00E         	goto	l2758
  5096  001D5A                     u1830:
  5097  001D5A  500D               	movf	___aomod@divisor^0,w,c
  5098  001D5C  5E05               	subwf	___aomod@dividend^0,f,c
  5099  001D5E  500E               	movf	(___aomod@divisor+1)^0,w,c
  5100  001D60  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  5101  001D62  500F               	movf	(___aomod@divisor+2)^0,w,c
  5102  001D64  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  5103  001D66  5010               	movf	(___aomod@divisor+3)^0,w,c
  5104  001D68  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  5105  001D6A  5011               	movf	(___aomod@divisor+4)^0,w,c
  5106  001D6C  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  5107  001D6E  5012               	movf	(___aomod@divisor+5)^0,w,c
  5108  001D70  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  5109  001D72  5013               	movf	(___aomod@divisor+6)^0,w,c
  5110  001D74  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  5111  001D76  5014               	movf	(___aomod@divisor+7)^0,w,c
  5112  001D78  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  5113  001D7A                     l2758:
  5114  001D7A  90D8               	bcf	status,0,c
  5115  001D7C  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  5116  001D7E  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  5117  001D80  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  5118  001D82  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  5119  001D84  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  5120  001D86  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  5121  001D88  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  5122  001D8A  320D               	rrcf	___aomod@divisor^0,f,c
  5123  001D8C  2E15               	decfsz	___aomod@counter^0,f,c
  5124  001D8E  EF96  F00E         	goto	l2754
  5125  001D92                     l2762:
  5126  001D92  5016               	movf	___aomod@sign^0,w,c
  5127  001D94  B4D8               	btfsc	status,2,c
  5128  001D96  EFCF  F00E         	goto	u1841
  5129  001D9A  EFD1  F00E         	goto	u1840
  5130  001D9E                     u1841:
  5131  001D9E  EFE1  F00E         	goto	l2766
  5132  001DA2                     u1840:
  5133  001DA2  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  5134  001DA4  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  5135  001DA6  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  5136  001DA8  1E09               	comf	(___aomod@dividend+4)^0,f,c
  5137  001DAA  1E08               	comf	(___aomod@dividend+3)^0,f,c
  5138  001DAC  1E07               	comf	(___aomod@dividend+2)^0,f,c
  5139  001DAE  1E06               	comf	(___aomod@dividend+1)^0,f,c
  5140  001DB0  6C05               	negf	___aomod@dividend^0,c
  5141  001DB2  0E00               	movlw	0
  5142  001DB4  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  5143  001DB6  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  5144  001DB8  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  5145  001DBA  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  5146  001DBC  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  5147  001DBE  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  5148  001DC0  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  5149  001DC2                     l2766:
  5150  001DC2  C005  F005         	movff	___aomod@dividend,?___aomod
  5151  001DC6  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  5152  001DCA  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  5153  001DCE  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  5154  001DD2  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  5155  001DD6  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  5156  001DDA  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  5157  001DDE  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  5158  001DE2  0012               	return		;funcret
  5159  001DE4                     __end_of___aomod:
  5160                           	opt callstack 0
  5161                           
  5162 ;; *************** function ___aodiv *****************
  5163 ;; Defined at:
  5164 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  5165 ;; Parameters:    Size  Location     Type
  5166 ;;  dividend        8    4[COMRAM] long long 
  5167 ;;  divisor         8   12[COMRAM] long long 
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;  quotient        8   22[COMRAM] long long 
  5170 ;;  sign            1   21[COMRAM] unsigned char 
  5171 ;;  counter         1   20[COMRAM] unsigned char 
  5172 ;; Return value:  Size  Location     Type
  5173 ;;                  8    4[COMRAM] long long 
  5174 ;; Registers used:
  5175 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5176 ;; Tracked objects:
  5177 ;;		On entry : 0/0
  5178 ;;		On exit  : 0/0
  5179 ;;		Unchanged: 0/0
  5180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5181 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5182 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5184 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5185 ;;Total ram usage:       26 bytes
  5186 ;; Hardware stack levels used:    1
  5187 ;; Hardware stack levels required when called:    4
  5188 ;; This function calls:
  5189 ;;		Nothing
  5190 ;; This function is called by:
  5191 ;;		_dtoa
  5192 ;; This function uses a non-reentrant model
  5193 ;;
  5194                           
  5195                           	psect	text37
  5196  001AF8                     __ptext37:
  5197                           	opt callstack 0
  5198  001AF8                     ___aodiv:
  5199                           	opt callstack 22
  5200  001AF8  0E00               	movlw	0
  5201  001AFA  6E16               	movwf	___aodiv@sign^0,c
  5202  001AFC  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  5203  001AFE  EF85  F00D         	goto	u1720
  5204  001B02  EF83  F00D         	goto	u1721
  5205  001B06                     u1721:
  5206  001B06  EF97  F00D         	goto	l2698
  5207  001B0A                     u1720:
  5208  001B0A  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  5209  001B0C  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  5210  001B0E  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  5211  001B10  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  5212  001B12  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  5213  001B14  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  5214  001B16  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  5215  001B18  6C0D               	negf	___aodiv@divisor^0,c
  5216  001B1A  0E00               	movlw	0
  5217  001B1C  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  5218  001B1E  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  5219  001B20  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  5220  001B22  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  5221  001B24  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  5222  001B26  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  5223  001B28  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  5224  001B2A  0E01               	movlw	1
  5225  001B2C  6E16               	movwf	___aodiv@sign^0,c
  5226  001B2E                     l2698:
  5227  001B2E  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  5228  001B30  EF9E  F00D         	goto	u1730
  5229  001B34  EF9C  F00D         	goto	u1731
  5230  001B38                     u1731:
  5231  001B38  EFB0  F00D         	goto	l2704
  5232  001B3C                     u1730:
  5233  001B3C  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  5234  001B3E  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  5235  001B40  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  5236  001B42  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  5237  001B44  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  5238  001B46  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  5239  001B48  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  5240  001B4A  6C05               	negf	___aodiv@dividend^0,c
  5241  001B4C  0E00               	movlw	0
  5242  001B4E  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  5243  001B50  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  5244  001B52  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  5245  001B54  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  5246  001B56  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  5247  001B58  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  5248  001B5A  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  5249  001B5C  0E01               	movlw	1
  5250  001B5E  1A16               	xorwf	___aodiv@sign^0,f,c
  5251  001B60                     l2704:
  5252  001B60  EE20  F017         	lfsr	2,___aodiv@quotient
  5253  001B64  0E07               	movlw	7
  5254  001B66                     u1741:
  5255  001B66  6ADE               	clrf	postinc2,c
  5256  001B68  06E8               	decf	wreg,f,c
  5257  001B6A  E2FD               	bc	u1741
  5258  001B6C  500D               	movf	___aodiv@divisor^0,w,c
  5259  001B6E  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  5260  001B70  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  5261  001B72  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  5262  001B74  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  5263  001B76  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  5264  001B78  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  5265  001B7A  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  5266  001B7C  B4D8               	btfsc	status,2,c
  5267  001B7E  EFC3  F00D         	goto	u1751
  5268  001B82  EFC5  F00D         	goto	u1750
  5269  001B86                     u1751:
  5270  001B86  EF17  F00E         	goto	l2726
  5271  001B8A                     u1750:
  5272  001B8A  0E01               	movlw	1
  5273  001B8C  6E15               	movwf	___aodiv@counter^0,c
  5274  001B8E  EFD3  F00D         	goto	l2712
  5275  001B92                     l2710:
  5276  001B92  90D8               	bcf	status,0,c
  5277  001B94  360D               	rlcf	___aodiv@divisor^0,f,c
  5278  001B96  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  5279  001B98  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  5280  001B9A  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  5281  001B9C  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  5282  001B9E  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  5283  001BA0  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  5284  001BA2  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  5285  001BA4  2A15               	incf	___aodiv@counter^0,f,c
  5286  001BA6                     l2712:
  5287  001BA6  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  5288  001BA8  EFD8  F00D         	goto	u1761
  5289  001BAC  EFDA  F00D         	goto	u1760
  5290  001BB0                     u1761:
  5291  001BB0  EFC9  F00D         	goto	l2710
  5292  001BB4                     u1760:
  5293  001BB4                     l2714:
  5294  001BB4  90D8               	bcf	status,0,c
  5295  001BB6  3617               	rlcf	___aodiv@quotient^0,f,c
  5296  001BB8  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  5297  001BBA  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  5298  001BBC  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  5299  001BBE  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  5300  001BC0  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  5301  001BC2  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  5302  001BC4  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  5303  001BC6  500D               	movf	___aodiv@divisor^0,w,c
  5304  001BC8  5C05               	subwf	___aodiv@dividend^0,w,c
  5305  001BCA  500E               	movf	(___aodiv@divisor+1)^0,w,c
  5306  001BCC  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  5307  001BCE  500F               	movf	(___aodiv@divisor+2)^0,w,c
  5308  001BD0  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  5309  001BD2  5010               	movf	(___aodiv@divisor+3)^0,w,c
  5310  001BD4  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  5311  001BD6  5011               	movf	(___aodiv@divisor+4)^0,w,c
  5312  001BD8  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  5313  001BDA  5012               	movf	(___aodiv@divisor+5)^0,w,c
  5314  001BDC  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  5315  001BDE  5013               	movf	(___aodiv@divisor+6)^0,w,c
  5316  001BE0  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  5317  001BE2  5014               	movf	(___aodiv@divisor+7)^0,w,c
  5318  001BE4  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  5319  001BE6  A0D8               	btfss	status,0,c
  5320  001BE8  EFF8  F00D         	goto	u1771
  5321  001BEC  EFFA  F00D         	goto	u1770
  5322  001BF0                     u1771:
  5323  001BF0  EF0B  F00E         	goto	l2722
  5324  001BF4                     u1770:
  5325  001BF4  500D               	movf	___aodiv@divisor^0,w,c
  5326  001BF6  5E05               	subwf	___aodiv@dividend^0,f,c
  5327  001BF8  500E               	movf	(___aodiv@divisor+1)^0,w,c
  5328  001BFA  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  5329  001BFC  500F               	movf	(___aodiv@divisor+2)^0,w,c
  5330  001BFE  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  5331  001C00  5010               	movf	(___aodiv@divisor+3)^0,w,c
  5332  001C02  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  5333  001C04  5011               	movf	(___aodiv@divisor+4)^0,w,c
  5334  001C06  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  5335  001C08  5012               	movf	(___aodiv@divisor+5)^0,w,c
  5336  001C0A  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  5337  001C0C  5013               	movf	(___aodiv@divisor+6)^0,w,c
  5338  001C0E  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  5339  001C10  5014               	movf	(___aodiv@divisor+7)^0,w,c
  5340  001C12  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  5341  001C14  8017               	bsf	___aodiv@quotient^0,0,c
  5342  001C16                     l2722:
  5343  001C16  90D8               	bcf	status,0,c
  5344  001C18  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  5345  001C1A  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  5346  001C1C  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  5347  001C1E  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  5348  001C20  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  5349  001C22  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  5350  001C24  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  5351  001C26  320D               	rrcf	___aodiv@divisor^0,f,c
  5352  001C28  2E15               	decfsz	___aodiv@counter^0,f,c
  5353  001C2A  EFDA  F00D         	goto	l2714
  5354  001C2E                     l2726:
  5355  001C2E  5016               	movf	___aodiv@sign^0,w,c
  5356  001C30  B4D8               	btfsc	status,2,c
  5357  001C32  EF1D  F00E         	goto	u1781
  5358  001C36  EF1F  F00E         	goto	u1780
  5359  001C3A                     u1781:
  5360  001C3A  EF2F  F00E         	goto	l2730
  5361  001C3E                     u1780:
  5362  001C3E  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  5363  001C40  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  5364  001C42  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  5365  001C44  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  5366  001C46  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  5367  001C48  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  5368  001C4A  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  5369  001C4C  6C17               	negf	___aodiv@quotient^0,c
  5370  001C4E  0E00               	movlw	0
  5371  001C50  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  5372  001C52  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  5373  001C54  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  5374  001C56  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  5375  001C58  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  5376  001C5A  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  5377  001C5C  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  5378  001C5E                     l2730:
  5379  001C5E  C017  F005         	movff	___aodiv@quotient,?___aodiv
  5380  001C62  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  5381  001C66  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  5382  001C6A  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  5383  001C6E  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  5384  001C72  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  5385  001C76  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  5386  001C7A  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  5387  001C7E  0012               	return		;funcret
  5388  001C80                     __end_of___aodiv:
  5389                           	opt callstack 0
  5390                           
  5391 ;; *************** function _atoi *****************
  5392 ;; Defined at:
  5393 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  5394 ;; Parameters:    Size  Location     Type
  5395 ;;  s               2   11[COMRAM] PTR const unsigned char 
  5396 ;;		 -> STR_3(25), STR_2(14), STR_1(24), 
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;  n               2   24[COMRAM] int 
  5399 ;;  neg             2   17[COMRAM] int 
  5400 ;; Return value:  Size  Location     Type
  5401 ;;                  2   11[COMRAM] int 
  5402 ;; Registers used:
  5403 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5404 ;; Tracked objects:
  5405 ;;		On entry : 0/0
  5406 ;;		On exit  : 0/0
  5407 ;;		Unchanged: 0/0
  5408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5409 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5410 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5411 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5412 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5413 ;;Total ram usage:       15 bytes
  5414 ;; Hardware stack levels used:    1
  5415 ;; Hardware stack levels required when called:    5
  5416 ;; This function calls:
  5417 ;;		___wmul
  5418 ;;		_isdigit
  5419 ;;		_isspace
  5420 ;; This function is called by:
  5421 ;;		_vfpfcnvrt
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           	psect	text38
  5426  00195E                     __ptext38:
  5427                           	opt callstack 0
  5428  00195E                     _atoi:
  5429                           	opt callstack 22
  5430  00195E  0E00               	movlw	0
  5431  001960  6E1A               	movwf	(atoi@n+1)^0,c
  5432  001962  0E00               	movlw	0
  5433  001964  6E19               	movwf	atoi@n^0,c
  5434  001966  0E00               	movlw	0
  5435  001968  6E13               	movwf	(atoi@neg+1)^0,c
  5436  00196A  0E00               	movlw	0
  5437  00196C  6E12               	movwf	atoi@neg^0,c
  5438  00196E  EFBB  F00C         	goto	l2914
  5439  001972                     l2912:
  5440  001972  4A0C               	infsnz	atoi@s^0,f,c
  5441  001974  2A0D               	incf	(atoi@s+1)^0,f,c
  5442  001976                     l2914:
  5443  001976  0E01               	movlw	1
  5444  001978  6E18               	movwf	_atoi$1694^0,c
  5445  00197A  C00C  FFF6         	movff	atoi@s,tblptrl
  5446  00197E  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5447  001982                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5448  001982  6AF8               	clrf	tblptru,c
  5449  001984                     	endif
  5450  001984                     	if	0	;tblptru may be non-zero
  5451  001984                     	endif
  5452  001984  0008               	tblrd		*
  5453  001986  50F5               	movf	tablat,w,c
  5454  001988  0A20               	xorlw	32
  5455  00198A  B4D8               	btfsc	status,2,c
  5456  00198C  EFCA  F00C         	goto	u2191
  5457  001990  EFCC  F00C         	goto	u2190
  5458  001994                     u2191:
  5459  001994  EFEA  F00C         	goto	l2922
  5460  001998                     u2190:
  5461  001998  0EF7               	movlw	247
  5462  00199A  6E0E               	movwf	??_atoi^0,c
  5463  00199C  0EFF               	movlw	255
  5464  00199E  6E0F               	movwf	(??_atoi+1)^0,c
  5465  0019A0  C00C  FFF6         	movff	atoi@s,tblptrl
  5466  0019A4  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5467  0019A8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5468  0019A8  6AF8               	clrf	tblptru,c
  5469  0019AA                     	endif
  5470  0019AA                     	if	0	;tblptru may be non-zero
  5471  0019AA                     	endif
  5472  0019AA  0008               	tblrd		*
  5473  0019AC  50F5               	movf	tablat,w,c
  5474  0019AE  6E10               	movwf	(??_atoi+2)^0,c
  5475  0019B0  6A11               	clrf	(??_atoi+3)^0,c
  5476  0019B2  500E               	movf	??_atoi^0,w,c
  5477  0019B4  2610               	addwf	(??_atoi+2)^0,f,c
  5478  0019B6  500F               	movf	(??_atoi+1)^0,w,c
  5479  0019B8  2211               	addwfc	(??_atoi+3)^0,f,c
  5480  0019BA  5011               	movf	(??_atoi+3)^0,w,c
  5481  0019BC  E109               	bnz	u2200
  5482  0019BE  0E05               	movlw	5
  5483  0019C0  5C10               	subwf	(??_atoi+2)^0,w,c
  5484  0019C2  A0D8               	btfss	status,0,c
  5485  0019C4  EFE6  F00C         	goto	u2201
  5486  0019C8  EFE8  F00C         	goto	u2200
  5487  0019CC                     u2201:
  5488  0019CC  EFEA  F00C         	goto	l2922
  5489  0019D0                     u2200:
  5490  0019D0  0E00               	movlw	0
  5491  0019D2  6E18               	movwf	_atoi$1694^0,c
  5492  0019D4                     l2922:
  5493  0019D4  C018  F014         	movff	_atoi$1694,_atoi$1693
  5494  0019D8  6A15               	clrf	(_atoi$1693+1)^0,c
  5495  0019DA  5014               	movf	_atoi$1693^0,w,c
  5496  0019DC  1015               	iorwf	(_atoi$1693+1)^0,w,c
  5497  0019DE  A4D8               	btfss	status,2,c
  5498  0019E0  EFF4  F00C         	goto	u2211
  5499  0019E4  EFF6  F00C         	goto	u2210
  5500  0019E8                     u2211:
  5501  0019E8  EFB9  F00C         	goto	l2912
  5502  0019EC                     u2210:
  5503  0019EC  EF00  F00D         	goto	l2932
  5504  0019F0                     l2928:
  5505  0019F0  0E00               	movlw	0
  5506  0019F2  6E13               	movwf	(atoi@neg+1)^0,c
  5507  0019F4  0E01               	movlw	1
  5508  0019F6  6E12               	movwf	atoi@neg^0,c
  5509  0019F8                     l2930:
  5510  0019F8  4A0C               	infsnz	atoi@s^0,f,c
  5511  0019FA  2A0D               	incf	(atoi@s+1)^0,f,c
  5512  0019FC  EF37  F00D         	goto	l2938
  5513  001A00                     l2932:
  5514  001A00  C00C  FFF6         	movff	atoi@s,tblptrl
  5515  001A04  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5516  001A08                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5517  001A08  6AF8               	clrf	tblptru,c
  5518  001A0A                     	endif
  5519  001A0A                     	if	0	;tblptru may be non-zero
  5520  001A0A                     	endif
  5521  001A0A  0008               	tblrd		*
  5522  001A0C  50F5               	movf	tablat,w,c
  5523  001A0E  6E0E               	movwf	??_atoi^0,c
  5524  001A10  6A0F               	clrf	(??_atoi+1)^0,c
  5525                           
  5526                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5527                           ; Switch size 1, requested type "simple"
  5528                           ; Number of cases is 1, Range of values is 0 to 0
  5529                           ; switch strategies available:
  5530                           ; Name         Instructions Cycles
  5531                           ; simple_byte            4     3 (average)
  5532                           ;	Chosen strategy is simple_byte
  5533  001A12  500F               	movf	(??_atoi+1)^0,w,c
  5534  001A14  0A00               	xorlw	0	; case 0
  5535  001A16  B4D8               	btfsc	status,2,c
  5536  001A18  EF10  F00D         	goto	l3648
  5537  001A1C  EF37  F00D         	goto	l2938
  5538  001A20                     l3648:
  5539                           
  5540                           ; Switch size 1, requested type "simple"
  5541                           ; Number of cases is 2, Range of values is 43 to 45
  5542                           ; switch strategies available:
  5543                           ; Name         Instructions Cycles
  5544                           ; simple_byte            7     4 (average)
  5545                           ;	Chosen strategy is simple_byte
  5546  001A20  500E               	movf	??_atoi^0,w,c
  5547  001A22  0A2B               	xorlw	43	; case 43
  5548  001A24  B4D8               	btfsc	status,2,c
  5549  001A26  EFFC  F00C         	goto	l2930
  5550  001A2A  0A06               	xorlw	6	; case 45
  5551  001A2C  B4D8               	btfsc	status,2,c
  5552  001A2E  EFF8  F00C         	goto	l2928
  5553  001A32  EF37  F00D         	goto	l2938
  5554  001A36                     l2934:
  5555  001A36  C019  F005         	movff	atoi@n,___wmul@multiplier
  5556  001A3A  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  5557  001A3E  0E00               	movlw	0
  5558  001A40  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  5559  001A42  0E0A               	movlw	10
  5560  001A44  6E07               	movwf	___wmul@multiplicand^0,c
  5561  001A46  EC31  F014         	call	___wmul	;wreg free
  5562  001A4A  C00C  FFF6         	movff	atoi@s,tblptrl
  5563  001A4E  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5564  001A52                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5565  001A52  6AF8               	clrf	tblptru,c
  5566  001A54                     	endif
  5567  001A54                     	if	0	;tblptru may be non-zero
  5568  001A54                     	endif
  5569  001A54  0008               	tblrd		*
  5570  001A56  50F5               	movf	tablat,w,c
  5571  001A58  5E05               	subwf	?___wmul^0,f,c
  5572  001A5A  0E00               	movlw	0
  5573  001A5C  5A06               	subwfb	(?___wmul+1)^0,f,c
  5574  001A5E  0E30               	movlw	48
  5575  001A60  2405               	addwf	?___wmul^0,w,c
  5576  001A62  6E19               	movwf	atoi@n^0,c
  5577  001A64  0E00               	movlw	0
  5578  001A66  2006               	addwfc	(?___wmul+1)^0,w,c
  5579  001A68  6E1A               	movwf	(atoi@n+1)^0,c
  5580  001A6A  EFFC  F00C         	goto	l2930
  5581  001A6E                     l2938:
  5582  001A6E  0ED0               	movlw	208
  5583  001A70  6E0E               	movwf	??_atoi^0,c
  5584  001A72  0EFF               	movlw	255
  5585  001A74  6E0F               	movwf	(??_atoi+1)^0,c
  5586  001A76  C00C  FFF6         	movff	atoi@s,tblptrl
  5587  001A7A  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5588  001A7E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5589  001A7E  6AF8               	clrf	tblptru,c
  5590  001A80                     	endif
  5591  001A80                     	if	0	;tblptru may be non-zero
  5592  001A80                     	endif
  5593  001A80  0008               	tblrd		*
  5594  001A82  50F5               	movf	tablat,w,c
  5595  001A84  6E10               	movwf	(??_atoi+2)^0,c
  5596  001A86  6A11               	clrf	(??_atoi+3)^0,c
  5597  001A88  500E               	movf	??_atoi^0,w,c
  5598  001A8A  2610               	addwf	(??_atoi+2)^0,f,c
  5599  001A8C  500F               	movf	(??_atoi+1)^0,w,c
  5600  001A8E  2211               	addwfc	(??_atoi+3)^0,f,c
  5601  001A90  5011               	movf	(??_atoi+3)^0,w,c
  5602  001A92  E10A               	bnz	u2220
  5603  001A94  0E0A               	movlw	10
  5604  001A96  5C10               	subwf	(??_atoi+2)^0,w,c
  5605  001A98  A0D8               	btfss	status,0,c
  5606  001A9A  EF51  F00D         	goto	u2221
  5607  001A9E  EF54  F00D         	goto	u2220
  5608  001AA2                     u2221:
  5609  001AA2  0E01               	movlw	1
  5610  001AA4  EF55  F00D         	goto	u2230
  5611  001AA8                     u2220:
  5612  001AA8  0E00               	movlw	0
  5613  001AAA                     u2230:
  5614  001AAA  6E16               	movwf	_atoi$1695^0,c
  5615  001AAC  6A17               	clrf	(_atoi$1695+1)^0,c
  5616  001AAE  5016               	movf	_atoi$1695^0,w,c
  5617  001AB0  1017               	iorwf	(_atoi$1695+1)^0,w,c
  5618  001AB2  A4D8               	btfss	status,2,c
  5619  001AB4  EF5E  F00D         	goto	u2241
  5620  001AB8  EF60  F00D         	goto	u2240
  5621  001ABC                     u2241:
  5622  001ABC  EF1B  F00D         	goto	l2934
  5623  001AC0                     u2240:
  5624  001AC0  5012               	movf	atoi@neg^0,w,c
  5625  001AC2  1013               	iorwf	(atoi@neg+1)^0,w,c
  5626  001AC4  A4D8               	btfss	status,2,c
  5627  001AC6  EF67  F00D         	goto	u2251
  5628  001ACA  EF69  F00D         	goto	u2250
  5629  001ACE                     u2251:
  5630  001ACE  EF77  F00D         	goto	l1443
  5631  001AD2                     u2250:
  5632  001AD2  C019  F00E         	movff	atoi@n,??_atoi
  5633  001AD6  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  5634  001ADA  1E0E               	comf	??_atoi^0,f,c
  5635  001ADC  1E0F               	comf	(??_atoi+1)^0,f,c
  5636  001ADE  4A0E               	infsnz	??_atoi^0,f,c
  5637  001AE0  2A0F               	incf	(??_atoi+1)^0,f,c
  5638  001AE2  C00E  F00C         	movff	??_atoi,?_atoi
  5639  001AE6  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  5640  001AEA  EF7B  F00D         	goto	l1446
  5641  001AEE                     l1443:
  5642  001AEE  C019  F00C         	movff	atoi@n,?_atoi
  5643  001AF2  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  5644  001AF6                     l1446:
  5645  001AF6  0012               	return		;funcret
  5646  001AF8                     __end_of_atoi:
  5647                           	opt callstack 0
  5648                           
  5649 ;; *************** function _isspace *****************
  5650 ;; Defined at:
  5651 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  5652 ;; Parameters:    Size  Location     Type
  5653 ;;  c               2    4[COMRAM] int 
  5654 ;; Auto vars:     Size  Location     Type
  5655 ;;		None
  5656 ;; Return value:  Size  Location     Type
  5657 ;;                  2    4[COMRAM] int 
  5658 ;; Registers used:
  5659 ;;		wreg, status,2, status,0
  5660 ;; Tracked objects:
  5661 ;;		On entry : 0/0
  5662 ;;		On exit  : 0/0
  5663 ;;		Unchanged: 0/0
  5664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5665 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5666 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5667 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5668 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5669 ;;Total ram usage:        7 bytes
  5670 ;; Hardware stack levels used:    1
  5671 ;; Hardware stack levels required when called:    4
  5672 ;; This function calls:
  5673 ;;		Nothing
  5674 ;; This function is called by:
  5675 ;;		_atoi
  5676 ;; This function uses a non-reentrant model
  5677 ;;
  5678                           
  5679                           	psect	text39
  5680  002524                     __ptext39:
  5681                           	opt callstack 0
  5682  002524                     _isspace:
  5683                           	opt callstack 22
  5684  002524  0E01               	movlw	1
  5685  002526  6E0B               	movwf	_isspace$1720^0,c
  5686  002528  0E20               	movlw	32
  5687  00252A  1805               	xorwf	isspace@c^0,w,c
  5688  00252C  1006               	iorwf	(isspace@c+1)^0,w,c
  5689  00252E  B4D8               	btfsc	status,2,c
  5690  002530  EF9C  F012         	goto	u1851
  5691  002534  EF9E  F012         	goto	u1850
  5692  002538                     u1851:
  5693  002538  EFB7  F012         	goto	l2778
  5694  00253C                     u1850:
  5695  00253C  0EF7               	movlw	247
  5696  00253E  6E07               	movwf	??_isspace^0,c
  5697  002540  0EFF               	movlw	255
  5698  002542  6E08               	movwf	(??_isspace+1)^0,c
  5699  002544  C005  F009         	movff	isspace@c,??_isspace+2
  5700  002548  C006  F00A         	movff	isspace@c+1,??_isspace+3
  5701  00254C  5007               	movf	??_isspace^0,w,c
  5702  00254E  2609               	addwf	(??_isspace+2)^0,f,c
  5703  002550  5008               	movf	(??_isspace+1)^0,w,c
  5704  002552  220A               	addwfc	(??_isspace+3)^0,f,c
  5705  002554  500A               	movf	(??_isspace+3)^0,w,c
  5706  002556  E109               	bnz	u1860
  5707  002558  0E05               	movlw	5
  5708  00255A  5C09               	subwf	(??_isspace+2)^0,w,c
  5709  00255C  A0D8               	btfss	status,0,c
  5710  00255E  EFB3  F012         	goto	u1861
  5711  002562  EFB5  F012         	goto	u1860
  5712  002566                     u1861:
  5713  002566  EFB7  F012         	goto	l2778
  5714  00256A                     u1860:
  5715  00256A  0E00               	movlw	0
  5716  00256C  6E0B               	movwf	_isspace$1720^0,c
  5717  00256E                     l2778:
  5718  00256E  C00B  F005         	movff	_isspace$1720,?_isspace
  5719  002572  6A06               	clrf	(?_isspace+1)^0,c
  5720  002574  0012               	return		;funcret
  5721  002576                     __end_of_isspace:
  5722                           	opt callstack 0
  5723                           
  5724 ;; *************** function _isdigit *****************
  5725 ;; Defined at:
  5726 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  5727 ;; Parameters:    Size  Location     Type
  5728 ;;  c               2    4[COMRAM] int 
  5729 ;; Auto vars:     Size  Location     Type
  5730 ;;		None
  5731 ;; Return value:  Size  Location     Type
  5732 ;;                  2    4[COMRAM] int 
  5733 ;; Registers used:
  5734 ;;		wreg, status,2, status,0
  5735 ;; Tracked objects:
  5736 ;;		On entry : 0/0
  5737 ;;		On exit  : 0/0
  5738 ;;		Unchanged: 0/0
  5739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5740 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5742 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5743 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5744 ;;Total ram usage:        6 bytes
  5745 ;; Hardware stack levels used:    1
  5746 ;; Hardware stack levels required when called:    4
  5747 ;; This function calls:
  5748 ;;		Nothing
  5749 ;; This function is called by:
  5750 ;;		_vfpfcnvrt
  5751 ;;		_atoi
  5752 ;; This function uses a non-reentrant model
  5753 ;;
  5754                           
  5755                           	psect	text40
  5756  002774                     __ptext40:
  5757                           	opt callstack 0
  5758  002774                     _isdigit:
  5759                           	opt callstack 23
  5760  002774  0ED0               	movlw	208
  5761  002776  6E07               	movwf	??_isdigit^0,c
  5762  002778  0EFF               	movlw	255
  5763  00277A  6E08               	movwf	(??_isdigit+1)^0,c
  5764  00277C  C005  F009         	movff	isdigit@c,??_isdigit+2
  5765  002780  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  5766  002784  5007               	movf	??_isdigit^0,w,c
  5767  002786  2609               	addwf	(??_isdigit+2)^0,f,c
  5768  002788  5008               	movf	(??_isdigit+1)^0,w,c
  5769  00278A  220A               	addwfc	(??_isdigit+3)^0,f,c
  5770  00278C  500A               	movf	(??_isdigit+3)^0,w,c
  5771  00278E  E10A               	bnz	u1700
  5772  002790  0E0A               	movlw	10
  5773  002792  5C09               	subwf	(??_isdigit+2)^0,w,c
  5774  002794  A0D8               	btfss	status,0,c
  5775  002796  EFCF  F013         	goto	u1701
  5776  00279A  EFD2  F013         	goto	u1700
  5777  00279E                     u1701:
  5778  00279E  0E01               	movlw	1
  5779  0027A0  EFD3  F013         	goto	u1710
  5780  0027A4                     u1700:
  5781  0027A4  0E00               	movlw	0
  5782  0027A6                     u1710:
  5783  0027A6  6E05               	movwf	?_isdigit^0,c
  5784  0027A8  6A06               	clrf	(?_isdigit+1)^0,c
  5785  0027AA  0012               	return		;funcret
  5786  0027AC                     __end_of_isdigit:
  5787                           	opt callstack 0
  5788                           
  5789 ;; *************** function ___wmul *****************
  5790 ;; Defined at:
  5791 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  5792 ;; Parameters:    Size  Location     Type
  5793 ;;  multiplier      2    4[COMRAM] unsigned int 
  5794 ;;  multiplicand    2    6[COMRAM] unsigned int 
  5795 ;; Auto vars:     Size  Location     Type
  5796 ;;  product         2    8[COMRAM] unsigned int 
  5797 ;; Return value:  Size  Location     Type
  5798 ;;                  2    4[COMRAM] unsigned int 
  5799 ;; Registers used:
  5800 ;;		wreg, status,2, status,0, prodl, prodh
  5801 ;; Tracked objects:
  5802 ;;		On entry : 0/0
  5803 ;;		On exit  : 0/0
  5804 ;;		Unchanged: 0/0
  5805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5806 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5807 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5809 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5810 ;;Total ram usage:        6 bytes
  5811 ;; Hardware stack levels used:    1
  5812 ;; Hardware stack levels required when called:    4
  5813 ;; This function calls:
  5814 ;;		Nothing
  5815 ;; This function is called by:
  5816 ;;		_atoi
  5817 ;; This function uses a non-reentrant model
  5818 ;;
  5819                           
  5820                           	psect	text41
  5821  002862                     __ptext41:
  5822                           	opt callstack 0
  5823  002862                     ___wmul:
  5824                           	opt callstack 22
  5825  002862  5005               	movf	___wmul@multiplier^0,w,c
  5826  002864  0207               	mulwf	___wmul@multiplicand^0,c
  5827  002866  CFF3 F009          	movff	prodl,___wmul@product
  5828  00286A  CFF4 F00A          	movff	prodh,___wmul@product+1
  5829  00286E  5005               	movf	___wmul@multiplier^0,w,c
  5830  002870  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  5831  002872  50F3               	movf	243,w,c
  5832  002874  260A               	addwf	(___wmul@product+1)^0,f,c
  5833  002876  5006               	movf	(___wmul@multiplier+1)^0,w,c
  5834  002878  0207               	mulwf	___wmul@multiplicand^0,c
  5835  00287A  50F3               	movf	243,w,c
  5836  00287C  260A               	addwf	(___wmul@product+1)^0,f,c
  5837  00287E  C009  F005         	movff	___wmul@product,?___wmul
  5838  002882  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  5839  002886  0012               	return		;funcret
  5840  002888                     __end_of___wmul:
  5841                           	opt callstack 0
  5842                           
  5843 ;; *************** function _EUSART1_is_rx_ready *****************
  5844 ;; Defined at:
  5845 ;;		line 137 in file "mcc_generated_files/eusart1.c"
  5846 ;; Parameters:    Size  Location     Type
  5847 ;;		None
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;		None
  5850 ;; Return value:  Size  Location     Type
  5851 ;;                  1    wreg      _Bool 
  5852 ;; Registers used:
  5853 ;;		wreg, status,2
  5854 ;; Tracked objects:
  5855 ;;		On entry : 0/0
  5856 ;;		On exit  : 0/0
  5857 ;;		Unchanged: 0/0
  5858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5863 ;;Total ram usage:        0 bytes
  5864 ;; Hardware stack levels used:    1
  5865 ;; Hardware stack levels required when called:    4
  5866 ;; This function calls:
  5867 ;;		Nothing
  5868 ;; This function is called by:
  5869 ;;		_main
  5870 ;; This function uses a non-reentrant model
  5871 ;;
  5872                           
  5873                           	psect	text42
  5874  0028F0                     __ptext42:
  5875                           	opt callstack 0
  5876  0028F0                     _EUSART1_is_rx_ready:
  5877                           	opt callstack 26
  5878  0028F0                     
  5879                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
  5880  0028F0  0100               	movlb	0	; () banked
  5881  0028F2  51B5               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  5882  0028F4  A4D8               	btfss	status,2,c
  5883  0028F6  EF7F  F014         	goto	u2521
  5884  0028FA  EF82  F014         	goto	u2520
  5885  0028FE                     u2521:
  5886  0028FE  0E01               	movlw	1
  5887  002900  EF83  F014         	goto	u2530
  5888  002904                     u2520:
  5889  002904  0E00               	movlw	0
  5890  002906                     u2530:
  5891  002906                     
  5892                           ; BSR set to: 0
  5893  002906  0012               	return		;funcret
  5894  002908                     __end_of_EUSART1_is_rx_ready:
  5895                           	opt callstack 0
  5896                           
  5897 ;; *************** function _EUSART1_Read *****************
  5898 ;; Defined at:
  5899 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  5900 ;; Parameters:    Size  Location     Type
  5901 ;;		None
  5902 ;; Auto vars:     Size  Location     Type
  5903 ;;  readValue       1    4[COMRAM] unsigned char 
  5904 ;; Return value:  Size  Location     Type
  5905 ;;                  1    wreg      unsigned char 
  5906 ;; Registers used:
  5907 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5908 ;; Tracked objects:
  5909 ;;		On entry : 0/0
  5910 ;;		On exit  : 0/0
  5911 ;;		Unchanged: 0/0
  5912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5914 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5916 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5917 ;;Total ram usage:        1 bytes
  5918 ;; Hardware stack levels used:    1
  5919 ;; Hardware stack levels required when called:    4
  5920 ;; This function calls:
  5921 ;;		Nothing
  5922 ;; This function is called by:
  5923 ;;		_main
  5924 ;; This function uses a non-reentrant model
  5925 ;;
  5926                           
  5927                           	psect	text43
  5928  0024CC                     __ptext43:
  5929                           	opt callstack 0
  5930  0024CC                     _EUSART1_Read:
  5931                           	opt callstack 26
  5932  0024CC                     l3278:
  5933                           
  5934                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  5935  0024CC  0100               	movlb	0	; () banked
  5936  0024CE  51B5               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  5937  0024D0  B4D8               	btfsc	status,2,c
  5938  0024D2  EF6D  F012         	goto	u2541
  5939  0024D6  EF6F  F012         	goto	u2540
  5940  0024DA                     u2541:
  5941  0024DA  EF66  F012         	goto	l3278
  5942  0024DE                     u2540:
  5943  0024DE                     
  5944                           ; BSR set to: 0
  5945                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  5946  0024DE  0E60               	movlw	low _eusart1RxStatusBuffer
  5947  0024E0  25B6               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  5948  0024E2  6ED9               	movwf	fsr2l,c
  5949  0024E4  6ADA               	clrf	fsr2h,c
  5950  0024E6  0E00               	movlw	high _eusart1RxStatusBuffer
  5951  0024E8  22DA               	addwfc	fsr2h,f,c
  5952  0024EA  50DF               	movf	indf2,w,c
  5953  0024EC  6FB4               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  5954                           
  5955                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
  5956  0024EE  0E70               	movlw	low _eusart1RxBuffer
  5957  0024F0  25B6               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  5958  0024F2  6ED9               	movwf	fsr2l,c
  5959  0024F4  6ADA               	clrf	fsr2h,c
  5960  0024F6  0E00               	movlw	high _eusart1RxBuffer
  5961  0024F8  22DA               	addwfc	fsr2h,f,c
  5962  0024FA  50DF               	movf	indf2,w,c
  5963  0024FC  6E05               	movwf	EUSART1_Read@readValue^0,c
  5964  0024FE                     
  5965                           ; BSR set to: 0
  5966  0024FE  2BB6               	incf	_eusart1RxTail& (0+255),f,b	;volatile
  5967  002500                     
  5968                           ; BSR set to: 0
  5969                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  5970  002500  0E0F               	movlw	15
  5971  002502  65B6               	cpfsgt	_eusart1RxTail& (0+255),b	;volatile
  5972  002504  EF86  F012         	goto	u2551
  5973  002508  EF88  F012         	goto	u2550
  5974  00250C                     u2551:
  5975  00250C  EF8A  F012         	goto	l3288
  5976  002510                     u2550:
  5977  002510                     
  5978                           ; BSR set to: 0
  5979                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
  5980  002510  0E00               	movlw	0
  5981  002512  6FB6               	movwf	_eusart1RxTail& (0+255),b	;volatile
  5982  002514                     l3288:
  5983                           
  5984                           ; BSR set to: 0
  5985                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
  5986  002514  010E               	movlb	14	; () banked
  5987  002516  9BC5               	bcf	197,5,b	;volatile
  5988  002518                     
  5989                           ; BSR set to: 14
  5990                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
  5991  002518  0100               	movlb	0	; () banked
  5992  00251A  07B5               	decf	_eusart1RxCount& (0+255),f,b	;volatile
  5993  00251C                     
  5994                           ; BSR set to: 0
  5995                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
  5996  00251C  010E               	movlb	14	; () banked
  5997  00251E  8BC5               	bsf	197,5,b	;volatile
  5998  002520                     
  5999                           ; BSR set to: 14
  6000                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
  6001  002520  5005               	movf	EUSART1_Read@readValue^0,w,c
  6002  002522                     
  6003                           ; BSR set to: 14
  6004  002522  0012               	return		;funcret
  6005  002524                     __end_of_EUSART1_Read:
  6006                           	opt callstack 0
  6007                           
  6008 ;; *************** function _ClearRxBuff *****************
  6009 ;; Defined at:
  6010 ;;		line 89 in file "main.c"
  6011 ;; Parameters:    Size  Location     Type
  6012 ;;		None
  6013 ;; Auto vars:     Size  Location     Type
  6014 ;;  i               2    4[COMRAM] int 
  6015 ;; Return value:  Size  Location     Type
  6016 ;;                  1    wreg      void 
  6017 ;; Registers used:
  6018 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6019 ;; Tracked objects:
  6020 ;;		On entry : 0/0
  6021 ;;		On exit  : 0/0
  6022 ;;		Unchanged: 0/0
  6023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6025 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6027 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6028 ;;Total ram usage:        2 bytes
  6029 ;; Hardware stack levels used:    1
  6030 ;; Hardware stack levels required when called:    4
  6031 ;; This function calls:
  6032 ;;		Nothing
  6033 ;; This function is called by:
  6034 ;;		_main
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           	psect	text44
  6039  002646                     __ptext44:
  6040                           	opt callstack 0
  6041  002646                     _ClearRxBuff:
  6042                           	opt callstack 26
  6043  002646                     
  6044                           ;main.c: 91:     int i = 0;
  6045  002646  0E00               	movlw	0
  6046  002648  6E06               	movwf	(ClearRxBuff@i+1)^0,c
  6047  00264A  0E00               	movlw	0
  6048  00264C  6E05               	movwf	ClearRxBuff@i^0,c
  6049                           
  6050                           ;main.c: 92:     for(i=0; i<50; i++ ){
  6051  00264E  0E00               	movlw	0
  6052  002650  6E06               	movwf	(ClearRxBuff@i+1)^0,c
  6053  002652  0E00               	movlw	0
  6054  002654  6E05               	movwf	ClearRxBuff@i^0,c
  6055  002656                     l3354:
  6056                           
  6057                           ;main.c: 93:         rxData[i] = 0xFF;
  6058  002656  0E20               	movlw	low _rxData
  6059  002658  2405               	addwf	ClearRxBuff@i^0,w,c
  6060  00265A  6ED9               	movwf	fsr2l,c
  6061  00265C  0E01               	movlw	high _rxData
  6062  00265E  2006               	addwfc	(ClearRxBuff@i+1)^0,w,c
  6063  002660  6EDA               	movwf	fsr2h,c
  6064  002662  0EFF               	movlw	255
  6065  002664  6EDF               	movwf	indf2,c
  6066  002666                     
  6067                           ;main.c: 94:     }
  6068  002666  4A05               	infsnz	ClearRxBuff@i^0,f,c
  6069  002668  2A06               	incf	(ClearRxBuff@i+1)^0,f,c
  6070  00266A  BE06               	btfsc	(ClearRxBuff@i+1)^0,7,c
  6071  00266C  EF41  F013         	goto	u2671
  6072  002670  5006               	movf	(ClearRxBuff@i+1)^0,w,c
  6073  002672  E109               	bnz	u2670
  6074  002674  0E32               	movlw	50
  6075  002676  5C05               	subwf	ClearRxBuff@i^0,w,c
  6076  002678  A0D8               	btfss	status,0,c
  6077  00267A  EF41  F013         	goto	u2671
  6078  00267E  EF43  F013         	goto	u2670
  6079  002682                     u2671:
  6080  002682  EF2B  F013         	goto	l3354
  6081  002686                     u2670:
  6082  002686  0012               	return		;funcret
  6083  002688                     __end_of_ClearRxBuff:
  6084                           	opt callstack 0
  6085                           
  6086 ;; *************** function _INTERRUPT_InterruptManager *****************
  6087 ;; Defined at:
  6088 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6089 ;; Parameters:    Size  Location     Type
  6090 ;;		None
  6091 ;; Auto vars:     Size  Location     Type
  6092 ;;		None
  6093 ;; Return value:  Size  Location     Type
  6094 ;;                  1    wreg      void 
  6095 ;; Registers used:
  6096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6097 ;; Tracked objects:
  6098 ;;		On entry : 0/0
  6099 ;;		On exit  : 0/0
  6100 ;;		Unchanged: 0/0
  6101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6104 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6105 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6106 ;;Total ram usage:        4 bytes
  6107 ;; Hardware stack levels used:    1
  6108 ;; Hardware stack levels required when called:    3
  6109 ;; This function calls:
  6110 ;;		Absolute function
  6111 ;;		_EUSART1_Receive_ISR
  6112 ;;		_EUSART1_Transmit_ISR
  6113 ;;		_EUSART2_Receive_ISR
  6114 ;;		_EUSART2_Transmit_ISR
  6115 ;; This function is called by:
  6116 ;;		Interrupt level 2
  6117 ;; This function uses a non-reentrant model
  6118 ;;
  6119                           
  6120                           	psect	intcode
  6121  000008                     __pintcode:
  6122                           	opt callstack 0
  6123  000008                     _INTERRUPT_InterruptManager:
  6124                           	opt callstack 17
  6125                           
  6126                           ;incstack = 0
  6127  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6128  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  6129  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6130  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  6131  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  6132  00001A                     
  6133                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  6134  00001A  ACF2               	btfss	242,6,c	;volatile
  6135  00001C  EF12  F000         	goto	i2u269_41
  6136  000020  EF14  F000         	goto	i2u269_40
  6137  000024                     i2u269_41:
  6138  000024  EF89  F000         	goto	i2l159
  6139  000028                     i2u269_40:
  6140  000028                     
  6141                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
  6142  000028  010E               	movlb	14	; () banked
  6143  00002A  ADC5               	btfss	197,6,b	;volatile
  6144  00002C  EF1A  F000         	goto	i2u270_41
  6145  000030  EF1C  F000         	goto	i2u270_40
  6146  000034                     i2u270_41:
  6147  000034  EF32  F000         	goto	i2l150
  6148  000038                     i2u270_40:
  6149  000038                     
  6150                           ; BSR set to: 14
  6151  000038  ADCD               	btfss	205,6,b	;volatile
  6152  00003A  EF21  F000         	goto	i2u271_41
  6153  00003E  EF23  F000         	goto	i2u271_40
  6154  000042                     i2u271_41:
  6155  000042  EF32  F000         	goto	i2l150
  6156  000046                     i2u271_40:
  6157  000046                     
  6158                           ; BSR set to: 14
  6159                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
  6160  000046  D802               	call	i2u272_48
  6161  000048  EF30  F000         	goto	i2u272_49
  6162  00004C                     i2u272_48:
  6163  00004C  0005               	push	
  6164  00004E  6EFA               	movwf	pclath,c
  6165  000050  0100               	movlb	0	; () banked
  6166  000052  51F7               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
  6167  000054  6EFD               	movwf	tosl,c
  6168  000056  51F8               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
  6169  000058  6EFE               	movwf	tosh,c
  6170  00005A  6AFF               	clrf	tosu,c
  6171  00005C  50FA               	movf	pclath,w,c
  6172  00005E  0012               	return		;indir
  6173  000060                     i2u272_49:
  6174                           
  6175                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  6176  000060  EF89  F000         	goto	i2l159
  6177  000064                     i2l150:
  6178                           
  6179                           ; BSR set to: 14
  6180  000064  AFC5               	btfss	197,7,b	;volatile
  6181  000066  EF37  F000         	goto	i2u273_41
  6182  00006A  EF39  F000         	goto	i2u273_40
  6183  00006E                     i2u273_41:
  6184  00006E  EF4F  F000         	goto	i2l152
  6185  000072                     i2u273_40:
  6186  000072                     
  6187                           ; BSR set to: 14
  6188  000072  AFCD               	btfss	205,7,b	;volatile
  6189  000074  EF3E  F000         	goto	i2u274_41
  6190  000078  EF40  F000         	goto	i2u274_40
  6191  00007C                     i2u274_41:
  6192  00007C  EF4F  F000         	goto	i2l152
  6193  000080                     i2u274_40:
  6194  000080                     
  6195                           ; BSR set to: 14
  6196                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
  6197  000080  D802               	call	i2u275_48
  6198  000082  EF4D  F000         	goto	i2u275_49
  6199  000086                     i2u275_48:
  6200  000086  0005               	push	
  6201  000088  6EFA               	movwf	pclath,c
  6202  00008A  0100               	movlb	0	; () banked
  6203  00008C  51F5               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
  6204  00008E  6EFD               	movwf	tosl,c
  6205  000090  51F6               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
  6206  000092  6EFE               	movwf	tosh,c
  6207  000094  6AFF               	clrf	tosu,c
  6208  000096  50FA               	movf	pclath,w,c
  6209  000098  0012               	return		;indir
  6210  00009A                     i2u275_49:
  6211                           
  6212                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  6213  00009A  EF89  F000         	goto	i2l159
  6214  00009E                     i2l152:
  6215                           
  6216                           ; BSR set to: 14
  6217  00009E  A9C5               	btfss	197,4,b	;volatile
  6218  0000A0  EF54  F000         	goto	i2u276_41
  6219  0000A4  EF56  F000         	goto	i2u276_40
  6220  0000A8                     i2u276_41:
  6221  0000A8  EF6C  F000         	goto	i2l154
  6222  0000AC                     i2u276_40:
  6223  0000AC                     
  6224                           ; BSR set to: 14
  6225  0000AC  A9CD               	btfss	205,4,b	;volatile
  6226  0000AE  EF5B  F000         	goto	i2u277_41
  6227  0000B2  EF5D  F000         	goto	i2u277_40
  6228  0000B6                     i2u277_41:
  6229  0000B6  EF6C  F000         	goto	i2l154
  6230  0000BA                     i2u277_40:
  6231  0000BA                     
  6232                           ; BSR set to: 14
  6233                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_TxDefaultInterruptHandler();
  6234  0000BA  D802               	call	i2u278_48
  6235  0000BC  EF6A  F000         	goto	i2u278_49
  6236  0000C0                     i2u278_48:
  6237  0000C0  0005               	push	
  6238  0000C2  6EFA               	movwf	pclath,c
  6239  0000C4  0100               	movlb	0	; () banked
  6240  0000C6  51F3               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  6241  0000C8  6EFD               	movwf	tosl,c
  6242  0000CA  51F4               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  6243  0000CC  6EFE               	movwf	tosh,c
  6244  0000CE  6AFF               	clrf	tosu,c
  6245  0000D0  50FA               	movf	pclath,w,c
  6246  0000D2  0012               	return		;indir
  6247  0000D4                     i2u278_49:
  6248                           
  6249                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  6250  0000D4  EF89  F000         	goto	i2l159
  6251  0000D8                     i2l154:
  6252                           
  6253                           ; BSR set to: 14
  6254  0000D8  ABC5               	btfss	197,5,b	;volatile
  6255  0000DA  EF71  F000         	goto	i2u279_41
  6256  0000DE  EF73  F000         	goto	i2u279_40
  6257  0000E2                     i2u279_41:
  6258  0000E2  EF89  F000         	goto	i2l153
  6259  0000E6                     i2u279_40:
  6260  0000E6                     
  6261                           ; BSR set to: 14
  6262  0000E6  ABCD               	btfss	205,5,b	;volatile
  6263  0000E8  EF78  F000         	goto	i2u280_41
  6264  0000EC  EF7A  F000         	goto	i2u280_40
  6265  0000F0                     i2u280_41:
  6266  0000F0  EF89  F000         	goto	i2l153
  6267  0000F4                     i2u280_40:
  6268  0000F4                     
  6269                           ; BSR set to: 14
  6270                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART1_RxDefaultInterruptHandler();
  6271  0000F4  D802               	call	i2u281_48
  6272  0000F6  EF87  F000         	goto	i2u281_49
  6273  0000FA                     i2u281_48:
  6274  0000FA  0005               	push	
  6275  0000FC  6EFA               	movwf	pclath,c
  6276  0000FE  0100               	movlb	0	; () banked
  6277  000100  51F1               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  6278  000102  6EFD               	movwf	tosl,c
  6279  000104  51F2               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  6280  000106  6EFE               	movwf	tosh,c
  6281  000108  6AFF               	clrf	tosu,c
  6282  00010A  50FA               	movf	pclath,w,c
  6283  00010C  0012               	return		;indir
  6284  00010E                     i2u281_49:
  6285                           
  6286                           ;mcc_generated_files/interrupt_manager.c: 78:         }
  6287  00010E  EF89  F000         	goto	i2l159
  6288  000112                     i2l153:
  6289  000112                     i2l159:
  6290  000112  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  6291  000116  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  6292  00011A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6293  00011E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6294  000122  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6295  000124  0011               	retfie		f
  6296  000126                     __end_of_INTERRUPT_InterruptManager:
  6297                           	opt callstack 0
  6298                           
  6299 ;; *************** function _EUSART2_Transmit_ISR *****************
  6300 ;; Defined at:
  6301 ;;		line 206 in file "mcc_generated_files/eusart2.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;		None
  6304 ;; Auto vars:     Size  Location     Type
  6305 ;;		None
  6306 ;; Return value:  Size  Location     Type
  6307 ;;                  1    wreg      void 
  6308 ;; Registers used:
  6309 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6310 ;; Tracked objects:
  6311 ;;		On entry : 0/0
  6312 ;;		On exit  : 0/0
  6313 ;;		Unchanged: 0/0
  6314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6319 ;;Total ram usage:        0 bytes
  6320 ;; Hardware stack levels used:    1
  6321 ;; This function calls:
  6322 ;;		Nothing
  6323 ;; This function is called by:
  6324 ;;		_EUSART2_Initialize
  6325 ;;		_INTERRUPT_InterruptManager
  6326 ;; This function uses a non-reentrant model
  6327 ;;
  6328                           
  6329                           	psect	text46
  6330  002576                     __ptext46:
  6331                           	opt callstack 0
  6332  002576                     _EUSART2_Transmit_ISR:
  6333                           	opt callstack 19
  6334  002576                     
  6335                           ;mcc_generated_files/eusart2.c: 210:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
  6336  002576  0E08               	movlw	8
  6337  002578  0100               	movlb	0	; () banked
  6338  00257A  61FA               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
  6339  00257C  EFC2  F012         	goto	i2u244_41
  6340  002580  EFC4  F012         	goto	i2u244_40
  6341  002584                     i2u244_41:
  6342  002584  EFDC  F012         	goto	i2l333
  6343  002588                     i2u244_40:
  6344  002588                     
  6345                           ; BSR set to: 0
  6346                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
  6347  002588  0EA0               	movlw	low _eusart2TxBuffer
  6348  00258A  25BC               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
  6349  00258C  6ED9               	movwf	fsr2l,c
  6350  00258E  6ADA               	clrf	fsr2h,c
  6351  002590  0E00               	movlw	high _eusart2TxBuffer
  6352  002592  22DA               	addwfc	fsr2h,f,c
  6353  002594  50DF               	movf	indf2,w,c
  6354  002596  010E               	movlb	14	; () banked
  6355  002598  6F9A               	movwf	154,b	;volatile
  6356  00259A                     
  6357                           ; BSR set to: 14
  6358  00259A  0100               	movlb	0	; () banked
  6359  00259C  2BBC               	incf	_eusart2TxTail& (0+255),f,b	;volatile
  6360  00259E                     
  6361                           ; BSR set to: 0
  6362                           ;mcc_generated_files/eusart2.c: 213:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
  6363  00259E  0E07               	movlw	7
  6364  0025A0  65BC               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
  6365  0025A2  EFD5  F012         	goto	i2u245_41
  6366  0025A6  EFD7  F012         	goto	i2u245_40
  6367  0025AA                     i2u245_41:
  6368  0025AA  EFD9  F012         	goto	i2l3250
  6369  0025AE                     i2u245_40:
  6370  0025AE                     
  6371                           ; BSR set to: 0
  6372                           ;mcc_generated_files/eusart2.c: 214:         {;mcc_generated_files/eusart2.c: 215:      
      +                                 eusart2TxTail = 0;
  6373  0025AE  0E00               	movlw	0
  6374  0025B0  6FBC               	movwf	_eusart2TxTail& (0+255),b	;volatile
  6375  0025B2                     i2l3250:
  6376                           
  6377                           ; BSR set to: 0
  6378                           ;mcc_generated_files/eusart2.c: 217:         eusart2TxBufferRemaining++;
  6379  0025B2  2BFA               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  6380                           
  6381                           ;mcc_generated_files/eusart2.c: 218:     }
  6382  0025B4  EFDE  F012         	goto	i2l336
  6383  0025B8                     i2l333:
  6384                           
  6385                           ; BSR set to: 0
  6386                           ;mcc_generated_files/eusart2.c: 220:     {;mcc_generated_files/eusart2.c: 221:         P
      +                          IE3bits.TX2IE = 0;
  6387  0025B8  010E               	movlb	14	; () banked
  6388  0025BA  9DC5               	bcf	197,6,b	;volatile
  6389  0025BC                     i2l336:
  6390  0025BC  0012               	return		;funcret
  6391  0025BE                     __end_of_EUSART2_Transmit_ISR:
  6392                           	opt callstack 0
  6393                           
  6394 ;; *************** function _EUSART2_Receive_ISR *****************
  6395 ;; Defined at:
  6396 ;;		line 225 in file "mcc_generated_files/eusart2.c"
  6397 ;; Parameters:    Size  Location     Type
  6398 ;;		None
  6399 ;; Auto vars:     Size  Location     Type
  6400 ;;		None
  6401 ;; Return value:  Size  Location     Type
  6402 ;;                  1    wreg      void 
  6403 ;; Registers used:
  6404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6405 ;; Tracked objects:
  6406 ;;		On entry : 0/0
  6407 ;;		On exit  : 0/0
  6408 ;;		Unchanged: 0/0
  6409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6414 ;;Total ram usage:        0 bytes
  6415 ;; Hardware stack levels used:    1
  6416 ;; Hardware stack levels required when called:    2
  6417 ;; This function calls:
  6418 ;;		Absolute function
  6419 ;;		_EUSART2_DefaultErrorHandler
  6420 ;;		_EUSART2_DefaultFramingErrorHandler
  6421 ;;		_EUSART2_DefaultOverrunErrorHandler
  6422 ;;		_EUSART2_RxDataHandler
  6423 ;; This function is called by:
  6424 ;;		_EUSART2_Initialize
  6425 ;;		_INTERRUPT_InterruptManager
  6426 ;; This function uses a non-reentrant model
  6427 ;;
  6428                           
  6429                           	psect	text47
  6430  001EA6                     __ptext47:
  6431                           	opt callstack 0
  6432  001EA6                     _EUSART2_Receive_ISR:
  6433                           	opt callstack 17
  6434  001EA6                     
  6435                           ;mcc_generated_files/eusart2.c: 228:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
  6436  001EA6  0E90               	movlw	low _eusart2RxStatusBuffer
  6437  001EA8  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  6438  001EAA  6ED9               	movwf	fsr2l,c
  6439  001EAC  6ADA               	clrf	fsr2h,c
  6440  001EAE  0E00               	movlw	high _eusart2RxStatusBuffer
  6441  001EB0  22DA               	addwfc	fsr2h,f,c
  6442  001EB2  0E00               	movlw	0
  6443  001EB4  6EDF               	movwf	indf2,c
  6444  001EB6                     
  6445                           ;mcc_generated_files/eusart2.c: 230:     if(RC2STAbits.FERR){
  6446  001EB6  010E               	movlb	14	; () banked
  6447  001EB8  A59D               	btfss	157,2,b	;volatile
  6448  001EBA  EF61  F00F         	goto	i2u246_41
  6449  001EBE  EF63  F00F         	goto	i2u246_40
  6450  001EC2                     i2u246_41:
  6451  001EC2  EF77  F00F         	goto	i2l3260
  6452  001EC6                     i2u246_40:
  6453  001EC6                     
  6454                           ; BSR set to: 14
  6455                           ;mcc_generated_files/eusart2.c: 231:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
  6456  001EC6  0E90               	movlw	low _eusart2RxStatusBuffer
  6457  001EC8  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  6458  001ECA  6ED9               	movwf	fsr2l,c
  6459  001ECC  6ADA               	clrf	fsr2h,c
  6460  001ECE  0E00               	movlw	high _eusart2RxStatusBuffer
  6461  001ED0  22DA               	addwfc	fsr2h,f,c
  6462  001ED2  0100               	movlb	0	; () banked
  6463  001ED4  82DF               	bsf	indf2,1,c
  6464  001ED6                     
  6465                           ; BSR set to: 0
  6466                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_FramingErrorHandler();
  6467  001ED6  D802               	call	i2u247_48
  6468  001ED8  EF77  F00F         	goto	i2u247_49
  6469  001EDC                     i2u247_48:
  6470  001EDC  0005               	push	
  6471  001EDE  6EFA               	movwf	pclath,c
  6472  001EE0  51EF               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
  6473  001EE2  6EFD               	movwf	tosl,c
  6474  001EE4  51F0               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
  6475  001EE6  6EFE               	movwf	tosh,c
  6476  001EE8  6AFF               	clrf	tosu,c
  6477  001EEA  50FA               	movf	pclath,w,c
  6478  001EEC  0012               	return		;indir
  6479  001EEE                     i2u247_49:
  6480  001EEE                     i2l3260:
  6481                           
  6482                           ;mcc_generated_files/eusart2.c: 235:     if(RC2STAbits.OERR){
  6483  001EEE  010E               	movlb	14	; () banked
  6484  001EF0  A39D               	btfss	157,1,b	;volatile
  6485  001EF2  EF7D  F00F         	goto	i2u248_41
  6486  001EF6  EF7F  F00F         	goto	i2u248_40
  6487  001EFA                     i2u248_41:
  6488  001EFA  EF93  F00F         	goto	i2l3266
  6489  001EFE                     i2u248_40:
  6490  001EFE                     
  6491                           ; BSR set to: 14
  6492                           ;mcc_generated_files/eusart2.c: 236:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
  6493  001EFE  0E90               	movlw	low _eusart2RxStatusBuffer
  6494  001F00  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  6495  001F02  6ED9               	movwf	fsr2l,c
  6496  001F04  6ADA               	clrf	fsr2h,c
  6497  001F06  0E00               	movlw	high _eusart2RxStatusBuffer
  6498  001F08  22DA               	addwfc	fsr2h,f,c
  6499  001F0A  0100               	movlb	0	; () banked
  6500  001F0C  84DF               	bsf	indf2,2,c
  6501  001F0E                     
  6502                           ; BSR set to: 0
  6503                           ;mcc_generated_files/eusart2.c: 237:         EUSART2_OverrunErrorHandler();
  6504  001F0E  D802               	call	i2u249_48
  6505  001F10  EF93  F00F         	goto	i2u249_49
  6506  001F14                     i2u249_48:
  6507  001F14  0005               	push	
  6508  001F16  6EFA               	movwf	pclath,c
  6509  001F18  51ED               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
  6510  001F1A  6EFD               	movwf	tosl,c
  6511  001F1C  51EE               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
  6512  001F1E  6EFE               	movwf	tosh,c
  6513  001F20  6AFF               	clrf	tosu,c
  6514  001F22  50FA               	movf	pclath,w,c
  6515  001F24  0012               	return		;indir
  6516  001F26                     i2u249_49:
  6517  001F26                     i2l3266:
  6518                           
  6519                           ;mcc_generated_files/eusart2.c: 240:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
  6520  001F26  0E90               	movlw	low _eusart2RxStatusBuffer
  6521  001F28  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  6522  001F2A  6ED9               	movwf	fsr2l,c
  6523  001F2C  6ADA               	clrf	fsr2h,c
  6524  001F2E  0E00               	movlw	high _eusart2RxStatusBuffer
  6525  001F30  22DA               	addwfc	fsr2h,f,c
  6526  001F32  50DF               	movf	indf2,w,c
  6527  001F34  B4D8               	btfsc	status,2,c
  6528  001F36  EF9F  F00F         	goto	i2u250_41
  6529  001F3A  EFA1  F00F         	goto	i2u250_40
  6530  001F3E                     i2u250_41:
  6531  001F3E  EFB0  F00F         	goto	i2l3270
  6532  001F42                     i2u250_40:
  6533  001F42                     
  6534                           ;mcc_generated_files/eusart2.c: 241:         EUSART2_ErrorHandler();
  6535  001F42  D802               	call	i2u251_48
  6536  001F44  EFAE  F00F         	goto	i2u251_49
  6537  001F48                     i2u251_48:
  6538  001F48  0005               	push	
  6539  001F4A  6EFA               	movwf	pclath,c
  6540  001F4C  0100               	movlb	0	; () banked
  6541  001F4E  51EB               	movf	_EUSART2_ErrorHandler& (0+255),w,b
  6542  001F50  6EFD               	movwf	tosl,c
  6543  001F52  51EC               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
  6544  001F54  6EFE               	movwf	tosh,c
  6545  001F56  6AFF               	clrf	tosu,c
  6546  001F58  50FA               	movf	pclath,w,c
  6547  001F5A  0012               	return		;indir
  6548  001F5C                     i2u251_49:
  6549                           
  6550                           ;mcc_generated_files/eusart2.c: 242:     } else {
  6551  001F5C  EFB2  F00F         	goto	i2l343
  6552  001F60                     i2l3270:
  6553                           
  6554                           ;mcc_generated_files/eusart2.c: 243:         EUSART2_RxDataHandler();
  6555  001F60  ECF1  F013         	call	_EUSART2_RxDataHandler	;wreg free
  6556  001F64                     i2l343:
  6557  001F64  0012               	return		;funcret
  6558  001F66                     __end_of_EUSART2_Receive_ISR:
  6559                           	opt callstack 0
  6560                           
  6561 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
  6562 ;; Defined at:
  6563 ;;		line 261 in file "mcc_generated_files/eusart2.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;		None
  6566 ;; Auto vars:     Size  Location     Type
  6567 ;;		None
  6568 ;; Return value:  Size  Location     Type
  6569 ;;                  1    wreg      void 
  6570 ;; Registers used:
  6571 ;;		None
  6572 ;; Tracked objects:
  6573 ;;		On entry : 0/0
  6574 ;;		On exit  : 0/0
  6575 ;;		Unchanged: 0/0
  6576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6581 ;;Total ram usage:        0 bytes
  6582 ;; Hardware stack levels used:    1
  6583 ;; This function calls:
  6584 ;;		Nothing
  6585 ;; This function is called by:
  6586 ;;		_EUSART2_Initialize
  6587 ;;		_EUSART2_Receive_ISR
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           
  6591                           	psect	text48
  6592  002976                     __ptext48:
  6593                           	opt callstack 0
  6594  002976                     _EUSART2_DefaultOverrunErrorHandler:
  6595                           	opt callstack 18
  6596  002976                     
  6597                           ;mcc_generated_files/eusart2.c: 264:     RC2STAbits.CREN = 0;
  6598  002976  010E               	movlb	14	; () banked
  6599  002978  999D               	bcf	157,4,b	;volatile
  6600                           
  6601                           ;mcc_generated_files/eusart2.c: 265:     RC2STAbits.CREN = 1;
  6602  00297A  899D               	bsf	157,4,b	;volatile
  6603  00297C                     
  6604                           ; BSR set to: 14
  6605  00297C  0012               	return		;funcret
  6606  00297E                     __end_of_EUSART2_DefaultOverrunErrorHandler:
  6607                           	opt callstack 0
  6608                           
  6609 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
  6610 ;; Defined at:
  6611 ;;		line 259 in file "mcc_generated_files/eusart2.c"
  6612 ;; Parameters:    Size  Location     Type
  6613 ;;		None
  6614 ;; Auto vars:     Size  Location     Type
  6615 ;;		None
  6616 ;; Return value:  Size  Location     Type
  6617 ;;                  1    wreg      void 
  6618 ;; Registers used:
  6619 ;;		None
  6620 ;; Tracked objects:
  6621 ;;		On entry : 0/0
  6622 ;;		On exit  : 0/0
  6623 ;;		Unchanged: 0/0
  6624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6629 ;;Total ram usage:        0 bytes
  6630 ;; Hardware stack levels used:    1
  6631 ;; This function calls:
  6632 ;;		Nothing
  6633 ;; This function is called by:
  6634 ;;		_EUSART2_Initialize
  6635 ;;		_EUSART2_Receive_ISR
  6636 ;; This function uses a non-reentrant model
  6637 ;;
  6638                           
  6639                           	psect	text49
  6640  00299C                     __ptext49:
  6641                           	opt callstack 0
  6642  00299C                     _EUSART2_DefaultFramingErrorHandler:
  6643                           	opt callstack 18
  6644  00299C  0012               	return		;funcret
  6645  00299E                     __end_of_EUSART2_DefaultFramingErrorHandler:
  6646                           	opt callstack 0
  6647                           
  6648 ;; *************** function _EUSART2_DefaultErrorHandler *****************
  6649 ;; Defined at:
  6650 ;;		line 269 in file "mcc_generated_files/eusart2.c"
  6651 ;; Parameters:    Size  Location     Type
  6652 ;;		None
  6653 ;; Auto vars:     Size  Location     Type
  6654 ;;		None
  6655 ;; Return value:  Size  Location     Type
  6656 ;;                  1    wreg      void 
  6657 ;; Registers used:
  6658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6659 ;; Tracked objects:
  6660 ;;		On entry : 0/0
  6661 ;;		On exit  : 0/0
  6662 ;;		Unchanged: 0/0
  6663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6668 ;;Total ram usage:        0 bytes
  6669 ;; Hardware stack levels used:    1
  6670 ;; Hardware stack levels required when called:    1
  6671 ;; This function calls:
  6672 ;;		_EUSART2_RxDataHandler
  6673 ;; This function is called by:
  6674 ;;		_EUSART2_Initialize
  6675 ;;		_EUSART2_Receive_ISR
  6676 ;; This function uses a non-reentrant model
  6677 ;;
  6678                           
  6679                           	psect	text50
  6680  002984                     __ptext50:
  6681                           	opt callstack 0
  6682  002984                     _EUSART2_DefaultErrorHandler:
  6683                           	opt callstack 17
  6684  002984                     
  6685                           ;mcc_generated_files/eusart2.c: 270:     EUSART2_RxDataHandler();
  6686  002984  ECF1  F013         	call	_EUSART2_RxDataHandler	;wreg free
  6687  002988  0012               	return		;funcret
  6688  00298A                     __end_of_EUSART2_DefaultErrorHandler:
  6689                           	opt callstack 0
  6690                           
  6691 ;; *************** function _EUSART2_RxDataHandler *****************
  6692 ;; Defined at:
  6693 ;;		line 249 in file "mcc_generated_files/eusart2.c"
  6694 ;; Parameters:    Size  Location     Type
  6695 ;;		None
  6696 ;; Auto vars:     Size  Location     Type
  6697 ;;		None
  6698 ;; Return value:  Size  Location     Type
  6699 ;;                  1    wreg      void 
  6700 ;; Registers used:
  6701 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6702 ;; Tracked objects:
  6703 ;;		On entry : 0/0
  6704 ;;		On exit  : 0/0
  6705 ;;		Unchanged: 0/0
  6706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6711 ;;Total ram usage:        0 bytes
  6712 ;; Hardware stack levels used:    1
  6713 ;; This function calls:
  6714 ;;		Nothing
  6715 ;; This function is called by:
  6716 ;;		_EUSART2_Receive_ISR
  6717 ;;		_EUSART2_DefaultErrorHandler
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           
  6721                           	psect	text51
  6722  0027E2                     __ptext51:
  6723                           	opt callstack 0
  6724  0027E2                     _EUSART2_RxDataHandler:
  6725                           	opt callstack 18
  6726  0027E2                     
  6727                           ;mcc_generated_files/eusart2.c: 251:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
  6728  0027E2  0E98               	movlw	low _eusart2RxBuffer
  6729  0027E4  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  6730  0027E6  6ED9               	movwf	fsr2l,c
  6731  0027E8  6ADA               	clrf	fsr2h,c
  6732  0027EA  0E00               	movlw	high _eusart2RxBuffer
  6733  0027EC  22DA               	addwfc	fsr2h,f,c
  6734  0027EE  CE99 FFDF          	movff	3737,indf2	;volatile
  6735  0027F2  2A5A               	incf	_eusart2RxHead^0,f,c	;volatile
  6736  0027F4                     
  6737                           ;mcc_generated_files/eusart2.c: 252:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
  6738  0027F4  0E07               	movlw	7
  6739  0027F6  645A               	cpfsgt	_eusart2RxHead^0,c	;volatile
  6740  0027F8  EF00  F014         	goto	i2u239_41
  6741  0027FC  EF02  F014         	goto	i2u239_40
  6742  002800                     i2u239_41:
  6743  002800  EF04  F014         	goto	i2l3086
  6744  002804                     i2u239_40:
  6745  002804                     
  6746                           ;mcc_generated_files/eusart2.c: 253:     {;mcc_generated_files/eusart2.c: 254:         e
      +                          usart2RxHead = 0;
  6747  002804  0E00               	movlw	0
  6748  002806  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
  6749  002808                     i2l3086:
  6750                           
  6751                           ;mcc_generated_files/eusart2.c: 256:     eusart2RxCount++;
  6752  002808  0100               	movlb	0	; () banked
  6753  00280A  2BBA               	incf	_eusart2RxCount& (0+255),f,b	;volatile
  6754  00280C                     
  6755                           ; BSR set to: 0
  6756  00280C  0012               	return		;funcret
  6757  00280E                     __end_of_EUSART2_RxDataHandler:
  6758                           	opt callstack 0
  6759                           
  6760 ;; *************** function _EUSART1_Transmit_ISR *****************
  6761 ;; Defined at:
  6762 ;;		line 197 in file "mcc_generated_files/eusart1.c"
  6763 ;; Parameters:    Size  Location     Type
  6764 ;;		None
  6765 ;; Auto vars:     Size  Location     Type
  6766 ;;		None
  6767 ;; Return value:  Size  Location     Type
  6768 ;;                  1    wreg      void 
  6769 ;; Registers used:
  6770 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6771 ;; Tracked objects:
  6772 ;;		On entry : 0/0
  6773 ;;		On exit  : 0/0
  6774 ;;		Unchanged: 0/0
  6775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6780 ;;Total ram usage:        0 bytes
  6781 ;; Hardware stack levels used:    1
  6782 ;; This function calls:
  6783 ;;		Nothing
  6784 ;; This function is called by:
  6785 ;;		_EUSART1_Initialize
  6786 ;;		_INTERRUPT_InterruptManager
  6787 ;; This function uses a non-reentrant model
  6788 ;;
  6789                           
  6790                           	psect	text52
  6791  002602                     __ptext52:
  6792                           	opt callstack 0
  6793  002602                     _EUSART1_Transmit_ISR:
  6794                           	opt callstack 19
  6795  002602                     
  6796                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  6797  002602  0E10               	movlw	16
  6798  002604  0100               	movlb	0	; () banked
  6799  002606  61F9               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
  6800  002608  EF08  F013         	goto	i2u259_41
  6801  00260C  EF0A  F013         	goto	i2u259_40
  6802  002610                     i2u259_41:
  6803  002610  EF20  F013         	goto	i2l477
  6804  002614                     i2u259_40:
  6805  002614                     
  6806                           ; BSR set to: 0
  6807                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
  6808  002614  0E80               	movlw	low _eusart1TxBuffer
  6809  002616  25B7               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
  6810  002618  6ED9               	movwf	fsr2l,c
  6811  00261A  6ADA               	clrf	fsr2h,c
  6812  00261C  0E00               	movlw	high _eusart1TxBuffer
  6813  00261E  22DA               	addwfc	fsr2h,f,c
  6814  002620  50DF               	movf	indf2,w,c
  6815  002622  6E9A               	movwf	154,c	;volatile
  6816  002624                     
  6817                           ; BSR set to: 0
  6818  002624  2BB7               	incf	_eusart1TxTail& (0+255),f,b	;volatile
  6819  002626                     
  6820                           ; BSR set to: 0
  6821                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  6822  002626  0E0F               	movlw	15
  6823  002628  65B7               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
  6824  00262A  EF19  F013         	goto	i2u260_41
  6825  00262E  EF1B  F013         	goto	i2u260_40
  6826  002632                     i2u260_41:
  6827  002632  EF1D  F013         	goto	i2l3326
  6828  002636                     i2u260_40:
  6829  002636                     
  6830                           ; BSR set to: 0
  6831                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
  6832  002636  0E00               	movlw	0
  6833  002638  6FB7               	movwf	_eusart1TxTail& (0+255),b	;volatile
  6834  00263A                     i2l3326:
  6835                           
  6836                           ; BSR set to: 0
  6837                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
  6838  00263A  2BF9               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  6839                           
  6840                           ;mcc_generated_files/eusart1.c: 209:     }
  6841  00263C  EF22  F013         	goto	i2l480
  6842  002640                     i2l477:
  6843                           
  6844                           ; BSR set to: 0
  6845                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
  6846  002640  010E               	movlb	14	; () banked
  6847  002642  99C5               	bcf	197,4,b	;volatile
  6848  002644                     i2l480:
  6849  002644  0012               	return		;funcret
  6850  002646                     __end_of_EUSART1_Transmit_ISR:
  6851                           	opt callstack 0
  6852                           
  6853 ;; *************** function _EUSART1_Receive_ISR *****************
  6854 ;; Defined at:
  6855 ;;		line 216 in file "mcc_generated_files/eusart1.c"
  6856 ;; Parameters:    Size  Location     Type
  6857 ;;		None
  6858 ;; Auto vars:     Size  Location     Type
  6859 ;;		None
  6860 ;; Return value:  Size  Location     Type
  6861 ;;                  1    wreg      void 
  6862 ;; Registers used:
  6863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6864 ;; Tracked objects:
  6865 ;;		On entry : 0/0
  6866 ;;		On exit  : 0/0
  6867 ;;		Unchanged: 0/0
  6868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6873 ;;Total ram usage:        0 bytes
  6874 ;; Hardware stack levels used:    1
  6875 ;; Hardware stack levels required when called:    2
  6876 ;; This function calls:
  6877 ;;		Absolute function
  6878 ;;		_EUSART1_DefaultErrorHandler
  6879 ;;		_EUSART1_DefaultFramingErrorHandler
  6880 ;;		_EUSART1_DefaultOverrunErrorHandler
  6881 ;;		_EUSART1_RxDataHandler
  6882 ;; This function is called by:
  6883 ;;		_EUSART1_Initialize
  6884 ;;		_INTERRUPT_InterruptManager
  6885 ;; This function uses a non-reentrant model
  6886 ;;
  6887                           
  6888                           	psect	text53
  6889  001F66                     __ptext53:
  6890                           	opt callstack 0
  6891  001F66                     _EUSART1_Receive_ISR:
  6892                           	opt callstack 17
  6893  001F66                     
  6894                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  6895  001F66  0E60               	movlw	low _eusart1RxStatusBuffer
  6896  001F68  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  6897  001F6A  6ED9               	movwf	fsr2l,c
  6898  001F6C  6ADA               	clrf	fsr2h,c
  6899  001F6E  0E00               	movlw	high _eusart1RxStatusBuffer
  6900  001F70  22DA               	addwfc	fsr2h,f,c
  6901  001F72  0E00               	movlw	0
  6902  001F74  6EDF               	movwf	indf2,c
  6903  001F76                     
  6904                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
  6905  001F76  A49D               	btfss	157,2,c	;volatile
  6906  001F78  EFC0  F00F         	goto	i2u261_41
  6907  001F7C  EFC2  F00F         	goto	i2u261_40
  6908  001F80                     i2u261_41:
  6909  001F80  EFD6  F00F         	goto	i2l3336
  6910  001F84                     i2u261_40:
  6911  001F84                     
  6912                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  6913  001F84  0E60               	movlw	low _eusart1RxStatusBuffer
  6914  001F86  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  6915  001F88  6ED9               	movwf	fsr2l,c
  6916  001F8A  6ADA               	clrf	fsr2h,c
  6917  001F8C  0E00               	movlw	high _eusart1RxStatusBuffer
  6918  001F8E  22DA               	addwfc	fsr2h,f,c
  6919  001F90  0100               	movlb	0	; () banked
  6920  001F92  82DF               	bsf	indf2,1,c
  6921  001F94                     
  6922                           ; BSR set to: 0
  6923                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
  6924  001F94  D802               	call	i2u262_48
  6925  001F96  EFD6  F00F         	goto	i2u262_49
  6926  001F9A                     i2u262_48:
  6927  001F9A  0005               	push	
  6928  001F9C  6EFA               	movwf	pclath,c
  6929  001F9E  51E9               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  6930  001FA0  6EFD               	movwf	tosl,c
  6931  001FA2  51EA               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  6932  001FA4  6EFE               	movwf	tosh,c
  6933  001FA6  6AFF               	clrf	tosu,c
  6934  001FA8  50FA               	movf	pclath,w,c
  6935  001FAA  0012               	return		;indir
  6936  001FAC                     i2u262_49:
  6937  001FAC                     i2l3336:
  6938                           
  6939                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
  6940  001FAC  A29D               	btfss	157,1,c	;volatile
  6941  001FAE  EFDB  F00F         	goto	i2u263_41
  6942  001FB2  EFDD  F00F         	goto	i2u263_40
  6943  001FB6                     i2u263_41:
  6944  001FB6  EFF1  F00F         	goto	i2l3342
  6945  001FBA                     i2u263_40:
  6946  001FBA                     
  6947                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  6948  001FBA  0E60               	movlw	low _eusart1RxStatusBuffer
  6949  001FBC  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  6950  001FBE  6ED9               	movwf	fsr2l,c
  6951  001FC0  6ADA               	clrf	fsr2h,c
  6952  001FC2  0E00               	movlw	high _eusart1RxStatusBuffer
  6953  001FC4  22DA               	addwfc	fsr2h,f,c
  6954  001FC6  0100               	movlb	0	; () banked
  6955  001FC8  84DF               	bsf	indf2,2,c
  6956  001FCA                     
  6957                           ; BSR set to: 0
  6958                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
  6959  001FCA  D802               	call	i2u264_48
  6960  001FCC  EFF1  F00F         	goto	i2u264_49
  6961  001FD0                     i2u264_48:
  6962  001FD0  0005               	push	
  6963  001FD2  6EFA               	movwf	pclath,c
  6964  001FD4  51E7               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  6965  001FD6  6EFD               	movwf	tosl,c
  6966  001FD8  51E8               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  6967  001FDA  6EFE               	movwf	tosh,c
  6968  001FDC  6AFF               	clrf	tosu,c
  6969  001FDE  50FA               	movf	pclath,w,c
  6970  001FE0  0012               	return		;indir
  6971  001FE2                     i2u264_49:
  6972  001FE2                     i2l3342:
  6973                           
  6974                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  6975  001FE2  0E60               	movlw	low _eusart1RxStatusBuffer
  6976  001FE4  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  6977  001FE6  6ED9               	movwf	fsr2l,c
  6978  001FE8  6ADA               	clrf	fsr2h,c
  6979  001FEA  0E00               	movlw	high _eusart1RxStatusBuffer
  6980  001FEC  22DA               	addwfc	fsr2h,f,c
  6981  001FEE  50DF               	movf	indf2,w,c
  6982  001FF0  B4D8               	btfsc	status,2,c
  6983  001FF2  EFFD  F00F         	goto	i2u265_41
  6984  001FF6  EFFF  F00F         	goto	i2u265_40
  6985  001FFA                     i2u265_41:
  6986  001FFA  EF0E  F010         	goto	i2l3346
  6987  001FFE                     i2u265_40:
  6988  001FFE                     
  6989                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
  6990  001FFE  D802               	call	i2u266_48
  6991  002000  EF0C  F010         	goto	i2u266_49
  6992  002004                     i2u266_48:
  6993  002004  0005               	push	
  6994  002006  6EFA               	movwf	pclath,c
  6995  002008  0100               	movlb	0	; () banked
  6996  00200A  51E5               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  6997  00200C  6EFD               	movwf	tosl,c
  6998  00200E  51E6               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  6999  002010  6EFE               	movwf	tosh,c
  7000  002012  6AFF               	clrf	tosu,c
  7001  002014  50FA               	movf	pclath,w,c
  7002  002016  0012               	return		;indir
  7003  002018                     i2u266_49:
  7004                           
  7005                           ;mcc_generated_files/eusart1.c: 233:     } else {
  7006  002018  EF10  F010         	goto	i2l487
  7007  00201C                     i2l3346:
  7008                           
  7009                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
  7010  00201C  EC07  F014         	call	_EUSART1_RxDataHandler	;wreg free
  7011  002020                     i2l487:
  7012  002020  0012               	return		;funcret
  7013  002022                     __end_of_EUSART1_Receive_ISR:
  7014                           	opt callstack 0
  7015                           
  7016 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  7017 ;; Defined at:
  7018 ;;		line 252 in file "mcc_generated_files/eusart1.c"
  7019 ;; Parameters:    Size  Location     Type
  7020 ;;		None
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;		None
  7023 ;; Return value:  Size  Location     Type
  7024 ;;                  1    wreg      void 
  7025 ;; Registers used:
  7026 ;;		None
  7027 ;; Tracked objects:
  7028 ;;		On entry : 0/0
  7029 ;;		On exit  : 0/0
  7030 ;;		Unchanged: 0/0
  7031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7036 ;;Total ram usage:        0 bytes
  7037 ;; Hardware stack levels used:    1
  7038 ;; This function calls:
  7039 ;;		Nothing
  7040 ;; This function is called by:
  7041 ;;		_EUSART1_Initialize
  7042 ;;		_EUSART1_Receive_ISR
  7043 ;; This function uses a non-reentrant model
  7044 ;;
  7045                           
  7046                           	psect	text54
  7047  00298A                     __ptext54:
  7048                           	opt callstack 0
  7049  00298A                     _EUSART1_DefaultOverrunErrorHandler:
  7050                           	opt callstack 18
  7051  00298A                     
  7052                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
  7053  00298A  989D               	bcf	157,4,c	;volatile
  7054                           
  7055                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
  7056  00298C  889D               	bsf	157,4,c	;volatile
  7057  00298E  0012               	return		;funcret
  7058  002990                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  7059                           	opt callstack 0
  7060                           
  7061 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  7062 ;; Defined at:
  7063 ;;		line 250 in file "mcc_generated_files/eusart1.c"
  7064 ;; Parameters:    Size  Location     Type
  7065 ;;		None
  7066 ;; Auto vars:     Size  Location     Type
  7067 ;;		None
  7068 ;; Return value:  Size  Location     Type
  7069 ;;                  1    wreg      void 
  7070 ;; Registers used:
  7071 ;;		None
  7072 ;; Tracked objects:
  7073 ;;		On entry : 0/0
  7074 ;;		On exit  : 0/0
  7075 ;;		Unchanged: 0/0
  7076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7081 ;;Total ram usage:        0 bytes
  7082 ;; Hardware stack levels used:    1
  7083 ;; This function calls:
  7084 ;;		Nothing
  7085 ;; This function is called by:
  7086 ;;		_EUSART1_Initialize
  7087 ;;		_EUSART1_Receive_ISR
  7088 ;; This function uses a non-reentrant model
  7089 ;;
  7090                           
  7091                           	psect	text55
  7092  00299E                     __ptext55:
  7093                           	opt callstack 0
  7094  00299E                     _EUSART1_DefaultFramingErrorHandler:
  7095                           	opt callstack 18
  7096  00299E  0012               	return		;funcret
  7097  0029A0                     __end_of_EUSART1_DefaultFramingErrorHandler:
  7098                           	opt callstack 0
  7099                           
  7100 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  7101 ;; Defined at:
  7102 ;;		line 260 in file "mcc_generated_files/eusart1.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;		None
  7105 ;; Auto vars:     Size  Location     Type
  7106 ;;		None
  7107 ;; Return value:  Size  Location     Type
  7108 ;;                  1    wreg      void 
  7109 ;; Registers used:
  7110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7111 ;; Tracked objects:
  7112 ;;		On entry : 0/0
  7113 ;;		On exit  : 0/0
  7114 ;;		Unchanged: 0/0
  7115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7120 ;;Total ram usage:        0 bytes
  7121 ;; Hardware stack levels used:    1
  7122 ;; Hardware stack levels required when called:    1
  7123 ;; This function calls:
  7124 ;;		_EUSART1_RxDataHandler
  7125 ;; This function is called by:
  7126 ;;		_EUSART1_Initialize
  7127 ;;		_EUSART1_Receive_ISR
  7128 ;; This function uses a non-reentrant model
  7129 ;;
  7130                           
  7131                           	psect	text56
  7132  002990                     __ptext56:
  7133                           	opt callstack 0
  7134  002990                     _EUSART1_DefaultErrorHandler:
  7135                           	opt callstack 17
  7136  002990                     
  7137                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
  7138  002990  EC07  F014         	call	_EUSART1_RxDataHandler	;wreg free
  7139  002994  0012               	return		;funcret
  7140  002996                     __end_of_EUSART1_DefaultErrorHandler:
  7141                           	opt callstack 0
  7142                           
  7143 ;; *************** function _EUSART1_RxDataHandler *****************
  7144 ;; Defined at:
  7145 ;;		line 240 in file "mcc_generated_files/eusart1.c"
  7146 ;; Parameters:    Size  Location     Type
  7147 ;;		None
  7148 ;; Auto vars:     Size  Location     Type
  7149 ;;		None
  7150 ;; Return value:  Size  Location     Type
  7151 ;;                  1    wreg      void 
  7152 ;; Registers used:
  7153 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7154 ;; Tracked objects:
  7155 ;;		On entry : 0/0
  7156 ;;		On exit  : 0/0
  7157 ;;		Unchanged: 0/0
  7158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7163 ;;Total ram usage:        0 bytes
  7164 ;; Hardware stack levels used:    1
  7165 ;; This function calls:
  7166 ;;		Nothing
  7167 ;; This function is called by:
  7168 ;;		_EUSART1_Receive_ISR
  7169 ;;		_EUSART1_DefaultErrorHandler
  7170 ;; This function uses a non-reentrant model
  7171 ;;
  7172                           
  7173                           	psect	text57
  7174  00280E                     __ptext57:
  7175                           	opt callstack 0
  7176  00280E                     _EUSART1_RxDataHandler:
  7177                           	opt callstack 18
  7178  00280E                     
  7179                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  7180  00280E  0E70               	movlw	low _eusart1RxBuffer
  7181  002810  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  7182  002812  6ED9               	movwf	fsr2l,c
  7183  002814  6ADA               	clrf	fsr2h,c
  7184  002816  0E00               	movlw	high _eusart1RxBuffer
  7185  002818  22DA               	addwfc	fsr2h,f,c
  7186  00281A  CF99 FFDF          	movff	3993,indf2	;volatile
  7187  00281E  2A59               	incf	_eusart1RxHead^0,f,c	;volatile
  7188  002820                     
  7189                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  7190  002820  0E0F               	movlw	15
  7191  002822  6459               	cpfsgt	_eusart1RxHead^0,c	;volatile
  7192  002824  EF16  F014         	goto	i2u240_41
  7193  002828  EF18  F014         	goto	i2u240_40
  7194  00282C                     i2u240_41:
  7195  00282C  EF1A  F014         	goto	i2l3106
  7196  002830                     i2u240_40:
  7197  002830                     
  7198                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
  7199  002830  0E00               	movlw	0
  7200  002832  6E59               	movwf	_eusart1RxHead^0,c	;volatile
  7201  002834                     i2l3106:
  7202                           
  7203                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
  7204  002834  0100               	movlb	0	; () banked
  7205  002836  2BB5               	incf	_eusart1RxCount& (0+255),f,b	;volatile
  7206  002838                     
  7207                           ; BSR set to: 0
  7208  002838  0012               	return		;funcret
  7209  00283A                     __end_of_EUSART1_RxDataHandler:
  7210                           	opt callstack 0
  7211                           
  7212                           	psect	text58
  7213  000000                     __ptext58:
  7214                           	opt callstack 0
  7215  000000                     
  7216                           	psect	rparam
  7217  0000                     
  7218                           	psect	temp
  7219  00005B                     btemp:
  7220                           	opt callstack 0
  7221  00005B                     	ds	1
  7222  0000                     int$flags	set	btemp
  7223  0000                     wtemp8	set	btemp+1
  7224  0000                     ttemp5	set	btemp+1
  7225  0000                     ttemp6	set	btemp+4
  7226  0000                     ttemp7	set	btemp+8
  7227                           tosu	equ	0xFFF
  7228                           tosh	equ	0xFFE
  7229                           tosl	equ	0xFFD
  7230                           stkptr	equ	0xFFC
  7231                           pclatu	equ	0xFFB
  7232                           pclath	equ	0xFFA
  7233                           pcl	equ	0xFF9
  7234                           tblptru	equ	0xFF8
  7235                           tblptrh	equ	0xFF7
  7236                           tblptrl	equ	0xFF6
  7237                           tablat	equ	0xFF5
  7238                           prodh	equ	0xFF4
  7239                           prodl	equ	0xFF3
  7240                           indf0	equ	0xFEF
  7241                           postinc0	equ	0xFEE
  7242                           postdec0	equ	0xFED
  7243                           preinc0	equ	0xFEC
  7244                           plusw0	equ	0xFEB
  7245                           fsr0h	equ	0xFEA
  7246                           fsr0l	equ	0xFE9
  7247                           wreg	equ	0xFE8
  7248                           indf1	equ	0xFE7
  7249                           postinc1	equ	0xFE6
  7250                           postdec1	equ	0xFE5
  7251                           preinc1	equ	0xFE4
  7252                           plusw1	equ	0xFE3
  7253                           fsr1h	equ	0xFE2
  7254                           fsr1l	equ	0xFE1
  7255                           bsr	equ	0xFE0
  7256                           indf2	equ	0xFDF
  7257                           postinc2	equ	0xFDE
  7258                           postdec2	equ	0xFDD
  7259                           preinc2	equ	0xFDC
  7260                           plusw2	equ	0xFDB
  7261                           fsr2h	equ	0xFDA
  7262                           fsr2l	equ	0xFD9
  7263                           status	equ	0xFD8


Data Sizes:
    Strings     63
    Constant    0
    Data        28
    BSS         130
    Persistent  22
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     39     157
    BANK1           256      0      58
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_3(CODE[25]), STR_2(CODE[14]), STR_1(CODE[24]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1733_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_3(CODE[25]), STR_2(CODE[14]), STR_1(CODE[24]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_3(CODE[25]), STR_2(CODE[14]), STR_1(CODE[24]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 25
		 -> STR_3(CODE[25]), STR_2(CODE[14]), STR_1(CODE[24]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_PrintRXBuff
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART2_Write
    _abs->___aomod
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_PrintRXBuff
    _PrintRXBuff->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   28132
                                             85 COMRAM     1     1      0
                        _ClearRxBuff
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                        _PrintRXBuff
                             _RXMode
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     980
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     490
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PrintRXBuff                                          3     3      0   13596
                                             84 COMRAM     1     1      0
                                             37 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   13463
                                             27 BANK0     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   13100
                                             82 COMRAM     2     2      0
                                             21 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   12555
                                             72 COMRAM    10     4      6
                                              0 BANK0     21    21      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    4491
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4586
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2937
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      66
                                              5 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Write                                        1     1      0      44
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1336
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     495
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         1     1      0      24
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ClearRxBuff                                          2     2      0      69
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART2_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearRxBuff
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _PrintRXBuff
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _RXMode
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _fputc
           _putch
             _EUSART2_Write
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     Absolute function(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      3A       8       22.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     27      9D       5       98.1%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     131       6        0.0%
DATA                 0      0     131       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 28 23:42:15 2021

                      _eusart1TxBufferRemaining 00F9                          ?_EUSART2_RxDataHandler 0001  
                                   __CFG_CP$OFF 000000                                              l81 21EE  
                           ___wmul@multiplicand 0007                                     __CFG_LVP$ON 000000  
                                           l121 28D6                                             l124 28EE  
                                           l127 28A2                                             l320 2482  
                                           l144 2998                                             l321 249A  
                                           l330 2974                                             l324 24CA  
                                           l503 2960                                             l512 2942  
                                           l506 2956                                             l362 2924  
                                           l515 294C                                             l371 291A  
                                           l452 2906                                             l509 296A  
                                           l365 2938                                             l446 22E8  
                                           l359 292E                                             l368 2910  
                                           l296 226C                                             l465 2522  
                                           l634 1E28                                             l563 297E  
                                           l572 2686                                             l724 13A6  
                                           l637 1E6A                                             l645 1448  
                                           l709 1038                                             l733 2344  
                                           l565 2980                                             l670 16C0  
                                           l734 234C                                             l639 1EA4  
                                           l647 1450                                             l567 2982  
                                           l672 16C8                                             l737 2886  
                                           l665 1686                                             l577 240E  
                                           l851 1C7E                                             l693 18FA  
                                           l695 195C                                             l679 175E  
                                           l864 1DE2                                    __CFG_CPD$OFF 000000  
        __end_of_EUSART2_SetFramingErrorHandler 2930         __size_of_EUSART2_SetFramingErrorHandler 000A  
                _EUSART2_SetFramingErrorHandler 2926                                             _abs 2688  
                                           _pad 1DE4                         __size_of_PMD_Initialize 001C  
                                           tosl 000FFD                                             wreg 000FE8  
                                  __CFG_ZCD$OFF 000000                                            ?_abs 0017  
                                          l3000 10C0                                            l3002 10E0  
                                          l3010 114A                                            l1412 26BE  
                                          l3020 1216                                            l3012 1170  
                                          l3004 10EE                                            l1510 2464  
                                          l3030 12C4                                            l3022 123C  
                                          l3014 1196                                            l1415 26C6  
                                          l3040 1348                                            l3024 1262  
                                          l3016 11DE                                            l3008 1138  
                                          l3120 219A                                            l1505 27E0  
                                          l1521 273A                                            l3026 127A  
                                          l3034 1300                                            l3050 136E  
                                          l3130 21D0                                            l3122 21C4  
                                          l3210 28C6                                            l1443 1AEE  
                                          l1515 246C                                            l3052 1394  
                                          l3036 1326                                            l3044 1354  
                                          l3028 1288                                            l3132 21D2  
                                          l3124 21C6                                            l3116 2162  
                                          l3140 2888                                            l3212 28CA  
                                          l1446 1AF6                                            l3046 1362  
                                          l3038 1334                                            l3150 228E  
                                          l3070 2908                                            l3142 28D8  
                                          l3134 21D4                                            l3126 21C8  
                                          l3118 218A                                            l3214 28CE  
                                          l3206 28BE                                            l1455 27AA  
                                          l1463 2574                                            l2600 20CC  
                                          l3160 22A2                                            l3152 2292  
                                          l3144 226E                                            l3072 2926  
                                          l3136 21D6                                            l3128 21CA  
                                          l3216 28D2                                            l3208 28C2  
                                          l1449 2702                                            l2610 214E  
                                          l2602 20DE                                            l3090 293A  
                                          l3162 22AE                                            l3154 2296  
                                          l3146 2272                                            l3074 291C  
                                          l3170 21F4                                            l3138 2996  
                                          l2700 1B3C                                            l1484 2160  
                                          l2604 20F0                                            l1492 2600  
                                          l2620 25E0                                            l3092 2958  
                                          l3164 22BA                                            l3156 229A  
                                          l3148 227E                                            l3076 2930  
                                          l3068 2912                                            l3180 221E  
                                          l3172 2200                                            l1469 2772  
                                          l2710 1B92                                            l2702 1B5C  
                                          l2606 20FA                                            l2614 25BE  
                                          l2622 27AC                                            l3094 294E  
                                          l3166 22E4                                            l3158 229E  
                                          l3190 2268                                            l3182 2222  
                                          l3174 2210                                            l3280 24DE  
                                          l3272 28F0                                            l2720 1C14  
                                          l2712 1BA6                                            l2704 1B60  
                                          l2608 2118                                            l2616 25CA  
                                          l2624 27B8                                            l2640 1E06  
                                          l2800 1478                                            l2632 2704  
                                          l3512 22EA                                            l3520 283A  
                                          l3096 2962                                            l3088 2944  
                                          l3184 2226                                            l3176 2216  
                                          l3168 21F0                                            l3354 2656  
                                          l3290 2518                                            l3282 24FE  
                                          l2730 1C5E                                            l2722 1C16  
                                          l2714 1BB4                                            l2706 1B6C  
                                          l2618 25DC                                            l2626 27BC  
                                          l2650 1E4C                                            l2642 1E14  
                                          l2810 1518                                            l2802 147E  
                                          l3514 22F2                                            l3522 2844  
                                          l3186 2232                                            l3178 221A  
                                          l1499 2860                                            l3356 2666  
                                          l3348 2646                                            l3292 251C  
                                          l3284 2500                                            l3276 24CC  
                                          l2724 1C28                                            l2716 1BC6  
                                          l2708 1B8A                                            l2740 1CB2  
                                          l2660 26A2                                            l2580 2470  
                                          l2628 27D4                                            l2652 1E78  
                                          l2644 1E20                                            l2636 1DE4  
                                          l2820 15C0                                            l2812 151E  
                                          l2804 1486                                            l2900 1908  
                                          l3516 2300                                            l3532 23C2  
                                          l3188 223E                                            l3540 2026  
                                          l3358 266A                                            l3294 2520  
                                          l3286 2510                                            l3278 24CC  
                                          l2910 195E                                            l2718 1BF4  
                                          l2726 1C2E                                            l2750 1D0A  
                                          l2742 1CB6                                            l2734 1C80  
                                          l2590 24B0                                            l2582 2470  
                                          l2654 1E8C                                            l2646 1E34  
                                          l2638 1DF2                                            l2830 1622  
                                          l2822 15DA                                            l2814 1524  
                                          l2806 1490                                            l2662 273C  
                                          l2670 2410                                            l2902 190E  
                                          l3518 2326                                            l3534 23EC  
                                          l3526 23B0                                            l3550 2030  
                                          l3542 2028                                            l3288 2514  
                                          l2680 2774                                            l2920 19D0  
                                          l2912 1972                                            l2728 1C3E  
                                          l2760 1D8C                                            l2752 1D1E  
                                          l2744 1CC4                                            l2736 1C84  
                                          l2592 24C0                                            l2584 2492  
                                          l2648 1E48                                            l2832 1628  
                                          l2840 165E                                            l2824 15F4  
                                          l2808 1496                                            l2816 1588  
                                          l2904 191E                                            l3536 23F2  
                                          l3560 204C                                            l3552 2032  
                                          l3544 202A                                            l2770 2524  
                                          l2930 19F8                                            l2922 19D4  
                                          l2914 1976                                            l2690 1AF8  
                                          l2754 1D2C                                            l2762 1D92  
                                          l2746 1CE4                                            l2738 1C92  
                                          l2658 2688                                            l2594 24C4  
                                          l2586 249C                                            l2834 163A  
                                          l2818 15A2                                            l2826 1602  
                                          l2666 26C8                                            l2674 2446  
                                          l2906 1934                                            l2850 16B4  
                                          l3570 209A                                            l3562 2060  
                                          l3554 2040                                            l3546 202C  
                                          l3538 2022                                            l2684 2862  
                                          l2772 2528                                            l2932 1A00  
                                          l2916 197A                                            l2692 1AFC  
                                          l2764 1DA2                                            l2756 1D5A  
                                          l2748 1D02                                            l2588 24AE  
                                          l2596 24C6                                            l2836 1646  
                                          l2828 1614                                            l2676 2458  
                                          l2860 1718                                            l2852 16DE  
                                          l2844 1688                                            l3572 20AE  
                                          l3564 206E                                            l3556 2044  
                                          l3548 202E                                            l2686 287E  
                                          l2774 253C                                            l2942 1AAE  
                                          l2934 1A36                                            l2926 19DA  
                                          l2918 1998                                            l2694 1B0A  
                                          l2766 1DC2                                            l2758 1D7A  
                                          l2598 296E                                            l2838 164E  
                                          l2790 1420                                            l2782 13A8  
                                          l2862 171E                                            l2854 16E6  
                                          l2846 1698                                            l3646 0FF8  
                                          l3574 20C0                                            l3566 2086  
                                          l3558 2048                                            ?_pad 0017  
                                          l2776 256A                                            l2944 1AC0  
                                          l3648 1A20                                            l2928 19F0  
                                          l2696 1B2A                                            l2792 1422  
                                          l2784 13C8                                            l2880 17F0  
                                          l2872 1792                                            l2864 1726  
                                          l2856 1706                                            l2848 169A  
                                          l2960 0F8C                                            l2952 0F42  
                                          l3568 2094                                            l2778 256E  
                                          l2946 1AD2                                            l2938 1A6E  
                                          l2698 1B2E                                            l2794 143C  
                                          l2786 13F0                                            l2874 17A4  
                                          l2882 1804                                            l2866 1742  
                                          l2890 187E                                            l2858 170E  
                                          l2970 0FB2                                            l2962 0F98  
                                          l2954 0F68                                            l2796 1458  
                                          l2788 1410                                            l2892 189A  
                                          l2884 1814                                            l2868 1752  
                                          l2964 0F9A                                            l2956 0F76  
                                          l2798 146A                                            l2894 18B8  
                                          l2886 181A                                            l2878 17DE  
                                          l2990 1046                                            l2982 0FC4  
                                          l2974 0FB8                                            l2966 0FAC  
                                          l2958 0F88                                            l2896 18D2  
                                          l2888 1820                                            l2992 1048  
                                          l2898 18EC                                            l2994 106E  
                                          l2986 0FD0                                            l2978 0FBE  
                                          l2996 10A4                                            l2988 1026  
                                          l2998 10B2                                            STR_1 0F1A  
                                          STR_2 0F32                                            STR_3 0F01  
                                          u2000 1622                                            u2001 161E  
                                          u2010 163A                                            u2011 1636  
                                          u2100 17DA                                            u2020 1698  
                                          u2021 1694                                            u2110 17F0  
                                          u2030 16B4                                            u2111 17EC  
                                          u2031 16B0                                            u2200 19D0  
                                          u2120 1858                                            u2040 16DE  
                                          u2201 19CC                                            u2041 16DA  
                                          u2210 19EC                                            u2130 189A  
                                          u2050 1742                                            u2211 19E8  
                                          u2131 1896                                            u2051 173E  
                                          u2220 1AA8                                            u1500 20DE  
                                          u2140 18B8                                            u2060 178C  
                                          u2300 10B2                                            u2221 1AA2  
                                          u1501 20DA                                            u2141 18B4  
                                          u2125 1846                                            u2061 1786  
                                          u2301 10AE                                            _LATA 000F83  
                                          u2230 1AAA                                            u1510 20F0  
                                          u2150 18D2                                            u2070 178E  
                                          u2310 1130                                            _LATB 000F84  
                                          u1511 20EC                                            u2151 18CE  
                                          u2311 112A                                            _LATC 000F85  
                                          u2240 1AC0                                            u1520 2118  
                                          u1600 1E6A                                            u2160 18EC  
                                          u2080 17A4                                            u2320 1132  
                                          _LATD 000F86                                            u2241 1ABC  
                                          u1521 2114                                            u1601 1E66  
                                          u2161 18E8                                            u2081 17A0  
                                          _LATE 000F87                                            u2250 1AD2  
                                          u1530 214E                                            u1610 1E78  
                                          u2170 18FA                                            u2090 17D8  
                                          u2330 114A                                            u2251 1ACE  
                                          u1531 214A                                            u1611 1E74  
                                          u2171 18F6                                            u2091 17D2  
                                          u2331 1146                                            u1700 27A4  
                                          u1620 26A2                                            u1540 2600  
                                          u2180 1908                                            u2340 1170  
                                          u2260 0F68                                            u1701 279E  
                                          u1621 269E                                            u1541 25FC  
                                          u2181 1904                                            u2341 116C  
                                          u2261 0F64                                            u1710 27A6  
                                          u2190 1998                                            u1470 2482  
                                          u1550 27D4                                            u1630 276C  
                                          u2350 1196                                            u2270 1038  
                                          u2191 1994                                            u1471 247E  
                                          u1551 27D0                                            u1631 2766  
                                          u2351 1192                                            u2271 1034  
                                          u2520 2904                                            u1720 1B0A  
                                          u1800 1CC4                                            u1480 2492  
                                          u1640 276E                                            u1560 2734  
                                          u2360 123C                                            u2280 1046  
                                          u2521 28FE                                            u1721 1B06  
                                          u1801 1CC0                                            u1481 248E  
                                          u1561 272E                                            u2361 1238  
                                          u2281 1042                                            u2530 2906  
                                          u1730 1B3C                                            u1810 1D02  
                                          u1490 24C0                                            u1650 26FC  
                                          u1570 2736                                            u2370 1262  
                                          u2290 106E                                            u1731 1B38  
                                          u1811 1CFE                                            u1491 24BC  
                                          u1651 26F6                                            u2371 125E  
                                          u2291 106A                                            u2540 24DE  
                                          u1820 1D2C                                            u1580 1DF2  
                                          u1900 1420                                            u1660 26FE  
                                          u2380 1326                                            u2541 24DA  
                                          u1741 1B66                                            u1821 1D28  
                                          u1581 1DEE                                            u1901 141C  
                                          u2381 1322                                            u2550 2510  
                                          u1750 1B8A                                            u1830 1D5A  
                                          u1590 1E14                                            u1910 143C  
                                          u1670 2440                                            u2551 250C  
                                          u1751 1B86                                            u1831 1D56  
                                          u1591 1E10                                            u1911 1438  
                                          u1671 243A                                            u1760 1BB4  
                                          u1840 1DA2                                            u1920 146A  
                                          u1680 2442                                            u1761 1BB0  
                                          u1841 1D9E                                            u1921 1466  
                                          u1850 253C                                            u1770 1BF4  
                                          u1930 1478                                            u1690 2458  
                                          u1851 2538                                            u1771 1BF0  
                                          u1931 1474                                            u1691 2454  
                                          u1860 256A                                            u1780 1C3E  
                                          u1940 15A2                                            u1861 2566  
                                          u1781 1C3A                                            u1941 159E  
                                          u2670 2686                                            u1790 1C92  
                                          u1950 15C0                                            u1870 13D8  
                                          u2671 2682                                            u1791 1C8E  
                                          u1951 15BC                                            u1871 13D2  
                                          u1960 15DA                                            u1880 13DA  
                                          u1961 15D6                                            u1970 15F4  
                                          u1890 13F0                                            u2850 2344  
                                          u1971 15F0                                            u1891 13EC  
                                          u2851 2340                                            u1980 1602  
                                          u2860 240E                                            _PMD0 000EE1  
                                          u1981 15FE                                            u2861 240A  
                                          _PMD1 000EE2                                            u1990 1614  
                                          u2870 2060                                            _PMD2 000EE3  
                                          u1991 1610                                            u2871 205C  
                                          _PMD3 000EE4                                            u2880 20AE  
                                          _PMD4 000EE5                                            u2881 20AA  
                                          _PMD5 000EE6                                            u2897 208C  
                                          _WPUA 000F10                                            _WPUB 000F18  
                                          _WPUC 000F20                                            _WPUD 000F25  
                                          _WPUE 000F2D                           ??_EUSART2_Receive_ISR 0001  
                                 __CFG_FCMEN$ON 000000                                   _EUSART2_Write 246E  
                                          abs@a 0017                                            _dbuf 0100  
                                          _atoi 195E                                            _main 2022  
                                          _dtoa 13A8                                   ?_EUSART1_Read 0001  
                                          _loop 00B0                                            _prec 00AC  
                                          _temp 00FB                                            _nout 00A8  
                                          pad@i 001E                                            pad@p 001B  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0020                                            fsr2l 000FD9  
                                          btemp 005B                                            _xtoa 1688  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0126                    __end_of_EUSART2_Transmit_ISR 25BE  
                                 __CFG_CSWEN$ON 000000                  fp__EUSART1_DefaultErrorHandler 0000  
                                  ___param_bank 000000                                   __CFG_SCANE$ON 000000  
                                         ??_abs 0019                                           ??_pad 001D  
                __size_of_OSCILLATOR_Initialize 0018                   __end_of_OSCILLATOR_Initialize 28F0  
                         _eusart1RxStatusBuffer 0060                                 __end_of___aodiv 1C80  
                                         ?_atoi 000C                                           ?_main 0001  
                                         ?_dtoa 0022                                 __end_of___aomod 1DE4  
                                 __CFG_WDTE$OFF 000000                                           ?_xtoa 0022  
                                __CFG_DEBUG$OFF 000000                                           i2l150 0064  
                                         i2l152 009E                                           i2l153 0112  
                                         i2l154 00D8                                           i2l500 2994  
                                         i2l333 25B8                                           i2l350 299C  
                                         i2l343 1F64                                           i2l159 0112  
                                         i2l336 25BC                                           i2l353 297C  
                                         i2l347 280C                                           i2l356 2988  
                                         i2l480 2644                                           i2l491 2838  
                                         i2l477 2640                                           i2l494 299E  
                                         i2l487 2020                                           i2l497 298E  
                                         _OSCEN 000EDC                                    vfpfcnvrt@fmt 004B  
                                  vfpfcnvrt@llu 00C6                                           _TRISA 000F88  
                                         _TRISB 000F89                                           _TRISC 000F8A  
                                         _TRISD 000F8B                                           _TRISE 000F8C  
                                         _Debug 00B3                                   __CFG_WRT0$OFF 000000  
                                 __CFG_WRT1$OFF 000000                                   __CFG_WRT2$OFF 000000  
                                 __CFG_WRT3$OFF 000000                            _EUSART1_Transmit_ISR 2602  
                                __CFG_EBTR0$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                           _data1 012F  
                                __CFG_EBTRB$OFF 000000                                           _flags 0057  
                                         _fputc 20CC                                 __end_of_isalpha 2704  
                                         _fputs 25BE                                 __end_of_isdigit 27AC  
                            __CFG_MCLRE$EXTMCLR 000000                                           atoi@n 0019  
                                         pad@fp 0017                                           atoi@s 000C  
                                         _width 00AA                                           _putch 296C  
                                         dtoa@d 0024                                           dtoa@i 0044  
                                         dtoa@n 003C                                           dtoa@p 0036  
                                         dtoa@s 003A                                           dtoa@w 0038  
                               __end_of_islower 273C                                 __end_of_isspace 2576  
                                ?_EUSART2_Write 0001                                 __end_of_isupper 2774  
                                         pclath 000FFA                                           tablat 000FF5  
                                   _ClearRxBuff 2646                                  ??_EUSART1_Read 0005  
                                         ttemp5 005C                                           ttemp6 005F  
                                         ttemp7 0063                                           status 000FD8  
                                         wtemp8 005C                                           xtoa@c 0047  
                                         xtoa@d 0024                                           xtoa@i 0045  
                                         xtoa@n 003D                                           xtoa@p 0039  
                                         xtoa@w 003B                                           xtoa@x 002C  
                               __end_of_toupper 246E           fp__EUSART1_DefaultFramingErrorHandler 0000  
    __end_of_EUSART1_DefaultFramingErrorHandler 29A0     __size_of_EUSART1_DefaultFramingErrorHandler 0002  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 299E           __end_of_EUSART2_SetTxInterruptHandler 2912  
        __size_of_EUSART2_SetTxInterruptHandler 000A                   _EUSART2_SetTxInterruptHandler 2908  
                                  _toupper$1785 0011                                 __initialization 234E  
                                  __end_of_atoi 1AF8                      __end_of_EUSART1_Initialize 22EA  
                                  __end_of_main 20CC                                    __end_of_dtoa 1688  
                                  __end_of_xtoa 195E                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_atoi 000E                                          ??_main 0056  
                                        ??_dtoa 002C                                          ??_xtoa 002D  
                                 __activetblptr 000003             __end_of_EUSART2_DefaultErrorHandler 298A  
                   _EUSART2_DefaultErrorHandler 2984                           ?_EUSART1_Transmit_ISR 0001  
                    __end_of_EUSART2_Initialize 226E                        _eusart2TxBufferRemaining 00FA  
                                        ?_fputc 0007                                          ?_fputs 0010  
                                        _ANSELA 000F11                                          ?_putch 0001  
                                        _ANSELB 000F19                                          _ANSELC 000F21  
                                        _ANSELD 000F26                                          _ANSELE 000F2E  
                                        _RC1REG 000F99                                          _RC2REG 000E99  
                                        _RC1STA 000F9D                                          _RC2STA 000E9D  
                                        _RB6PPS 000EF5                                          _ODCONA 000F0F  
                                        _ODCONB 000F17                                          _ODCONC 000F1F  
                                        _RC6PPS 000EFD                                          _ODCOND 000F24  
                                        _ODCONE 000F2C                    __size_of_EUSART1_is_rx_ready 0018  
                                        i2l3100 281E                                          i2l3102 2820  
                                        i2l3104 2830                                  __CFG_WDTCCS$SC 000000  
                                        i2l3106 2834                                          i2l3320 2624  
                                        i2l3080 27F2                                          i2l3240 2576  
                                        i2l3330 1F76                                          i2l3322 2626  
                                        i2l3082 27F4                                          i2l3250 25B2  
                                        i2l3242 2588                                          i2l3340 1FCA  
                                        i2l3332 1F84                                          i2l3324 2636  
                                        i2l3316 2602                                          i2l3084 2804  
                                        i2l3260 1EEE                                          i2l3252 1EA6  
                                        i2l3244 259A                                          i2l3342 1FE2  
                                        i2l3334 1F94                                          i2l3326 263A  
                                        i2l3318 2614                                          i2l3086 2808  
                                        i2l3078 27E2                                          i2l3270 1F60  
                                        i2l3262 1EFE                                          i2l3254 1EB6  
                                        i2l3246 259E                                          i2l3344 1FFE  
                                        i2l3336 1FAC                                          i2l3328 1F66  
                                        i2l3192 2976                                          i2l3264 1F0E  
                                        i2l3256 1EC6                                          i2l3248 25AE  
                                        i2l3098 280E                                          i2l3346 201C  
                                        i2l3338 1FBA                                          i2l3194 2984  
                                        i2l3266 1F26                                          i2l3258 1ED6  
                                        i2l3196 298A                                          i2l3268 1F42  
                                        i2l3380 0072                                          i2l3372 001A  
                                        i2l3198 2990                                          i2l3390 00F4  
                                        i2l3382 0080                                          i2l3374 0028  
                                        i2l3384 00AC                                          i2l3376 0038  
                                        i2l3386 00BA                                          i2l3378 0046  
                                        i2l3388 00E6                                          _INLVLA 000F0D  
                                        _INLVLB 000F15                                          _INLVLC 000F1D  
                                        _INLVLD 000F22                                          _INLVLE 000F2A  
                                        _TABLAT 000FF5                                          _OSCFRQ 000EDE  
                                 vfpfcnvrt@done 00CE                                          _NVMDAT 000F80  
                                        _RX1PPS 000EB5                                          _RX2PPS 000E8D  
                                        _TX1REG 000F9A                                          _TX2REG 000E9A  
                                        _TX1STA 000F9E                                          _TX2STA 000E9E  
                                        _RXMode 297E                                  __CFG_PWRTE$OFF 000000  
                                __CFG_XINST$OFF 000000                                    vfprintf@cfmt 0053  
                     __CFG_RSTOSC$HFINTOSC_1MHZ 000000                                       ??___aodiv 0015  
                                     ??___aomod 0015                                          ___wmul 2862  
                                __CFG_STVREN$ON 000000                        ?_EUSART1_SetErrorHandler 0005  
                                        clear_0 238C                                          clear_1 2398  
                                        _rxData 0120                     _EUSART2_FramingErrorHandler 00EF  
                                        _printf 283A                                          pad@buf 0019  
              ??_EUSART1_SetOverrunErrorHandler 0007                 ?_EUSART1_SetOverrunErrorHandler 0005  
                                        dtoa@fp 0022                                          _strlen 27AC  
                                 ??_PrintRXBuff 0055                                          fputc@c 0007  
                                _PMD_Initialize 2888                                          fputs@c 0014  
                                        fputs@i 0015                                          fputs@s 0010  
                                     ??_isalpha 0007                                       ??_isdigit 0007  
                                     ??_islower 0007                                    __mediumconst 0000  
                                     ??_isspace 0007                                          tblptrh 000FF7  
                                     ??_isupper 0007                                          tblptrl 000FF6  
                                        tblptru 000FF8                            _EUSART2_Transmit_ISR 2576  
                              __end_of_vfprintf 234E                                 ??_EUSART2_Write 0005  
                                        xtoa@fp 0022                                 _eusart1RxBuffer 0070  
                                     ??_toupper 000D                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart2RxBuffer 0098                                 _eusart1TxBuffer 0080  
                             _SYSTEM_Initialize 28BE                                 _eusart2TxBuffer 00A0  
                                    __accesstop 0060                         __end_of__initialization 23A6  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                       ??_EUSART2_RxDataHandler 0001                  __size_of_EUSART1_RxDataHandler 002C  
                 __end_of_EUSART1_RxDataHandler 283A                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 299A                                    __pidataBANK1 28A4  
                           ??_SYSTEM_Initialize 0007                                   __end_of_fputc 2162  
                                 __end_of_fputs 2602                  ?_EUSART2_SetTxInterruptHandler 0005  
                                 __end_of_putch 2976                          __end_of_PMD_Initialize 28A4  
                          __end_of_EUSART1_Read 2524                          ??_EUSART1_Transmit_ISR 0001  
                      ?_EUSART2_SetErrorHandler 0005                           ?_EUSART2_Transmit_ISR 0001  
                   __end_of_EUSART1_Receive_ISR 2022                                         ??_fputc 000B  
                     __end_of_SYSTEM_Initialize 28D8                                         ??_fputs 0014  
                           __end_of_PrintRXBuff 2410                                         ??_putch 0006  
                                 _eusart1RxHead 0059                                   _eusart1TxHead 00B8  
                                 _eusart2RxHead 005A                                   _eusart1RxTail 00B6  
                                 _eusart2TxHead 00BD                                      __pbssBANK0 0060  
                                    __pbssBANK1 0100                                   _eusart2RxTail 00BB  
                                 _eusart1TxTail 00B7               _EUSART1_TxDefaultInterruptHandler 00F3  
                                 _eusart2TxTail 00BC                 ??_EUSART1_SetRxInterruptHandler 0007  
              ??_EUSART2_SetFramingErrorHandler 0007                 ?_EUSART2_SetFramingErrorHandler 0005  
                                       ?_RXMode 0001                 __end_of_EUSART1_SetErrorHandler 296C  
                                       ?___wmul 0005                                 __CFG_PPS1WAY$ON 000000  
                                       ?_printf 00D9                                 ?_PMD_Initialize 0001  
                                       ?_strlen 0005          __end_of_EUSART1_SetFramingErrorHandler 2962  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 2958  
                         _eusart2RxStatusBuffer 0090                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _SP1BRGH 000F9C                                         _SP1BRGL 000F9B  
                                       _SP2BRGH 000E9C                                         _SP2BRGL 000E9B  
                                       _OSCCON1 000ED8                                         _OSCCON3 000EDA  
                   __end_of_EUSART2_Receive_ISR 1F66                              __size_of_vfpfcnvrt 0466  
                                       _TBLPTRH 000FF7                                         _TBLPTRL 000FF6  
                                       _TBLPTRU 000FF8                                         _NVMADRH 000F7F  
                                       _NVMADRL 000F7E                                         _OSCTUNE 000EDD  
                                       _NVMCON2 000F82                                         _SLRCONA 000F0E  
                                       _SLRCONB 000F16                                         _SLRCONC 000F1E  
                                       _SLRCOND 000F23                                         _SLRCONE 000F2B  
                                  ?_ClearRxBuff 0001                                         _ByteNum 00AE  
                               __size_of_RXMode 0006                                         __Hparam 0000  
                                       __Lparam 0000                  fp__EUSART2_DefaultErrorHandler 0000  
                                       ___aodiv 1AF8                                         ___aomod 1C80  
                               __size_of___wmul 0026                                       ?_vfprintf 00D3  
                                  __psmallconst 0F00                             _EUSART1_is_rx_ready 28F0  
                                       __pcinit 234E                 __end_of_EUSART2_SetErrorHandler 293A  
                                       __ramtop 0F00                                         __ptext0 2022  
                                       __ptext1 28BE                                         __ptext2 2888  
                                       __ptext3 2162                                         __ptext4 28D8  
                                       __ptext5 2996                                         __ptext6 21F0  
                                       __ptext7 2908                                         __ptext8 2912  
                                       __ptext9 291C                                 __size_of_printf 0028  
                               __size_of_strlen 0036           fp__EUSART2_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART2_DefaultOverrunErrorHandler 297E     __size_of_EUSART2_DefaultOverrunErrorHandler 0008  
          ??_EUSART2_DefaultOverrunErrorHandler 0001             ?_EUSART2_DefaultOverrunErrorHandler 0001  
            _EUSART2_DefaultOverrunErrorHandler 2976                                     _PrintRXBuff 23B0  
                         _OSCILLATOR_Initialize 28D8                          ??_EUSART2_Transmit_ISR 0001  
                                  __size_of_abs 0040                                    __size_of_pad 00C2  
                                       _isalpha 26C8                                         _isdigit 2774  
                            _EUSART1_Initialize 226E                                         _islower 2704  
                      ??_PIN_MANAGER_Initialize 0005                                         _isspace 2524  
                                       _isupper 273C                   ??_EUSART1_DefaultErrorHandler 0001  
                                       atoi@neg 0012                      __size_of_SYSTEM_Initialize 001A  
                                       _toupper 2410                            end_of_initialization 23A6  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 0009                     _EUSART1_OverrunErrorHandler 00E7  
                                       fputs@fp 0012           __end_of_EUSART1_SetRxInterruptHandler 294E  
        __size_of_EUSART1_SetRxInterruptHandler 000A                   _EUSART1_SetRxInterruptHandler 2944  
                            _EUSART2_Initialize 21F0                               __end_of_vfpfcnvrt 13A8  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 0058  
                                    ??_vfprintf 0053                            ??_EUSART1_Initialize 0007  
                         __CFG_WDTCPS$WDTCPS_31 000000                             ?_EUSART2_Initialize 0001  
                                       strlen@a 0007                                         strlen@s 0005  
                       fp__EUSART1_Transmit_ISR 0000                __size_of_EUSART1_SetErrorHandler 000A  
                              __CFG_FEXTOSC$OFF 000000                           ??_EUSART1_is_rx_ready 0005  
                          ??_EUSART2_Initialize 0007                                    _EUSART1_Read 24CC  
          __size_of_EUSART1_DefaultErrorHandler 0006                                  __end_of_RXMode 2984  
                __size_of_EUSART2_RxDataHandler 002C                   __end_of_EUSART2_RxDataHandler 280E  
                  __end_of_INTERRUPT_Initialize 299A                                     vfpfcnvrt@ap 004D  
                                   vfpfcnvrt@fp 0049                                     vfpfcnvrt@ll 00BE  
                                __end_of___wmul 2888                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 2862                                  __end_of_strlen 27E2  
                           start_initialization 234E                 __size_of_PIN_MANAGER_Initialize 008E  
                                   __end_of_abs 26C8                                     __end_of_pad 1EA6  
 EUSART1_SetRxInterruptHandler@interruptHandler 0005   EUSART1_SetTxInterruptHandler@interruptHandler 0005  
 EUSART2_SetRxInterruptHandler@interruptHandler 0005   EUSART2_SetTxInterruptHandler@interruptHandler 0005  
                                   putch@txData 0006                           __end_of_EUSART2_Write 24CC  
                        fp__EUSART1_Receive_ISR 0000                __size_of_EUSART2_SetErrorHandler 000A  
                                      ??_RXMode 0005                            __size_of_ClearRxBuff 0042  
        __end_of_EUSART2_SetOverrunErrorHandler 2926         __size_of_EUSART2_SetOverrunErrorHandler 000A  
                _EUSART2_SetOverrunErrorHandler 291C                                __CFG_LPBOREN$OFF 000000  
                                  ClearRxBuff@i 0005                                     vfprintf@fmt 00D5  
                              ??_PMD_Initialize 0005                                        ??___wmul 0009  
                         _EUSART1_RxDataHandler 280E                  ?_EUSART1_SetRxInterruptHandler 0005  
                                   __pdataBANK0 00FB                                     __pdataBANK1 0120  
                                      ??_printf 0055                                        ??_strlen 0007  
                                _eusart1RxCount 00B5                                  _eusart2RxCount 00BA  
                                   __pbssCOMRAM 0057               _EUSART1_RxDefaultInterruptHandler 00F1  
                 __size_of_EUSART1_Transmit_ISR 0044                                   __pcstackBANK0 00BE  
                              ___aodiv@dividend 0005                         fp__EUSART2_Transmit_ISR 0000  
                           EUSART2_Write@txData 0005                 ??_EUSART1_SetTxInterruptHandler 0007  
              ??_EUSART1_SetFramingErrorHandler 0007                 ?_EUSART1_SetFramingErrorHandler 0005  
               ??_EUSART2_SetRxInterruptHandler 0007                    __size_of_EUSART1_Receive_ISR 00BC  
                        fp__EUSART2_Receive_ISR 0000                                       _atoi$1693 0014  
                                     _atoi$1694 0018                                       _atoi$1695 0016  
                                     __pnvBANK0 00E5                          _PIN_MANAGER_Initialize 2162  
                                     _dtoa$1209 0034                                       __pintcode 0008  
                                      ?___aodiv 0005                                        ?___aomod 0005  
                              ___aodiv@quotient 0017               _EUSART2_TxDefaultInterruptHandler 00F7  
                  ??_INTERRUPT_InterruptManager 0001                               __size_of_vfprintf 0064  
                                      _BAUD1CON 000F9F                                        _BAUD2CON 000E9F  
                                  ?_PrintRXBuff 0001                                     __smallconst 0F00  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 2990  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 298A  
                                      ?_isalpha 0005                                        ?_isdigit 0005  
                          _EUSART1_ErrorHandler 00E5                    ?_EUSART2_DefaultErrorHandler 0001  
                                      ?_islower 0005                                        ?_isspace 0005  
                                      ?_isupper 0005                         _EUSART1_SetErrorHandler 2962  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                                      ?_toupper 000B                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 2996                    __size_of_EUSART2_Receive_ISR 00C0  
                                ___wmul@product 0009                                        _LATAbits 000F83  
       EUSART1_SetErrorHandler@interruptHandler 0005         EUSART2_SetErrorHandler@interruptHandler 0005  
                                      _LATDbits 000F86                                        _PIE3bits 000EC5  
                           __CFG_BORV$VBOR_2P45 000000             __size_of_INTERRUPT_InterruptManager 011E  
                                      i2u240_40 2830                                        i2u240_41 282C  
                                      i2u250_40 1F42                                        i2u250_41 1F3E  
                                      i2u260_40 2636                                        i2u251_48 1F48  
                                      i2u244_40 2588                                        i2u260_41 2632  
                                      i2u251_49 1F5C                                        i2u244_41 2584  
                                      i2u261_40 1F84                                        i2u245_40 25AE  
                                      i2u261_41 1F80                                        i2u245_41 25AA  
                                      i2u246_40 1EC6                                        i2u270_40 0038  
                                      i2u246_41 1EC2                                        i2u270_41 0034  
                                      i2u263_40 1FBA                                        i2u262_48 1F9A  
                                      i2u239_40 2804                                        i2u271_40 0046  
                                      i2u263_41 1FB6                                        i2u262_49 1FAC  
                                      i2u239_41 2800                                        i2u271_41 0042  
                                      i2u248_40 1EFE                                        i2u247_48 1EDC  
                                      i2u280_40 00F4                                        i2u248_41 1EFA  
                                      i2u247_49 1EEE                                        i2u280_41 00F0  
                                      i2u265_40 1FFE                                        i2u264_48 1FD0  
                                      i2u273_40 0072                                        i2u272_48 004C  
                                      i2u265_41 1FFA                                        i2u264_49 1FE2  
                                      i2u273_41 006E                                        i2u272_49 0060  
                                      i2u249_48 1F14                                        i2u281_48 00FA  
                                      i2u274_40 0080                                        i2u249_49 1F26  
                                      i2u281_49 010E                                        i2u274_41 007C  
                                      i2u266_48 2004                                        i2u259_40 2614  
                                      i2u266_49 2018                                        i2u259_41 2610  
                                      i2u276_40 00AC                                        i2u275_48 0086  
                                      i2u276_41 00A8                                        i2u275_49 009A  
                                      i2u277_40 00BA                                        i2u269_40 0028  
                                      i2u277_41 00B6                                        i2u269_41 0024  
                                      _PIR3bits 000ECD                                        i2u279_40 00E6  
                                      i2u278_48 00C0                                        i2u279_41 00E2  
                                      i2u278_49 00D4                                        _PIR7bits 000ED1  
                        ?_EUSART1_RxDataHandler 0001                                       _vfpfcnvrt 0F42  
                                     _xtoa$1220 0035                                       _xtoa$1221 0037  
                             ___wmul@multiplier 0005                   __size_of_EUSART2_Transmit_ISR 0048  
                                  _isspace$1720 000B                   ??_EUSART2_DefaultErrorHandler 0001  
                                    vfpfcnvrt@c 00D2                                       copy_data0 2362  
                         ?_INTERRUPT_Initialize 0001                         _EUSART2_SetErrorHandler 2930  
                         EUSART1_Read@readValue 0005                     _EUSART2_OverrunErrorHandler 00ED  
         __end_of_EUSART1_SetTxInterruptHandler 2944          __size_of_EUSART1_SetTxInterruptHandler 000A  
                 _EUSART1_SetTxInterruptHandler 293A                                        __Hrparam 0000  
         __end_of_EUSART2_SetRxInterruptHandler 291C          __size_of_EUSART2_SetRxInterruptHandler 000A  
                 _EUSART2_SetRxInterruptHandler 2912                                      vfprintf@ap 00D7  
                                      __Lrparam 0000                                      vfprintf@fp 00D3  
                            __CFG_BOREN$SBORDIS 000000                         ??_OSCILLATOR_Initialize 0005  
                              __size_of___aodiv 0188                                __size_of___aomod 0164  
                   __size_of_EUSART1_Initialize 007C                                      ?_vfpfcnvrt 0049  
                               ___aodiv@divisor 000D                                 ___aodiv@counter 0015  
                     ??_EUSART1_SetErrorHandler 0007             __end_of_EUSART1_DefaultErrorHandler 2996  
                   _EUSART1_DefaultErrorHandler 2990                     __end_of_EUSART1_is_rx_ready 2908  
                          _EUSART2_ErrorHandler 00EB                                __size_of_isalpha 003C  
                              __size_of_isdigit 0038                                    PrintRXBuff@i 00E3  
                              __size_of_islower 0038                                __size_of_isspace 0052  
                                      __ptext10 2926                                        __ptext11 2930  
                                      __ptext20 283A                                        __ptext12 226E  
                                      __ptext21 22EA                                        __ptext13 293A  
                                      __ptext30 27AC                                        __ptext22 0F42  
                                      __ptext14 2944                                        __ptext31 25BE  
                                      __ptext23 1688                                        __ptext15 294E  
                                      __ptext40 2774                                        __ptext32 20CC  
                                      __ptext24 2410                                        __ptext16 2958  
                                      __ptext41 2862                                        __ptext33 296C  
                                      __ptext25 2704                                        __ptext17 2962  
                                      __ptext50 2984                                        __ptext42 28F0  
                                      __ptext34 246E                                        __ptext26 273C  
                                      __ptext18 297E                                        __ptext51 27E2  
                                      __ptext43 24CC                                        __ptext35 2688  
                                      __ptext27 26C8                                        __ptext19 23B0  
                                      __ptext52 2602                                        __ptext44 2646  
                                      __ptext36 1C80                                        __ptext28 13A8  
                                      __ptext53 1F66                                        __ptext37 1AF8  
                                      __ptext29 1DE4                                        __ptext54 298A  
                                      __ptext46 2576                                        __ptext38 195E  
                                      __ptext55 299E                                        __ptext47 1EA6  
                                      __ptext39 2524                                        __ptext56 2990  
                                      __ptext48 2976                                        __ptext57 280E  
                                      __ptext49 299C                                        __ptext58 0000  
                              __size_of_isupper 0038                                __size_of_toupper 005E  
                   __size_of_EUSART2_Initialize 007E                                   __size_of_atoi 019A  
                                 __size_of_main 00AA                                   __size_of_dtoa 02E0  
         fp__EUSART2_DefaultFramingErrorHandler 0000      __end_of_EUSART2_DefaultFramingErrorHandler 299E  
   __size_of_EUSART2_DefaultFramingErrorHandler 0002            ??_EUSART2_DefaultFramingErrorHandler 0001  
           ?_EUSART2_DefaultFramingErrorHandler 0001              _EUSART2_DefaultFramingErrorHandler 299C  
                                 __size_of_xtoa 02D6                            __CFG_WDTCWS$WDTCWS_7 000000  
          __size_of_EUSART2_DefaultErrorHandler 0006                                      _RC1STAbits 000F9D  
                                    _RC2STAbits 000E9D  EUSART1_SetOverrunErrorHandler@interruptHandler 0005  
EUSART2_SetOverrunErrorHandler@interruptHandler 0005                                        _rxStatus 00B2  
                                      int$flags 005B                                        _vfprintf 22EA  
            __end_of_INTERRUPT_InterruptManager 0126                      _INTERRUPT_InterruptManager 0008  
                         _EUSART2_RxDataHandler 27E2                                       printf@fmt 00D9  
                   _EUSART1_FramingErrorHandler 00E9                             _EUSART1_Receive_ISR 1F66  
                              ___aomod@dividend 0005                ??_EUSART2_SetOverrunErrorHandler 0007  
               ?_EUSART2_SetOverrunErrorHandler 0005                                  _vfpfcnvrt$1235 00D0  
                                    _INTCONbits 000FF2                                     _NVMCON1bits 000F81  
                          __size_of_PrintRXBuff 0060                                        isalpha@c 0005  
                                      isdigit@c 0005                          ??_INTERRUPT_Initialize 0005  
                     ??_EUSART2_SetErrorHandler 0007                                        intlevel2 0000  
                                 ??_ClearRxBuff 0005                            ?_EUSART1_Receive_ISR 0001  
                                      islower@c 0005                                        isspace@c 0005  
                       ?_PIN_MANAGER_Initialize 0001                               __CFG_CLKOUTEN$OFF 000000  
        __end_of_EUSART1_SetOverrunErrorHandler 2958         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 294E                                        isupper@c 0005  
                  __end_of_EUSART1_Transmit_ISR 2646                                        printf@ap 00E1  
EUSART1_SetFramingErrorHandler@interruptHandler 0005  EUSART2_SetFramingErrorHandler@interruptHandler 0005  
                ?_EUSART1_SetTxInterruptHandler 0005                  ?_EUSART2_SetRxInterruptHandler 0005  
                               ___aomod@divisor 000D                                     ??_vfpfcnvrt 004F  
                               ___aomod@counter 0015                              _eusart1RxLastError 00B4  
                        __size_of_EUSART2_Write 005E                             _EUSART2_Receive_ISR 1EA6  
                                      toupper@c 000B                                      _TX1STAbits 000F9E  
                                    _TX2STAbits 000E9E                                    ___aodiv@sign 0016  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 21F0  
               ??_EUSART2_SetTxInterruptHandler 0007                            ?_EUSART2_Receive_ISR 0001  
                            _eusart2RxLastError 00B9                         ??_EUSART1_RxDataHandler 0001  
                                  ___aomod@sign 0016               _EUSART2_RxDefaultInterruptHandler 00F5  
                           __end_of_ClearRxBuff 2688  
