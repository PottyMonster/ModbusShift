

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Mar 24 22:55:32 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    13                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    14                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    26                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	text0,global,reloc=2,class=CODE,delta=1
    30                           	psect	text1,global,reloc=2,class=CODE,delta=1
    31                           	psect	text2,global,reloc=2,class=CODE,delta=1
    32                           	psect	text3,global,reloc=2,class=CODE,delta=1
    33                           	psect	text4,global,reloc=2,class=CODE,delta=1
    34                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text8,global,reloc=2,class=CODE,delta=1
    38                           	psect	text9,global,reloc=2,class=CODE,delta=1
    39                           	psect	text10,global,reloc=2,class=CODE,delta=1
    40                           	psect	text11,global,reloc=2,class=CODE,delta=1
    41                           	psect	text12,global,reloc=2,class=CODE,delta=1
    42                           	psect	text13,global,reloc=2,class=CODE,delta=1
    43                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text15,global,reloc=2,class=CODE,delta=1
    45                           	psect	text16,global,reloc=2,class=CODE,delta=1
    46                           	psect	text17,global,reloc=2,class=CODE,delta=1
    47                           	psect	text18,global,reloc=2,class=CODE,delta=1
    48                           	psect	text19,global,reloc=2,class=CODE,delta=1
    49                           	psect	text20,global,reloc=2,class=CODE,delta=1
    50                           	psect	text21,global,reloc=2,class=CODE,delta=1
    51                           	psect	text22,global,reloc=2,class=CODE,delta=1
    52                           	psect	text23,global,reloc=2,class=CODE,delta=1
    53                           	psect	text24,global,reloc=2,class=CODE,delta=1
    54                           	psect	text25,global,reloc=2,class=CODE,delta=1
    55                           	psect	text26,global,reloc=2,class=CODE,delta=1
    56                           	psect	text27,global,reloc=2,class=CODE,delta=1
    57                           	psect	text28,global,reloc=2,class=CODE,delta=1
    58                           	psect	text29,global,reloc=2,class=CODE,delta=1
    59                           	psect	text30,global,reloc=2,class=CODE,delta=1
    60                           	psect	text31,global,reloc=2,class=CODE,delta=1
    61                           	psect	text32,global,reloc=2,class=CODE,delta=1
    62                           	psect	text33,global,reloc=2,class=CODE,delta=1
    63                           	psect	text34,global,reloc=2,class=CODE,delta=1
    64                           	psect	text35,global,reloc=2,class=CODE,delta=1
    65                           	psect	text36,global,reloc=2,class=CODE,delta=1
    66                           	psect	text37,global,reloc=2,class=CODE,delta=1
    67                           	psect	text38,global,reloc=2,class=CODE,delta=1
    68                           	psect	text39,global,reloc=2,class=CODE,delta=1
    69                           	psect	text40,global,reloc=2,class=CODE,delta=1
    70                           	psect	text41,global,reloc=2,class=CODE,delta=1
    71                           	psect	text42,global,reloc=2,class=CODE,delta=1
    72                           	psect	text43,global,reloc=2,class=CODE,delta=1
    73                           	psect	text44,global,reloc=2,class=CODE,delta=1
    74                           	psect	text45,global,reloc=2,class=CODE,delta=1
    75                           	psect	text46,global,reloc=2,class=CODE,delta=1
    76                           	psect	text47,global,reloc=2,class=CODE,delta=1
    77                           	psect	text48,global,reloc=2,class=CODE,delta=1
    78                           	psect	text49,global,reloc=2,class=CODE,delta=1
    79                           	psect	text50,global,reloc=2,class=CODE,delta=1
    80                           	psect	text51,global,reloc=2,class=CODE,delta=1
    81                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text53,global,reloc=2,class=CODE,delta=1
    83                           	psect	text54,global,reloc=2,class=CODE,delta=1
    84                           	psect	text55,global,reloc=2,class=CODE,delta=1
    85                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text60,global,reloc=2,class=CODE,delta=1
    90                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text63,global,reloc=2,class=CODE,delta=1
    93                           	psect	text64,global,reloc=2,class=CODE,delta=1
    94                           	psect	text65,global,reloc=2,class=CODE,delta=1
    95                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text69,global,reloc=2,class=CODE,delta=1
    99                           	psect	text70,global,reloc=2,class=CODE,delta=1
   100                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
   106                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text78,global,reloc=2,class=CODE,delta=1
   108                           	psect	text79,global,reloc=2,class=CODE,delta=1
   109                           	psect	text80,global,reloc=2,class=CODE,delta=1
   110                           	psect	text81,global,reloc=2,class=CODE,delta=1
   111                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   112                           	psect	text83,global,reloc=2,class=CODE,delta=1
   113                           	psect	text84,global,reloc=2,class=CODE,delta=1
   114                           	psect	text85,global,reloc=2,class=CODE,delta=1
   115                           	psect	text86,global,reloc=2,class=CODE,delta=1
   116                           	psect	text87,global,reloc=2,class=CODE,delta=1
   117                           	psect	text88,global,reloc=2,class=CODE,delta=1
   118                           	psect	text89,global,reloc=2,class=CODE,delta=1
   119                           	psect	text90,global,reloc=2,class=CODE,delta=1
   120                           	psect	text91,global,reloc=2,class=CODE,delta=1
   121                           	psect	text92,global,reloc=2,class=CODE,delta=1
   122                           	psect	text93,global,reloc=2,class=CODE,delta=1
   123                           	psect	text94,global,reloc=2,class=CODE,delta=1
   124                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   125                           	psect	text95,global,reloc=2,class=CODE,delta=1
   126                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   127                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   128  0000                     
   129                           ; Version 2.10
   130                           ; Generated 31/07/2019 GMT
   131                           ; 
   132                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   133                           ; All rights reserved.
   134                           ; 
   135                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   136                           ; 
   137                           ; Redistribution and use in source and binary forms, with or without modification, are
   138                           ; permitted provided that the following conditions are met:
   139                           ; 
   140                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   141                           ;        conditions and the following disclaimer.
   142                           ; 
   143                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   144                           ;        of conditions and the following disclaimer in the documentation and/or other
   145                           ;        materials provided with the distribution.
   146                           ; 
   147                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   148                           ;        software without specific prior written permission.
   149                           ; 
   150                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   151                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   152                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   153                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   154                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   155                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   156                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   157                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   158                           ; 
   159                           ; 
   160                           ; Code-generator required, PIC18F46K40 Definitions
   161                           ; 
   162                           ; SFR Addresses
   163  0000                     
   164                           	psect	idataBANK0
   165  00404A                     __pidataBANK0:
   166                           	opt callstack 0
   167                           
   168                           ;initializer for ReadRX232@F10728
   169  00404A  5A                 	db	90
   170  00404B  00                 	db	0
   171                           
   172                           ;initializer for _ByteLo
   173  00404C  00FF               	dw	255
   174                           
   175                           ;initializer for _MBResCRC
   176  00404E  FFFF               	dw	65535
   177                           
   178                           ;initializer for _ExpectedBytes
   179  004050  0008               	dw	8
   180                           
   181                           ;initializer for _MB302xx
   182  004052  0004               	dw	4
   183                           
   184                           	psect	idataBANK1
   185  0039D0                     __pidataBANK1:
   186                           	opt callstack 0
   187                           
   188                           ;initializer for _MB305xx
   189  0039D0  00FF               	dw	255
   190  0039D2  00                 	db	0
   191  0039D3  00                 	db	0
   192  0039D4  00                 	db	0
   193  0039D5  00                 	db	0
   194  0039D6  00                 	db	0
   195  0039D7  00                 	db	0
   196  0039D8  00                 	db	0
   197  0039D9  00                 	db	0
   198  0039DA  00                 	db	0
   199  0039DB  00                 	db	0
   200  0039DC  00                 	db	0
   201  0039DD  00                 	db	0
   202  0039DE  00                 	db	0
   203  0039DF  00                 	db	0
   204                           
   205                           ;initializer for _MB301xx
   206  0039E0  4150               	dw	16720
   207  0039E2  3030               	dw	12336
   208  0039E4  3036               	dw	12342
   209  0039E6  3033               	dw	12339
   210  0039E8  3033               	dw	12339
   211  0039EA  2D30               	dw	11568
   212  0039EC  3200               	dw	12800
   213                           
   214                           ;initializer for _MB304xx
   215  0039EE  00FF               	dw	255
   216  0039F0  00                 	db	0
   217  0039F1  00                 	db	0
   218  0039F2  00                 	db	0
   219  0039F3  00                 	db	0
   220  0039F4  00                 	db	0
   221  0039F5  00                 	db	0
   222  0039F6  00                 	db	0
   223  0039F7  00                 	db	0
   224  0039F8  00                 	db	0
   225  0039F9  00                 	db	0
   226                           
   227                           ;initializer for InitialiseString@F10720
   228  0039FA  4D                 	db	77
   229  0039FB  61                 	db	97
   230  0039FC  72                 	db	114
   231  0039FD  20                 	db	32
   232  0039FE  32                 	db	50
   233  0039FF  34                 	db	52
   234  003A00  20                 	db	32
   235  003A01  32                 	db	50
   236  003A02  30                 	db	48
   237  003A03  32                 	db	50
   238  003A04  31                 	db	49
   239                           
   240                           ;initializer for _MB303xx
   241  003A05  3132               	dw	12594
   242  003A07  3334               	dw	13108
   243  003A09  3536               	dw	13622
   244  003A0B  3738               	dw	14136
   245  003A0D  3930               	dw	14640
   246                           
   247                           ;initializer for InitialiseString@F10723
   248  003A0F  32                 	db	50
   249  003A10  32                 	db	50
   250  003A11  3A                 	db	58
   251  003A12  35                 	db	53
   252  003A13  35                 	db	53
   253  003A14  3A                 	db	58
   254  003A15  32                 	db	50
   255  003A16  34                 	db	52
   256                           
   257                           ;initializer for stoa@F1139
   258  003A17  28                 	db	40
   259  003A18  6E                 	db	110
   260  003A19  75                 	db	117
   261  003A1A  6C                 	db	108
   262  003A1B  6C                 	db	108
   263  003A1C  29                 	db	41
   264  003A1D  00                 	db	0
   265                           
   266                           ;initializer for _MB306xx
   267  003A1E  00FF               	dw	255
   268  003A20  00                 	db	0
   269  003A21  00                 	db	0
   270  003A22  00                 	db	0
   271  003A23  00                 	db	0
   272                           
   273                           	psect	idataBANK2
   274  002AC4                     __pidataBANK2:
   275                           	opt callstack 0
   276                           
   277                           ;initializer for _ModbusData
   278  002AC4  FF                 	db	255
   279  002AC5  00                 	db	0
   280  002AC6  00                 	db	0
   281  002AC7  00                 	db	0
   282  002AC8  00                 	db	0
   283  002AC9  00                 	db	0
   284  002ACA  00                 	db	0
   285  002ACB  00                 	db	0
   286  002ACC  00                 	db	0
   287  002ACD  00                 	db	0
   288  002ACE  00                 	db	0
   289  002ACF  00                 	db	0
   290  002AD0  00                 	db	0
   291  002AD1  00                 	db	0
   292  002AD2  00                 	db	0
   293  002AD3  00                 	db	0
   294  002AD4  00                 	db	0
   295  002AD5  00                 	db	0
   296  002AD6  00                 	db	0
   297  002AD7  00                 	db	0
   298  002AD8  00                 	db	0
   299  002AD9  00                 	db	0
   300  002ADA  00                 	db	0
   301  002ADB  00                 	db	0
   302  002ADC  00                 	db	0
   303  002ADD  00                 	db	0
   304  002ADE  00                 	db	0
   305  002ADF  00                 	db	0
   306  002AE0  00                 	db	0
   307  002AE1  00                 	db	0
   308  002AE2  00                 	db	0
   309  002AE3  00                 	db	0
   310  002AE4  00                 	db	0
   311  002AE5  00                 	db	0
   312  002AE6  00                 	db	0
   313  002AE7  00                 	db	0
   314  002AE8  00                 	db	0
   315  002AE9  00                 	db	0
   316  002AEA  00                 	db	0
   317  002AEB  00                 	db	0
   318  002AEC  00                 	db	0
   319  002AED  00                 	db	0
   320  002AEE  00                 	db	0
   321  002AEF  00                 	db	0
   322  002AF0  00                 	db	0
   323  002AF1  00                 	db	0
   324  002AF2  00                 	db	0
   325  002AF3  00                 	db	0
   326  002AF4  00                 	db	0
   327  002AF5  00                 	db	0
   328  002AF6  00                 	db	0
   329  002AF7  00                 	db	0
   330  002AF8  00                 	db	0
   331  002AF9  00                 	db	0
   332  002AFA  00                 	db	0
   333  002AFB  00                 	db	0
   334  002AFC  00                 	db	0
   335  002AFD  00                 	db	0
   336  002AFE  00                 	db	0
   337  002AFF  00                 	db	0
   338  002B00  00                 	db	0
   339  002B01  00                 	db	0
   340  002B02  00                 	db	0
   341  002B03  00                 	db	0
   342  002B04  00                 	db	0
   343  002B05  00                 	db	0
   344  002B06  00                 	db	0
   345  002B07  00                 	db	0
   346  002B08  00                 	db	0
   347  002B09  00                 	db	0
   348  002B0A  00                 	db	0
   349  002B0B  00                 	db	0
   350  002B0C  00                 	db	0
   351  002B0D  00                 	db	0
   352  002B0E  00                 	db	0
   353  002B0F  00                 	db	0
   354  002B10  00                 	db	0
   355  002B11  00                 	db	0
   356  002B12  00                 	db	0
   357  002B13  00                 	db	0
   358  002B14  00                 	db	0
   359  002B15  00                 	db	0
   360  002B16  00                 	db	0
   361  002B17  00                 	db	0
   362  002B18  00                 	db	0
   363  002B19  00                 	db	0
   364  002B1A  00                 	db	0
   365  002B1B  00                 	db	0
   366  002B1C  00                 	db	0
   367  002B1D  00                 	db	0
   368  002B1E  00                 	db	0
   369  002B1F  00                 	db	0
   370  002B20  00                 	db	0
   371  002B21  00                 	db	0
   372  002B22  00                 	db	0
   373  002B23  00                 	db	0
   374  002B24  00                 	db	0
   375  002B25  00                 	db	0
   376  002B26  00                 	db	0
   377  002B27  00                 	db	0
   378                           
   379                           ;initializer for ValidateCmd@F10752
   380  002B28  52                 	db	82
   381  002B29  65                 	db	101
   382  002B2A  76                 	db	118
   383  002B2B  69                 	db	105
   384  002B2C  73                 	db	115
   385  002B2D  69                 	db	105
   386  002B2E  6F                 	db	111
   387  002B2F  6E                 	db	110
   388  002B30  00                 	db	0
   389  002B31  00                 	db	0
   390  002B32  00                 	db	0
   391  002B33  00                 	db	0
   392  002B34  00                 	db	0
   393  002B35  00                 	db	0
   394  002B36  00                 	db	0
   395  002B37  00                 	db	0
   396  002B38  00                 	db	0
   397  002B39  00                 	db	0
   398  002B3A  00                 	db	0
   399  002B3B  00                 	db	0
   400                           
   401                           ;initializer for ValidateCmd@F10749
   402  002B3C  50                 	db	80
   403  002B3D  61                 	db	97
   404  002B3E  72                 	db	114
   405  002B3F  74                 	db	116
   406  002B40  20                 	db	32
   407  002B41  4E                 	db	78
   408  002B42  75                 	db	117
   409  002B43  6D                 	db	109
   410  002B44  62                 	db	98
   411  002B45  65                 	db	101
   412  002B46  72                 	db	114
   413  002B47  00                 	db	0
   414  002B48  00                 	db	0
   415  002B49  00                 	db	0
   416  002B4A  00                 	db	0
   417  002B4B  00                 	db	0
   418  002B4C  00                 	db	0
   419  002B4D  00                 	db	0
   420  002B4E  00                 	db	0
   421  002B4F  00                 	db	0
   422                           
   423                           ;initializer for ValidateCmd@F10746
   424  002B50  53                 	db	83
   425  002B51  65                 	db	101
   426  002B52  72                 	db	114
   427  002B53  69                 	db	105
   428  002B54  61                 	db	97
   429  002B55  6C                 	db	108
   430  002B56  20                 	db	32
   431  002B57  4E                 	db	78
   432  002B58  75                 	db	117
   433  002B59  6D                 	db	109
   434  002B5A  62                 	db	98
   435  002B5B  65                 	db	101
   436  002B5C  72                 	db	114
   437  002B5D  00                 	db	0
   438  002B5E  00                 	db	0
   439  002B5F  00                 	db	0
   440  002B60  00                 	db	0
   441  002B61  00                 	db	0
   442  002B62  00                 	db	0
   443  002B63  00                 	db	0
   444                           
   445                           ;initializer for _MBRespon
   446  002B64  FF                 	db	255
   447  002B65  00                 	db	0
   448  002B66  00                 	db	0
   449  002B67  00                 	db	0
   450  002B68  00                 	db	0
   451  002B69  00                 	db	0
   452  002B6A  00                 	db	0
   453  002B6B  00                 	db	0
   454  002B6C  00                 	db	0
   455  002B6D  00                 	db	0
   456  002B6E  00                 	db	0
   457  002B6F  00                 	db	0
   458  002B70  00                 	db	0
   459  002B71  00                 	db	0
   460  002B72  00                 	db	0
   461  002B73  00                 	db	0
   462  002B74  00                 	db	0
   463  002B75  00                 	db	0
   464  002B76  00                 	db	0
   465  002B77  00                 	db	0
   466  002B78  00                 	db	0
   467  002B79  00                 	db	0
   468  002B7A  00                 	db	0
   469  002B7B  00                 	db	0
   470  002B7C  00                 	db	0
   471  002B7D  00                 	db	0
   472  002B7E  00                 	db	0
   473  002B7F  00                 	db	0
   474  002B80  00                 	db	0
   475  002B81  00                 	db	0
   476  002B82  00                 	db	0
   477  002B83  00                 	db	0
   478  002B84  00                 	db	0
   479  002B85  00                 	db	0
   480  002B86  00                 	db	0
   481  002B87  00                 	db	0
   482  002B88  00                 	db	0
   483  002B89  00                 	db	0
   484  002B8A  00                 	db	0
   485  002B8B  00                 	db	0
   486  002B8C  00                 	db	0
   487  002B8D  00                 	db	0
   488  002B8E  00                 	db	0
   489  002B8F  00                 	db	0
   490  002B90  00                 	db	0
   491  002B91  00                 	db	0
   492  002B92  00                 	db	0
   493  002B93  00                 	db	0
   494  002B94  00                 	db	0
   495  002B95  00                 	db	0
   496  002B96  00                 	db	0
   497  002B97  00                 	db	0
   498  002B98  00                 	db	0
   499  002B99  00                 	db	0
   500  002B9A  00                 	db	0
   501  002B9B  00                 	db	0
   502  002B9C  00                 	db	0
   503  002B9D  00                 	db	0
   504  002B9E  00                 	db	0
   505  002B9F  00                 	db	0
   506  002BA0  00                 	db	0
   507  002BA1  00                 	db	0
   508  002BA2  00                 	db	0
   509  002BA3  00                 	db	0
   510  002BA4  00                 	db	0
   511  002BA5  00                 	db	0
   512  002BA6  00                 	db	0
   513  002BA7  00                 	db	0
   514  002BA8  00                 	db	0
   515  002BA9  00                 	db	0
   516  002BAA  00                 	db	0
   517  002BAB  00                 	db	0
   518  002BAC  00                 	db	0
   519  002BAD  00                 	db	0
   520  002BAE  00                 	db	0
   521                           
   522                           	psect	idataBANK3
   523  003CB2                     __pidataBANK3:
   524                           	opt callstack 0
   525                           
   526                           ;initializer for _MB300xx
   527  003CB2  0001               	dw	1
   528  003CB4  0002               	dw	2
   529  003CB6  0003               	dw	3
   530  003CB8  0004               	dw	4
   531  003CBA  0005               	dw	5
   532  003CBC  0006               	dw	6
   533  003CBE  0007               	dw	7
   534  003CC0  0008               	dw	8
   535  003CC2  0009               	dw	9
   536  003CC4  000A               	dw	10
   537  003CC6  000B               	dw	11
   538  003CC8  000C               	dw	12
   539  003CCA  000D               	dw	13
   540  003CCC  000E               	dw	14
   541  003CCE  000F               	dw	15
   542  003CD0  0010               	dw	16
   543  003CD2  0011               	dw	17
   544  003CD4  0012               	dw	18
   545  003CD6  0013               	dw	19
   546  003CD8  0014               	dw	20
   547  003CDA  0015               	dw	21
   548  003CDC  0016               	dw	22
   549  003CDE  0017               	dw	23
   550  003CE0  0018               	dw	24
   551  003CE2  0019               	dw	25
   552  003CE4  001A               	dw	26
   553  003CE6  001B               	dw	27
   554  003CE8  001C               	dw	28
   555  003CEA  001D               	dw	29
   556  003CEC  001E               	dw	30
   557  003CEE  001F               	dw	31
   558  003CF0  0020               	dw	32
   559                           
   560                           	psect	idataBANK4
   561  003CF2                     __pidataBANK4:
   562                           	opt callstack 0
   563                           
   564                           ;initializer for _MB400xx
   565  003CF2  0020               	dw	32
   566  003CF4  001F               	dw	31
   567  003CF6  001E               	dw	30
   568  003CF8  001D               	dw	29
   569  003CFA  001C               	dw	28
   570  003CFC  001B               	dw	27
   571  003CFE  001A               	dw	26
   572  003D00  0019               	dw	25
   573  003D02  0018               	dw	24
   574  003D04  0017               	dw	23
   575  003D06  0016               	dw	22
   576  003D08  0015               	dw	21
   577  003D0A  0014               	dw	20
   578  003D0C  0013               	dw	19
   579  003D0E  0012               	dw	18
   580  003D10  0011               	dw	17
   581  003D12  0010               	dw	16
   582  003D14  000F               	dw	15
   583  003D16  000E               	dw	14
   584  003D18  000D               	dw	13
   585  003D1A  000C               	dw	12
   586  003D1C  000B               	dw	11
   587  003D1E  000A               	dw	10
   588  003D20  0009               	dw	9
   589  003D22  0008               	dw	8
   590  003D24  0007               	dw	7
   591  003D26  0006               	dw	6
   592  003D28  0005               	dw	5
   593  003D2A  0004               	dw	4
   594  003D2C  0003               	dw	3
   595  003D2E  0002               	dw	2
   596  003D30  0001               	dw	1
   597                           
   598                           	psect	nvBANK0
   599  0000FC                     __pnvBANK0:
   600                           	opt callstack 0
   601  0000FC                     _EUSART2_TxDefaultInterruptHandler:
   602                           	opt callstack 0
   603  0000FC                     	ds	2
   604  0000FE                     _eusart1TxBufferRemaining:
   605                           	opt callstack 0
   606  0000FE                     	ds	1
   607  0000FF                     _eusart2TxBufferRemaining:
   608                           	opt callstack 0
   609  0000FF                     	ds	1
   610                           
   611                           	psect	nvBANK1
   612  0001EA                     __pnvBANK1:
   613                           	opt callstack 0
   614  0001EA                     _EUSART1_ErrorHandler:
   615                           	opt callstack 0
   616  0001EA                     	ds	2
   617  0001EC                     _EUSART1_OverrunErrorHandler:
   618                           	opt callstack 0
   619  0001EC                     	ds	2
   620  0001EE                     _EUSART1_FramingErrorHandler:
   621                           	opt callstack 0
   622  0001EE                     	ds	2
   623  0001F0                     _EUSART2_ErrorHandler:
   624                           	opt callstack 0
   625  0001F0                     	ds	2
   626  0001F2                     _EUSART2_OverrunErrorHandler:
   627                           	opt callstack 0
   628  0001F2                     	ds	2
   629  0001F4                     _EUSART2_FramingErrorHandler:
   630                           	opt callstack 0
   631  0001F4                     	ds	2
   632  0001F6                     _EUSART1_RxDefaultInterruptHandler:
   633                           	opt callstack 0
   634  0001F6                     	ds	2
   635  0001F8                     _EUSART1_TxDefaultInterruptHandler:
   636                           	opt callstack 0
   637  0001F8                     	ds	2
   638  0001FA                     _EUSART2_RxDefaultInterruptHandler:
   639                           	opt callstack 0
   640  0001FA                     	ds	2
   641  0000                     _RC2REG	set	3737
   642  0000                     _RC2STAbits	set	3741
   643  0000                     _TX2REG	set	3738
   644  0000                     _TX2STAbits	set	3742
   645  0000                     _SP2BRGH	set	3740
   646  0000                     _SP2BRGL	set	3739
   647  0000                     _TX2STA	set	3742
   648  0000                     _RC2STA	set	3741
   649  0000                     _BAUD2CON	set	3743
   650  0000                     _PIR7bits	set	3793
   651  0000                     _PIR3bits	set	3789
   652  0000                     _PIE3bits	set	3781
   653  0000                     _PMD5	set	3814
   654  0000                     _PMD4	set	3813
   655  0000                     _PMD3	set	3812
   656  0000                     _PMD2	set	3811
   657  0000                     _PMD1	set	3810
   658  0000                     _PMD0	set	3809
   659  0000                     _OSCTUNE	set	3805
   660  0000                     _OSCFRQ	set	3806
   661  0000                     _OSCEN	set	3804
   662  0000                     _OSCCON3	set	3802
   663  0000                     _OSCCON1	set	3800
   664  0000                     _RX2PPS	set	3725
   665  0000                     _RC6PPS	set	3837
   666  0000                     _RB6PPS	set	3829
   667  0000                     _RX1PPS	set	3765
   668  0000                     _INLVLE	set	3882
   669  0000                     _INLVLD	set	3874
   670  0000                     _INLVLC	set	3869
   671  0000                     _INLVLB	set	3861
   672  0000                     _INLVLA	set	3853
   673  0000                     _SLRCONE	set	3883
   674  0000                     _SLRCOND	set	3875
   675  0000                     _SLRCONC	set	3870
   676  0000                     _SLRCONB	set	3862
   677  0000                     _SLRCONA	set	3854
   678  0000                     _ODCOND	set	3876
   679  0000                     _ODCONC	set	3871
   680  0000                     _ODCONB	set	3863
   681  0000                     _ODCONA	set	3855
   682  0000                     _ODCONE	set	3884
   683  0000                     _WPUC	set	3872
   684  0000                     _WPUA	set	3856
   685  0000                     _WPUB	set	3864
   686  0000                     _WPUE	set	3885
   687  0000                     _WPUD	set	3877
   688  0000                     _ANSELA	set	3857
   689  0000                     _ANSELE	set	3886
   690  0000                     _ANSELB	set	3865
   691  0000                     _ANSELC	set	3873
   692  0000                     _ANSELD	set	3878
   693  0000                     _LATDbits	set	3974
   694  0000                     _LATAbits	set	3971
   695  0000                     _RC1REG	set	3993
   696  0000                     _RC1STAbits	set	3997
   697  0000                     _TX1REG	set	3994
   698  0000                     _TX1STAbits	set	3998
   699  0000                     _SP1BRGH	set	3996
   700  0000                     _SP1BRGL	set	3995
   701  0000                     _TX1STA	set	3998
   702  0000                     _RC1STA	set	3997
   703  0000                     _BAUD1CON	set	3999
   704  0000                     _NVMDAT	set	3968
   705  0000                     _NVMADRL	set	3966
   706  0000                     _NVMADRH	set	3967
   707  0000                     _NVMCON2	set	3970
   708  0000                     _TABLAT	set	4085
   709  0000                     _TBLPTRL	set	4086
   710  0000                     _TBLPTRH	set	4087
   711  0000                     _TBLPTRU	set	4088
   712  0000                     _NVMCON1bits	set	3969
   713  0000                     _INTCONbits	set	4082
   714  0000                     _TRISD	set	3979
   715  0000                     _TRISC	set	3978
   716  0000                     _TRISB	set	3977
   717  0000                     _TRISA	set	3976
   718  0000                     _TRISE	set	3980
   719  0000                     _LATC	set	3973
   720  0000                     _LATB	set	3972
   721  0000                     _LATA	set	3971
   722  0000                     _LATD	set	3974
   723  0000                     _LATE	set	3975
   724                           
   725                           	psect	mediumconst
   726  00F8BE                     __pmediumconst:
   727                           	opt callstack 0
   728  00F8BE  00                 	db	0
   729  00F8BF                     STR_56:
   730                           
   731                           ; BSR set to: 0
   732  00F8BF  20                 	db	32
   733  00F8C0  20                 	db	32
   734  00F8C1  20                 	db	32
   735  00F8C2  20                 	db	32
   736  00F8C3  20                 	db	32
   737  00F8C4  20                 	db	32
   738  00F8C5  41                 	db	65	;'A'
   739  00F8C6  64                 	db	100	;'d'
   740  00F8C7  64                 	db	100	;'d'
   741  00F8C8  20                 	db	32
   742  00F8C9  30                 	db	48	;'0'
   743  00F8CA  78                 	db	120	;'x'
   744  00F8CB  30                 	db	48	;'0'
   745  00F8CC  30                 	db	48	;'0'
   746  00F8CD  30                 	db	48	;'0'
   747  00F8CE  30                 	db	48	;'0'
   748  00F8CF  20                 	db	32
   749  00F8D0  74                 	db	116	;'t'
   750  00F8D1  6F                 	db	111	;'o'
   751  00F8D2  20                 	db	32
   752  00F8D3  30                 	db	48	;'0'
   753  00F8D4  78                 	db	120	;'x'
   754  00F8D5  30                 	db	48	;'0'
   755  00F8D6  30                 	db	48	;'0'
   756  00F8D7  33                 	db	51	;'3'
   757  00F8D8  31                 	db	49	;'1'
   758  00F8D9  20                 	db	32
   759  00F8DA  2D                 	db	45
   760  00F8DB  20                 	db	32
   761  00F8DC  33                 	db	51	;'3'
   762  00F8DD  32                 	db	50	;'2'
   763  00F8DE  78                 	db	120	;'x'
   764  00F8DF  20                 	db	32
   765  00F8E0  43                 	db	67	;'C'
   766  00F8E1  69                 	db	105	;'i'
   767  00F8E2  72                 	db	114	;'r'
   768  00F8E3  63                 	db	99	;'c'
   769  00F8E4  75                 	db	117	;'u'
   770  00F8E5  69                 	db	105	;'i'
   771  00F8E6  74                 	db	116	;'t'
   772  00F8E7  20                 	db	32
   773  00F8E8  53                 	db	83	;'S'
   774  00F8E9  65                 	db	101	;'e'
   775  00F8EA  74                 	db	116	;'t'
   776  00F8EB  20                 	db	32
   777  00F8EC  53                 	db	83	;'S'
   778  00F8ED  74                 	db	116	;'t'
   779  00F8EE  61                 	db	97	;'a'
   780  00F8EF  74                 	db	116	;'t'
   781  00F8F0  75                 	db	117	;'u'
   782  00F8F1  73                 	db	115	;'s'
   783  00F8F2  20                 	db	32
   784  00F8F3  20                 	db	32
   785  00F8F4  28                 	db	40
   786  00F8F5  6C                 	db	108	;'l'
   787  00F8F6  6F                 	db	111	;'o'
   788  00F8F7  77                 	db	119	;'w'
   789  00F8F8  65                 	db	101	;'e'
   790  00F8F9  72                 	db	114	;'r'
   791  00F8FA  20                 	db	32
   792  00F8FB  38                 	db	56	;'8'
   793  00F8FC  62                 	db	98	;'b'
   794  00F8FD  69                 	db	105	;'i'
   795  00F8FE  74                 	db	116	;'t'
   796  00F8FF  73                 	db	115	;'s'
   797  00F900  20                 	db	32
   798  00F901  6F                 	db	111	;'o'
   799  00F902  6E                 	db	110	;'n'
   800  00F903  6C                 	db	108	;'l'
   801  00F904  79                 	db	121	;'y'
   802  00F905  29                 	db	41
   803  00F906  0D                 	db	13
   804  00F907  0A                 	db	10
   805  00F908  0A                 	db	10
   806  00F909  00                 	db	0
   807  00F90A                     STR_48:
   808                           
   809                           ; BSR set to: 0
   810  00F90A  20                 	db	32
   811  00F90B  20                 	db	32
   812  00F90C  20                 	db	32
   813  00F90D  20                 	db	32
   814  00F90E  20                 	db	32
   815  00F90F  20                 	db	32
   816  00F910  41                 	db	65	;'A'
   817  00F911  64                 	db	100	;'d'
   818  00F912  64                 	db	100	;'d'
   819  00F913  20                 	db	32
   820  00F914  30                 	db	48	;'0'
   821  00F915  78                 	db	120	;'x'
   822  00F916  30                 	db	48	;'0'
   823  00F917  30                 	db	48	;'0'
   824  00F918  30                 	db	48	;'0'
   825  00F919  30                 	db	48	;'0'
   826  00F91A  20                 	db	32
   827  00F91B  74                 	db	116	;'t'
   828  00F91C  6F                 	db	111	;'o'
   829  00F91D  20                 	db	32
   830  00F91E  30                 	db	48	;'0'
   831  00F91F  78                 	db	120	;'x'
   832  00F920  30                 	db	48	;'0'
   833  00F921  30                 	db	48	;'0'
   834  00F922  33                 	db	51	;'3'
   835  00F923  31                 	db	49	;'1'
   836  00F924  20                 	db	32
   837  00F925  2D                 	db	45
   838  00F926  20                 	db	32
   839  00F927  33                 	db	51	;'3'
   840  00F928  32                 	db	50	;'2'
   841  00F929  78                 	db	120	;'x'
   842  00F92A  20                 	db	32
   843  00F92B  43                 	db	67	;'C'
   844  00F92C  69                 	db	105	;'i'
   845  00F92D  72                 	db	114	;'r'
   846  00F92E  63                 	db	99	;'c'
   847  00F92F  75                 	db	117	;'u'
   848  00F930  69                 	db	105	;'i'
   849  00F931  74                 	db	116	;'t'
   850  00F932  20                 	db	32
   851  00F933  47                 	db	71	;'G'
   852  00F934  65                 	db	101	;'e'
   853  00F935  74                 	db	116	;'t'
   854  00F936  20                 	db	32
   855  00F937  53                 	db	83	;'S'
   856  00F938  74                 	db	116	;'t'
   857  00F939  61                 	db	97	;'a'
   858  00F93A  74                 	db	116	;'t'
   859  00F93B  75                 	db	117	;'u'
   860  00F93C  73                 	db	115	;'s'
   861  00F93D  20                 	db	32
   862  00F93E  28                 	db	40
   863  00F93F  6C                 	db	108	;'l'
   864  00F940  6F                 	db	111	;'o'
   865  00F941  77                 	db	119	;'w'
   866  00F942  65                 	db	101	;'e'
   867  00F943  72                 	db	114	;'r'
   868  00F944  20                 	db	32
   869  00F945  38                 	db	56	;'8'
   870  00F946  62                 	db	98	;'b'
   871  00F947  69                 	db	105	;'i'
   872  00F948  74                 	db	116	;'t'
   873  00F949  73                 	db	115	;'s'
   874  00F94A  20                 	db	32
   875  00F94B  6F                 	db	111	;'o'
   876  00F94C  6E                 	db	110	;'n'
   877  00F94D  6C                 	db	108	;'l'
   878  00F94E  79                 	db	121	;'y'
   879  00F94F  29                 	db	41
   880  00F950  0D                 	db	13
   881  00F951  0A                 	db	10
   882  00F952  00                 	db	0
   883  00F953                     STR_66:
   884                           
   885                           ; BSR set to: 0
   886  00F953  43                 	db	67	;'C'
   887  00F954  6C                 	db	108	;'l'
   888  00F955  65                 	db	101	;'e'
   889  00F956  61                 	db	97	;'a'
   890  00F957  72                 	db	114	;'r'
   891  00F958  69                 	db	105	;'i'
   892  00F959  6E                 	db	110	;'n'
   893  00F95A  67                 	db	103	;'g'
   894  00F95B  20                 	db	32
   895  00F95C  45                 	db	69	;'E'
   896  00F95D  45                 	db	69	;'E'
   897  00F95E  50                 	db	80	;'P'
   898  00F95F  52                 	db	82	;'R'
   899  00F960  4F                 	db	79	;'O'
   900  00F961  4D                 	db	77	;'M'
   901  00F962  20                 	db	32
   902  00F963  66                 	db	102	;'f'
   903  00F964  72                 	db	114	;'r'
   904  00F965  6F                 	db	111	;'o'
   905  00F966  6D                 	db	109	;'m'
   906  00F967  20                 	db	32
   907  00F968  41                 	db	65	;'A'
   908  00F969  64                 	db	100	;'d'
   909  00F96A  64                 	db	100	;'d'
   910  00F96B  72                 	db	114	;'r'
   911  00F96C  65                 	db	101	;'e'
   912  00F96D  73                 	db	115	;'s'
   913  00F96E  73                 	db	115	;'s'
   914  00F96F  3A                 	db	58	;':'
   915  00F970  20                 	db	32
   916  00F971  30                 	db	48	;'0'
   917  00F972  78                 	db	120	;'x'
   918  00F973  25                 	db	37
   919  00F974  30                 	db	48	;'0'
   920  00F975  34                 	db	52	;'4'
   921  00F976  78                 	db	120	;'x'
   922  00F977  20                 	db	32
   923  00F978  66                 	db	102	;'f'
   924  00F979  6F                 	db	111	;'o'
   925  00F97A  72                 	db	114	;'r'
   926  00F97B  20                 	db	32
   927  00F97C  6E                 	db	110	;'n'
   928  00F97D  75                 	db	117	;'u'
   929  00F97E  6D                 	db	109	;'m'
   930  00F97F  20                 	db	32
   931  00F980  62                 	db	98	;'b'
   932  00F981  79                 	db	121	;'y'
   933  00F982  74                 	db	116	;'t'
   934  00F983  65                 	db	101	;'e'
   935  00F984  73                 	db	115	;'s'
   936  00F985  3A                 	db	58	;':'
   937  00F986  20                 	db	32
   938  00F987  25                 	db	37
   939  00F988  69                 	db	105	;'i'
   940  00F989  20                 	db	32
   941  00F98A  0D                 	db	13
   942  00F98B  0A                 	db	10
   943  00F98C  00                 	db	0
   944  00F98D                     STR_54:
   945                           
   946                           ; BSR set to: 0
   947  00F98D  20                 	db	32
   948  00F98E  20                 	db	32
   949  00F98F  20                 	db	32
   950  00F990  20                 	db	32
   951  00F991  20                 	db	32
   952  00F992  20                 	db	32
   953  00F993  41                 	db	65	;'A'
   954  00F994  64                 	db	100	;'d'
   955  00F995  64                 	db	100	;'d'
   956  00F996  20                 	db	32
   957  00F997  30                 	db	48	;'0'
   958  00F998  78                 	db	120	;'x'
   959  00F999  30                 	db	48	;'0'
   960  00F99A  36                 	db	54	;'6'
   961  00F99B  30                 	db	48	;'0'
   962  00F99C  30                 	db	48	;'0'
   963  00F99D  20                 	db	32
   964  00F99E  74                 	db	116	;'t'
   965  00F99F  6F                 	db	111	;'o'
   966  00F9A0  20                 	db	32
   967  00F9A1  30                 	db	48	;'0'
   968  00F9A2  78                 	db	120	;'x'
   969  00F9A3  30                 	db	48	;'0'
   970  00F9A4  36                 	db	54	;'6'
   971  00F9A5  30                 	db	48	;'0'
   972  00F9A6  32                 	db	50	;'2'
   973  00F9A7  20                 	db	32
   974  00F9A8  2D                 	db	45
   975  00F9A9  20                 	db	32
   976  00F9AA  33                 	db	51	;'3'
   977  00F9AB  78                 	db	120	;'x'
   978  00F9AC  20                 	db	32
   979  00F9AD  41                 	db	65	;'A'
   980  00F9AE  6E                 	db	110	;'n'
   981  00F9AF  61                 	db	97	;'a'
   982  00F9B0  6C                 	db	108	;'l'
   983  00F9B1  6F                 	db	111	;'o'
   984  00F9B2  67                 	db	103	;'g'
   985  00F9B3  75                 	db	117	;'u'
   986  00F9B4  65                 	db	101	;'e'
   987  00F9B5  20                 	db	32
   988  00F9B6  49                 	db	73	;'I'
   989  00F9B7  6E                 	db	110	;'n'
   990  00F9B8  70                 	db	112	;'p'
   991  00F9B9  75                 	db	117	;'u'
   992  00F9BA  74                 	db	116	;'t'
   993  00F9BB  73                 	db	115	;'s'
   994  00F9BC  20                 	db	32
   995  00F9BD  2D                 	db	45
   996  00F9BE  20                 	db	32
   997  00F9BF  57                 	db	87	;'W'
   998  00F9C0  49                 	db	73	;'I'
   999  00F9C1  50                 	db	80	;'P'
  1000  00F9C2  0D                 	db	13
  1001  00F9C3  0A                 	db	10
  1002  00F9C4  0A                 	db	10
  1003  00F9C5  00                 	db	0
  1004  00F9C6                     STR_53:
  1005                           
  1006                           ; BSR set to: 0
  1007  00F9C6  20                 	db	32
  1008  00F9C7  20                 	db	32
  1009  00F9C8  20                 	db	32
  1010  00F9C9  20                 	db	32
  1011  00F9CA  20                 	db	32
  1012  00F9CB  20                 	db	32
  1013  00F9CC  41                 	db	65	;'A'
  1014  00F9CD  64                 	db	100	;'d'
  1015  00F9CE  64                 	db	100	;'d'
  1016  00F9CF  20                 	db	32
  1017  00F9D0  30                 	db	48	;'0'
  1018  00F9D1  78                 	db	120	;'x'
  1019  00F9D2  30                 	db	48	;'0'
  1020  00F9D3  35                 	db	53	;'5'
  1021  00F9D4  30                 	db	48	;'0'
  1022  00F9D5  30                 	db	48	;'0'
  1023  00F9D6  20                 	db	32
  1024  00F9D7  74                 	db	116	;'t'
  1025  00F9D8  6F                 	db	111	;'o'
  1026  00F9D9  20                 	db	32
  1027  00F9DA  30                 	db	48	;'0'
  1028  00F9DB  78                 	db	120	;'x'
  1029  00F9DC  30                 	db	48	;'0'
  1030  00F9DD  35                 	db	53	;'5'
  1031  00F9DE  30                 	db	48	;'0'
  1032  00F9DF  34                 	db	52	;'4'
  1033  00F9E0  20                 	db	32
  1034  00F9E1  2D                 	db	45
  1035  00F9E2  20                 	db	32
  1036  00F9E3  43                 	db	67	;'C'
  1037  00F9E4  6F                 	db	111	;'o'
  1038  00F9E5  6D                 	db	109	;'m'
  1039  00F9E6  70                 	db	112	;'p'
  1040  00F9E7  69                 	db	105	;'i'
  1041  00F9E8  6C                 	db	108	;'l'
  1042  00F9E9  65                 	db	101	;'e'
  1043  00F9EA  20                 	db	32
  1044  00F9EB  54                 	db	84	;'T'
  1045  00F9EC  69                 	db	105	;'i'
  1046  00F9ED  6D                 	db	109	;'m'
  1047  00F9EE  65                 	db	101	;'e'
  1048  00F9EF  20                 	db	32
  1049  00F9F0  2D                 	db	45
  1050  00F9F1  20                 	db	32
  1051  00F9F2  28                 	db	40
  1052  00F9F3  41                 	db	65	;'A'
  1053  00F9F4  53                 	db	83	;'S'
  1054  00F9F5  43                 	db	67	;'C'
  1055  00F9F6  49                 	db	73	;'I'
  1056  00F9F7  49                 	db	73	;'I'
  1057  00F9F8  29                 	db	41
  1058  00F9F9  0D                 	db	13
  1059  00F9FA  0A                 	db	10
  1060  00F9FB  00                 	db	0
  1061  00F9FC                     STR_8:
  1062                           
  1063                           ; BSR set to: 0
  1064  00F9FC  43                 	db	67	;'C'
  1065  00F9FD  6F                 	db	111	;'o'
  1066  00F9FE  6D                 	db	109	;'m'
  1067  00F9FF  70                 	db	112	;'p'
  1068  00FA00  6C                 	db	108	;'l'
  1069  00FA01  65                 	db	101	;'e'
  1070  00FA02  74                 	db	116	;'t'
  1071  00FA03  65                 	db	101	;'e'
  1072  00FA04  64                 	db	100	;'d'
  1073  00FA05  20                 	db	32
  1074  00FA06  41                 	db	65	;'A'
  1075  00FA07  64                 	db	100	;'d'
  1076  00FA08  64                 	db	100	;'d'
  1077  00FA09  69                 	db	105	;'i'
  1078  00FA0A  6E                 	db	110	;'n'
  1079  00FA0B  67                 	db	103	;'g'
  1080  00FA0C  20                 	db	32
  1081  00FA0D  72                 	db	114	;'r'
  1082  00FA0E  78                 	db	120	;'x'
  1083  00FA0F  44                 	db	68	;'D'
  1084  00FA10  61                 	db	97	;'a'
  1085  00FA11  74                 	db	116	;'t'
  1086  00FA12  61                 	db	97	;'a'
  1087  00FA13  20                 	db	32
  1088  00FA14  42                 	db	66	;'B'
  1089  00FA15  75                 	db	117	;'u'
  1090  00FA16  66                 	db	102	;'f'
  1091  00FA17  66                 	db	102	;'f'
  1092  00FA18  65                 	db	101	;'e'
  1093  00FA19  72                 	db	114	;'r'
  1094  00FA1A  20                 	db	32
  1095  00FA1B  74                 	db	116	;'t'
  1096  00FA1C  6F                 	db	111	;'o'
  1097  00FA1D  20                 	db	32
  1098  00FA1E  4D                 	db	77	;'M'
  1099  00FA1F  6F                 	db	111	;'o'
  1100  00FA20  64                 	db	100	;'d'
  1101  00FA21  62                 	db	98	;'b'
  1102  00FA22  75                 	db	117	;'u'
  1103  00FA23  73                 	db	115	;'s'
  1104  00FA24  44                 	db	68	;'D'
  1105  00FA25  61                 	db	97	;'a'
  1106  00FA26  74                 	db	116	;'t'
  1107  00FA27  61                 	db	97	;'a'
  1108  00FA28  20                 	db	32
  1109  00FA29  41                 	db	65	;'A'
  1110  00FA2A  72                 	db	114	;'r'
  1111  00FA2B  72                 	db	114	;'r'
  1112  00FA2C  61                 	db	97	;'a'
  1113  00FA2D  79                 	db	121	;'y'
  1114  00FA2E  0D                 	db	13
  1115  00FA2F  0A                 	db	10
  1116  00FA30  0A                 	db	10
  1117  00FA31  00                 	db	0
  1118  00FA32                     STR_55:
  1119                           
  1120                           ; BSR set to: 0
  1121  00FA32  20                 	db	32
  1122  00FA33  20                 	db	32
  1123  00FA34  20                 	db	32
  1124  00FA35  30                 	db	48	;'0'
  1125  00FA36  78                 	db	120	;'x'
  1126  00FA37  31                 	db	49	;'1'
  1127  00FA38  30                 	db	48	;'0'
  1128  00FA39  20                 	db	32
  1129  00FA3A  2D                 	db	45
  1130  00FA3B  20                 	db	32
  1131  00FA3C  57                 	db	87	;'W'
  1132  00FA3D  72                 	db	114	;'r'
  1133  00FA3E  69                 	db	105	;'i'
  1134  00FA3F  74                 	db	116	;'t'
  1135  00FA40  65                 	db	101	;'e'
  1136  00FA41  20                 	db	32
  1137  00FA42  4D                 	db	77	;'M'
  1138  00FA43  75                 	db	117	;'u'
  1139  00FA44  6C                 	db	108	;'l'
  1140  00FA45  74                 	db	116	;'t'
  1141  00FA46  69                 	db	105	;'i'
  1142  00FA47  70                 	db	112	;'p'
  1143  00FA48  6C                 	db	108	;'l'
  1144  00FA49  65                 	db	101	;'e'
  1145  00FA4A  20                 	db	32
  1146  00FA4B  52                 	db	82	;'R'
  1147  00FA4C  65                 	db	101	;'e'
  1148  00FA4D  67                 	db	103	;'g'
  1149  00FA4E  69                 	db	105	;'i'
  1150  00FA4F  73                 	db	115	;'s'
  1151  00FA50  74                 	db	116	;'t'
  1152  00FA51  65                 	db	101	;'e'
  1153  00FA52  72                 	db	114	;'r'
  1154  00FA53  73                 	db	115	;'s'
  1155  00FA54  20                 	db	32
  1156  00FA55  28                 	db	40
  1157  00FA56  4D                 	db	77	;'M'
  1158  00FA57  61                 	db	97	;'a'
  1159  00FA58  78                 	db	120	;'x'
  1160  00FA59  20                 	db	32
  1161  00FA5A  33                 	db	51	;'3'
  1162  00FA5B  32                 	db	50	;'2'
  1163  00FA5C  78                 	db	120	;'x'
  1164  00FA5D  20                 	db	32
  1165  00FA5E  31                 	db	49	;'1'
  1166  00FA5F  36                 	db	54	;'6'
  1167  00FA60  62                 	db	98	;'b'
  1168  00FA61  69                 	db	105	;'i'
  1169  00FA62  74                 	db	116	;'t'
  1170  00FA63  29                 	db	41
  1171  00FA64  0D                 	db	13
  1172  00FA65  0A                 	db	10
  1173  00FA66  00                 	db	0
  1174  00FA67                     STR_52:
  1175                           
  1176                           ; BSR set to: 0
  1177  00FA67  20                 	db	32
  1178  00FA68  20                 	db	32
  1179  00FA69  20                 	db	32
  1180  00FA6A  20                 	db	32
  1181  00FA6B  20                 	db	32
  1182  00FA6C  20                 	db	32
  1183  00FA6D  41                 	db	65	;'A'
  1184  00FA6E  64                 	db	100	;'d'
  1185  00FA6F  64                 	db	100	;'d'
  1186  00FA70  20                 	db	32
  1187  00FA71  30                 	db	48	;'0'
  1188  00FA72  78                 	db	120	;'x'
  1189  00FA73  30                 	db	48	;'0'
  1190  00FA74  34                 	db	52	;'4'
  1191  00FA75  30                 	db	48	;'0'
  1192  00FA76  30                 	db	48	;'0'
  1193  00FA77  20                 	db	32
  1194  00FA78  74                 	db	116	;'t'
  1195  00FA79  6F                 	db	111	;'o'
  1196  00FA7A  20                 	db	32
  1197  00FA7B  30                 	db	48	;'0'
  1198  00FA7C  78                 	db	120	;'x'
  1199  00FA7D  30                 	db	48	;'0'
  1200  00FA7E  34                 	db	52	;'4'
  1201  00FA7F  30                 	db	48	;'0'
  1202  00FA80  35                 	db	53	;'5'
  1203  00FA81  20                 	db	32
  1204  00FA82  2D                 	db	45
  1205  00FA83  20                 	db	32
  1206  00FA84  43                 	db	67	;'C'
  1207  00FA85  6F                 	db	111	;'o'
  1208  00FA86  6D                 	db	109	;'m'
  1209  00FA87  70                 	db	112	;'p'
  1210  00FA88  69                 	db	105	;'i'
  1211  00FA89  6C                 	db	108	;'l'
  1212  00FA8A  65                 	db	101	;'e'
  1213  00FA8B  20                 	db	32
  1214  00FA8C  44                 	db	68	;'D'
  1215  00FA8D  61                 	db	97	;'a'
  1216  00FA8E  74                 	db	116	;'t'
  1217  00FA8F  65                 	db	101	;'e'
  1218  00FA90  20                 	db	32
  1219  00FA91  28                 	db	40
  1220  00FA92  41                 	db	65	;'A'
  1221  00FA93  53                 	db	83	;'S'
  1222  00FA94  43                 	db	67	;'C'
  1223  00FA95  49                 	db	73	;'I'
  1224  00FA96  49                 	db	73	;'I'
  1225  00FA97  29                 	db	41
  1226  00FA98  0D                 	db	13
  1227  00FA99  0A                 	db	10
  1228  00FA9A  00                 	db	0
  1229  00FA9B                     STR_58:
  1230                           
  1231                           ; BSR set to: 0
  1232  00FA9B  20                 	db	32
  1233  00FA9C  20                 	db	32
  1234  00FA9D  20                 	db	32
  1235  00FA9E  3F                 	db	63	;'?'
  1236  00FA9F  20                 	db	32
  1237  00FAA0  2D                 	db	45
  1238  00FAA1  20                 	db	32
  1239  00FAA2  49                 	db	73	;'I'
  1240  00FAA3  6E                 	db	110	;'n'
  1241  00FAA4  69                 	db	105	;'i'
  1242  00FAA5  74                 	db	116	;'t'
  1243  00FAA6  61                 	db	97	;'a'
  1244  00FAA7  6C                 	db	108	;'l'
  1245  00FAA8  69                 	db	105	;'i'
  1246  00FAA9  73                 	db	115	;'s'
  1247  00FAAA  65                 	db	101	;'e'
  1248  00FAAB  20                 	db	32
  1249  00FAAC  61                 	db	97	;'a'
  1250  00FAAD  6E                 	db	110	;'n'
  1251  00FAAE  64                 	db	100	;'d'
  1252  00FAAF  20                 	db	32
  1253  00FAB0  64                 	db	100	;'d'
  1254  00FAB1  69                 	db	105	;'i'
  1255  00FAB2  73                 	db	115	;'s'
  1256  00FAB3  70                 	db	112	;'p'
  1257  00FAB4  6C                 	db	108	;'l'
  1258  00FAB5  61                 	db	97	;'a'
  1259  00FAB6  79                 	db	121	;'y'
  1260  00FAB7  20                 	db	32
  1261  00FAB8  63                 	db	99	;'c'
  1262  00FAB9  61                 	db	97	;'a'
  1263  00FABA  72                 	db	114	;'r'
  1264  00FABB  64                 	db	100	;'d'
  1265  00FABC  20                 	db	32
  1266  00FABD  64                 	db	100	;'d'
  1267  00FABE  65                 	db	101	;'e'
  1268  00FABF  74                 	db	116	;'t'
  1269  00FAC0  61                 	db	97	;'a'
  1270  00FAC1  69                 	db	105	;'i'
  1271  00FAC2  6C                 	db	108	;'l'
  1272  00FAC3  73                 	db	115	;'s'
  1273  00FAC4  0D                 	db	13
  1274  00FAC5  0A                 	db	10
  1275  00FAC6  00                 	db	0
  1276  00FAC7                     STR_49:
  1277                           
  1278                           ; BSR set to: 0
  1279  00FAC7  20                 	db	32
  1280  00FAC8  20                 	db	32
  1281  00FAC9  20                 	db	32
  1282  00FACA  20                 	db	32
  1283  00FACB  20                 	db	32
  1284  00FACC  20                 	db	32
  1285  00FACD  41                 	db	65	;'A'
  1286  00FACE  64                 	db	100	;'d'
  1287  00FACF  64                 	db	100	;'d'
  1288  00FAD0  20                 	db	32
  1289  00FAD1  30                 	db	48	;'0'
  1290  00FAD2  78                 	db	120	;'x'
  1291  00FAD3  30                 	db	48	;'0'
  1292  00FAD4  31                 	db	49	;'1'
  1293  00FAD5  30                 	db	48	;'0'
  1294  00FAD6  30                 	db	48	;'0'
  1295  00FAD7  20                 	db	32
  1296  00FAD8  74                 	db	116	;'t'
  1297  00FAD9  6F                 	db	111	;'o'
  1298  00FADA  20                 	db	32
  1299  00FADB  30                 	db	48	;'0'
  1300  00FADC  78                 	db	120	;'x'
  1301  00FADD  30                 	db	48	;'0'
  1302  00FADE  31                 	db	49	;'1'
  1303  00FADF  30                 	db	48	;'0'
  1304  00FAE0  38                 	db	56	;'8'
  1305  00FAE1  20                 	db	32
  1306  00FAE2  2D                 	db	45
  1307  00FAE3  20                 	db	32
  1308  00FAE4  50                 	db	80	;'P'
  1309  00FAE5  61                 	db	97	;'a'
  1310  00FAE6  72                 	db	114	;'r'
  1311  00FAE7  74                 	db	116	;'t'
  1312  00FAE8  20                 	db	32
  1313  00FAE9  4E                 	db	78	;'N'
  1314  00FAEA  75                 	db	117	;'u'
  1315  00FAEB  6D                 	db	109	;'m'
  1316  00FAEC  62                 	db	98	;'b'
  1317  00FAED  65                 	db	101	;'e'
  1318  00FAEE  72                 	db	114	;'r'
  1319  00FAEF  0D                 	db	13
  1320  00FAF0  0A                 	db	10
  1321  00FAF1  00                 	db	0
  1322  00FAF2                     STR_42:
  1323                           
  1324                           ; BSR set to: 0
  1325  00FAF2  43                 	db	67	;'C'
  1326  00FAF3  6F                 	db	111	;'o'
  1327  00FAF4  6D                 	db	109	;'m'
  1328  00FAF5  70                 	db	112	;'p'
  1329  00FAF6  69                 	db	105	;'i'
  1330  00FAF7  6C                 	db	108	;'l'
  1331  00FAF8  65                 	db	101	;'e'
  1332  00FAF9  64                 	db	100	;'d'
  1333  00FAFA  20                 	db	32
  1334  00FAFB  6F                 	db	111	;'o'
  1335  00FAFC  6E                 	db	110	;'n'
  1336  00FAFD  20                 	db	32
  1337  00FAFE  25                 	db	37
  1338  00FAFF  73                 	db	115	;'s'
  1339  00FB00  20                 	db	32
  1340  00FB01  61                 	db	97	;'a'
  1341  00FB02  74                 	db	116	;'t'
  1342  00FB03  20                 	db	32
  1343  00FB04  25                 	db	37
  1344  00FB05  73                 	db	115	;'s'
  1345  00FB06  20                 	db	32
  1346  00FB07  62                 	db	98	;'b'
  1347  00FB08  79                 	db	121	;'y'
  1348  00FB09  20                 	db	32
  1349  00FB0A  58                 	db	88	;'X'
  1350  00FB0B  43                 	db	67	;'C'
  1351  00FB0C  38                 	db	56	;'8'
  1352  00FB0D  20                 	db	32
  1353  00FB0E  76                 	db	118	;'v'
  1354  00FB0F  65                 	db	101	;'e'
  1355  00FB10  72                 	db	114	;'r'
  1356  00FB11  73                 	db	115	;'s'
  1357  00FB12  69                 	db	105	;'i'
  1358  00FB13  6F                 	db	111	;'o'
  1359  00FB14  6E                 	db	110	;'n'
  1360  00FB15  20                 	db	32
  1361  00FB16  25                 	db	37
  1362  00FB17  75                 	db	117	;'u'
  1363  00FB18  0D                 	db	13
  1364  00FB19  0A                 	db	10
  1365  00FB1A  0A                 	db	10
  1366  00FB1B  00                 	db	0
  1367  00FB1C                     STR_47:
  1368                           
  1369                           ; BSR set to: 0
  1370  00FB1C  20                 	db	32
  1371  00FB1D  20                 	db	32
  1372  00FB1E  20                 	db	32
  1373  00FB1F  30                 	db	48	;'0'
  1374  00FB20  78                 	db	120	;'x'
  1375  00FB21  30                 	db	48	;'0'
  1376  00FB22  33                 	db	51	;'3'
  1377  00FB23  20                 	db	32
  1378  00FB24  2D                 	db	45
  1379  00FB25  20                 	db	32
  1380  00FB26  52                 	db	82	;'R'
  1381  00FB27  65                 	db	101	;'e'
  1382  00FB28  61                 	db	97	;'a'
  1383  00FB29  64                 	db	100	;'d'
  1384  00FB2A  20                 	db	32
  1385  00FB2B  4D                 	db	77	;'M'
  1386  00FB2C  75                 	db	117	;'u'
  1387  00FB2D  6C                 	db	108	;'l'
  1388  00FB2E  74                 	db	116	;'t'
  1389  00FB2F  69                 	db	105	;'i'
  1390  00FB30  70                 	db	112	;'p'
  1391  00FB31  6C                 	db	108	;'l'
  1392  00FB32  65                 	db	101	;'e'
  1393  00FB33  20                 	db	32
  1394  00FB34  31                 	db	49	;'1'
  1395  00FB35  36                 	db	54	;'6'
  1396  00FB36  62                 	db	98	;'b'
  1397  00FB37  69                 	db	105	;'i'
  1398  00FB38  74                 	db	116	;'t'
  1399  00FB39  20                 	db	32
  1400  00FB3A  52                 	db	82	;'R'
  1401  00FB3B  65                 	db	101	;'e'
  1402  00FB3C  67                 	db	103	;'g'
  1403  00FB3D  69                 	db	105	;'i'
  1404  00FB3E  73                 	db	115	;'s'
  1405  00FB3F  74                 	db	116	;'t'
  1406  00FB40  65                 	db	101	;'e'
  1407  00FB41  72                 	db	114	;'r'
  1408  00FB42  73                 	db	115	;'s'
  1409  00FB43  0D                 	db	13
  1410  00FB44  0A                 	db	10
  1411  00FB45  00                 	db	0
  1412  00FB46                     STR_51:
  1413                           
  1414                           ; BSR set to: 0
  1415  00FB46  20                 	db	32
  1416  00FB47  20                 	db	32
  1417  00FB48  20                 	db	32
  1418  00FB49  20                 	db	32
  1419  00FB4A  20                 	db	32
  1420  00FB4B  20                 	db	32
  1421  00FB4C  41                 	db	65	;'A'
  1422  00FB4D  64                 	db	100	;'d'
  1423  00FB4E  64                 	db	100	;'d'
  1424  00FB4F  20                 	db	32
  1425  00FB50  30                 	db	48	;'0'
  1426  00FB51  78                 	db	120	;'x'
  1427  00FB52  30                 	db	48	;'0'
  1428  00FB53  33                 	db	51	;'3'
  1429  00FB54  30                 	db	48	;'0'
  1430  00FB55  30                 	db	48	;'0'
  1431  00FB56  20                 	db	32
  1432  00FB57  74                 	db	116	;'t'
  1433  00FB58  6F                 	db	111	;'o'
  1434  00FB59  20                 	db	32
  1435  00FB5A  30                 	db	48	;'0'
  1436  00FB5B  78                 	db	120	;'x'
  1437  00FB5C  30                 	db	48	;'0'
  1438  00FB5D  33                 	db	51	;'3'
  1439  00FB5E  30                 	db	48	;'0'
  1440  00FB5F  34                 	db	52	;'4'
  1441  00FB60  20                 	db	32
  1442  00FB61  2D                 	db	45
  1443  00FB62  20                 	db	32
  1444  00FB63  52                 	db	82	;'R'
  1445  00FB64  65                 	db	101	;'e'
  1446  00FB65  76                 	db	118	;'v'
  1447  00FB66  69                 	db	105	;'i'
  1448  00FB67  73                 	db	115	;'s'
  1449  00FB68  69                 	db	105	;'i'
  1450  00FB69  6F                 	db	111	;'o'
  1451  00FB6A  6E                 	db	110	;'n'
  1452  00FB6B  0D                 	db	13
  1453  00FB6C  0A                 	db	10
  1454  00FB6D  00                 	db	0
  1455  00FB6E                     STR_37:
  1456                           
  1457                           ; BSR set to: 0
  1458  00FB6E  0D                 	db	13
  1459  00FB6F  0A                 	db	10
  1460  00FB70  44                 	db	68	;'D'
  1461  00FB71  61                 	db	97	;'a'
  1462  00FB72  6E                 	db	110	;'n'
  1463  00FB73  20                 	db	32
  1464  00FB74  61                 	db	97	;'a'
  1465  00FB75  6E                 	db	110	;'n'
  1466  00FB76  64                 	db	100	;'d'
  1467  00FB77  20                 	db	32
  1468  00FB78  53                 	db	83	;'S'
  1469  00FB79  61                 	db	97	;'a'
  1470  00FB7A  6D                 	db	109	;'m'
  1471  00FB7B  27                 	db	39
  1472  00FB7C  73                 	db	115	;'s'
  1473  00FB7D  20                 	db	32
  1474  00FB7E  4D                 	db	77	;'M'
  1475  00FB7F  6F                 	db	111	;'o'
  1476  00FB80  64                 	db	100	;'d'
  1477  00FB81  62                 	db	98	;'b'
  1478  00FB82  75                 	db	117	;'u'
  1479  00FB83  73                 	db	115	;'s'
  1480  00FB84  20                 	db	32
  1481  00FB85  47                 	db	71	;'G'
  1482  00FB86  50                 	db	80	;'P'
  1483  00FB87  49                 	db	73	;'I'
  1484  00FB88  4F                 	db	79	;'O'
  1485  00FB89  20                 	db	32
  1486  00FB8A  45                 	db	69	;'E'
  1487  00FB8B  78                 	db	120	;'x'
  1488  00FB8C  70                 	db	112	;'p'
  1489  00FB8D  61                 	db	97	;'a'
  1490  00FB8E  6E                 	db	110	;'n'
  1491  00FB8F  73                 	db	115	;'s'
  1492  00FB90  69                 	db	105	;'i'
  1493  00FB91  6F                 	db	111	;'o'
  1494  00FB92  6E                 	db	110	;'n'
  1495  00FB93  0D                 	db	13
  1496  00FB94  0A                 	db	10
  1497  00FB95  00                 	db	0
  1498  00FB96                     STR_67:
  1499                           
  1500                           ; BSR set to: 0
  1501  00FB96  0D                 	db	13
  1502  00FB97  0A                 	db	10
  1503  00FB98  45                 	db	69	;'E'
  1504  00FB99  6E                 	db	110	;'n'
  1505  00FB9A  74                 	db	116	;'t'
  1506  00FB9B  65                 	db	101	;'e'
  1507  00FB9C  72                 	db	114	;'r'
  1508  00FB9D  20                 	db	32
  1509  00FB9E  63                 	db	99	;'c'
  1510  00FB9F  61                 	db	97	;'a'
  1511  00FBA0  72                 	db	114	;'r'
  1512  00FBA1  64                 	db	100	;'d'
  1513  00FBA2  20                 	db	32
  1514  00FBA3  25                 	db	37
  1515  00FBA4  73                 	db	115	;'s'
  1516  00FBA5  20                 	db	32
  1517  00FBA6  28                 	db	40
  1518  00FBA7  6D                 	db	109	;'m'
  1519  00FBA8  61                 	db	97	;'a'
  1520  00FBA9  78                 	db	120	;'x'
  1521  00FBAA  20                 	db	32
  1522  00FBAB  25                 	db	37
  1523  00FBAC  69                 	db	105	;'i'
  1524  00FBAD  20                 	db	32
  1525  00FBAE  63                 	db	99	;'c'
  1526  00FBAF  68                 	db	104	;'h'
  1527  00FBB0  61                 	db	97	;'a'
  1528  00FBB1  72                 	db	114	;'r'
  1529  00FBB2  61                 	db	97	;'a'
  1530  00FBB3  63                 	db	99	;'c'
  1531  00FBB4  74                 	db	116	;'t'
  1532  00FBB5  65                 	db	101	;'e'
  1533  00FBB6  72                 	db	114	;'r'
  1534  00FBB7  73                 	db	115	;'s'
  1535  00FBB8  29                 	db	41
  1536  00FBB9  3A                 	db	58	;':'
  1537  00FBBA  20                 	db	32
  1538  00FBBB  00                 	db	0
  1539  00FBBC                     STR_59:
  1540                           
  1541                           ; BSR set to: 0
  1542  00FBBC  20                 	db	32
  1543  00FBBD  20                 	db	32
  1544  00FBBE  20                 	db	32
  1545  00FBBF  73                 	db	115	;'s'
  1546  00FBC0  65                 	db	101	;'e'
  1547  00FBC1  72                 	db	114	;'r'
  1548  00FBC2  69                 	db	105	;'i'
  1549  00FBC3  61                 	db	97	;'a'
  1550  00FBC4  6C                 	db	108	;'l'
  1551  00FBC5  20                 	db	32
  1552  00FBC6  2D                 	db	45
  1553  00FBC7  20                 	db	32
  1554  00FBC8  53                 	db	83	;'S'
  1555  00FBC9  65                 	db	101	;'e'
  1556  00FBCA  74                 	db	116	;'t'
  1557  00FBCB  20                 	db	32
  1558  00FBCC  63                 	db	99	;'c'
  1559  00FBCD  61                 	db	97	;'a'
  1560  00FBCE  72                 	db	114	;'r'
  1561  00FBCF  64                 	db	100	;'d'
  1562  00FBD0  20                 	db	32
  1563  00FBD1  73                 	db	115	;'s'
  1564  00FBD2  65                 	db	101	;'e'
  1565  00FBD3  72                 	db	114	;'r'
  1566  00FBD4  69                 	db	105	;'i'
  1567  00FBD5  61                 	db	97	;'a'
  1568  00FBD6  6C                 	db	108	;'l'
  1569  00FBD7  20                 	db	32
  1570  00FBD8  6E                 	db	110	;'n'
  1571  00FBD9  75                 	db	117	;'u'
  1572  00FBDA  6D                 	db	109	;'m'
  1573  00FBDB  62                 	db	98	;'b'
  1574  00FBDC  65                 	db	101	;'e'
  1575  00FBDD  72                 	db	114	;'r'
  1576  00FBDE  0D                 	db	13
  1577  00FBDF  0A                 	db	10
  1578  00FBE0  00                 	db	0
  1579  00FBE1                     STR_26:
  1580                           
  1581                           ; BSR set to: 0
  1582  00FBE1  0D                 	db	13
  1583  00FBE2  0A                 	db	10
  1584  00FBE3  52                 	db	82	;'R'
  1585  00FBE4  65                 	db	101	;'e'
  1586  00FBE5  63                 	db	99	;'c'
  1587  00FBE6  65                 	db	101	;'e'
  1588  00FBE7  69                 	db	105	;'i'
  1589  00FBE8  76                 	db	118	;'v'
  1590  00FBE9  65                 	db	101	;'e'
  1591  00FBEA  64                 	db	100	;'d'
  1592  00FBEB  20                 	db	32
  1593  00FBEC  4D                 	db	77	;'M'
  1594  00FBED  6F                 	db	111	;'o'
  1595  00FBEE  64                 	db	100	;'d'
  1596  00FBEF  62                 	db	98	;'b'
  1597  00FBF0  75                 	db	117	;'u'
  1598  00FBF1  73                 	db	115	;'s'
  1599  00FBF2  20                 	db	32
  1600  00FBF3  43                 	db	67	;'C'
  1601  00FBF4  52                 	db	82	;'R'
  1602  00FBF5  43                 	db	67	;'C'
  1603  00FBF6  20                 	db	32
  1604  00FBF7  63                 	db	99	;'c'
  1605  00FBF8  68                 	db	104	;'h'
  1606  00FBF9  65                 	db	101	;'e'
  1607  00FBFA  63                 	db	99	;'c'
  1608  00FBFB  6B                 	db	107	;'k'
  1609  00FBFC  65                 	db	101	;'e'
  1610  00FBFD  64                 	db	100	;'d'
  1611  00FBFE  20                 	db	32
  1612  00FBFF  6F                 	db	111	;'o'
  1613  00FC00  75                 	db	117	;'u'
  1614  00FC01  74                 	db	116	;'t'
  1615  00FC02  2E                 	db	46
  1616  00FC03  0D                 	db	13
  1617  00FC04  0A                 	db	10
  1618  00FC05  00                 	db	0
  1619  00FC06                     STR_46:
  1620                           
  1621                           ; BSR set to: 0
  1622  00FC06  4D                 	db	77	;'M'
  1623  00FC07  6F                 	db	111	;'o'
  1624  00FC08  64                 	db	100	;'d'
  1625  00FC09  62                 	db	98	;'b'
  1626  00FC0A  75                 	db	117	;'u'
  1627  00FC0B  73                 	db	115	;'s'
  1628  00FC0C  20                 	db	32
  1629  00FC0D  46                 	db	70	;'F'
  1630  00FC0E  75                 	db	117	;'u'
  1631  00FC0F  6E                 	db	110	;'n'
  1632  00FC10  63                 	db	99	;'c'
  1633  00FC11  74                 	db	116	;'t'
  1634  00FC12  69                 	db	105	;'i'
  1635  00FC13  6F                 	db	111	;'o'
  1636  00FC14  6E                 	db	110	;'n'
  1637  00FC15  20                 	db	32
  1638  00FC16  43                 	db	67	;'C'
  1639  00FC17  6F                 	db	111	;'o'
  1640  00FC18  64                 	db	100	;'d'
  1641  00FC19  65                 	db	101	;'e'
  1642  00FC1A  73                 	db	115	;'s'
  1643  00FC1B  20                 	db	32
  1644  00FC1C  53                 	db	83	;'S'
  1645  00FC1D  75                 	db	117	;'u'
  1646  00FC1E  70                 	db	112	;'p'
  1647  00FC1F  70                 	db	112	;'p'
  1648  00FC20  6F                 	db	111	;'o'
  1649  00FC21  72                 	db	114	;'r'
  1650  00FC22  74                 	db	116	;'t'
  1651  00FC23  65                 	db	101	;'e'
  1652  00FC24  64                 	db	100	;'d'
  1653  00FC25  3A                 	db	58	;':'
  1654  00FC26  0D                 	db	13
  1655  00FC27  0A                 	db	10
  1656  00FC28  0A                 	db	10
  1657  00FC29  00                 	db	0
  1658  00FC2A                     STR_13:
  1659                           
  1660                           ; BSR set to: 0
  1661  00FC2A  63                 	db	99	;'c'
  1662  00FC2B  72                 	db	114	;'r'
  1663  00FC2C  63                 	db	99	;'c'
  1664  00FC2D  48                 	db	72	;'H'
  1665  00FC2E  69                 	db	105	;'i'
  1666  00FC2F  67                 	db	103	;'g'
  1667  00FC30  68                 	db	104	;'h'
  1668  00FC31  3A                 	db	58	;':'
  1669  00FC32  20                 	db	32
  1670  00FC33  30                 	db	48	;'0'
  1671  00FC34  78                 	db	120	;'x'
  1672  00FC35  25                 	db	37
  1673  00FC36  30                 	db	48	;'0'
  1674  00FC37  32                 	db	50	;'2'
  1675  00FC38  78                 	db	120	;'x'
  1676  00FC39  20                 	db	32
  1677  00FC3A  20                 	db	32
  1678  00FC3B  63                 	db	99	;'c'
  1679  00FC3C  72                 	db	114	;'r'
  1680  00FC3D  63                 	db	99	;'c'
  1681  00FC3E  4C                 	db	76	;'L'
  1682  00FC3F  6F                 	db	111	;'o'
  1683  00FC40  77                 	db	119	;'w'
  1684  00FC41  3A                 	db	58	;':'
  1685  00FC42  20                 	db	32
  1686  00FC43  30                 	db	48	;'0'
  1687  00FC44  78                 	db	120	;'x'
  1688  00FC45  25                 	db	37
  1689  00FC46  30                 	db	48	;'0'
  1690  00FC47  32                 	db	50	;'2'
  1691  00FC48  78                 	db	120	;'x'
  1692  00FC49  20                 	db	32
  1693  00FC4A  20                 	db	32
  1694  00FC4B  0D                 	db	13
  1695  00FC4C  0A                 	db	10
  1696  00FC4D  00                 	db	0
  1697  00FC4E                     STR_45:
  1698                           
  1699                           ; BSR set to: 0
  1700  00FC4E  49                 	db	73	;'I'
  1701  00FC4F  6E                 	db	110	;'n'
  1702  00FC50  69                 	db	105	;'i'
  1703  00FC51  74                 	db	116	;'t'
  1704  00FC52  61                 	db	97	;'a'
  1705  00FC53  6C                 	db	108	;'l'
  1706  00FC54  69                 	db	105	;'i'
  1707  00FC55  73                 	db	115	;'s'
  1708  00FC56  61                 	db	97	;'a'
  1709  00FC57  74                 	db	116	;'t'
  1710  00FC58  69                 	db	105	;'i'
  1711  00FC59  6F                 	db	111	;'o'
  1712  00FC5A  6E                 	db	110	;'n'
  1713  00FC5B  20                 	db	32
  1714  00FC5C  43                 	db	67	;'C'
  1715  00FC5D  6F                 	db	111	;'o'
  1716  00FC5E  6D                 	db	109	;'m'
  1717  00FC5F  70                 	db	112	;'p'
  1718  00FC60  6C                 	db	108	;'l'
  1719  00FC61  65                 	db	101	;'e'
  1720  00FC62  74                 	db	116	;'t'
  1721  00FC63  65                 	db	101	;'e'
  1722  00FC64  20                 	db	32
  1723  00FC65  2D                 	db	45
  1724  00FC66  20                 	db	32
  1725  00FC67  52                 	db	82	;'R'
  1726  00FC68  65                 	db	101	;'e'
  1727  00FC69  61                 	db	97	;'a'
  1728  00FC6A  64                 	db	100	;'d'
  1729  00FC6B  79                 	db	121	;'y'
  1730  00FC6C  0D                 	db	13
  1731  00FC6D  0A                 	db	10
  1732  00FC6E  0A                 	db	10
  1733  00FC6F  00                 	db	0
  1734  00FC70                     STR_10:
  1735                           
  1736                           ; BSR set to: 0
  1737  00FC70  0D                 	db	13
  1738  00FC71  0A                 	db	10
  1739  00FC72  4D                 	db	77	;'M'
  1740  00FC73  6F                 	db	111	;'o'
  1741  00FC74  64                 	db	100	;'d'
  1742  00FC75  62                 	db	98	;'b'
  1743  00FC76  75                 	db	117	;'u'
  1744  00FC77  73                 	db	115	;'s'
  1745  00FC78  20                 	db	32
  1746  00FC79  44                 	db	68	;'D'
  1747  00FC7A  61                 	db	97	;'a'
  1748  00FC7B  74                 	db	116	;'t'
  1749  00FC7C  61                 	db	97	;'a'
  1750  00FC7D  20                 	db	32
  1751  00FC7E  43                 	db	67	;'C'
  1752  00FC7F  61                 	db	97	;'a'
  1753  00FC80  70                 	db	112	;'p'
  1754  00FC81  74                 	db	116	;'t'
  1755  00FC82  75                 	db	117	;'u'
  1756  00FC83  72                 	db	114	;'r'
  1757  00FC84  65                 	db	101	;'e'
  1758  00FC85  20                 	db	32
  1759  00FC86  43                 	db	67	;'C'
  1760  00FC87  6F                 	db	111	;'o'
  1761  00FC88  6D                 	db	109	;'m'
  1762  00FC89  70                 	db	112	;'p'
  1763  00FC8A  6C                 	db	108	;'l'
  1764  00FC8B  65                 	db	101	;'e'
  1765  00FC8C  74                 	db	116	;'t'
  1766  00FC8D  65                 	db	101	;'e'
  1767  00FC8E  3A                 	db	58	;':'
  1768  00FC8F  0D                 	db	13
  1769  00FC90  0A                 	db	10
  1770  00FC91  00                 	db	0
  1771  00FC92                     STR_60:
  1772                           
  1773                           ; BSR set to: 0
  1774  00FC92  20                 	db	32
  1775  00FC93  20                 	db	32
  1776  00FC94  20                 	db	32
  1777  00FC95  70                 	db	112	;'p'
  1778  00FC96  61                 	db	97	;'a'
  1779  00FC97  72                 	db	114	;'r'
  1780  00FC98  74                 	db	116	;'t'
  1781  00FC99  20                 	db	32
  1782  00FC9A  2D                 	db	45
  1783  00FC9B  20                 	db	32
  1784  00FC9C  53                 	db	83	;'S'
  1785  00FC9D  65                 	db	101	;'e'
  1786  00FC9E  74                 	db	116	;'t'
  1787  00FC9F  20                 	db	32
  1788  00FCA0  63                 	db	99	;'c'
  1789  00FCA1  61                 	db	97	;'a'
  1790  00FCA2  72                 	db	114	;'r'
  1791  00FCA3  64                 	db	100	;'d'
  1792  00FCA4  20                 	db	32
  1793  00FCA5  70                 	db	112	;'p'
  1794  00FCA6  61                 	db	97	;'a'
  1795  00FCA7  72                 	db	114	;'r'
  1796  00FCA8  74                 	db	116	;'t'
  1797  00FCA9  20                 	db	32
  1798  00FCAA  6E                 	db	110	;'n'
  1799  00FCAB  75                 	db	117	;'u'
  1800  00FCAC  6D                 	db	109	;'m'
  1801  00FCAD  62                 	db	98	;'b'
  1802  00FCAE  65                 	db	101	;'e'
  1803  00FCAF  72                 	db	114	;'r'
  1804  00FCB0  0D                 	db	13
  1805  00FCB1  0A                 	db	10
  1806  00FCB2  00                 	db	0
  1807  00FCB3                     STR_69:
  1808                           
  1809                           ; BSR set to: 0
  1810  00FCB3  0D                 	db	13
  1811  00FCB4  0A                 	db	10
  1812  00FCB5  45                 	db	69	;'E'
  1813  00FCB6  6E                 	db	110	;'n'
  1814  00FCB7  74                 	db	116	;'t'
  1815  00FCB8  65                 	db	101	;'e'
  1816  00FCB9  72                 	db	114	;'r'
  1817  00FCBA  65                 	db	101	;'e'
  1818  00FCBB  64                 	db	100	;'d'
  1819  00FCBC  3A                 	db	58	;':'
  1820  00FCBD  20                 	db	32
  1821  00FCBE  25                 	db	37
  1822  00FCBF  73                 	db	115	;'s'
  1823  00FCC0  20                 	db	32
  1824  00FCC1  0D                 	db	13
  1825  00FCC2  0A                 	db	10
  1826  00FCC3  20                 	db	32
  1827  00FCC4  43                 	db	67	;'C'
  1828  00FCC5  6F                 	db	111	;'o'
  1829  00FCC6  6E                 	db	110	;'n'
  1830  00FCC7  66                 	db	102	;'f'
  1831  00FCC8  69                 	db	105	;'i'
  1832  00FCC9  72                 	db	114	;'r'
  1833  00FCCA  6D                 	db	109	;'m'
  1834  00FCCB  20                 	db	32
  1835  00FCCC  20                 	db	32
  1836  00FCCD  59                 	db	89	;'Y'
  1837  00FCCE  7C                 	db	124
  1838  00FCCF  4E                 	db	78	;'N'
  1839  00FCD0  3F                 	db	63	;'?'
  1840  00FCD1  3A                 	db	58	;':'
  1841  00FCD2  20                 	db	32
  1842  00FCD3  00                 	db	0
  1843  00FCD4                     STR_61:
  1844                           
  1845                           ; BSR set to: 0
  1846  00FCD4  20                 	db	32
  1847  00FCD5  20                 	db	32
  1848  00FCD6  20                 	db	32
  1849  00FCD7  72                 	db	114	;'r'
  1850  00FCD8  65                 	db	101	;'e'
  1851  00FCD9  76                 	db	118	;'v'
  1852  00FCDA  20                 	db	32
  1853  00FCDB  2D                 	db	45
  1854  00FCDC  20                 	db	32
  1855  00FCDD  53                 	db	83	;'S'
  1856  00FCDE  65                 	db	101	;'e'
  1857  00FCDF  74                 	db	116	;'t'
  1858  00FCE0  20                 	db	32
  1859  00FCE1  63                 	db	99	;'c'
  1860  00FCE2  61                 	db	97	;'a'
  1861  00FCE3  72                 	db	114	;'r'
  1862  00FCE4  64                 	db	100	;'d'
  1863  00FCE5  20                 	db	32
  1864  00FCE6  70                 	db	112	;'p'
  1865  00FCE7  61                 	db	97	;'a'
  1866  00FCE8  72                 	db	114	;'r'
  1867  00FCE9  74                 	db	116	;'t'
  1868  00FCEA  20                 	db	32
  1869  00FCEB  6E                 	db	110	;'n'
  1870  00FCEC  75                 	db	117	;'u'
  1871  00FCED  6D                 	db	109	;'m'
  1872  00FCEE  62                 	db	98	;'b'
  1873  00FCEF  65                 	db	101	;'e'
  1874  00FCF0  72                 	db	114	;'r'
  1875  00FCF1  0D                 	db	13
  1876  00FCF2  0A                 	db	10
  1877  00FCF3  00                 	db	0
  1878  00FCF4                     STR_27:
  1879                           
  1880                           ; BSR set to: 0
  1881  00FCF4  0D                 	db	13
  1882  00FCF5  0A                 	db	10
  1883  00FCF6  52                 	db	82	;'R'
  1884  00FCF7  65                 	db	101	;'e'
  1885  00FCF8  63                 	db	99	;'c'
  1886  00FCF9  65                 	db	101	;'e'
  1887  00FCFA  69                 	db	105	;'i'
  1888  00FCFB  76                 	db	118	;'v'
  1889  00FCFC  65                 	db	101	;'e'
  1890  00FCFD  64                 	db	100	;'d'
  1891  00FCFE  20                 	db	32
  1892  00FCFF  4D                 	db	77	;'M'
  1893  00FD00  6F                 	db	111	;'o'
  1894  00FD01  64                 	db	100	;'d'
  1895  00FD02  62                 	db	98	;'b'
  1896  00FD03  75                 	db	117	;'u'
  1897  00FD04  73                 	db	115	;'s'
  1898  00FD05  20                 	db	32
  1899  00FD06  43                 	db	67	;'C'
  1900  00FD07  52                 	db	82	;'R'
  1901  00FD08  43                 	db	67	;'C'
  1902  00FD09  20                 	db	32
  1903  00FD0A  69                 	db	105	;'i'
  1904  00FD0B  73                 	db	115	;'s'
  1905  00FD0C  20                 	db	32
  1906  00FD0D  62                 	db	98	;'b'
  1907  00FD0E  61                 	db	97	;'a'
  1908  00FD0F  64                 	db	100	;'d'
  1909  00FD10  2E                 	db	46
  1910  00FD11  0D                 	db	13
  1911  00FD12  0A                 	db	10
  1912  00FD13  00                 	db	0
  1913  00FD14                     STR_2:
  1914                           
  1915                           ; BSR set to: 0
  1916  00FD14  4D                 	db	77	;'M'
  1917  00FD15  6F                 	db	111	;'o'
  1918  00FD16  64                 	db	100	;'d'
  1919  00FD17  62                 	db	98	;'b'
  1920  00FD18  75                 	db	117	;'u'
  1921  00FD19  73                 	db	115	;'s'
  1922  00FD1A  20                 	db	32
  1923  00FD1B  52                 	db	82	;'R'
  1924  00FD1C  65                 	db	101	;'e'
  1925  00FD1D  67                 	db	103	;'g'
  1926  00FD1E  69                 	db	105	;'i'
  1927  00FD1F  73                 	db	115	;'s'
  1928  00FD20  74                 	db	116	;'t'
  1929  00FD21  65                 	db	101	;'e'
  1930  00FD22  72                 	db	114	;'r'
  1931  00FD23  20                 	db	32
  1932  00FD24  42                 	db	66	;'B'
  1933  00FD25  65                 	db	101	;'e'
  1934  00FD26  66                 	db	102	;'f'
  1935  00FD27  6F                 	db	111	;'o'
  1936  00FD28  72                 	db	114	;'r'
  1937  00FD29  65                 	db	101	;'e'
  1938  00FD2A  20                 	db	32
  1939  00FD2B  55                 	db	85	;'U'
  1940  00FD2C  70                 	db	112	;'p'
  1941  00FD2D  64                 	db	100	;'d'
  1942  00FD2E  61                 	db	97	;'a'
  1943  00FD2F  74                 	db	116	;'t'
  1944  00FD30  65                 	db	101	;'e'
  1945  00FD31  3A                 	db	58	;':'
  1946  00FD32  00                 	db	0
  1947  00FD33                     STR_50:
  1948                           
  1949                           ; BSR set to: 0
  1950  00FD33  20                 	db	32
  1951  00FD34  20                 	db	32
  1952  00FD35  20                 	db	32
  1953  00FD36  20                 	db	32
  1954  00FD37  20                 	db	32
  1955  00FD38  20                 	db	32
  1956  00FD39  41                 	db	65	;'A'
  1957  00FD3A  64                 	db	100	;'d'
  1958  00FD3B  64                 	db	100	;'d'
  1959  00FD3C  20                 	db	32
  1960  00FD3D  30                 	db	48	;'0'
  1961  00FD3E  78                 	db	120	;'x'
  1962  00FD3F  30                 	db	48	;'0'
  1963  00FD40  32                 	db	50	;'2'
  1964  00FD41  30                 	db	48	;'0'
  1965  00FD42  30                 	db	48	;'0'
  1966  00FD43  20                 	db	32
  1967  00FD44  2D                 	db	45
  1968  00FD45  20                 	db	32
  1969  00FD46  52                 	db	82	;'R'
  1970  00FD47  65                 	db	101	;'e'
  1971  00FD48  76                 	db	118	;'v'
  1972  00FD49  69                 	db	105	;'i'
  1973  00FD4A  73                 	db	115	;'s'
  1974  00FD4B  69                 	db	105	;'i'
  1975  00FD4C  6F                 	db	111	;'o'
  1976  00FD4D  6E                 	db	110	;'n'
  1977  00FD4E  0D                 	db	13
  1978  00FD4F  0A                 	db	10
  1979  00FD50  00                 	db	0
  1980  00FD51                     STR_20:
  1981                           
  1982                           ; BSR set to: 0
  1983  00FD51  52                 	db	82	;'R'
  1984  00FD52  65                 	db	101	;'e'
  1985  00FD53  71                 	db	113	;'q'
  1986  00FD54  75                 	db	117	;'u'
  1987  00FD55  65                 	db	101	;'e'
  1988  00FD56  73                 	db	115	;'s'
  1989  00FD57  74                 	db	116	;'t'
  1990  00FD58  65                 	db	101	;'e'
  1991  00FD59  64                 	db	100	;'d'
  1992  00FD5A  20                 	db	32
  1993  00FD5B  41                 	db	65	;'A'
  1994  00FD5C  6E                 	db	110	;'n'
  1995  00FD5D  61                 	db	97	;'a'
  1996  00FD5E  6C                 	db	108	;'l'
  1997  00FD5F  6F                 	db	111	;'o'
  1998  00FD60  67                 	db	103	;'g'
  1999  00FD61  75                 	db	117	;'u'
  2000  00FD62  65                 	db	101	;'e'
  2001  00FD63  20                 	db	32
  2002  00FD64  49                 	db	73	;'I'
  2003  00FD65  6E                 	db	110	;'n'
  2004  00FD66  70                 	db	112	;'p'
  2005  00FD67  75                 	db	117	;'u'
  2006  00FD68  74                 	db	116	;'t'
  2007  00FD69  73                 	db	115	;'s'
  2008  00FD6A  0D                 	db	13
  2009  00FD6B  0A                 	db	10
  2010  00FD6C  0A                 	db	10
  2011  00FD6D  00                 	db	0
  2012  00FD6E                     STR_9:
  2013                           
  2014                           ; BSR set to: 0
  2015  00FD6E  4D                 	db	77	;'M'
  2016  00FD6F  6F                 	db	111	;'o'
  2017  00FD70  64                 	db	100	;'d'
  2018  00FD71  44                 	db	68	;'D'
  2019  00FD72  61                 	db	97	;'a'
  2020  00FD73  74                 	db	116	;'t'
  2021  00FD74  61                 	db	97	;'a'
  2022  00FD75  43                 	db	67	;'C'
  2023  00FD76  6E                 	db	110	;'n'
  2024  00FD77  74                 	db	116	;'t'
  2025  00FD78  20                 	db	32
  2026  00FD79  73                 	db	115	;'s'
  2027  00FD7A  69                 	db	105	;'i'
  2028  00FD7B  74                 	db	116	;'t'
  2029  00FD7C  74                 	db	116	;'t'
  2030  00FD7D  69                 	db	105	;'i'
  2031  00FD7E  6E                 	db	110	;'n'
  2032  00FD7F  67                 	db	103	;'g'
  2033  00FD80  20                 	db	32
  2034  00FD81  61                 	db	97	;'a'
  2035  00FD82  74                 	db	116	;'t'
  2036  00FD83  20                 	db	32
  2037  00FD84  25                 	db	37
  2038  00FD85  69                 	db	105	;'i'
  2039  00FD86  0D                 	db	13
  2040  00FD87  0A                 	db	10
  2041  00FD88  0A                 	db	10
  2042  00FD89  00                 	db	0
  2043  00FD8A                     STR_21:
  2044                           
  2045                           ; BSR set to: 0
  2046  00FD8A  4D                 	db	77	;'M'
  2047  00FD8B  6F                 	db	111	;'o'
  2048  00FD8C  64                 	db	100	;'d'
  2049  00FD8D  62                 	db	98	;'b'
  2050  00FD8E  75                 	db	117	;'u'
  2051  00FD8F  73                 	db	115	;'s'
  2052  00FD90  20                 	db	32
  2053  00FD91  52                 	db	82	;'R'
  2054  00FD92  65                 	db	101	;'e'
  2055  00FD93  73                 	db	115	;'s'
  2056  00FD94  70                 	db	112	;'p'
  2057  00FD95  6F                 	db	111	;'o'
  2058  00FD96  6E                 	db	110	;'n'
  2059  00FD97  73                 	db	115	;'s'
  2060  00FD98  65                 	db	101	;'e'
  2061  00FD99  20                 	db	32
  2062  00FD9A  43                 	db	67	;'C'
  2063  00FD9B  6F                 	db	111	;'o'
  2064  00FD9C  75                 	db	117	;'u'
  2065  00FD9D  6E                 	db	110	;'n'
  2066  00FD9E  74                 	db	116	;'t'
  2067  00FD9F  20                 	db	32
  2068  00FDA0  25                 	db	37
  2069  00FDA1  69                 	db	105	;'i'
  2070  00FDA2  3A                 	db	58	;':'
  2071  00FDA3  0D                 	db	13
  2072  00FDA4  0A                 	db	10
  2073  00FDA5  00                 	db	0
  2074  00FDA6                     STR_3:
  2075                           
  2076                           ; BSR set to: 0
  2077  00FDA6  55                 	db	85	;'U'
  2078  00FDA7  6E                 	db	110	;'n'
  2079  00FDA8  73                 	db	115	;'s'
  2080  00FDA9  75                 	db	117	;'u'
  2081  00FDAA  70                 	db	112	;'p'
  2082  00FDAB  70                 	db	112	;'p'
  2083  00FDAC  6F                 	db	111	;'o'
  2084  00FDAD  72                 	db	114	;'r'
  2085  00FDAE  74                 	db	116	;'t'
  2086  00FDAF  65                 	db	101	;'e'
  2087  00FDB0  64                 	db	100	;'d'
  2088  00FDB1  20                 	db	32
  2089  00FDB2  46                 	db	70	;'F'
  2090  00FDB3  75                 	db	117	;'u'
  2091  00FDB4  6E                 	db	110	;'n'
  2092  00FDB5  63                 	db	99	;'c'
  2093  00FDB6  74                 	db	116	;'t'
  2094  00FDB7  69                 	db	105	;'i'
  2095  00FDB8  6F                 	db	111	;'o'
  2096  00FDB9  6E                 	db	110	;'n'
  2097  00FDBA  20                 	db	32
  2098  00FDBB  43                 	db	67	;'C'
  2099  00FDBC  6F                 	db	111	;'o'
  2100  00FDBD  64                 	db	100	;'d'
  2101  00FDBE  65                 	db	101	;'e'
  2102  00FDBF  0D                 	db	13
  2103  00FDC0  0A                 	db	10
  2104  00FDC1  00                 	db	0
  2105  00FDC2                     STR_7:
  2106                           
  2107                           ; BSR set to: 0
  2108  00FDC2  20                 	db	32
  2109  00FDC3  20                 	db	32
  2110  00FDC4  20                 	db	32
  2111  00FDC5  52                 	db	82	;'R'
  2112  00FDC6  65                 	db	101	;'e'
  2113  00FDC7  67                 	db	103	;'g'
  2114  00FDC8  3A                 	db	58	;':'
  2115  00FDC9  20                 	db	32
  2116  00FDCA  25                 	db	37
  2117  00FDCB  69                 	db	105	;'i'
  2118  00FDCC  20                 	db	32
  2119  00FDCD  44                 	db	68	;'D'
  2120  00FDCE  61                 	db	97	;'a'
  2121  00FDCF  74                 	db	116	;'t'
  2122  00FDD0  61                 	db	97	;'a'
  2123  00FDD1  3A                 	db	58	;':'
  2124  00FDD2  20                 	db	32
  2125  00FDD3  30                 	db	48	;'0'
  2126  00FDD4  78                 	db	120	;'x'
  2127  00FDD5  25                 	db	37
  2128  00FDD6  30                 	db	48	;'0'
  2129  00FDD7  34                 	db	52	;'4'
  2130  00FDD8  78                 	db	120	;'x'
  2131  00FDD9  20                 	db	32
  2132  00FDDA  0D                 	db	13
  2133  00FDDB  0A                 	db	10
  2134  00FDDC  00                 	db	0
  2135  00FDDD                     STR_14:
  2136                           
  2137                           ; BSR set to: 0
  2138  00FDDD  52                 	db	82	;'R'
  2139  00FDDE  65                 	db	101	;'e'
  2140  00FDDF  71                 	db	113	;'q'
  2141  00FDE0  75                 	db	117	;'u'
  2142  00FDE1  65                 	db	101	;'e'
  2143  00FDE2  73                 	db	115	;'s'
  2144  00FDE3  74                 	db	116	;'t'
  2145  00FDE4  65                 	db	101	;'e'
  2146  00FDE5  64                 	db	100	;'d'
  2147  00FDE6  20                 	db	32
  2148  00FDE7  43                 	db	67	;'C'
  2149  00FDE8  69                 	db	105	;'i'
  2150  00FDE9  72                 	db	114	;'r'
  2151  00FDEA  63                 	db	99	;'c'
  2152  00FDEB  75                 	db	117	;'u'
  2153  00FDEC  69                 	db	105	;'i'
  2154  00FDED  74                 	db	116	;'t'
  2155  00FDEE  20                 	db	32
  2156  00FDEF  44                 	db	68	;'D'
  2157  00FDF0  61                 	db	97	;'a'
  2158  00FDF1  74                 	db	116	;'t'
  2159  00FDF2  61                 	db	97	;'a'
  2160  00FDF3  0D                 	db	13
  2161  00FDF4  0A                 	db	10
  2162  00FDF5  0A                 	db	10
  2163  00FDF6  00                 	db	0
  2164  00FDF7                     STR_19:
  2165                           
  2166                           ; BSR set to: 0
  2167  00FDF7  52                 	db	82	;'R'
  2168  00FDF8  65                 	db	101	;'e'
  2169  00FDF9  71                 	db	113	;'q'
  2170  00FDFA  75                 	db	117	;'u'
  2171  00FDFB  65                 	db	101	;'e'
  2172  00FDFC  73                 	db	115	;'s'
  2173  00FDFD  74                 	db	116	;'t'
  2174  00FDFE  65                 	db	101	;'e'
  2175  00FDFF  64                 	db	100	;'d'
  2176  00FE00  20                 	db	32
  2177  00FE01  43                 	db	67	;'C'
  2178  00FE02  6F                 	db	111	;'o'
  2179  00FE03  6D                 	db	109	;'m'
  2180  00FE04  70                 	db	112	;'p'
  2181  00FE05  69                 	db	105	;'i'
  2182  00FE06  6C                 	db	108	;'l'
  2183  00FE07  65                 	db	101	;'e'
  2184  00FE08  20                 	db	32
  2185  00FE09  54                 	db	84	;'T'
  2186  00FE0A  69                 	db	105	;'i'
  2187  00FE0B  6D                 	db	109	;'m'
  2188  00FE0C  65                 	db	101	;'e'
  2189  00FE0D  0D                 	db	13
  2190  00FE0E  0A                 	db	10
  2191  00FE0F  0A                 	db	10
  2192  00FE10  00                 	db	0
  2193  00FE11                     STR_18:
  2194                           
  2195                           ; BSR set to: 0
  2196  00FE11  52                 	db	82	;'R'
  2197  00FE12  65                 	db	101	;'e'
  2198  00FE13  71                 	db	113	;'q'
  2199  00FE14  75                 	db	117	;'u'
  2200  00FE15  65                 	db	101	;'e'
  2201  00FE16  73                 	db	115	;'s'
  2202  00FE17  74                 	db	116	;'t'
  2203  00FE18  65                 	db	101	;'e'
  2204  00FE19  64                 	db	100	;'d'
  2205  00FE1A  20                 	db	32
  2206  00FE1B  43                 	db	67	;'C'
  2207  00FE1C  6F                 	db	111	;'o'
  2208  00FE1D  6D                 	db	109	;'m'
  2209  00FE1E  70                 	db	112	;'p'
  2210  00FE1F  69                 	db	105	;'i'
  2211  00FE20  6C                 	db	108	;'l'
  2212  00FE21  65                 	db	101	;'e'
  2213  00FE22  20                 	db	32
  2214  00FE23  44                 	db	68	;'D'
  2215  00FE24  61                 	db	97	;'a'
  2216  00FE25  74                 	db	116	;'t'
  2217  00FE26  65                 	db	101	;'e'
  2218  00FE27  0D                 	db	13
  2219  00FE28  0A                 	db	10
  2220  00FE29  0A                 	db	10
  2221  00FE2A  00                 	db	0
  2222  00FE2B                     STR_22:
  2223                           
  2224                           ; BSR set to: 0
  2225  00FE2B  20                 	db	32
  2226  00FE2C  20                 	db	32
  2227  00FE2D  20                 	db	32
  2228  00FE2E  42                 	db	66	;'B'
  2229  00FE2F  79                 	db	121	;'y'
  2230  00FE30  74                 	db	116	;'t'
  2231  00FE31  65                 	db	101	;'e'
  2232  00FE32  20                 	db	32
  2233  00FE33  25                 	db	37
  2234  00FE34  30                 	db	48	;'0'
  2235  00FE35  32                 	db	50	;'2'
  2236  00FE36  69                 	db	105	;'i'
  2237  00FE37  20                 	db	32
  2238  00FE38  3A                 	db	58	;':'
  2239  00FE39  20                 	db	32
  2240  00FE3A  30                 	db	48	;'0'
  2241  00FE3B  78                 	db	120	;'x'
  2242  00FE3C  25                 	db	37
  2243  00FE3D  30                 	db	48	;'0'
  2244  00FE3E  32                 	db	50	;'2'
  2245  00FE3F  78                 	db	120	;'x'
  2246  00FE40  20                 	db	32
  2247  00FE41  0D                 	db	13
  2248  00FE42  0A                 	db	10
  2249  00FE43  00                 	db	0
  2250  00FE44                     STR_17:
  2251                           
  2252                           ; BSR set to: 0
  2253  00FE44  52                 	db	82	;'R'
  2254  00FE45  65                 	db	101	;'e'
  2255  00FE46  71                 	db	113	;'q'
  2256  00FE47  75                 	db	117	;'u'
  2257  00FE48  65                 	db	101	;'e'
  2258  00FE49  73                 	db	115	;'s'
  2259  00FE4A  74                 	db	116	;'t'
  2260  00FE4B  65                 	db	101	;'e'
  2261  00FE4C  64                 	db	100	;'d'
  2262  00FE4D  20                 	db	32
  2263  00FE4E  53                 	db	83	;'S'
  2264  00FE4F  65                 	db	101	;'e'
  2265  00FE50  72                 	db	114	;'r'
  2266  00FE51  69                 	db	105	;'i'
  2267  00FE52  61                 	db	97	;'a'
  2268  00FE53  6C                 	db	108	;'l'
  2269  00FE54  20                 	db	32
  2270  00FE55  4E                 	db	78	;'N'
  2271  00FE56  6F                 	db	111	;'o'
  2272  00FE57  2E                 	db	46
  2273  00FE58  0D                 	db	13
  2274  00FE59  0A                 	db	10
  2275  00FE5A  0A                 	db	10
  2276  00FE5B  00                 	db	0
  2277  00FE5C                     STR_24:
  2278                           
  2279                           ; BSR set to: 0
  2280  00FE5C  53                 	db	83	;'S'
  2281  00FE5D  6F                 	db	111	;'o'
  2282  00FE5E  6D                 	db	109	;'m'
  2283  00FE5F  65                 	db	101	;'e'
  2284  00FE60  74                 	db	116	;'t'
  2285  00FE61  68                 	db	104	;'h'
  2286  00FE62  69                 	db	105	;'i'
  2287  00FE63  6E                 	db	110	;'n'
  2288  00FE64  67                 	db	103	;'g'
  2289  00FE65  20                 	db	32
  2290  00FE66  69                 	db	105	;'i'
  2291  00FE67  6E                 	db	110	;'n'
  2292  00FE68  20                 	db	32
  2293  00FE69  45                 	db	69	;'E'
  2294  00FE6A  53                 	db	83	;'S'
  2295  00FE6B  55                 	db	85	;'U'
  2296  00FE6C  41                 	db	65	;'A'
  2297  00FE6D  52                 	db	82	;'R'
  2298  00FE6E  54                 	db	84	;'T'
  2299  00FE6F  31                 	db	49	;'1'
  2300  00FE70  20                 	db	32
  2301  00FE71  0D                 	db	13
  2302  00FE72  0A                 	db	10
  2303  00FE73  00                 	db	0
  2304  00FE74                     STR_11:
  2305                           
  2306                           ; BSR set to: 0
  2307  00FE74  20                 	db	32
  2308  00FE75  20                 	db	32
  2309  00FE76  20                 	db	32
  2310  00FE77  42                 	db	66	;'B'
  2311  00FE78  79                 	db	121	;'y'
  2312  00FE79  74                 	db	116	;'t'
  2313  00FE7A  65                 	db	101	;'e'
  2314  00FE7B  20                 	db	32
  2315  00FE7C  25                 	db	37
  2316  00FE7D  69                 	db	105	;'i'
  2317  00FE7E  20                 	db	32
  2318  00FE7F  3A                 	db	58	;':'
  2319  00FE80  20                 	db	32
  2320  00FE81  30                 	db	48	;'0'
  2321  00FE82  78                 	db	120	;'x'
  2322  00FE83  25                 	db	37
  2323  00FE84  30                 	db	48	;'0'
  2324  00FE85  32                 	db	50	;'2'
  2325  00FE86  78                 	db	120	;'x'
  2326  00FE87  20                 	db	32
  2327  00FE88  0D                 	db	13
  2328  00FE89  0A                 	db	10
  2329  00FE8A  00                 	db	0
  2330  00FE8B                     STR_41:
  2331                           
  2332                           ; BSR set to: 0
  2333  00FE8B  43                 	db	67	;'C'
  2334  00FE8C  61                 	db	97	;'a'
  2335  00FE8D  72                 	db	114	;'r'
  2336  00FE8E  64                 	db	100	;'d'
  2337  00FE8F  20                 	db	32
  2338  00FE90  41                 	db	65	;'A'
  2339  00FE91  64                 	db	100	;'d'
  2340  00FE92  64                 	db	100	;'d'
  2341  00FE93  72                 	db	114	;'r'
  2342  00FE94  65                 	db	101	;'e'
  2343  00FE95  73                 	db	115	;'s'
  2344  00FE96  73                 	db	115	;'s'
  2345  00FE97  2E                 	db	46
  2346  00FE98  20                 	db	32
  2347  00FE99  30                 	db	48	;'0'
  2348  00FE9A  78                 	db	120	;'x'
  2349  00FE9B  30                 	db	48	;'0'
  2350  00FE9C  35                 	db	53	;'5'
  2351  00FE9D  20                 	db	32
  2352  00FE9E  0D                 	db	13
  2353  00FE9F  0A                 	db	10
  2354  00FEA0  00                 	db	0
  2355  00FEA1                     STR_57:
  2356                           
  2357                           ; BSR set to: 0
  2358  00FEA1  43                 	db	67	;'C'
  2359  00FEA2  6F                 	db	111	;'o'
  2360  00FEA3  6D                 	db	109	;'m'
  2361  00FEA4  6D                 	db	109	;'m'
  2362  00FEA5  61                 	db	97	;'a'
  2363  00FEA6  6E                 	db	110	;'n'
  2364  00FEA7  64                 	db	100	;'d'
  2365  00FEA8  73                 	db	115	;'s'
  2366  00FEA9  20                 	db	32
  2367  00FEAA  53                 	db	83	;'S'
  2368  00FEAB  75                 	db	117	;'u'
  2369  00FEAC  70                 	db	112	;'p'
  2370  00FEAD  70                 	db	112	;'p'
  2371  00FEAE  6F                 	db	111	;'o'
  2372  00FEAF  72                 	db	114	;'r'
  2373  00FEB0  74                 	db	116	;'t'
  2374  00FEB1  65                 	db	101	;'e'
  2375  00FEB2  64                 	db	100	;'d'
  2376  00FEB3  3A                 	db	58	;':'
  2377  00FEB4  0D                 	db	13
  2378  00FEB5  0A                 	db	10
  2379  00FEB6  00                 	db	0
  2380  00FEB7                     STR_15:
  2381                           
  2382                           ; BSR set to: 0
  2383  00FEB7  52                 	db	82	;'R'
  2384  00FEB8  65                 	db	101	;'e'
  2385  00FEB9  71                 	db	113	;'q'
  2386  00FEBA  75                 	db	117	;'u'
  2387  00FEBB  65                 	db	101	;'e'
  2388  00FEBC  73                 	db	115	;'s'
  2389  00FEBD  74                 	db	116	;'t'
  2390  00FEBE  65                 	db	101	;'e'
  2391  00FEBF  64                 	db	100	;'d'
  2392  00FEC0  20                 	db	32
  2393  00FEC1  50                 	db	80	;'P'
  2394  00FEC2  61                 	db	97	;'a'
  2395  00FEC3  72                 	db	114	;'r'
  2396  00FEC4  74                 	db	116	;'t'
  2397  00FEC5  20                 	db	32
  2398  00FEC6  4E                 	db	78	;'N'
  2399  00FEC7  6F                 	db	111	;'o'
  2400  00FEC8  2E                 	db	46
  2401  00FEC9  0D                 	db	13
  2402  00FECA  0A                 	db	10
  2403  00FECB  0A                 	db	10
  2404  00FECC  00                 	db	0
  2405  00FECD                     STR_16:
  2406                           
  2407                           ; BSR set to: 0
  2408  00FECD  52                 	db	82	;'R'
  2409  00FECE  65                 	db	101	;'e'
  2410  00FECF  71                 	db	113	;'q'
  2411  00FED0  75                 	db	117	;'u'
  2412  00FED1  65                 	db	101	;'e'
  2413  00FED2  73                 	db	115	;'s'
  2414  00FED3  74                 	db	116	;'t'
  2415  00FED4  65                 	db	101	;'e'
  2416  00FED5  64                 	db	100	;'d'
  2417  00FED6  20                 	db	32
  2418  00FED7  52                 	db	82	;'R'
  2419  00FED8  65                 	db	101	;'e'
  2420  00FED9  76                 	db	118	;'v'
  2421  00FEDA  69                 	db	105	;'i'
  2422  00FEDB  73                 	db	115	;'s'
  2423  00FEDC  69                 	db	105	;'i'
  2424  00FEDD  6F                 	db	111	;'o'
  2425  00FEDE  6E                 	db	110	;'n'
  2426  00FEDF  0D                 	db	13
  2427  00FEE0  0A                 	db	10
  2428  00FEE1  0A                 	db	10
  2429  00FEE2  00                 	db	0
  2430  00FEE3                     STR_40:
  2431                           
  2432                           ; BSR set to: 0
  2433  00FEE3  43                 	db	67	;'C'
  2434  00FEE4  61                 	db	97	;'a'
  2435  00FEE5  72                 	db	114	;'r'
  2436  00FEE6  64                 	db	100	;'d'
  2437  00FEE7  20                 	db	32
  2438  00FEE8  52                 	db	82	;'R'
  2439  00FEE9  65                 	db	101	;'e'
  2440  00FEEA  76                 	db	118	;'v'
  2441  00FEEB  69                 	db	105	;'i'
  2442  00FEEC  73                 	db	115	;'s'
  2443  00FEED  69                 	db	105	;'i'
  2444  00FEEE  6F                 	db	111	;'o'
  2445  00FEEF  6E                 	db	110	;'n'
  2446  00FEF0  2E                 	db	46
  2447  00FEF1  20                 	db	32
  2448  00FEF2  25                 	db	37
  2449  00FEF3  73                 	db	115	;'s'
  2450  00FEF4  20                 	db	32
  2451  00FEF5  0D                 	db	13
  2452  00FEF6  0A                 	db	10
  2453  00FEF7  00                 	db	0
  2454  00FEF8                     STR_1:
  2455                           
  2456                           ; BSR set to: 0
  2457  00FEF8  46                 	db	70	;'F'
  2458  00FEF9  75                 	db	117	;'u'
  2459  00FEFA  6E                 	db	110	;'n'
  2460  00FEFB  63                 	db	99	;'c'
  2461  00FEFC  74                 	db	116	;'t'
  2462  00FEFD  69                 	db	105	;'i'
  2463  00FEFE  6F                 	db	111	;'o'
  2464  00FEFF  6E                 	db	110	;'n'
  2465  00FF00  20                 	db	32
  2466  00FF01  43                 	db	67	;'C'
  2467  00FF02  6F                 	db	111	;'o'
  2468  00FF03  64                 	db	100	;'d'
  2469  00FF04  65                 	db	101	;'e'
  2470  00FF05  20                 	db	32
  2471  00FF06  30                 	db	48	;'0'
  2472  00FF07  78                 	db	120	;'x'
  2473  00FF08  31                 	db	49	;'1'
  2474  00FF09  30                 	db	48	;'0'
  2475  00FF0A  0D                 	db	13
  2476  00FF0B  0A                 	db	10
  2477  00FF0C  00                 	db	0
  2478  00FF0D                     STR_39:
  2479                           
  2480                           ; BSR set to: 0
  2481  00FF0D  43                 	db	67	;'C'
  2482  00FF0E  61                 	db	97	;'a'
  2483  00FF0F  72                 	db	114	;'r'
  2484  00FF10  64                 	db	100	;'d'
  2485  00FF11  20                 	db	32
  2486  00FF12  50                 	db	80	;'P'
  2487  00FF13  61                 	db	97	;'a'
  2488  00FF14  72                 	db	114	;'r'
  2489  00FF15  74                 	db	116	;'t'
  2490  00FF16  20                 	db	32
  2491  00FF17  4E                 	db	78	;'N'
  2492  00FF18  6F                 	db	111	;'o'
  2493  00FF19  2E                 	db	46
  2494  00FF1A  20                 	db	32
  2495  00FF1B  25                 	db	37
  2496  00FF1C  73                 	db	115	;'s'
  2497  00FF1D  20                 	db	32
  2498  00FF1E  0D                 	db	13
  2499  00FF1F  0A                 	db	10
  2500  00FF20  00                 	db	0
  2501  00FF21                     STR_38:
  2502                           
  2503                           ; BSR set to: 0
  2504  00FF21  43                 	db	67	;'C'
  2505  00FF22  61                 	db	97	;'a'
  2506  00FF23  72                 	db	114	;'r'
  2507  00FF24  64                 	db	100	;'d'
  2508  00FF25  20                 	db	32
  2509  00FF26  53                 	db	83	;'S'
  2510  00FF27  65                 	db	101	;'e'
  2511  00FF28  72                 	db	114	;'r'
  2512  00FF29  20                 	db	32
  2513  00FF2A  4E                 	db	78	;'N'
  2514  00FF2B  6F                 	db	111	;'o'
  2515  00FF2C  2E                 	db	46
  2516  00FF2D  20                 	db	32
  2517  00FF2E  25                 	db	37
  2518  00FF2F  73                 	db	115	;'s'
  2519  00FF30  20                 	db	32
  2520  00FF31  0D                 	db	13
  2521  00FF32  0A                 	db	10
  2522  00FF33  00                 	db	0
  2523  00FF34                     STR_4:
  2524                           
  2525                           ; BSR set to: 0
  2526  00FF34  0D                 	db	13
  2527  00FF35  0A                 	db	10
  2528  00FF36  45                 	db	69	;'E'
  2529  00FF37  6E                 	db	110	;'n'
  2530  00FF38  74                 	db	116	;'t'
  2531  00FF39  65                 	db	101	;'e'
  2532  00FF3A  72                 	db	114	;'r'
  2533  00FF3B  20                 	db	32
  2534  00FF3C  43                 	db	67	;'C'
  2535  00FF3D  6F                 	db	111	;'o'
  2536  00FF3E  6D                 	db	109	;'m'
  2537  00FF3F  6D                 	db	109	;'m'
  2538  00FF40  61                 	db	97	;'a'
  2539  00FF41  6E                 	db	110	;'n'
  2540  00FF42  64                 	db	100	;'d'
  2541  00FF43  20                 	db	32
  2542  00FF44  3A                 	db	58	;':'
  2543  00FF45  20                 	db	32
  2544  00FF46  00                 	db	0
  2545  00FF47                     STR_71:
  2546                           
  2547                           ; BSR set to: 0
  2548  00FF47  4E                 	db	78	;'N'
  2549  00FF48  75                 	db	117	;'u'
  2550  00FF49  6D                 	db	109	;'m'
  2551  00FF4A  20                 	db	32
  2552  00FF4B  43                 	db	67	;'C'
  2553  00FF4C  68                 	db	104	;'h'
  2554  00FF4D  61                 	db	97	;'a'
  2555  00FF4E  72                 	db	114	;'r'
  2556  00FF4F  73                 	db	115	;'s'
  2557  00FF50  3A                 	db	58	;':'
  2558  00FF51  20                 	db	32
  2559  00FF52  25                 	db	37
  2560  00FF53  69                 	db	105	;'i'
  2561  00FF54  20                 	db	32
  2562  00FF55  0D                 	db	13
  2563  00FF56  0A                 	db	10
  2564  00FF57  00                 	db	0
  2565  00FF58                     STR_65:
  2566                           
  2567                           ; BSR set to: 0
  2568  00FF58  44                 	db	68	;'D'
  2569  00FF59  65                 	db	101	;'e'
  2570  00FF5A  62                 	db	98	;'b'
  2571  00FF5B  75                 	db	117	;'u'
  2572  00FF5C  67                 	db	103	;'g'
  2573  00FF5D  20                 	db	32
  2574  00FF5E  44                 	db	68	;'D'
  2575  00FF5F  69                 	db	105	;'i'
  2576  00FF60  73                 	db	115	;'s'
  2577  00FF61  61                 	db	97	;'a'
  2578  00FF62  62                 	db	98	;'b'
  2579  00FF63  6C                 	db	108	;'l'
  2580  00FF64  65                 	db	101	;'e'
  2581  00FF65  64                 	db	100	;'d'
  2582  00FF66  0D                 	db	13
  2583  00FF67  0A                 	db	10
  2584  00FF68  00                 	db	0
  2585  00FF69                     STR_64:
  2586                           
  2587                           ; BSR set to: 0
  2588  00FF69  44                 	db	68	;'D'
  2589  00FF6A  65                 	db	101	;'e'
  2590  00FF6B  62                 	db	98	;'b'
  2591  00FF6C  75                 	db	117	;'u'
  2592  00FF6D  67                 	db	103	;'g'
  2593  00FF6E  20                 	db	32
  2594  00FF6F  45                 	db	69	;'E'
  2595  00FF70  6E                 	db	110	;'n'
  2596  00FF71  61                 	db	97	;'a'
  2597  00FF72  62                 	db	98	;'b'
  2598  00FF73  6C                 	db	108	;'l'
  2599  00FF74  65                 	db	101	;'e'
  2600  00FF75  64                 	db	100	;'d'
  2601  00FF76  0D                 	db	13
  2602  00FF77  0A                 	db	10
  2603  00FF78  00                 	db	0
  2604  00FF79                     STR_6:
  2605                           
  2606                           ; BSR set to: 0
  2607  00FF79  55                 	db	85	;'U'
  2608  00FF7A  70                 	db	112	;'p'
  2609  00FF7B  64                 	db	100	;'d'
  2610  00FF7C  61                 	db	97	;'a'
  2611  00FF7D  74                 	db	116	;'t'
  2612  00FF7E  65                 	db	101	;'e'
  2613  00FF7F  64                 	db	100	;'d'
  2614  00FF80  4D                 	db	77	;'M'
  2615  00FF81  42                 	db	66	;'B'
  2616  00FF82  34                 	db	52	;'4'
  2617  00FF83  30                 	db	48	;'0'
  2618  00FF84  30                 	db	48	;'0'
  2619  00FF85  20                 	db	32
  2620  00FF86  0D                 	db	13
  2621  00FF87  0A                 	db	10
  2622  00FF88  00                 	db	0
  2623  00FF89                     STR_25:
  2624                           
  2625                           ; BSR set to: 0
  2626  00FF89  52                 	db	82	;'R'
  2627  00FF8A  65                 	db	101	;'e'
  2628  00FF8B  61                 	db	97	;'a'
  2629  00FF8C  64                 	db	100	;'d'
  2630  00FF8D  3A                 	db	58	;':'
  2631  00FF8E  20                 	db	32
  2632  00FF8F  30                 	db	48	;'0'
  2633  00FF90  78                 	db	120	;'x'
  2634  00FF91  25                 	db	37
  2635  00FF92  30                 	db	48	;'0'
  2636  00FF93  32                 	db	50	;'2'
  2637  00FF94  78                 	db	120	;'x'
  2638  00FF95  20                 	db	32
  2639  00FF96  0D                 	db	13
  2640  00FF97  0A                 	db	10
  2641  00FF98  00                 	db	0
  2642  00FF99                     STR_70:
  2643                           
  2644                           ; BSR set to: 0
  2645  00FF99  59                 	db	89	;'Y'
  2646  00FF9A  0D                 	db	13
  2647  00FF9B  0A                 	db	10
  2648  00FF9C  53                 	db	83	;'S'
  2649  00FF9D  61                 	db	97	;'a'
  2650  00FF9E  76                 	db	118	;'v'
  2651  00FF9F  69                 	db	105	;'i'
  2652  00FFA0  6E                 	db	110	;'n'
  2653  00FFA1  67                 	db	103	;'g'
  2654  00FFA2  20                 	db	32
  2655  00FFA3  25                 	db	37
  2656  00FFA4  73                 	db	115	;'s'
  2657  00FFA5  0D                 	db	13
  2658  00FFA6  0A                 	db	10
  2659  00FFA7  00                 	db	0
  2660  00FFA8                     STR_72:
  2661                           
  2662                           ; BSR set to: 0
  2663  00FFA8  25                 	db	37
  2664  00FFA9  73                 	db	115	;'s'
  2665  00FFAA  20                 	db	32
  2666  00FFAB  53                 	db	83	;'S'
  2667  00FFAC  61                 	db	97	;'a'
  2668  00FFAD  76                 	db	118	;'v'
  2669  00FFAE  65                 	db	101	;'e'
  2670  00FFAF  64                 	db	100	;'d'
  2671  00FFB0  2E                 	db	46
  2672  00FFB1  20                 	db	32
  2673  00FFB2  0D                 	db	13
  2674  00FFB3  0A                 	db	10
  2675  00FFB4  00                 	db	0
  2676  00FFB5                     STR_74:
  2677                           
  2678                           ; BSR set to: 0
  2679  00FFB5  4E                 	db	78	;'N'
  2680  00FFB6  6F                 	db	111	;'o'
  2681  00FFB7  74                 	db	116	;'t'
  2682  00FFB8  20                 	db	32
  2683  00FFB9  73                 	db	115	;'s'
  2684  00FFBA  61                 	db	97	;'a'
  2685  00FFBB  76                 	db	118	;'v'
  2686  00FFBC  65                 	db	101	;'e'
  2687  00FFBD  64                 	db	100	;'d'
  2688  00FFBE  0D                 	db	13
  2689  00FFBF  0A                 	db	10
  2690  00FFC0  00                 	db	0
  2691  00FFC1                     STR_43:
  2692                           
  2693                           ; BSR set to: 0
  2694  00FFC1  4D                 	db	77	;'M'
  2695  00FFC2  61                 	db	97	;'a'
  2696  00FFC3  72                 	db	114	;'r'
  2697  00FFC4  20                 	db	32
  2698  00FFC5  32                 	db	50	;'2'
  2699  00FFC6  34                 	db	52	;'4'
  2700  00FFC7  20                 	db	32
  2701  00FFC8  32                 	db	50	;'2'
  2702  00FFC9  30                 	db	48	;'0'
  2703  00FFCA  32                 	db	50	;'2'
  2704  00FFCB  31                 	db	49	;'1'
  2705  00FFCC  00                 	db	0
  2706  00FFCD                     STR_44:
  2707                           
  2708                           ; BSR set to: 0
  2709  00FFCD  32                 	db	50	;'2'
  2710  00FFCE  32                 	db	50	;'2'
  2711  00FFCF  3A                 	db	58	;':'
  2712  00FFD0  35                 	db	53	;'5'
  2713  00FFD1  35                 	db	53	;'5'
  2714  00FFD2  3A                 	db	58	;':'
  2715  00FFD3  32                 	db	50	;'2'
  2716  00FFD4  34                 	db	52	;'4'
  2717  00FFD5  00                 	db	0
  2718  00FFD6                     STR_28:
  2719                           
  2720                           ; BSR set to: 0
  2721  00FFD6  53                 	db	83	;'S'
  2722  00FFD7  65                 	db	101	;'e'
  2723  00FFD8  72                 	db	114	;'r'
  2724  00FFD9  69                 	db	105	;'i'
  2725  00FFDA  61                 	db	97	;'a'
  2726  00FFDB  6C                 	db	108	;'l'
  2727  00FFDC  00                 	db	0
  2728  00FFDD                     STR_79:
  2729                           
  2730                           ; BSR set to: 0
  2731  00FFDD  73                 	db	115	;'s'
  2732  00FFDE  65                 	db	101	;'e'
  2733  00FFDF  72                 	db	114	;'r'
  2734  00FFE0  69                 	db	105	;'i'
  2735  00FFE1  61                 	db	97	;'a'
  2736  00FFE2  6C                 	db	108	;'l'
  2737  00FFE3  00                 	db	0
  2738  00FFE4                     STR_75:
  2739                           
  2740                           ; BSR set to: 0
  2741  00FFE4  64                 	db	100	;'d'
  2742  00FFE5  65                 	db	101	;'e'
  2743  00FFE6  62                 	db	98	;'b'
  2744  00FFE7  75                 	db	117	;'u'
  2745  00FFE8  67                 	db	103	;'g'
  2746  00FFE9  00                 	db	0
  2747  00FFEA                     STR_30:
  2748                           
  2749                           ; BSR set to: 0
  2750  00FFEA  50                 	db	80	;'P'
  2751  00FFEB  61                 	db	97	;'a'
  2752  00FFEC  72                 	db	114	;'r'
  2753  00FFED  74                 	db	116	;'t'
  2754  00FFEE  00                 	db	0
  2755  00FFEF                     STR_81:
  2756                           
  2757                           ; BSR set to: 0
  2758  00FFEF  70                 	db	112	;'p'
  2759  00FFF0  61                 	db	97	;'a'
  2760  00FFF1  72                 	db	114	;'r'
  2761  00FFF2  74                 	db	116	;'t'
  2762  00FFF3  00                 	db	0
  2763  00FFF4                     STR_32:
  2764                           
  2765                           ; BSR set to: 0
  2766  00FFF4  52                 	db	82	;'R'
  2767  00FFF5  65                 	db	101	;'e'
  2768  00FFF6  76                 	db	118	;'v'
  2769  00FFF7  00                 	db	0
  2770  00FFF8                     STR_83:
  2771                           
  2772                           ; BSR set to: 0
  2773  00FFF8  72                 	db	114	;'r'
  2774  00FFF9  65                 	db	101	;'e'
  2775  00FFFA  76                 	db	118	;'v'
  2776  00FFFB  00                 	db	0
  2777  00FFFC                     STR_77:
  2778                           
  2779                           ; BSR set to: 0
  2780  00FFFC  3F                 	db	63	;'?'
  2781  00FFFD  00                 	db	0
  2782  0000                     
  2783                           ; #config settings
  2784  00FFFE  00                 	db	0	; dummy byte at the end
  2785  0000                     
  2786                           	psect	cinit
  2787  0028DA                     __pcinit:
  2788                           	opt callstack 0
  2789  0028DA                     start_initialization:
  2790                           	opt callstack 0
  2791  0028DA                     __initialization:
  2792                           	opt callstack 0
  2793                           
  2794                           ; Initialize objects allocated to BANK4 (64 bytes)
  2795                           ; load TBLPTR registers with __pidataBANK4
  2796  0028DA  0EF2               	movlw	low __pidataBANK4
  2797  0028DC  6EF6               	movwf	tblptrl,c
  2798  0028DE  0E3C               	movlw	high __pidataBANK4
  2799  0028E0  6EF7               	movwf	tblptrh,c
  2800  0028E2  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  2801  0028E4  6EF8               	movwf	tblptru,c
  2802  0028E6  EE04  F064         	lfsr	0,__pdataBANK4
  2803  0028EA  EE10 F040          	lfsr	1,64
  2804  0028EE                     copy_data0:
  2805  0028EE  0009               	tblrd		*+
  2806  0028F0  CFF5 FFEE          	movff	tablat,postinc0
  2807  0028F4  50E5               	movf	postdec1,w,c
  2808  0028F6  50E1               	movf	fsr1l,w,c
  2809  0028F8  E1FA               	bnz	copy_data0
  2810                           
  2811                           ; Initialize objects allocated to BANK3 (64 bytes)
  2812                           ; load TBLPTR registers with __pidataBANK3
  2813  0028FA  0EB2               	movlw	low __pidataBANK3
  2814  0028FC  6EF6               	movwf	tblptrl,c
  2815  0028FE  0E3C               	movlw	high __pidataBANK3
  2816  002900  6EF7               	movwf	tblptrh,c
  2817  002902  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  2818  002904  6EF8               	movwf	tblptru,c
  2819  002906  EE03  F0B7         	lfsr	0,__pdataBANK3
  2820  00290A  EE10 F040          	lfsr	1,64
  2821  00290E                     copy_data1:
  2822  00290E  0009               	tblrd		*+
  2823  002910  CFF5 FFEE          	movff	tablat,postinc0
  2824  002914  50E5               	movf	postdec1,w,c
  2825  002916  50E1               	movf	fsr1l,w,c
  2826  002918  E1FA               	bnz	copy_data1
  2827                           
  2828                           ; Initialize objects allocated to BANK2 (235 bytes)
  2829                           ; load TBLPTR registers with __pidataBANK2
  2830  00291A  0EC4               	movlw	low __pidataBANK2
  2831  00291C  6EF6               	movwf	tblptrl,c
  2832  00291E  0E2A               	movlw	high __pidataBANK2
  2833  002920  6EF7               	movwf	tblptrh,c
  2834  002922  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  2835  002924  6EF8               	movwf	tblptru,c
  2836  002926  EE02  F000         	lfsr	0,__pdataBANK2
  2837  00292A  EE10 F0EB          	lfsr	1,235
  2838  00292E                     copy_data2:
  2839  00292E  0009               	tblrd		*+
  2840  002930  CFF5 FFEE          	movff	tablat,postinc0
  2841  002934  50E5               	movf	postdec1,w,c
  2842  002936  50E1               	movf	fsr1l,w,c
  2843  002938  E1FA               	bnz	copy_data2
  2844                           
  2845                           ; Initialize objects allocated to BANK1 (84 bytes)
  2846                           ; load TBLPTR registers with __pidataBANK1
  2847  00293A  0ED0               	movlw	low __pidataBANK1
  2848  00293C  6EF6               	movwf	tblptrl,c
  2849  00293E  0E39               	movlw	high __pidataBANK1
  2850  002940  6EF7               	movwf	tblptrh,c
  2851  002942  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2852  002944  6EF8               	movwf	tblptru,c
  2853  002946  EE01  F000         	lfsr	0,__pdataBANK1
  2854  00294A  EE10 F054          	lfsr	1,84
  2855  00294E                     copy_data3:
  2856  00294E  0009               	tblrd		*+
  2857  002950  CFF5 FFEE          	movff	tablat,postinc0
  2858  002954  50E5               	movf	postdec1,w,c
  2859  002956  50E1               	movf	fsr1l,w,c
  2860  002958  E1FA               	bnz	copy_data3
  2861                           
  2862                           ; Initialize objects allocated to BANK0 (10 bytes)
  2863                           ; load TBLPTR registers with __pidataBANK0
  2864  00295A  0E4A               	movlw	low __pidataBANK0
  2865  00295C  6EF6               	movwf	tblptrl,c
  2866  00295E  0E40               	movlw	high __pidataBANK0
  2867  002960  6EF7               	movwf	tblptrh,c
  2868  002962  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2869  002964  6EF8               	movwf	tblptru,c
  2870  002966  EE00  F0F2         	lfsr	0,__pdataBANK0
  2871  00296A  EE10 F00A          	lfsr	1,10
  2872  00296E                     copy_data4:
  2873  00296E  0009               	tblrd		*+
  2874  002970  CFF5 FFEE          	movff	tablat,postinc0
  2875  002974  50E5               	movf	postdec1,w,c
  2876  002976  50E1               	movf	fsr1l,w,c
  2877  002978  E1FA               	bnz	copy_data4
  2878                           
  2879                           ; Clear objects allocated to BANK5 (100 bytes)
  2880  00297A  EE05  F000         	lfsr	0,__pbssBANK5
  2881  00297E  0E64               	movlw	100
  2882  002980                     clear_0:
  2883  002980  6AEE               	clrf	postinc0,c
  2884  002982  06E8               	decf	wreg,f,c
  2885  002984  E1FD               	bnz	clear_0
  2886                           
  2887                           ; Clear objects allocated to BANK4 (100 bytes)
  2888  002986  EE04  F000         	lfsr	0,__pbssBANK4
  2889  00298A  0E64               	movlw	100
  2890  00298C                     clear_1:
  2891  00298C  6AEE               	clrf	postinc0,c
  2892  00298E  06E8               	decf	wreg,f,c
  2893  002990  E1FD               	bnz	clear_1
  2894                           
  2895                           ; Clear objects allocated to BANK3 (183 bytes)
  2896  002992  EE03  F000         	lfsr	0,__pbssBANK3
  2897  002996  0EB7               	movlw	183
  2898  002998                     clear_2:
  2899  002998  6AEE               	clrf	postinc0,c
  2900  00299A  06E8               	decf	wreg,f,c
  2901  00299C  E1FD               	bnz	clear_2
  2902                           
  2903                           ; Clear objects allocated to BANK2 (11 bytes)
  2904  00299E  EE02  F0EB         	lfsr	0,__pbssBANK2
  2905  0029A2  0E0B               	movlw	11
  2906  0029A4                     clear_3:
  2907  0029A4  6AEE               	clrf	postinc0,c
  2908  0029A6  06E8               	decf	wreg,f,c
  2909  0029A8  E1FD               	bnz	clear_3
  2910                           
  2911                           ; Clear objects allocated to BANK1 (80 bytes)
  2912  0029AA  EE01  F054         	lfsr	0,__pbssBANK1
  2913  0029AE  0E50               	movlw	80
  2914  0029B0                     clear_4:
  2915  0029B0  6AEE               	clrf	postinc0,c
  2916  0029B2  06E8               	decf	wreg,f,c
  2917  0029B4  E1FD               	bnz	clear_4
  2918                           
  2919                           ; Clear objects allocated to BANK0 (45 bytes)
  2920  0029B6  EE00  F0C5         	lfsr	0,__pbssBANK0
  2921  0029BA  0E2D               	movlw	45
  2922  0029BC                     clear_5:
  2923  0029BC  6AEE               	clrf	postinc0,c
  2924  0029BE  06E8               	decf	wreg,f,c
  2925  0029C0  E1FD               	bnz	clear_5
  2926                           
  2927                           ; Clear objects allocated to COMRAM (4 bytes)
  2928  0029C2  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
  2929  0029C4  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
  2930  0029C6  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2931  0029C8  6A57               	clrf	__pbssCOMRAM& (0+255),c
  2932  0029CA                     end_of_initialization:
  2933                           	opt callstack 0
  2934  0029CA                     __end_of__initialization:
  2935                           	opt callstack 0
  2936  0029CA  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2937  0029CC  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2938  0029CE  0100               	movlb	0
  2939  0029D0  EFDD  F013         	goto	_main	;jump to C main() function
  2940                           
  2941                           	psect	bssCOMRAM
  2942  000057                     __pbssCOMRAM:
  2943                           	opt callstack 0
  2944  000057                     _flags:
  2945                           	opt callstack 0
  2946  000057                     	ds	2
  2947  000059                     _eusart1RxHead:
  2948                           	opt callstack 0
  2949  000059                     	ds	1
  2950  00005A                     _eusart2RxHead:
  2951                           	opt callstack 0
  2952  00005A                     	ds	1
  2953                           
  2954                           	psect	bssBANK0
  2955  0000C5                     __pbssBANK0:
  2956                           	opt callstack 0
  2957  0000C5                     _nout:
  2958                           	opt callstack 0
  2959  0000C5                     	ds	2
  2960  0000C7                     _width:
  2961                           	opt callstack 0
  2962  0000C7                     	ds	2
  2963  0000C9                     _prec:
  2964                           	opt callstack 0
  2965  0000C9                     	ds	2
  2966  0000CB                     	ds	2
  2967  0000CD                     _ByteHi:
  2968                           	opt callstack 0
  2969  0000CD                     	ds	2
  2970  0000CF                     _MBResCnt:
  2971                           	opt callstack 0
  2972  0000CF                     	ds	2
  2973  0000D1                     _ByteNum:
  2974                           	opt callstack 0
  2975  0000D1                     	ds	2
  2976  0000D3                     _ModDataCnt:
  2977                           	opt callstack 0
  2978  0000D3                     	ds	2
  2979  0000D5                     _rxStatus:
  2980                           	opt callstack 0
  2981  0000D5                     	ds	1
  2982  0000D6                     _RXStat:
  2983                           	opt callstack 0
  2984  0000D6                     	ds	1
  2985  0000D7                     _Debug:
  2986                           	opt callstack 0
  2987  0000D7                     	ds	1
  2988  0000D8                     _eusart1RxLastError:
  2989                           	opt callstack 0
  2990  0000D8                     	ds	1
  2991  0000D9                     _eusart1RxCount:
  2992                           	opt callstack 0
  2993  0000D9                     	ds	1
  2994  0000DA                     _eusart1RxTail:
  2995                           	opt callstack 0
  2996  0000DA                     	ds	1
  2997  0000DB                     _eusart1TxTail:
  2998                           	opt callstack 0
  2999  0000DB                     	ds	1
  3000  0000DC                     _eusart1TxHead:
  3001                           	opt callstack 0
  3002  0000DC                     	ds	1
  3003  0000DD                     _eusart2RxLastError:
  3004                           	opt callstack 0
  3005  0000DD                     	ds	1
  3006  0000DE                     _eusart2RxCount:
  3007                           	opt callstack 0
  3008  0000DE                     	ds	1
  3009  0000DF                     _eusart2RxTail:
  3010                           	opt callstack 0
  3011  0000DF                     	ds	1
  3012  0000E0                     _eusart2TxTail:
  3013                           	opt callstack 0
  3014  0000E0                     	ds	1
  3015  0000E1                     _eusart2TxHead:
  3016                           	opt callstack 0
  3017  0000E1                     	ds	1
  3018  0000E2                     _Command:
  3019                           	opt callstack 0
  3020  0000E2                     	ds	16
  3021                           
  3022                           	psect	dataBANK0
  3023  0000F2                     __pdataBANK0:
  3024                           	opt callstack 0
  3025  0000F2                     ReadRX232@F10728:
  3026                           	opt callstack 0
  3027  0000F2                     	ds	2
  3028  0000F4                     _ByteLo:
  3029                           	opt callstack 0
  3030  0000F4                     	ds	2
  3031  0000F6                     _MBResCRC:
  3032                           	opt callstack 0
  3033  0000F6                     	ds	2
  3034  0000F8                     _ExpectedBytes:
  3035                           	opt callstack 0
  3036  0000F8                     	ds	2
  3037  0000FA                     _MB302xx:
  3038                           	opt callstack 0
  3039  0000FA                     	ds	2
  3040                           
  3041                           	psect	bssBANK1
  3042  000154                     __pbssBANK1:
  3043                           	opt callstack 0
  3044  000154                     _eusart2RxStatusBuffer:
  3045                           	opt callstack 0
  3046  000154                     	ds	32
  3047  000174                     _eusart1TxBuffer:
  3048                           	opt callstack 0
  3049  000174                     	ds	16
  3050  000184                     _dbuf:
  3051                           	opt callstack 0
  3052  000184                     	ds	32
  3053                           
  3054                           	psect	dataBANK1
  3055  000100                     __pdataBANK1:
  3056                           	opt callstack 0
  3057  000100                     _MB305xx:
  3058                           	opt callstack 0
  3059  000100                     	ds	16
  3060  000110                     _MB301xx:
  3061                           	opt callstack 0
  3062  000110                     	ds	14
  3063  00011E                     _MB304xx:
  3064                           	opt callstack 0
  3065  00011E                     	ds	12
  3066  00012A                     InitialiseString@F10720:
  3067                           	opt callstack 0
  3068  00012A                     	ds	11
  3069  000135                     _MB303xx:
  3070                           	opt callstack 0
  3071  000135                     	ds	10
  3072  00013F                     InitialiseString@F10723:
  3073                           	opt callstack 0
  3074  00013F                     	ds	8
  3075  000147                     stoa@F1139:
  3076                           	opt callstack 0
  3077  000147                     	ds	7
  3078  00014E                     _MB306xx:
  3079                           	opt callstack 0
  3080  00014E                     	ds	6
  3081                           
  3082                           	psect	bssBANK2
  3083  0002EB                     __pbssBANK2:
  3084                           	opt callstack 0
  3085  0002EB                     	ds	11
  3086                           
  3087                           	psect	dataBANK2
  3088  000200                     __pdataBANK2:
  3089                           	opt callstack 0
  3090  000200                     _ModbusData:
  3091                           	opt callstack 0
  3092  000200                     	ds	100
  3093  000264                     ValidateCmd@F10752:
  3094                           	opt callstack 0
  3095  000264                     	ds	20
  3096  000278                     ValidateCmd@F10749:
  3097                           	opt callstack 0
  3098  000278                     	ds	20
  3099  00028C                     ValidateCmd@F10746:
  3100                           	opt callstack 0
  3101  00028C                     	ds	20
  3102  0002A0                     _MBRespon:
  3103                           	opt callstack 0
  3104  0002A0                     	ds	75
  3105                           
  3106                           	psect	bssBANK3
  3107  000300                     __pbssBANK3:
  3108                           	opt callstack 0
  3109  000300                     _eusart1RxStatusBuffer:
  3110                           	opt callstack 0
  3111  000300                     	ds	100
  3112  000364                     _eusart2RxBuffer:
  3113                           	opt callstack 0
  3114  000364                     	ds	32
  3115  000384                     _eusart2TxBuffer:
  3116                           	opt callstack 0
  3117  000384                     	ds	32
  3118  0003A4                     	ds	19
  3119                           
  3120                           	psect	dataBANK3
  3121  0003B7                     __pdataBANK3:
  3122                           	opt callstack 0
  3123  0003B7                     _MB300xx:
  3124                           	opt callstack 0
  3125  0003B7                     	ds	64
  3126                           
  3127                           	psect	bssBANK4
  3128  000400                     __pbssBANK4:
  3129                           	opt callstack 0
  3130  000400                     _eusart1RxBuffer:
  3131                           	opt callstack 0
  3132  000400                     	ds	100
  3133                           
  3134                           	psect	dataBANK4
  3135  000464                     __pdataBANK4:
  3136                           	opt callstack 0
  3137  000464                     _MB400xx:
  3138                           	opt callstack 0
  3139  000464                     	ds	64
  3140                           
  3141                           	psect	bssBANK5
  3142  000500                     __pbssBANK5:
  3143                           	opt callstack 0
  3144  000500                     _rxData:
  3145                           	opt callstack 0
  3146  000500                     	ds	100
  3147                           
  3148                           	psect	cstackBANK1
  3149  0001A4                     __pcstackBANK1:
  3150                           	opt callstack 0
  3151  0001A4                     ValidateCmd@ConfName:
  3152                           	opt callstack 0
  3153                           
  3154                           ; 20 bytes @ 0x0
  3155  0001A4                     	ds	20
  3156  0001B8                     ValidateCmd@ConfName_1479:
  3157                           	opt callstack 0
  3158                           
  3159                           ; 20 bytes @ 0x14
  3160  0001B8                     	ds	20
  3161  0001CC                     ValidateCmd@ConfName_1483:
  3162                           	opt callstack 0
  3163                           
  3164                           ; 20 bytes @ 0x28
  3165  0001CC                     	ds	28
  3166  0001E8                     ??_main:
  3167                           
  3168                           ; 1 bytes @ 0x44
  3169  0001E8                     	ds	2
  3170                           
  3171                           	psect	cstackBANK0
  3172  000060                     __pcstackBANK0:
  3173                           	opt callstack 0
  3174  000060                     vfpfcnvrt@ll:
  3175                           	opt callstack 0
  3176                           
  3177                           ; 8 bytes @ 0x0
  3178  000060                     	ds	8
  3179  000068                     vfpfcnvrt@cp:
  3180                           	opt callstack 0
  3181                           
  3182                           ; 2 bytes @ 0x8
  3183  000068                     	ds	2
  3184  00006A                     vfpfcnvrt@c:
  3185                           	opt callstack 0
  3186                           
  3187                           ; 1 bytes @ 0xA
  3188  00006A                     	ds	1
  3189  00006B                     vfpfcnvrt@done:
  3190                           	opt callstack 0
  3191                           
  3192                           ; 2 bytes @ 0xB
  3193  00006B                     	ds	2
  3194  00006D                     _vfpfcnvrt$1605:
  3195                           	opt callstack 0
  3196                           
  3197                           ; 2 bytes @ 0xD
  3198  00006D                     	ds	2
  3199  00006F                     vfpfcnvrt@llu:
  3200                           	opt callstack 0
  3201                           
  3202                           ; 8 bytes @ 0xF
  3203  00006F                     	ds	8
  3204  000077                     ?_vfprintf:
  3205                           	opt callstack 0
  3206  000077                     vfprintf@fp:
  3207                           	opt callstack 0
  3208                           
  3209                           ; 2 bytes @ 0x17
  3210  000077                     	ds	2
  3211  000079                     vfprintf@fmt:
  3212                           	opt callstack 0
  3213                           
  3214                           ; 2 bytes @ 0x19
  3215  000079                     	ds	2
  3216  00007B                     vfprintf@ap:
  3217                           	opt callstack 0
  3218                           
  3219                           ; 2 bytes @ 0x1B
  3220  00007B                     	ds	2
  3221  00007D                     ?_printf:
  3222                           	opt callstack 0
  3223  00007D                     printf@fmt:
  3224                           	opt callstack 0
  3225                           
  3226                           ; 2 bytes @ 0x1D
  3227  00007D                     	ds	10
  3228  000087                     printf@ap:
  3229                           	opt callstack 0
  3230                           
  3231                           ; 2 bytes @ 0x27
  3232  000087                     	ds	2
  3233  000089                     ??_ModbusFC03:
  3234  000089                     ??_checkCRC:
  3235  000089                     ?_ReadRX232:
  3236                           	opt callstack 0
  3237  000089                     AddRxBuffToModBus@i:
  3238                           	opt callstack 0
  3239  000089                     PrintModbus@i:
  3240                           	opt callstack 0
  3241  000089                     PrintModRespon@i:
  3242                           	opt callstack 0
  3243  000089                     ReadRX232@NumChars:
  3244                           	opt callstack 0
  3245  000089                     ClearEEAddRange@StartAdd:
  3246                           	opt callstack 0
  3247  000089                     InitialiseString@PartNum:
  3248                           	opt callstack 0
  3249                           
  3250                           ; 19 bytes @ 0x29
  3251  000089                     	ds	2
  3252  00008B                     ??_ModbusFC10:
  3253  00008B                     ModbusError@ErrorCode:
  3254                           	opt callstack 0
  3255  00008B                     ClearEEAddRange@NumBytes:
  3256                           	opt callstack 0
  3257                           
  3258                           ; 2 bytes @ 0x2B
  3259  00008B                     	ds	2
  3260  00008D                     SaveCardDat@Name:
  3261                           	opt callstack 0
  3262                           
  3263                           ; 2 bytes @ 0x2D
  3264  00008D                     	ds	1
  3265  00008E                     checkCRC@crcHigh:
  3266                           	opt callstack 0
  3267                           
  3268                           ; 2 bytes @ 0x2E
  3269  00008E                     	ds	1
  3270  00008F                     ModbusFC10@TempData:
  3271                           	opt callstack 0
  3272  00008F                     SaveCardDat@MBAddress:
  3273                           	opt callstack 0
  3274                           
  3275                           ; 2 bytes @ 0x2F
  3276  00008F                     	ds	1
  3277  000090                     checkCRC@crcLow:
  3278                           	opt callstack 0
  3279                           
  3280                           ; 2 bytes @ 0x30
  3281  000090                     	ds	1
  3282  000091                     ModbusFC10@i:
  3283                           	opt callstack 0
  3284  000091                     SaveCardDat@dataeeAddr:
  3285                           	opt callstack 0
  3286                           
  3287                           ; 2 bytes @ 0x31
  3288  000091                     	ds	1
  3289  000092                     checkCRC@j:
  3290                           	opt callstack 0
  3291                           
  3292                           ; 2 bytes @ 0x32
  3293  000092                     	ds	1
  3294  000093                     ModbusFC10@j:
  3295                           	opt callstack 0
  3296  000093                     SaveCardDat@NumBytes:
  3297                           	opt callstack 0
  3298                           
  3299                           ; 2 bytes @ 0x33
  3300  000093                     	ds	1
  3301  000094                     checkCRC@crc:
  3302                           	opt callstack 0
  3303                           
  3304                           ; 2 bytes @ 0x34
  3305  000094                     	ds	1
  3306  000095                     ??_SaveCardDat:
  3307                           
  3308                           ; 1 bytes @ 0x35
  3309  000095                     	ds	1
  3310  000096                     checkCRC@i:
  3311                           	opt callstack 0
  3312                           
  3313                           ; 2 bytes @ 0x36
  3314  000096                     	ds	1
  3315  000097                     _SaveCardDat$2467:
  3316                           	opt callstack 0
  3317                           
  3318                           ; 2 bytes @ 0x37
  3319  000097                     	ds	2
  3320  000099                     SaveCardDat@dataeeAddrWrk:
  3321                           	opt callstack 0
  3322                           
  3323                           ; 2 bytes @ 0x39
  3324  000099                     	ds	2
  3325  00009B                     SaveCardDat@i:
  3326                           	opt callstack 0
  3327                           
  3328                           ; 2 bytes @ 0x3B
  3329  00009B                     	ds	1
  3330  00009C                     InitialiseString@Date:
  3331                           	opt callstack 0
  3332                           
  3333                           ; 11 bytes @ 0x3C
  3334  00009C                     	ds	1
  3335  00009D                     SaveCardDat@Conf:
  3336                           	opt callstack 0
  3337                           
  3338                           ; 1 bytes @ 0x3D
  3339  00009D                     	ds	10
  3340  0000A7                     InitialiseString@Time:
  3341                           	opt callstack 0
  3342                           
  3343                           ; 8 bytes @ 0x47
  3344  0000A7                     	ds	8
  3345  0000AF                     InitialiseString@SerialNum:
  3346                           	opt callstack 0
  3347                           
  3348                           ; 11 bytes @ 0x4F
  3349  0000AF                     	ds	11
  3350  0000BA                     InitialiseString@Partial:
  3351                           	opt callstack 0
  3352                           
  3353                           ; 1 bytes @ 0x5A
  3354  0000BA                     	ds	1
  3355  0000BB                     InitialiseString@RevNum:
  3356                           	opt callstack 0
  3357                           
  3358                           ; 2 bytes @ 0x5B
  3359  0000BB                     	ds	2
  3360  0000BD                     InitialiseString@readDataOdd:
  3361                           	opt callstack 0
  3362                           
  3363                           ; 1 bytes @ 0x5D
  3364  0000BD                     	ds	1
  3365  0000BE                     InitialiseString@readDataEven:
  3366                           	opt callstack 0
  3367                           
  3368                           ; 1 bytes @ 0x5E
  3369  0000BE                     	ds	1
  3370  0000BF                     InitialiseString@j:
  3371                           	opt callstack 0
  3372                           
  3373                           ; 2 bytes @ 0x5F
  3374  0000BF                     	ds	2
  3375  0000C1                     InitialiseString@i:
  3376                           	opt callstack 0
  3377                           
  3378                           ; 2 bytes @ 0x61
  3379  0000C1                     	ds	2
  3380  0000C3                     InitialiseString@i_1415:
  3381                           	opt callstack 0
  3382                           
  3383                           ; 2 bytes @ 0x63
  3384  0000C3                     	ds	2
  3385                           
  3386                           	psect	cstackCOMRAM
  3387  000001                     __pcstackCOMRAM:
  3388                           	opt callstack 0
  3389  000001                     ??_INTERRUPT_InterruptManager:
  3390  000001                     
  3391                           ; 1 bytes @ 0x0
  3392  000001                     	ds	4
  3393  000005                     ??_ClearRxBuff:
  3394  000005                     ?_generateCRC:
  3395                           	opt callstack 0
  3396  000005                     ?_strcmp:
  3397                           	opt callstack 0
  3398  000005                     ?_strlen:
  3399                           	opt callstack 0
  3400  000005                     ?_isupper:
  3401                           	opt callstack 0
  3402  000005                     ?_isalpha:
  3403                           	opt callstack 0
  3404  000005                     ?_isdigit:
  3405                           	opt callstack 0
  3406  000005                     ?_isspace:
  3407                           	opt callstack 0
  3408  000005                     ?_islower:
  3409                           	opt callstack 0
  3410  000005                     ?___wmul:
  3411                           	opt callstack 0
  3412  000005                     ?___aodiv:
  3413                           	opt callstack 0
  3414  000005                     ?___aomod:
  3415                           	opt callstack 0
  3416  000005                     ?___lodiv:
  3417                           	opt callstack 0
  3418  000005                     ?___lomod:
  3419                           	opt callstack 0
  3420  000005                     EUSART2_Read@readValue:
  3421                           	opt callstack 0
  3422  000005                     EUSART2_Write@txData:
  3423                           	opt callstack 0
  3424  000005                     EUSART1_Read@readValue:
  3425                           	opt callstack 0
  3426  000005                     EUSART1_Write@txData:
  3427                           	opt callstack 0
  3428  000005                     DATAEE_WriteByte@bAdd:
  3429                           	opt callstack 0
  3430  000005                     DATAEE_ReadByte@bAdd:
  3431                           	opt callstack 0
  3432  000005                     EUSART2_SetFramingErrorHandler@interruptHandler:
  3433                           	opt callstack 0
  3434  000005                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  3435                           	opt callstack 0
  3436  000005                     EUSART2_SetErrorHandler@interruptHandler:
  3437                           	opt callstack 0
  3438  000005                     EUSART2_SetTxInterruptHandler@interruptHandler:
  3439                           	opt callstack 0
  3440  000005                     EUSART2_SetRxInterruptHandler@interruptHandler:
  3441                           	opt callstack 0
  3442  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
  3443                           	opt callstack 0
  3444  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  3445                           	opt callstack 0
  3446  000005                     EUSART1_SetErrorHandler@interruptHandler:
  3447                           	opt callstack 0
  3448  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
  3449                           	opt callstack 0
  3450  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
  3451                           	opt callstack 0
  3452  000005                     ClearModbusData@i:
  3453                           	opt callstack 0
  3454  000005                     generateCRC@MessCnt:
  3455                           	opt callstack 0
  3456  000005                     ClearModbusRespon@i:
  3457                           	opt callstack 0
  3458  000005                     ___wmul@multiplier:
  3459                           	opt callstack 0
  3460  000005                     isalpha@c:
  3461                           	opt callstack 0
  3462  000005                     isdigit@c:
  3463                           	opt callstack 0
  3464  000005                     isspace@c:
  3465                           	opt callstack 0
  3466  000005                     isupper@c:
  3467                           	opt callstack 0
  3468  000005                     strcmp@l:
  3469                           	opt callstack 0
  3470  000005                     strlen@s:
  3471                           	opt callstack 0
  3472  000005                     islower@c:
  3473                           	opt callstack 0
  3474  000005                     ___aodiv@dividend:
  3475                           	opt callstack 0
  3476  000005                     ___aomod@dividend:
  3477                           	opt callstack 0
  3478  000005                     ___lodiv@dividend:
  3479                           	opt callstack 0
  3480  000005                     ___lomod@dividend:
  3481                           	opt callstack 0
  3482                           
  3483                           ; 8 bytes @ 0x4
  3484  000005                     	ds	1
  3485  000006                     putch@txData:
  3486                           	opt callstack 0
  3487  000006                     ClearRxBuff@i:
  3488                           	opt callstack 0
  3489  000006                     UART1_Write_string@data:
  3490                           	opt callstack 0
  3491                           
  3492                           ; 2 bytes @ 0x5
  3493  000006                     	ds	1
  3494  000007                     ??_isupper:
  3495  000007                     ??_isalpha:
  3496  000007                     ??_isdigit:
  3497  000007                     ??_isspace:
  3498  000007                     ??_islower:
  3499  000007                     DATAEE_WriteByte@bData:
  3500                           	opt callstack 0
  3501  000007                     generateCRC@HiOrLo:
  3502                           	opt callstack 0
  3503  000007                     ___wmul@multiplicand:
  3504                           	opt callstack 0
  3505  000007                     fputc@c:
  3506                           	opt callstack 0
  3507  000007                     strcmp@r:
  3508                           	opt callstack 0
  3509  000007                     strlen@a:
  3510                           	opt callstack 0
  3511                           
  3512                           ; 2 bytes @ 0x6
  3513  000007                     	ds	1
  3514  000008                     ??_generateCRC:
  3515  000008                     DATAEE_WriteByte@GIEBitValue:
  3516                           	opt callstack 0
  3517  000008                     UART1_Write_string@data_len:
  3518                           	opt callstack 0
  3519                           
  3520                           ; 2 bytes @ 0x7
  3521  000008                     	ds	1
  3522  000009                     ??_strcmp:
  3523  000009                     ___wmul@product:
  3524                           	opt callstack 0
  3525  000009                     memmove@d1:
  3526                           	opt callstack 0
  3527  000009                     fputc@fp:
  3528                           	opt callstack 0
  3529  000009                     strcpy@dest:
  3530                           	opt callstack 0
  3531                           
  3532                           ; 2 bytes @ 0x8
  3533  000009                     	ds	1
  3534  00000A                     ??_UART1_Write_string:
  3535  00000A                     generateCRC@crcHigh:
  3536                           	opt callstack 0
  3537  00000A                     CardConfigIni@Name:
  3538                           	opt callstack 0
  3539                           
  3540                           ; 2 bytes @ 0x9
  3541  00000A                     	ds	1
  3542  00000B                     ??_fputc:
  3543  00000B                     ?_toupper:
  3544                           	opt callstack 0
  3545  00000B                     _isspace$2092:
  3546                           	opt callstack 0
  3547  00000B                     UART1_Write_string@i:
  3548                           	opt callstack 0
  3549  00000B                     memmove@s1:
  3550                           	opt callstack 0
  3551  00000B                     strcpy@src:
  3552                           	opt callstack 0
  3553  00000B                     toupper@c:
  3554                           	opt callstack 0
  3555                           
  3556                           ; 2 bytes @ 0xA
  3557  00000B                     	ds	1
  3558  00000C                     ?_atoi:
  3559                           	opt callstack 0
  3560  00000C                     generateCRC@crcLow:
  3561                           	opt callstack 0
  3562  00000C                     CardConfigIni@RetNum:
  3563                           	opt callstack 0
  3564  00000C                     atoi@s:
  3565                           	opt callstack 0
  3566                           
  3567                           ; 2 bytes @ 0xB
  3568  00000C                     	ds	1
  3569  00000D                     ??_strcpy:
  3570  00000D                     ??_toupper:
  3571  00000D                     memmove@n:
  3572                           	opt callstack 0
  3573  00000D                     ___aodiv@divisor:
  3574                           	opt callstack 0
  3575  00000D                     ___aomod@divisor:
  3576                           	opt callstack 0
  3577  00000D                     ___lodiv@divisor:
  3578                           	opt callstack 0
  3579  00000D                     ___lomod@divisor:
  3580                           	opt callstack 0
  3581                           
  3582                           ; 8 bytes @ 0xC
  3583  00000D                     	ds	1
  3584  00000E                     ??_atoi:
  3585  00000E                     generateCRC@i:
  3586                           	opt callstack 0
  3587  00000E                     CardConfigIni@dataeeAddrWrk:
  3588                           	opt callstack 0
  3589                           
  3590                           ; 2 bytes @ 0xD
  3591  00000E                     	ds	1
  3592  00000F                     ??_memmove:
  3593  00000F                     strcpy@s:
  3594                           	opt callstack 0
  3595                           
  3596                           ; 2 bytes @ 0xE
  3597  00000F                     	ds	1
  3598  000010                     ?_stoa:
  3599                           	opt callstack 0
  3600  000010                     generateCRC@j:
  3601                           	opt callstack 0
  3602  000010                     CardConfigIni@NumBytes:
  3603                           	opt callstack 0
  3604  000010                     stoa@fp:
  3605                           	opt callstack 0
  3606  000010                     fputs@s:
  3607                           	opt callstack 0
  3608                           
  3609                           ; 2 bytes @ 0xF
  3610  000010                     	ds	1
  3611  000011                     memmove@d:
  3612                           	opt callstack 0
  3613  000011                     strcpy@d:
  3614                           	opt callstack 0
  3615  000011                     _toupper$2179:
  3616                           	opt callstack 0
  3617                           
  3618                           ; 2 bytes @ 0x10
  3619  000011                     	ds	1
  3620  000012                     ??_CardConfigIni:
  3621  000012                     generateCRC@crc:
  3622                           	opt callstack 0
  3623  000012                     stoa@s:
  3624                           	opt callstack 0
  3625  000012                     atoi@neg:
  3626                           	opt callstack 0
  3627  000012                     fputs@fp:
  3628                           	opt callstack 0
  3629                           
  3630                           ; 2 bytes @ 0x11
  3631  000012                     	ds	1
  3632  000013                     memmove@s:
  3633                           	opt callstack 0
  3634  000013                     strcat@dest:
  3635                           	opt callstack 0
  3636                           
  3637                           ; 2 bytes @ 0x12
  3638  000013                     	ds	1
  3639  000014                     ??_stoa:
  3640  000014                     fputs@c:
  3641                           	opt callstack 0
  3642  000014                     CardConfigIni@j:
  3643                           	opt callstack 0
  3644  000014                     _atoi$2065:
  3645                           	opt callstack 0
  3646                           
  3647                           ; 2 bytes @ 0x13
  3648  000014                     	ds	1
  3649  000015                     ___aodiv@counter:
  3650                           	opt callstack 0
  3651  000015                     ___aomod@counter:
  3652                           	opt callstack 0
  3653  000015                     ___lomod@counter:
  3654                           	opt callstack 0
  3655  000015                     fputs@i:
  3656                           	opt callstack 0
  3657  000015                     strcat@src:
  3658                           	opt callstack 0
  3659  000015                     stoa@nuls:
  3660                           	opt callstack 0
  3661  000015                     ___lodiv@quotient:
  3662                           	opt callstack 0
  3663                           
  3664                           ; 8 bytes @ 0x14
  3665  000015                     	ds	1
  3666  000016                     ___aodiv@sign:
  3667                           	opt callstack 0
  3668  000016                     ___aomod@sign:
  3669                           	opt callstack 0
  3670  000016                     CardConfigIni@i:
  3671                           	opt callstack 0
  3672  000016                     _atoi$2067:
  3673                           	opt callstack 0
  3674                           
  3675                           ; 2 bytes @ 0x15
  3676  000016                     	ds	1
  3677  000017                     ?_abs:
  3678                           	opt callstack 0
  3679  000017                     ?_pad:
  3680                           	opt callstack 0
  3681  000017                     pad@fp:
  3682                           	opt callstack 0
  3683  000017                     abs@a:
  3684                           	opt callstack 0
  3685  000017                     ___aodiv@quotient:
  3686                           	opt callstack 0
  3687                           
  3688                           ; 8 bytes @ 0x16
  3689  000017                     	ds	1
  3690  000018                     CardConfigIni@readDataOdd:
  3691                           	opt callstack 0
  3692  000018                     _atoi$2066:
  3693                           	opt callstack 0
  3694                           
  3695                           ; 1 bytes @ 0x17
  3696  000018                     	ds	1
  3697  000019                     ??_abs:
  3698  000019                     CardConfigIni@readDataEven:
  3699                           	opt callstack 0
  3700  000019                     pad@buf:
  3701                           	opt callstack 0
  3702  000019                     atoi@n:
  3703                           	opt callstack 0
  3704                           
  3705                           ; 2 bytes @ 0x18
  3706  000019                     	ds	2
  3707  00001B                     pad@p:
  3708                           	opt callstack 0
  3709                           
  3710                           ; 2 bytes @ 0x1A
  3711  00001B                     	ds	1
  3712  00001C                     stoa@i:
  3713                           	opt callstack 0
  3714                           
  3715                           ; 2 bytes @ 0x1B
  3716  00001C                     	ds	1
  3717  00001D                     ??_pad:
  3718  00001D                     ___lodiv@counter:
  3719                           	opt callstack 0
  3720                           
  3721                           ; 1 bytes @ 0x1C
  3722  00001D                     	ds	1
  3723  00001E                     pad@i:
  3724                           	opt callstack 0
  3725  00001E                     stoa@w:
  3726                           	opt callstack 0
  3727                           
  3728                           ; 2 bytes @ 0x1D
  3729  00001E                     	ds	2
  3730  000020                     pad@w:
  3731                           	opt callstack 0
  3732  000020                     stoa@cp:
  3733                           	opt callstack 0
  3734                           
  3735                           ; 2 bytes @ 0x1F
  3736  000020                     	ds	2
  3737  000022                     ?_dtoa:
  3738                           	opt callstack 0
  3739  000022                     ?_utoa:
  3740                           	opt callstack 0
  3741  000022                     ?_xtoa:
  3742                           	opt callstack 0
  3743  000022                     dtoa@fp:
  3744                           	opt callstack 0
  3745  000022                     stoa@p:
  3746                           	opt callstack 0
  3747  000022                     utoa@fp:
  3748                           	opt callstack 0
  3749  000022                     xtoa@fp:
  3750                           	opt callstack 0
  3751                           
  3752                           ; 2 bytes @ 0x21
  3753  000022                     	ds	2
  3754  000024                     stoa@l:
  3755                           	opt callstack 0
  3756  000024                     dtoa@d:
  3757                           	opt callstack 0
  3758  000024                     utoa@d:
  3759                           	opt callstack 0
  3760  000024                     xtoa@d:
  3761                           	opt callstack 0
  3762                           
  3763                           ; 8 bytes @ 0x23
  3764  000024                     	ds	8
  3765  00002C                     ??_dtoa:
  3766  00002C                     ??_utoa:
  3767  00002C                     xtoa@x:
  3768                           	opt callstack 0
  3769                           
  3770                           ; 1 bytes @ 0x2B
  3771  00002C                     	ds	1
  3772  00002D                     ??_xtoa:
  3773                           
  3774                           ; 1 bytes @ 0x2C
  3775  00002D                     	ds	7
  3776  000034                     _dtoa$1561:
  3777                           	opt callstack 0
  3778  000034                     utoa@p:
  3779                           	opt callstack 0
  3780                           
  3781                           ; 2 bytes @ 0x33
  3782  000034                     	ds	1
  3783  000035                     _xtoa$1590:
  3784                           	opt callstack 0
  3785                           
  3786                           ; 2 bytes @ 0x34
  3787  000035                     	ds	1
  3788  000036                     dtoa@p:
  3789                           	opt callstack 0
  3790  000036                     utoa@w:
  3791                           	opt callstack 0
  3792                           
  3793                           ; 2 bytes @ 0x35
  3794  000036                     	ds	1
  3795  000037                     _xtoa$1591:
  3796                           	opt callstack 0
  3797                           
  3798                           ; 2 bytes @ 0x36
  3799  000037                     	ds	1
  3800  000038                     dtoa@w:
  3801                           	opt callstack 0
  3802  000038                     utoa@n:
  3803                           	opt callstack 0
  3804                           
  3805                           ; 8 bytes @ 0x37
  3806  000038                     	ds	1
  3807  000039                     xtoa@p:
  3808                           	opt callstack 0
  3809                           
  3810                           ; 2 bytes @ 0x38
  3811  000039                     	ds	1
  3812  00003A                     dtoa@s:
  3813                           	opt callstack 0
  3814                           
  3815                           ; 2 bytes @ 0x39
  3816  00003A                     	ds	1
  3817  00003B                     xtoa@w:
  3818                           	opt callstack 0
  3819                           
  3820                           ; 2 bytes @ 0x3A
  3821  00003B                     	ds	1
  3822  00003C                     dtoa@n:
  3823                           	opt callstack 0
  3824                           
  3825                           ; 8 bytes @ 0x3B
  3826  00003C                     	ds	1
  3827  00003D                     xtoa@n:
  3828                           	opt callstack 0
  3829                           
  3830                           ; 8 bytes @ 0x3C
  3831  00003D                     	ds	3
  3832  000040                     utoa@i:
  3833                           	opt callstack 0
  3834                           
  3835                           ; 2 bytes @ 0x3F
  3836  000040                     	ds	4
  3837  000044                     dtoa@i:
  3838                           	opt callstack 0
  3839                           
  3840                           ; 2 bytes @ 0x43
  3841  000044                     	ds	1
  3842  000045                     xtoa@i:
  3843                           	opt callstack 0
  3844                           
  3845                           ; 2 bytes @ 0x44
  3846  000045                     	ds	2
  3847  000047                     xtoa@c:
  3848                           	opt callstack 0
  3849                           
  3850                           ; 2 bytes @ 0x46
  3851  000047                     	ds	2
  3852  000049                     ?_vfpfcnvrt:
  3853                           	opt callstack 0
  3854  000049                     vfpfcnvrt@fp:
  3855                           	opt callstack 0
  3856                           
  3857                           ; 2 bytes @ 0x48
  3858  000049                     	ds	2
  3859  00004B                     vfpfcnvrt@fmt:
  3860                           	opt callstack 0
  3861                           
  3862                           ; 2 bytes @ 0x4A
  3863  00004B                     	ds	2
  3864  00004D                     vfpfcnvrt@ap:
  3865                           	opt callstack 0
  3866                           
  3867                           ; 2 bytes @ 0x4C
  3868  00004D                     	ds	2
  3869  00004F                     ??_vfpfcnvrt:
  3870                           
  3871                           ; 1 bytes @ 0x4E
  3872  00004F                     	ds	4
  3873  000053                     vfprintf@cfmt:
  3874                           	opt callstack 0
  3875                           
  3876                           ; 2 bytes @ 0x52
  3877  000053                     	ds	2
  3878  000055                     ??_InitialiseString:
  3879  000055                     ??_PrintModbus:
  3880  000055                     ??_PrintModRespon:
  3881  000055                     ??_AddRxBuffToModBus:
  3882  000055                     PrintMB400@i:
  3883                           	opt callstack 0
  3884  000055                     ModbusFC03@i:
  3885                           	opt callstack 0
  3886  000055                     ReadRX232@temp:
  3887                           	opt callstack 0
  3888  000055                     ClearEEAddRange@i:
  3889                           	opt callstack 0
  3890                           
  3891                           ; 2 bytes @ 0x54
  3892  000055                     	ds	1
  3893  000056                     ??_ModbusRx:
  3894  000056                     
  3895                           ; 1 bytes @ 0x55
  3896  000056                     	ds	1
  3897  000057                     
  3898                           ; 1 bytes @ 0x56
  3899 ;;
  3900 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3901 ;;
  3902 ;; *************** function _main *****************
  3903 ;; Defined at:
  3904 ;;		line 29 in file "main.c"
  3905 ;; Parameters:    Size  Location     Type
  3906 ;;		None
  3907 ;; Auto vars:     Size  Location     Type
  3908 ;;  RXStat          1    0        _Bool 
  3909 ;; Return value:  Size  Location     Type
  3910 ;;                  1    wreg      void 
  3911 ;; Registers used:
  3912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3919 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3920 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3921 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3922 ;;Total ram usage:        3 bytes
  3923 ;; Hardware stack levels required when called:   16
  3924 ;; This function calls:
  3925 ;;		_ClearModbusData
  3926 ;;		_ClearModbusRespon
  3927 ;;		_ClearRxBuff
  3928 ;;		_InitialiseString
  3929 ;;		_ModbusError
  3930 ;;		_ModbusFC03
  3931 ;;		_ModbusFC10
  3932 ;;		_ModbusRx
  3933 ;;		_PrintMB400
  3934 ;;		_PrintModRespon
  3935 ;;		_PrintModbus
  3936 ;;		_RXMode
  3937 ;;		_ReadRX232
  3938 ;;		_SYSTEM_Initialize
  3939 ;;		_ValidateCmd
  3940 ;;		_printf
  3941 ;;		_strcpy
  3942 ;; This function is called by:
  3943 ;;		Startup code after reset
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	text0
  3948  0027BA                     __ptext0:
  3949                           	opt callstack 0
  3950  0027BA                     _main:
  3951                           	opt callstack 15
  3952  0027BA                     
  3953                           ;main.c: 32:     SYSTEM_Initialize();
  3954  0027BA  ECBB  F01F         	call	_SYSTEM_Initialize	;wreg free
  3955  0027BE                     
  3956                           ;main.c: 39:     (INTCONbits.GIE = 1);
  3957  0027BE  8EF2               	bsf	242,7,c	;volatile
  3958  0027C0                     
  3959                           ;main.c: 45:     (INTCONbits.PEIE = 1);
  3960  0027C0  8CF2               	bsf	242,6,c	;volatile
  3961  0027C2  9883               	bcf	131,4,c	;volatile
  3962  0027C4  9A83               	bcf	131,5,c	;volatile
  3963  0027C6  9C83               	bcf	131,6,c	;volatile
  3964  0027C8  9E83               	bcf	131,7,c	;volatile
  3965  0027CA                     
  3966                           ;main.c: 55:     InitialiseString(0);
  3967  0027CA  0E00               	movlw	0
  3968  0027CC  ECAC  F005         	call	_InitialiseString
  3969  0027D0                     
  3970                           ;main.c: 58:     RXMode();
  3971  0027D0  EC65  F020         	call	_RXMode	;wreg free
  3972  0027D4                     
  3973                           ;main.c: 59:     ClearRxBuff();
  3974  0027D4  EC89  F01D         	call	_ClearRxBuff	;wreg free
  3975  0027D8                     
  3976                           ;main.c: 60:     ClearModbusRespon();
  3977  0027D8  EC38  F01E         	call	_ClearModbusRespon	;wreg free
  3978  0027DC                     l7460:
  3979                           
  3980                           ;main.c: 66:     {;main.c: 67:         if(ModbusRx() == 1){
  3981  0027DC  EC2D  F011         	call	_ModbusRx	;wreg free
  3982  0027E0  06E8               	decf	wreg,f,c
  3983  0027E2  A4D8               	btfss	status,2,c
  3984  0027E4  EFF6  F013         	goto	u7631
  3985  0027E8  EFF8  F013         	goto	u7630
  3986  0027EC                     u7631:
  3987  0027EC  EF43  F014         	goto	l7480
  3988  0027F0                     u7630:
  3989  0027F0  EF22  F014         	goto	l7472
  3990  0027F4                     l7464:
  3991                           
  3992                           ; BSR set to: 1
  3993                           ;main.c: 73:                 {;main.c: 77:                     ModbusFC03();
  3994  0027F4  EC5A  F003         	call	_ModbusFC03	;wreg free
  3995                           
  3996                           ;main.c: 78:                     break;
  3997  0027F8  EF39  F014         	goto	l7474
  3998  0027FC                     l7466:
  3999                           
  4000                           ; BSR set to: 1
  4001                           ;main.c: 81:                 {;main.c: 82:                     printf("Function Code 0x1
      +                          0\r\n");
  4002  0027FC  0EF8               	movlw	low STR_1
  4003  0027FE  0100               	movlb	0	; () banked
  4004  002800  6F7D               	movwf	printf@fmt& (0+255),b
  4005  002802  0EFE               	movlw	high STR_1
  4006  002804  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4007  002806  EC73  F01F         	call	_printf	;wreg free
  4008                           
  4009                           ;main.c: 84:                     printf("Modbus Register Before Update:");
  4010  00280A  0E14               	movlw	low STR_2
  4011  00280C  0100               	movlb	0	; () banked
  4012  00280E  6F7D               	movwf	printf@fmt& (0+255),b
  4013  002810  0EFD               	movlw	high STR_2
  4014  002812  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4015  002814  EC73  F01F         	call	_printf	;wreg free
  4016                           
  4017                           ;main.c: 85:                     PrintMB400();
  4018  002818  EC40  F01B         	call	_PrintMB400	;wreg free
  4019                           
  4020                           ;main.c: 86:                     ModbusFC10();
  4021  00281C  EC22  F00D         	call	_ModbusFC10	;wreg free
  4022                           
  4023                           ;main.c: 88:                     break;
  4024  002820  EF39  F014         	goto	l7474
  4025  002824                     l7468:
  4026                           
  4027                           ; BSR set to: 1
  4028                           ;main.c: 91:                 {;main.c: 92:                     printf("Unsupported Funct
      +                          ion Code\r\n");
  4029  002824  0EA6               	movlw	low STR_3
  4030  002826  0100               	movlb	0	; () banked
  4031  002828  6F7D               	movwf	printf@fmt& (0+255),b
  4032  00282A  0EFD               	movlw	high STR_3
  4033  00282C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4034  00282E  EC73  F01F         	call	_printf	;wreg free
  4035                           
  4036                           ;main.c: 94:                     ModbusError(0x01);
  4037  002832  0E00               	movlw	0
  4038  002834  0100               	movlb	0	; () banked
  4039  002836  6F8C               	movwf	(ModbusError@ErrorCode+1)& (0+255),b
  4040  002838  0E01               	movlw	1
  4041  00283A  6F8B               	movwf	ModbusError@ErrorCode& (0+255),b
  4042  00283C  EC85  F017         	call	_ModbusError	;wreg free
  4043                           
  4044                           ;main.c: 95:                     break;
  4045  002840  EF39  F014         	goto	l7474
  4046  002844                     l7472:
  4047  002844  0102               	movlb	2	; () banked
  4048  002846  5101               	movf	(_ModbusData+1)& (0+255),w,b
  4049  002848  0101               	movlb	1	; () banked
  4050  00284A  6FE8               	movwf	??_main& (0+255),b
  4051  00284C  6BE9               	clrf	(??_main+1)& (0+255),b
  4052                           
  4053                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4054                           ; Switch size 1, requested type "simple"
  4055                           ; Number of cases is 1, Range of values is 0 to 0
  4056                           ; switch strategies available:
  4057                           ; Name         Instructions Cycles
  4058                           ; simple_byte            4     3 (average)
  4059                           ;	Chosen strategy is simple_byte
  4060  00284E  51E9               	movf	(??_main+1)& (0+255),w,b
  4061  002850  0A00               	xorlw	0	; case 0
  4062  002852  B4D8               	btfsc	status,2,c
  4063  002854  EF2E  F014         	goto	l7616
  4064  002858  EF12  F014         	goto	l7468
  4065  00285C                     l7616:
  4066                           
  4067                           ; BSR set to: 1
  4068                           ; Switch size 1, requested type "simple"
  4069                           ; Number of cases is 2, Range of values is 3 to 16
  4070                           ; switch strategies available:
  4071                           ; Name         Instructions Cycles
  4072                           ; simple_byte            7     4 (average)
  4073                           ;	Chosen strategy is simple_byte
  4074  00285C  51E8               	movf	??_main& (0+255),w,b
  4075  00285E  0A03               	xorlw	3	; case 3
  4076  002860  B4D8               	btfsc	status,2,c
  4077  002862  EFFA  F013         	goto	l7464
  4078  002866  0A13               	xorlw	19	; case 16
  4079  002868  B4D8               	btfsc	status,2,c
  4080  00286A  EFFE  F013         	goto	l7466
  4081  00286E  EF12  F014         	goto	l7468
  4082  002872                     l7474:
  4083                           
  4084                           ;main.c: 99:             PrintModbus();
  4085  002872  ECCD  F01A         	call	_PrintModbus	;wreg free
  4086                           
  4087                           ;main.c: 100:             PrintModRespon();
  4088  002876  EC67  F019         	call	_PrintModRespon	;wreg free
  4089  00287A                     
  4090                           ;main.c: 104:             ClearModbusData();
  4091  00287A  EC63  F01D         	call	_ClearModbusData	;wreg free
  4092  00287E                     
  4093                           ;main.c: 105:             ClearModbusRespon();
  4094  00287E  EC38  F01E         	call	_ClearModbusRespon	;wreg free
  4095                           
  4096                           ;main.c: 107:         }else if(ReadRX232(16) != 0){
  4097  002882  EFEE  F013         	goto	l7460
  4098  002886                     l7480:
  4099  002886  0E00               	movlw	0
  4100  002888  0100               	movlb	0	; () banked
  4101  00288A  6F8A               	movwf	(ReadRX232@NumChars+1)& (0+255),b
  4102  00288C  0E10               	movlw	16
  4103  00288E  6F89               	movwf	ReadRX232@NumChars& (0+255),b
  4104  002890  EC4B  F013         	call	_ReadRX232	;wreg free
  4105  002894  0100               	movlb	0	; () banked
  4106  002896  5189               	movf	?_ReadRX232& (0+255),w,b
  4107  002898  118A               	iorwf	(?_ReadRX232+1)& (0+255),w,b
  4108  00289A  B4D8               	btfsc	status,2,c
  4109  00289C  EF52  F014         	goto	u7641
  4110  0028A0  EF54  F014         	goto	u7640
  4111  0028A4                     u7641:
  4112  0028A4  EF69  F014         	goto	l597
  4113  0028A8                     u7640:
  4114  0028A8                     
  4115                           ; BSR set to: 0
  4116                           ;main.c: 109:             if(ValidateCmd() ==1){
  4117  0028A8  EC01  F00E         	call	_ValidateCmd	;wreg free
  4118  0028AC                     
  4119                           ;main.c: 116:             printf("\r\nEnter Command : ");
  4120  0028AC  0E34               	movlw	low STR_4
  4121  0028AE  0100               	movlb	0	; () banked
  4122  0028B0  6F7D               	movwf	printf@fmt& (0+255),b
  4123  0028B2  0EFF               	movlw	high STR_4
  4124  0028B4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4125  0028B6  EC73  F01F         	call	_printf	;wreg free
  4126  0028BA                     
  4127                           ;main.c: 117:             strcpy(Command, "");
  4128  0028BA  0EE2               	movlw	low _Command
  4129  0028BC  6E09               	movwf	strcpy@dest^0,c
  4130  0028BE  0E00               	movlw	high _Command
  4131  0028C0  6E0A               	movwf	(strcpy@dest+1)^0,c
  4132  0028C2  0E09               	movlw	low (STR_56+74)
  4133  0028C4  6E0B               	movwf	strcpy@src^0,c
  4134  0028C6  0EF9               	movlw	high (STR_56+74)
  4135  0028C8  6E0C               	movwf	(strcpy@src+1)^0,c
  4136  0028CA  ECA6  F01B         	call	_strcpy	;wreg free
  4137                           
  4138                           ;main.c: 119:         }else{
  4139  0028CE  EFEE  F013         	goto	l7460
  4140  0028D2                     l597:
  4141                           
  4142                           ; BSR set to: 0
  4143  0028D2  EFEE  F013         	goto	l7460
  4144  0028D6  EF93  F000         	goto	start
  4145  0028DA                     __end_of_main:
  4146                           	opt callstack 0
  4147                           
  4148 ;; *************** function _ValidateCmd *****************
  4149 ;; Defined at:
  4150 ;;		line 273 in file "RS232.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;		None
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;  ConfName       20   40[BANK1 ] unsigned char [20]
  4155 ;;  MaxChars        2    0        int 
  4156 ;;  ConfName       20   20[BANK1 ] unsigned char [20]
  4157 ;;  MaxChars        2    0        int 
  4158 ;;  ConfName       20    0[BANK1 ] unsigned char [20]
  4159 ;;  MaxChars        2    0        int 
  4160 ;;  i               2    0        int 
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  1    wreg      _Bool 
  4163 ;; Registers used:
  4164 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4171 ;;      Locals:         0       0      68       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4173 ;;      Totals:         0       0      68       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4174 ;;Total ram usage:       68 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; Hardware stack levels required when called:   15
  4177 ;; This function calls:
  4178 ;;		_InitialiseString
  4179 ;;		_SaveCardDat
  4180 ;;		_TogDebug
  4181 ;;		_strcmp
  4182 ;; This function is called by:
  4183 ;;		_main
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           	psect	text1
  4188  001C02                     __ptext1:
  4189                           	opt callstack 0
  4190  001C02                     _ValidateCmd:
  4191                           	opt callstack 15
  4192  001C02                     
  4193                           ;RS232.c: 279:     if(!strcmp(Command,"debug")){
  4194  001C02  0EE2               	movlw	low _Command
  4195  001C04  6E05               	movwf	strcmp@l^0,c
  4196  001C06  0E00               	movlw	high _Command
  4197  001C08  6E06               	movwf	(strcmp@l+1)^0,c
  4198  001C0A  0EE4               	movlw	low STR_75
  4199  001C0C  6E07               	movwf	strcmp@r^0,c
  4200  001C0E  0EFF               	movlw	high STR_75
  4201  001C10  6E08               	movwf	(strcmp@r+1)^0,c
  4202  001C12  EC08  F019         	call	_strcmp	;wreg free
  4203  001C16  5005               	movf	?_strcmp^0,w,c
  4204  001C18  1006               	iorwf	(?_strcmp+1)^0,w,c
  4205  001C1A  A4D8               	btfss	status,2,c
  4206  001C1C  EF12  F00E         	goto	u7551
  4207  001C20  EF14  F00E         	goto	u7550
  4208  001C24                     u7551:
  4209  001C24  EF19  F00E         	goto	l7366
  4210  001C28                     u7550:
  4211  001C28                     
  4212                           ;RS232.c: 280:         TogDebug();
  4213  001C28  ECD7  F01E         	call	_TogDebug	;wreg free
  4214  001C2C                     l7360:
  4215                           
  4216                           ;RS232.c: 281:         return 1;
  4217  001C2C  0E01               	movlw	1
  4218  001C2E  EFCE  F00E         	goto	l953
  4219  001C32                     l7366:
  4220  001C32  0EE2               	movlw	low _Command
  4221  001C34  6E05               	movwf	strcmp@l^0,c
  4222  001C36  0E00               	movlw	high _Command
  4223  001C38  6E06               	movwf	(strcmp@l+1)^0,c
  4224  001C3A  0EFC               	movlw	low STR_77
  4225  001C3C  6E07               	movwf	strcmp@r^0,c
  4226  001C3E  0EFF               	movlw	high STR_77
  4227  001C40  6E08               	movwf	(strcmp@r+1)^0,c
  4228  001C42  EC08  F019         	call	_strcmp	;wreg free
  4229  001C46  5005               	movf	?_strcmp^0,w,c
  4230  001C48  1006               	iorwf	(?_strcmp+1)^0,w,c
  4231  001C4A  A4D8               	btfss	status,2,c
  4232  001C4C  EF2A  F00E         	goto	u7561
  4233  001C50  EF2C  F00E         	goto	u7560
  4234  001C54                     u7561:
  4235  001C54  EF31  F00E         	goto	l7376
  4236  001C58                     u7560:
  4237  001C58                     
  4238                           ;RS232.c: 283:         InitialiseString(0);
  4239  001C58  0E00               	movlw	0
  4240  001C5A  ECAC  F005         	call	_InitialiseString
  4241  001C5E  EF16  F00E         	goto	l7360
  4242  001C62                     l7376:
  4243  001C62  0EE2               	movlw	low _Command
  4244  001C64  6E05               	movwf	strcmp@l^0,c
  4245  001C66  0E00               	movlw	high _Command
  4246  001C68  6E06               	movwf	(strcmp@l+1)^0,c
  4247  001C6A  0EDD               	movlw	low STR_79
  4248  001C6C  6E07               	movwf	strcmp@r^0,c
  4249  001C6E  0EFF               	movlw	high STR_79
  4250  001C70  6E08               	movwf	(strcmp@r+1)^0,c
  4251  001C72  EC08  F019         	call	_strcmp	;wreg free
  4252  001C76  5005               	movf	?_strcmp^0,w,c
  4253  001C78  1006               	iorwf	(?_strcmp+1)^0,w,c
  4254  001C7A  A4D8               	btfss	status,2,c
  4255  001C7C  EF42  F00E         	goto	u7571
  4256  001C80  EF44  F00E         	goto	u7570
  4257  001C84                     u7571:
  4258  001C84  EF65  F00E         	goto	l7392
  4259  001C88                     u7570:
  4260  001C88                     
  4261                           ;RS232.c: 286:         char ConfName[20] = "Serial Number";
  4262  001C88  EE22  F08C         	lfsr	2,ValidateCmd@F10746
  4263  001C8C  EE11  F0A4         	lfsr	1,ValidateCmd@ConfName
  4264  001C90  0E13               	movlw	19
  4265  001C92                     u7581:
  4266  001C92  CFDB FFE3          	movff	plusw2,plusw1
  4267  001C96  06E8               	decf	wreg,f,c
  4268  001C98  E2FC               	bc	u7581
  4269  001C9A                     
  4270                           ;RS232.c: 292:         SaveCardDat(ConfName,0x0300,0x0300,MaxChars);
  4271  001C9A  0EA4               	movlw	low ValidateCmd@ConfName
  4272  001C9C  0100               	movlb	0	; () banked
  4273  001C9E  6F8D               	movwf	SaveCardDat@Name& (0+255),b
  4274  001CA0  0E01               	movlw	high ValidateCmd@ConfName
  4275  001CA2  6F8E               	movwf	(SaveCardDat@Name+1)& (0+255),b
  4276  001CA4  0E03               	movlw	3
  4277  001CA6  6F90               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  4278  001CA8  0E00               	movlw	0
  4279  001CAA  6F8F               	movwf	SaveCardDat@MBAddress& (0+255),b
  4280  001CAC  0E03               	movlw	3
  4281  001CAE  6F92               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  4282  001CB0  0E00               	movlw	0
  4283  001CB2  6F91               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  4284  001CB4  0E00               	movlw	0
  4285  001CB6  6F94               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  4286  001CB8  0E0A               	movlw	10
  4287  001CBA  6F93               	movwf	SaveCardDat@NumBytes& (0+255),b
  4288  001CBC  EC3A  F00C         	call	_SaveCardDat	;wreg free
  4289  001CC0                     
  4290                           ;RS232.c: 293:         InitialiseString(1);
  4291  001CC0  0E01               	movlw	1
  4292  001CC2  ECAC  F005         	call	_InitialiseString
  4293  001CC6  EF16  F00E         	goto	l7360
  4294  001CCA                     l7392:
  4295  001CCA  0EE2               	movlw	low _Command
  4296  001CCC  6E05               	movwf	strcmp@l^0,c
  4297  001CCE  0E00               	movlw	high _Command
  4298  001CD0  6E06               	movwf	(strcmp@l+1)^0,c
  4299  001CD2  0EEF               	movlw	low STR_81
  4300  001CD4  6E07               	movwf	strcmp@r^0,c
  4301  001CD6  0EFF               	movlw	high STR_81
  4302  001CD8  6E08               	movwf	(strcmp@r+1)^0,c
  4303  001CDA  EC08  F019         	call	_strcmp	;wreg free
  4304  001CDE  5005               	movf	?_strcmp^0,w,c
  4305  001CE0  1006               	iorwf	(?_strcmp+1)^0,w,c
  4306  001CE2  A4D8               	btfss	status,2,c
  4307  001CE4  EF76  F00E         	goto	u7591
  4308  001CE8  EF78  F00E         	goto	u7590
  4309  001CEC                     u7591:
  4310  001CEC  EF99  F00E         	goto	l7408
  4311  001CF0                     u7590:
  4312  001CF0                     
  4313                           ;RS232.c: 299:         char ConfName[20] = "Part Number";
  4314  001CF0  EE22  F078         	lfsr	2,ValidateCmd@F10749
  4315  001CF4  EE11  F0B8         	lfsr	1,ValidateCmd@ConfName_1479
  4316  001CF8  0E13               	movlw	19
  4317  001CFA                     u7601:
  4318  001CFA  CFDB FFE3          	movff	plusw2,plusw1
  4319  001CFE  06E8               	decf	wreg,f,c
  4320  001D00  E2FC               	bc	u7601
  4321  001D02                     
  4322                           ;RS232.c: 301:         SaveCardDat(ConfName,0x0100,0x0100,MaxChars);
  4323  001D02  0EB8               	movlw	low ValidateCmd@ConfName_1479
  4324  001D04  0100               	movlb	0	; () banked
  4325  001D06  6F8D               	movwf	SaveCardDat@Name& (0+255),b
  4326  001D08  0E01               	movlw	high ValidateCmd@ConfName_1479
  4327  001D0A  6F8E               	movwf	(SaveCardDat@Name+1)& (0+255),b
  4328  001D0C  0E01               	movlw	1
  4329  001D0E  6F90               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  4330  001D10  0E00               	movlw	0
  4331  001D12  6F8F               	movwf	SaveCardDat@MBAddress& (0+255),b
  4332  001D14  0E01               	movlw	1
  4333  001D16  6F92               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  4334  001D18  0E00               	movlw	0
  4335  001D1A  6F91               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  4336  001D1C  0E00               	movlw	0
  4337  001D1E  6F94               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  4338  001D20  0E10               	movlw	16
  4339  001D22  6F93               	movwf	SaveCardDat@NumBytes& (0+255),b
  4340  001D24  EC3A  F00C         	call	_SaveCardDat	;wreg free
  4341  001D28                     
  4342                           ;RS232.c: 302:         InitialiseString(1);
  4343  001D28  0E01               	movlw	1
  4344  001D2A  ECAC  F005         	call	_InitialiseString
  4345  001D2E  EF16  F00E         	goto	l7360
  4346  001D32                     l7408:
  4347  001D32  0EE2               	movlw	low _Command
  4348  001D34  6E05               	movwf	strcmp@l^0,c
  4349  001D36  0E00               	movlw	high _Command
  4350  001D38  6E06               	movwf	(strcmp@l+1)^0,c
  4351  001D3A  0EF8               	movlw	low STR_83
  4352  001D3C  6E07               	movwf	strcmp@r^0,c
  4353  001D3E  0EFF               	movlw	high STR_83
  4354  001D40  6E08               	movwf	(strcmp@r+1)^0,c
  4355  001D42  EC08  F019         	call	_strcmp	;wreg free
  4356  001D46  5005               	movf	?_strcmp^0,w,c
  4357  001D48  1006               	iorwf	(?_strcmp+1)^0,w,c
  4358  001D4A  A4D8               	btfss	status,2,c
  4359  001D4C  EFAA  F00E         	goto	u7611
  4360  001D50  EFAC  F00E         	goto	u7610
  4361  001D54                     u7611:
  4362  001D54  EFCD  F00E         	goto	l7424
  4363  001D58                     u7610:
  4364  001D58                     
  4365                           ;RS232.c: 309:         char ConfName[20] = "Revision";
  4366  001D58  EE22  F064         	lfsr	2,ValidateCmd@F10752
  4367  001D5C  EE11  F0CC         	lfsr	1,ValidateCmd@ConfName_1483
  4368  001D60  0E13               	movlw	19
  4369  001D62                     u7621:
  4370  001D62  CFDB FFE3          	movff	plusw2,plusw1
  4371  001D66  06E8               	decf	wreg,f,c
  4372  001D68  E2FC               	bc	u7621
  4373  001D6A                     
  4374                           ;RS232.c: 312:         SaveCardDat(ConfName,0x0200,0x0200,MaxChars);
  4375  001D6A  0ECC               	movlw	low ValidateCmd@ConfName_1483
  4376  001D6C  0100               	movlb	0	; () banked
  4377  001D6E  6F8D               	movwf	SaveCardDat@Name& (0+255),b
  4378  001D70  0E01               	movlw	high ValidateCmd@ConfName_1483
  4379  001D72  6F8E               	movwf	(SaveCardDat@Name+1)& (0+255),b
  4380  001D74  0E02               	movlw	2
  4381  001D76  6F90               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  4382  001D78  0E00               	movlw	0
  4383  001D7A  6F8F               	movwf	SaveCardDat@MBAddress& (0+255),b
  4384  001D7C  0E02               	movlw	2
  4385  001D7E  6F92               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  4386  001D80  0E00               	movlw	0
  4387  001D82  6F91               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  4388  001D84  0E00               	movlw	0
  4389  001D86  6F94               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  4390  001D88  0E02               	movlw	2
  4391  001D8A  6F93               	movwf	SaveCardDat@NumBytes& (0+255),b
  4392  001D8C  EC3A  F00C         	call	_SaveCardDat	;wreg free
  4393  001D90                     
  4394                           ;RS232.c: 314:         InitialiseString(1);
  4395  001D90  0E01               	movlw	1
  4396  001D92  ECAC  F005         	call	_InitialiseString
  4397  001D96  EF16  F00E         	goto	l7360
  4398  001D9A                     l7424:
  4399                           
  4400                           ;RS232.c: 318:         return 0;
  4401  001D9A  0E00               	movlw	0
  4402  001D9C                     l953:
  4403  001D9C  0012               	return		;funcret
  4404  001D9E                     __end_of_ValidateCmd:
  4405                           	opt callstack 0
  4406                           
  4407 ;; *************** function _TogDebug *****************
  4408 ;; Defined at:
  4409 ;;		line 188 in file "RS232.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;		None
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;		None
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  1    wreg      void 
  4416 ;; Registers used:
  4417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4427 ;;Total ram usage:        0 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; Hardware stack levels required when called:   13
  4430 ;; This function calls:
  4431 ;;		_printf
  4432 ;; This function is called by:
  4433 ;;		_ValidateCmd
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437                           	psect	text2
  4438  003DAE                     __ptext2:
  4439                           	opt callstack 0
  4440  003DAE                     _TogDebug:
  4441                           	opt callstack 16
  4442  003DAE                     
  4443                           ;RS232.c: 190:     if(Debug==0){
  4444  003DAE  0100               	movlb	0	; () banked
  4445  003DB0  51D7               	movf	_Debug& (0+255),w,b
  4446  003DB2  A4D8               	btfss	status,2,c
  4447  003DB4  EFDE  F01E         	goto	u7251
  4448  003DB8  EFE0  F01E         	goto	u7250
  4449  003DBC                     u7251:
  4450  003DBC  EFEA  F01E         	goto	l7038
  4451  003DC0                     u7250:
  4452  003DC0                     
  4453                           ; BSR set to: 0
  4454                           ;RS232.c: 191:         Debug =1;
  4455  003DC0  0E01               	movlw	1
  4456  003DC2  6FD7               	movwf	_Debug& (0+255),b
  4457  003DC4                     
  4458                           ; BSR set to: 0
  4459                           ;RS232.c: 192:         printf("Debug Enabled\r\n");
  4460  003DC4  0E69               	movlw	low STR_64
  4461  003DC6  6F7D               	movwf	printf@fmt& (0+255),b
  4462  003DC8  0EFF               	movlw	high STR_64
  4463  003DCA  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4464  003DCC  EC73  F01F         	call	_printf	;wreg free
  4465                           
  4466                           ;RS232.c: 193:     }else{
  4467  003DD0  EFF2  F01E         	goto	l924
  4468  003DD4                     l7038:
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;RS232.c: 194:         Debug =0;
  4472  003DD4  0E00               	movlw	0
  4473  003DD6  6FD7               	movwf	_Debug& (0+255),b
  4474  003DD8                     
  4475                           ; BSR set to: 0
  4476                           ;RS232.c: 195:         printf("Debug Disabled\r\n");
  4477  003DD8  0E58               	movlw	low STR_65
  4478  003DDA  6F7D               	movwf	printf@fmt& (0+255),b
  4479  003DDC  0EFF               	movlw	high STR_65
  4480  003DDE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4481  003DE0  EC73  F01F         	call	_printf	;wreg free
  4482  003DE4                     l924:
  4483  003DE4  0012               	return		;funcret
  4484  003DE6                     __end_of_TogDebug:
  4485                           	opt callstack 0
  4486                           
  4487 ;; *************** function _SaveCardDat *****************
  4488 ;; Defined at:
  4489 ;;		line 213 in file "RS232.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;  Name            2   45[BANK0 ] PTR unsigned char 
  4492 ;;		 -> ValidateCmd@ConfName_1483(20), ValidateCmd@ConfName_1479(20), ValidateCmd@ConfName(20), 
  4493 ;;  MBAddress       2   47[BANK0 ] unsigned int 
  4494 ;;  dataeeAddr      2   49[BANK0 ] unsigned short 
  4495 ;;  NumBytes        2   51[BANK0 ] int 
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;  i               2   59[BANK0 ] int 
  4498 ;;  dataeeAddrWr    2   57[BANK0 ] unsigned short 
  4499 ;;  Conf            1   61[BANK0 ] unsigned char 
  4500 ;;  readData        1    0        unsigned char 
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  1    wreg      void 
  4503 ;; Registers used:
  4504 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4510 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4511 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4512 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4513 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4514 ;;Total ram usage:       17 bytes
  4515 ;; Hardware stack levels used:    1
  4516 ;; Hardware stack levels required when called:   14
  4517 ;; This function calls:
  4518 ;;		_ClearEEAddRange
  4519 ;;		_DATAEE_WriteByte
  4520 ;;		_EUSART2_Read
  4521 ;;		_EUSART2_is_rx_ready
  4522 ;;		_ReadRX232
  4523 ;;		_printf
  4524 ;;		_strcpy
  4525 ;;		_strlen
  4526 ;; This function is called by:
  4527 ;;		_ValidateCmd
  4528 ;; This function uses a non-reentrant model
  4529 ;;
  4530                           
  4531                           	psect	text3
  4532  001874                     __ptext3:
  4533                           	opt callstack 0
  4534  001874                     _SaveCardDat:
  4535                           	opt callstack 15
  4536  001874                     
  4537                           ;RS232.c: 216:     unsigned char Conf, readData;;RS232.c: 217:     uint16_t dataeeAddrWr
      +                          k = dataeeAddr;
  4538  001874  C091  F099         	movff	SaveCardDat@dataeeAddr,SaveCardDat@dataeeAddrWrk
  4539  001878  C092  F09A         	movff	SaveCardDat@dataeeAddr+1,SaveCardDat@dataeeAddrWrk+1
  4540  00187C                     
  4541                           ;RS232.c: 219:     printf("\r\nEnter card %s (max %i characters): ", Name, NumBytes);
  4542  00187C  0E96               	movlw	low STR_67
  4543  00187E  0100               	movlb	0	; () banked
  4544  001880  6F7D               	movwf	printf@fmt& (0+255),b
  4545  001882  0EFB               	movlw	high STR_67
  4546  001884  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4547  001886  C08D  F07F         	movff	SaveCardDat@Name,?_printf+2
  4548  00188A  C08E  F080         	movff	SaveCardDat@Name+1,?_printf+3
  4549  00188E  C093  F081         	movff	SaveCardDat@NumBytes,?_printf+4
  4550  001892  C094  F082         	movff	SaveCardDat@NumBytes+1,?_printf+5
  4551  001896  EC73  F01F         	call	_printf	;wreg free
  4552  00189A                     
  4553                           ;RS232.c: 221:     strcpy(Command, "");
  4554  00189A  0EE2               	movlw	low _Command
  4555  00189C  6E09               	movwf	strcpy@dest^0,c
  4556  00189E  0E00               	movlw	high _Command
  4557  0018A0  6E0A               	movwf	(strcpy@dest+1)^0,c
  4558  0018A2  0E09               	movlw	low (STR_56+74)
  4559  0018A4  6E0B               	movwf	strcpy@src^0,c
  4560  0018A6  0EF9               	movlw	high (STR_56+74)
  4561  0018A8  6E0C               	movwf	(strcpy@src+1)^0,c
  4562  0018AA  ECA6  F01B         	call	_strcpy	;wreg free
  4563  0018AE                     l7050:
  4564  0018AE  C093  F089         	movff	SaveCardDat@NumBytes,ReadRX232@NumChars
  4565  0018B2  C094  F08A         	movff	SaveCardDat@NumBytes+1,ReadRX232@NumChars+1
  4566  0018B6  EC4B  F013         	call	_ReadRX232	;wreg free
  4567  0018BA  0100               	movlb	0	; () banked
  4568  0018BC  5189               	movf	?_ReadRX232& (0+255),w,b
  4569  0018BE  118A               	iorwf	(?_ReadRX232+1)& (0+255),w,b
  4570  0018C0  B4D8               	btfsc	status,2,c
  4571  0018C2  EF65  F00C         	goto	u7261
  4572  0018C6  EF67  F00C         	goto	u7260
  4573  0018CA                     u7261:
  4574  0018CA  EF57  F00C         	goto	l7050
  4575  0018CE                     u7260:
  4576  0018CE                     
  4577                           ; BSR set to: 0
  4578                           ;RS232.c: 224:     printf("\r\nEntered: %s \r\n Confirm  Y|N?: ", Command);
  4579  0018CE  0EB3               	movlw	low STR_69
  4580  0018D0  6F7D               	movwf	printf@fmt& (0+255),b
  4581  0018D2  0EFC               	movlw	high STR_69
  4582  0018D4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4583  0018D6  0EE2               	movlw	low _Command
  4584  0018D8  6F7F               	movwf	(?_printf+2)& (0+255),b
  4585  0018DA  0E00               	movlw	high _Command
  4586  0018DC  6F80               	movwf	(?_printf+3)& (0+255),b
  4587  0018DE  EC73  F01F         	call	_printf	;wreg free
  4588  0018E2                     l7054:
  4589  0018E2  ECC8  F01F         	call	_EUSART2_is_rx_ready	;wreg free
  4590  0018E6  0900               	iorlw	0
  4591  0018E8  B4D8               	btfsc	status,2,c
  4592  0018EA  EF79  F00C         	goto	u7271
  4593  0018EE  EF7B  F00C         	goto	u7270
  4594  0018F2                     u7271:
  4595  0018F2  EF71  F00C         	goto	l7054
  4596  0018F6                     u7270:
  4597  0018F6                     
  4598                           ;RS232.c: 229:     Conf = EUSART2_Read();
  4599  0018F6  EC90  F01C         	call	_EUSART2_Read	;wreg free
  4600  0018FA  0100               	movlb	0	; () banked
  4601  0018FC  6F9D               	movwf	SaveCardDat@Conf& (0+255),b
  4602  0018FE                     
  4603                           ; BSR set to: 0
  4604                           ;RS232.c: 232:     if(Conf == 0x79 || Conf == 0x59){
  4605  0018FE  0E79               	movlw	121
  4606  001900  199D               	xorwf	SaveCardDat@Conf& (0+255),w,b
  4607  001902  B4D8               	btfsc	status,2,c
  4608  001904  EF86  F00C         	goto	u7281
  4609  001908  EF88  F00C         	goto	u7280
  4610  00190C                     u7281:
  4611  00190C  EF91  F00C         	goto	l941
  4612  001910                     u7280:
  4613  001910                     
  4614                           ; BSR set to: 0
  4615  001910  0E59               	movlw	89
  4616  001912  199D               	xorwf	SaveCardDat@Conf& (0+255),w,b
  4617  001914  A4D8               	btfss	status,2,c
  4618  001916  EF8F  F00C         	goto	u7291
  4619  00191A  EF91  F00C         	goto	u7290
  4620  00191E                     u7291:
  4621  00191E  EF09  F00D         	goto	l7086
  4622  001922                     u7290:
  4623  001922                     l941:
  4624  001922                     
  4625                           ; BSR set to: 0
  4626                           ;RS232.c: 234:         printf("Y\r\nSaving %s\r\n", Name);
  4627  001922  0E99               	movlw	low STR_70
  4628  001924  6F7D               	movwf	printf@fmt& (0+255),b
  4629  001926  0EFF               	movlw	high STR_70
  4630  001928  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4631  00192A  C08D  F07F         	movff	SaveCardDat@Name,?_printf+2
  4632  00192E  C08E  F080         	movff	SaveCardDat@Name+1,?_printf+3
  4633  001932  EC73  F01F         	call	_printf	;wreg free
  4634  001936                     
  4635                           ;RS232.c: 235:         printf("Num Chars: %i \r\n", strlen(Command));
  4636  001936  0EE2               	movlw	low _Command
  4637  001938  6E05               	movwf	strlen@s^0,c
  4638  00193A  0E00               	movlw	high _Command
  4639  00193C  6E06               	movwf	(strlen@s+1)^0,c
  4640  00193E  EC3B  F01D         	call	_strlen	;wreg free
  4641  001942  C005  F097         	movff	?_strlen,_SaveCardDat$2467
  4642  001946  C006  F098         	movff	?_strlen+1,_SaveCardDat$2467+1
  4643  00194A                     
  4644                           ;RS232.c: 235:         printf("Num Chars: %i \r\n", strlen(Command));
  4645  00194A  0E47               	movlw	low STR_71
  4646  00194C  0100               	movlb	0	; () banked
  4647  00194E  6F7D               	movwf	printf@fmt& (0+255),b
  4648  001950  0EFF               	movlw	high STR_71
  4649  001952  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4650  001954  C097  F07F         	movff	_SaveCardDat$2467,?_printf+2
  4651  001958  C098  F080         	movff	_SaveCardDat$2467+1,?_printf+3
  4652  00195C  EC73  F01F         	call	_printf	;wreg free
  4653  001960                     
  4654                           ;RS232.c: 239:         ClearEEAddRange(dataeeAddr,NumBytes);
  4655  001960  C091  F089         	movff	SaveCardDat@dataeeAddr,ClearEEAddRange@StartAdd
  4656  001964  C092  F08A         	movff	SaveCardDat@dataeeAddr+1,ClearEEAddRange@StartAdd+1
  4657  001968  C093  F08B         	movff	SaveCardDat@NumBytes,ClearEEAddRange@NumBytes
  4658  00196C  C094  F08C         	movff	SaveCardDat@NumBytes+1,ClearEEAddRange@NumBytes+1
  4659  001970  EC62  F01C         	call	_ClearEEAddRange	;wreg free
  4660  001974                     
  4661                           ;RS232.c: 242:         for (i = 0; i < strlen(Command); i++){
  4662  001974  0E00               	movlw	0
  4663  001976  0100               	movlb	0	; () banked
  4664  001978  6F9C               	movwf	(SaveCardDat@i+1)& (0+255),b
  4665  00197A  0E00               	movlw	0
  4666  00197C  6F9B               	movwf	SaveCardDat@i& (0+255),b
  4667  00197E  EFE1  F00C         	goto	l7080
  4668  001982                     l7072:
  4669                           
  4670                           ; BSR set to: 0
  4671                           ;RS232.c: 243:             DATAEE_WriteByte(dataeeAddrWrk, Command[i]);
  4672  001982  C099  F005         	movff	SaveCardDat@dataeeAddrWrk,DATAEE_WriteByte@bAdd
  4673  001986  C09A  F006         	movff	SaveCardDat@dataeeAddrWrk+1,DATAEE_WriteByte@bAdd+1
  4674  00198A  0EE2               	movlw	low _Command
  4675  00198C  259B               	addwf	SaveCardDat@i& (0+255),w,b
  4676  00198E  6ED9               	movwf	fsr2l,c
  4677  001990  0E00               	movlw	high _Command
  4678  001992  219C               	addwfc	(SaveCardDat@i+1)& (0+255),w,b
  4679  001994  6EDA               	movwf	fsr2h,c
  4680  001996  50DF               	movf	indf2,w,c
  4681  001998  6E07               	movwf	DATAEE_WriteByte@bData^0,c
  4682  00199A  ECD2  F01D         	call	_DATAEE_WriteByte	;wreg free
  4683  00199E                     
  4684                           ;RS232.c: 244:             dataeeAddrWrk++;
  4685  00199E  0100               	movlb	0	; () banked
  4686  0019A0  4B99               	infsnz	SaveCardDat@dataeeAddrWrk& (0+255),f,b
  4687  0019A2  2B9A               	incf	(SaveCardDat@dataeeAddrWrk+1)& (0+255),f,b
  4688  0019A4                     
  4689                           ; BSR set to: 0
  4690                           ;RS232.c: 245:             _delay((unsigned long)((50)*(32000000/4000.0)));
  4691  0019A4  0E03               	movlw	3
  4692  0019A6  0100               	movlb	0	; () banked
  4693  0019A8  6F96               	movwf	(??_SaveCardDat+1)& (0+255),b
  4694  0019AA  0E08               	movlw	8
  4695  0019AC  6F95               	movwf	??_SaveCardDat& (0+255),b
  4696  0019AE  0E77               	movlw	119
  4697  0019B0                     u7657:
  4698  0019B0  2EE8               	decfsz	wreg,f,c
  4699  0019B2  D7FE               	bra	u7657
  4700  0019B4  2F95               	decfsz	??_SaveCardDat& (0+255),f,b
  4701  0019B6  D7FC               	bra	u7657
  4702  0019B8  2F96               	decfsz	(??_SaveCardDat+1)& (0+255),f,b
  4703  0019BA  D7FA               	bra	u7657
  4704  0019BC                     
  4705                           ;RS232.c: 246:         }
  4706  0019BC  0100               	movlb	0	; () banked
  4707  0019BE  4B9B               	infsnz	SaveCardDat@i& (0+255),f,b
  4708  0019C0  2B9C               	incf	(SaveCardDat@i+1)& (0+255),f,b
  4709  0019C2                     l7080:
  4710                           
  4711                           ; BSR set to: 0
  4712  0019C2  0EE2               	movlw	low _Command
  4713  0019C4  6E05               	movwf	strlen@s^0,c
  4714  0019C6  0E00               	movlw	high _Command
  4715  0019C8  6E06               	movwf	(strlen@s+1)^0,c
  4716  0019CA  EC3B  F01D         	call	_strlen	;wreg free
  4717  0019CE  5005               	movf	?_strlen^0,w,c
  4718  0019D0  0100               	movlb	0	; () banked
  4719  0019D2  5D9B               	subwf	SaveCardDat@i& (0+255),w,b
  4720  0019D4  5006               	movf	(?_strlen+1)^0,w,c
  4721  0019D6  599C               	subwfb	(SaveCardDat@i+1)& (0+255),w,b
  4722  0019D8  A0D8               	btfss	status,0,c
  4723  0019DA  EFF1  F00C         	goto	u7301
  4724  0019DE  EFF3  F00C         	goto	u7300
  4725  0019E2                     u7301:
  4726  0019E2  EFC1  F00C         	goto	l7072
  4727  0019E6                     u7300:
  4728  0019E6                     
  4729                           ; BSR set to: 0
  4730                           ;RS232.c: 248:         printf("%s Saved. \r\n",Name);
  4731  0019E6  0EA8               	movlw	low STR_72
  4732  0019E8  6F7D               	movwf	printf@fmt& (0+255),b
  4733  0019EA  0EFF               	movlw	high STR_72
  4734  0019EC  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4735  0019EE  C08D  F07F         	movff	SaveCardDat@Name,?_printf+2
  4736  0019F2  C08E  F080         	movff	SaveCardDat@Name+1,?_printf+3
  4737  0019F6  EC73  F01F         	call	_printf	;wreg free
  4738  0019FA                     
  4739                           ;RS232.c: 263:         strcpy(Command, "");
  4740  0019FA  0EE2               	movlw	low _Command
  4741  0019FC  6E09               	movwf	strcpy@dest^0,c
  4742  0019FE  0E00               	movlw	high _Command
  4743  001A00  6E0A               	movwf	(strcpy@dest+1)^0,c
  4744  001A02  0E09               	movlw	low (STR_56+74)
  4745  001A04  6E0B               	movwf	strcpy@src^0,c
  4746  001A06  0EF9               	movlw	high (STR_56+74)
  4747  001A08  6E0C               	movwf	(strcpy@src+1)^0,c
  4748  001A0A  ECA6  F01B         	call	_strcpy	;wreg free
  4749                           
  4750                           ;RS232.c: 265:     }else if(Conf == 0x4e || Conf == 0x6e){
  4751  001A0E  EF21  F00D         	goto	l949
  4752  001A12                     l7086:
  4753                           
  4754                           ; BSR set to: 0
  4755  001A12  0E4E               	movlw	78
  4756  001A14  199D               	xorwf	SaveCardDat@Conf& (0+255),w,b
  4757  001A16  B4D8               	btfsc	status,2,c
  4758  001A18  EF10  F00D         	goto	u7311
  4759  001A1C  EF12  F00D         	goto	u7310
  4760  001A20                     u7311:
  4761  001A20  EF1B  F00D         	goto	l7090
  4762  001A24                     u7310:
  4763  001A24                     
  4764                           ; BSR set to: 0
  4765  001A24  0E6E               	movlw	110
  4766  001A26  199D               	xorwf	SaveCardDat@Conf& (0+255),w,b
  4767  001A28  A4D8               	btfss	status,2,c
  4768  001A2A  EF19  F00D         	goto	u7321
  4769  001A2E  EF1B  F00D         	goto	u7320
  4770  001A32                     u7321:
  4771  001A32  EF21  F00D         	goto	l949
  4772  001A36                     u7320:
  4773  001A36                     l7090:
  4774                           
  4775                           ; BSR set to: 0
  4776                           ;RS232.c: 266:         printf("Not saved\r\n");
  4777  001A36  0EB5               	movlw	low STR_74
  4778  001A38  6F7D               	movwf	printf@fmt& (0+255),b
  4779  001A3A  0EFF               	movlw	high STR_74
  4780  001A3C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4781  001A3E  EC73  F01F         	call	_printf	;wreg free
  4782  001A42                     l949:
  4783  001A42  0012               	return		;funcret
  4784  001A44                     __end_of_SaveCardDat:
  4785                           	opt callstack 0
  4786                           
  4787 ;; *************** function _ReadRX232 *****************
  4788 ;; Defined at:
  4789 ;;		line 133 in file "RS232.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;  NumChars        2   41[BANK0 ] int 
  4792 ;; Auto vars:     Size  Location     Type
  4793 ;;  temp            2   84[COMRAM] unsigned char [2]
  4794 ;; Return value:  Size  Location     Type
  4795 ;;                  2   41[BANK0 ] int 
  4796 ;; Registers used:
  4797 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4803 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4804 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4806 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4807 ;;Total ram usage:        4 bytes
  4808 ;; Hardware stack levels used:    1
  4809 ;; Hardware stack levels required when called:   13
  4810 ;; This function calls:
  4811 ;;		_EUSART2_Read
  4812 ;;		_EUSART2_Write
  4813 ;;		_EUSART2_is_rx_ready
  4814 ;;		_memmove
  4815 ;;		_printf
  4816 ;;		_strcat
  4817 ;;		_strlen
  4818 ;; This function is called by:
  4819 ;;		_main
  4820 ;;		_SaveCardDat
  4821 ;; This function uses a non-reentrant model
  4822 ;;
  4823                           
  4824                           	psect	text4
  4825  002696                     __ptext4:
  4826                           	opt callstack 0
  4827  002696                     _ReadRX232:
  4828                           	opt callstack 15
  4829  002696                     
  4830                           ;RS232.c: 133: int ReadRX232(int NumChars);RS232.c: 134: {;RS232.c: 139:     char temp[2
      +                          ] = {'Z','\0'};
  4831  002696  C0F2  F055         	movff	ReadRX232@F10728,ReadRX232@temp
  4832  00269A  C0F3  F056         	movff	ReadRX232@F10728+1,ReadRX232@temp+1
  4833  00269E                     
  4834                           ;RS232.c: 142:     if(EUSART2_is_rx_ready())
  4835  00269E  ECC8  F01F         	call	_EUSART2_is_rx_ready	;wreg free
  4836  0026A2  0900               	iorlw	0
  4837  0026A4  B4D8               	btfsc	status,2,c
  4838  0026A6  EF57  F013         	goto	u6791
  4839  0026AA  EF59  F013         	goto	u6790
  4840  0026AE                     u6791:
  4841  0026AE  EFD7  F013         	goto	l6646
  4842  0026B2                     u6790:
  4843  0026B2                     l6618:
  4844                           
  4845                           ;RS232.c: 148:              if(EUSART2_is_rx_ready())
  4846  0026B2  ECC8  F01F         	call	_EUSART2_is_rx_ready	;wreg free
  4847  0026B6  0900               	iorlw	0
  4848  0026B8  B4D8               	btfsc	status,2,c
  4849  0026BA  EF61  F013         	goto	u6801
  4850  0026BE  EF63  F013         	goto	u6800
  4851  0026C2                     u6801:
  4852  0026C2  EFB3  F013         	goto	l6638
  4853  0026C6                     u6800:
  4854  0026C6                     
  4855                           ;RS232.c: 149:              {;RS232.c: 151:                 temp[0]=EUSART2_Read();
  4856  0026C6  EC90  F01C         	call	_EUSART2_Read	;wreg free
  4857  0026CA  6E55               	movwf	ReadRX232@temp^0,c
  4858                           
  4859                           ;RS232.c: 154:                 EUSART2_Write(temp[0]);
  4860  0026CC  5055               	movf	ReadRX232@temp^0,w,c
  4861  0026CE  EC33  F01C         	call	_EUSART2_Write
  4862  0026D2                     
  4863                           ;RS232.c: 156:                 if(temp[0]!='\r'){
  4864  0026D2  0E0D               	movlw	13
  4865  0026D4  1855               	xorwf	ReadRX232@temp^0,w,c
  4866  0026D6  B4D8               	btfsc	status,2,c
  4867  0026D8  EF70  F013         	goto	u6811
  4868  0026DC  EF72  F013         	goto	u6810
  4869  0026E0                     u6811:
  4870  0026E0  EF7C  F013         	goto	l6626
  4871  0026E4                     u6810:
  4872  0026E4                     
  4873                           ;RS232.c: 157:                     strcat(Command, temp);
  4874  0026E4  0EE2               	movlw	low _Command
  4875  0026E6  6E13               	movwf	strcat@dest^0,c
  4876  0026E8  0E00               	movlw	high _Command
  4877  0026EA  6E14               	movwf	(strcat@dest+1)^0,c
  4878  0026EC  0E55               	movlw	low ReadRX232@temp
  4879  0026EE  6E15               	movwf	strcat@src^0,c
  4880  0026F0  0E00               	movlw	high ReadRX232@temp
  4881  0026F2  6E16               	movwf	(strcat@src+1)^0,c
  4882  0026F4  EC87  F01F         	call	_strcat	;wreg free
  4883  0026F8                     l6626:
  4884                           
  4885                           ;RS232.c: 160:                 if(strlen(Command)>NumChars)
  4886  0026F8  0EE2               	movlw	low _Command
  4887  0026FA  6E05               	movwf	strlen@s^0,c
  4888  0026FC  0E00               	movlw	high _Command
  4889  0026FE  6E06               	movwf	(strlen@s+1)^0,c
  4890  002700  EC3B  F01D         	call	_strlen	;wreg free
  4891  002704  5005               	movf	?_strlen^0,w,c
  4892  002706  0100               	movlb	0	; () banked
  4893  002708  5D89               	subwf	ReadRX232@NumChars& (0+255),w,b
  4894  00270A  5006               	movf	(?_strlen+1)^0,w,c
  4895  00270C  598A               	subwfb	(ReadRX232@NumChars+1)& (0+255),w,b
  4896  00270E  B0D8               	btfsc	status,0,c
  4897  002710  EF8C  F013         	goto	u6821
  4898  002714  EF8E  F013         	goto	u6820
  4899  002718                     u6821:
  4900  002718  EFA2  F013         	goto	l6630
  4901  00271C                     u6820:
  4902  00271C                     
  4903                           ; BSR set to: 0
  4904                           ;RS232.c: 161:                 {;RS232.c: 163:                     memmove(Command, Comm
      +                          and+1, strlen(Command));
  4905  00271C  0EE2               	movlw	low _Command
  4906  00271E  6E09               	movwf	memmove@d1^0,c
  4907  002720  0E00               	movlw	high _Command
  4908  002722  6E0A               	movwf	(memmove@d1+1)^0,c
  4909  002724  0EE3               	movlw	low (_Command+1)
  4910  002726  6E0B               	movwf	memmove@s1^0,c
  4911  002728  0E00               	movlw	high (_Command+1)
  4912  00272A  6E0C               	movwf	(memmove@s1+1)^0,c
  4913  00272C  0EE2               	movlw	low _Command
  4914  00272E  6E05               	movwf	strlen@s^0,c
  4915  002730  0E00               	movlw	high _Command
  4916  002732  6E06               	movwf	(strlen@s+1)^0,c
  4917  002734  EC3B  F01D         	call	_strlen	;wreg free
  4918  002738  C005  F00D         	movff	?_strlen,memmove@n
  4919  00273C  C006  F00E         	movff	?_strlen+1,memmove@n+1
  4920  002740  ECD8  F015         	call	_memmove	;wreg free
  4921  002744                     l6630:
  4922                           
  4923                           ;RS232.c: 167:                 if(temp[0]=='\r'){
  4924  002744  0E0D               	movlw	13
  4925  002746  1855               	xorwf	ReadRX232@temp^0,w,c
  4926  002748  A4D8               	btfss	status,2,c
  4927  00274A  EFA9  F013         	goto	u6831
  4928  00274E  EFAB  F013         	goto	u6830
  4929  002752                     u6831:
  4930  002752  EFB3  F013         	goto	l6638
  4931  002756                     u6830:
  4932  002756                     
  4933                           ;RS232.c: 169:                     temp[0]='z';
  4934  002756  0E7A               	movlw	122
  4935  002758  6E55               	movwf	ReadRX232@temp^0,c
  4936  00275A                     
  4937                           ;RS232.c: 170:                     return NumChars;
  4938  00275A  C089  F089         	movff	ReadRX232@NumChars,?_ReadRX232
  4939  00275E  C08A  F08A         	movff	ReadRX232@NumChars+1,?_ReadRX232+1
  4940  002762  EFDC  F013         	goto	l918
  4941  002766                     l6638:
  4942                           
  4943                           ;RS232.c: 173:         }while( temp[0] !='\r' );
  4944  002766  0E0D               	movlw	13
  4945  002768  1855               	xorwf	ReadRX232@temp^0,w,c
  4946  00276A  A4D8               	btfss	status,2,c
  4947  00276C  EFBA  F013         	goto	u6841
  4948  002770  EFBC  F013         	goto	u6840
  4949  002774                     u6841:
  4950  002774  EF59  F013         	goto	l6618
  4951  002778                     u6840:
  4952  002778                     
  4953                           ;RS232.c: 175:         Command[strlen(Command)-1] = '\0';
  4954  002778  0EE2               	movlw	low _Command
  4955  00277A  6E05               	movwf	strlen@s^0,c
  4956  00277C  0E00               	movlw	high _Command
  4957  00277E  6E06               	movwf	(strlen@s+1)^0,c
  4958  002780  EC3B  F01D         	call	_strlen	;wreg free
  4959  002784  0EE1               	movlw	low (_Command+65535)
  4960  002786  2405               	addwf	?_strlen^0,w,c
  4961  002788  6ED9               	movwf	fsr2l,c
  4962  00278A  0E00               	movlw	high (_Command+65535)
  4963  00278C  2006               	addwfc	(?_strlen+1)^0,w,c
  4964  00278E  6EDA               	movwf	fsr2h,c
  4965  002790  0E00               	movlw	0
  4966  002792  6EDF               	movwf	indf2,c
  4967  002794                     
  4968                           ;RS232.c: 177:         printf("\r\n\n");
  4969  002794  0E06               	movlw	low (STR_56+71)
  4970  002796  0100               	movlb	0	; () banked
  4971  002798  6F7D               	movwf	printf@fmt& (0+255),b
  4972  00279A  0EF9               	movlw	high (STR_56+71)
  4973  00279C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4974  00279E  EC73  F01F         	call	_printf	;wreg free
  4975  0027A2                     
  4976                           ;RS232.c: 179:         strlen(Command);
  4977  0027A2  0EE2               	movlw	low _Command
  4978  0027A4  6E05               	movwf	strlen@s^0,c
  4979  0027A6  0E00               	movlw	high _Command
  4980  0027A8  6E06               	movwf	(strlen@s+1)^0,c
  4981  0027AA  EC3B  F01D         	call	_strlen	;wreg free
  4982  0027AE                     l6646:
  4983                           
  4984                           ;RS232.c: 182:     return 0;
  4985  0027AE  0E00               	movlw	0
  4986  0027B0  0100               	movlb	0	; () banked
  4987  0027B2  6F8A               	movwf	(?_ReadRX232+1)& (0+255),b
  4988  0027B4  0E00               	movlw	0
  4989  0027B6  6F89               	movwf	?_ReadRX232& (0+255),b
  4990  0027B8                     l918:
  4991  0027B8  0012               	return		;funcret
  4992  0027BA                     __end_of_ReadRX232:
  4993                           	opt callstack 0
  4994                           
  4995 ;; *************** function _strcat *****************
  4996 ;; Defined at:
  4997 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcat.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;  dest            2   18[COMRAM] PTR unsigned char 
  5000 ;;		 -> Command(16), 
  5001 ;;  src             2   20[COMRAM] PTR const unsigned char 
  5002 ;;		 -> ReadRX232@temp(2), 
  5003 ;; Auto vars:     Size  Location     Type
  5004 ;;		None
  5005 ;; Return value:  Size  Location     Type
  5006 ;;                  2   18[COMRAM] PTR unsigned char 
  5007 ;; Registers used:
  5008 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5009 ;; Tracked objects:
  5010 ;;		On entry : 0/0
  5011 ;;		On exit  : 0/0
  5012 ;;		Unchanged: 0/0
  5013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5014 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5017 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5018 ;;Total ram usage:        4 bytes
  5019 ;; Hardware stack levels used:    1
  5020 ;; Hardware stack levels required when called:    5
  5021 ;; This function calls:
  5022 ;;		_strcpy
  5023 ;;		_strlen
  5024 ;; This function is called by:
  5025 ;;		_ReadRX232
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           	psect	text5
  5030  003F0E                     __ptext5:
  5031                           	opt callstack 0
  5032  003F0E                     _strcat:
  5033                           	opt callstack 22
  5034  003F0E  C013  F005         	movff	strcat@dest,strlen@s
  5035  003F12  C014  F006         	movff	strcat@dest+1,strlen@s+1
  5036  003F16  EC3B  F01D         	call	_strlen	;wreg free
  5037  003F1A  5005               	movf	?_strlen^0,w,c
  5038  003F1C  2413               	addwf	strcat@dest^0,w,c
  5039  003F1E  6E09               	movwf	strcpy@dest^0,c
  5040  003F20  5006               	movf	(?_strlen+1)^0,w,c
  5041  003F22  2014               	addwfc	(strcat@dest+1)^0,w,c
  5042  003F24  6E0A               	movwf	(strcpy@dest+1)^0,c
  5043  003F26  C015  F00B         	movff	strcat@src,strcpy@src
  5044  003F2A  C016  F00C         	movff	strcat@src+1,strcpy@src+1
  5045  003F2E  ECA6  F01B         	call	_strcpy	;wreg free
  5046  003F32  0012               	return		;funcret
  5047  003F34                     __end_of_strcat:
  5048                           	opt callstack 0
  5049                           
  5050 ;; *************** function _strcpy *****************
  5051 ;; Defined at:
  5052 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;  dest            2    8[COMRAM] PTR unsigned char 
  5055 ;;		 -> Command(16), 
  5056 ;;  src             2   10[COMRAM] PTR const unsigned char 
  5057 ;;		 -> STR_73(1), STR_68(1), ReadRX232@temp(2), STR_5(1), 
  5058 ;; Auto vars:     Size  Location     Type
  5059 ;;  d               2   16[COMRAM] PTR unsigned char 
  5060 ;;		 -> Command(16), 
  5061 ;;  s               2   14[COMRAM] PTR const unsigned char 
  5062 ;;		 -> STR_73(1), STR_68(1), ReadRX232@temp(2), STR_5(1), 
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  2    8[COMRAM] PTR unsigned char 
  5065 ;; Registers used:
  5066 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5072 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5073 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5074 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5075 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5076 ;;Total ram usage:       10 bytes
  5077 ;; Hardware stack levels used:    1
  5078 ;; Hardware stack levels required when called:    4
  5079 ;; This function calls:
  5080 ;;		Nothing
  5081 ;; This function is called by:
  5082 ;;		_main
  5083 ;;		_SaveCardDat
  5084 ;;		_strcat
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087                           
  5088                           	psect	text6
  5089  00374C                     __ptext6:
  5090                           	opt callstack 0
  5091  00374C                     _strcpy:
  5092                           	opt callstack 26
  5093  00374C  C00B  F00F         	movff	strcpy@src,strcpy@s
  5094  003750  C00C  F010         	movff	strcpy@src+1,strcpy@s+1
  5095  003754  C009  F011         	movff	strcpy@dest,strcpy@d
  5096  003758  C00A  F012         	movff	strcpy@dest+1,strcpy@d+1
  5097  00375C                     l6446:
  5098  00375C  500F               	movf	strcpy@s^0,w,c
  5099  00375E  6E0D               	movwf	??_strcpy^0,c
  5100  003760  5010               	movf	(strcpy@s+1)^0,w,c
  5101  003762  6E0E               	movwf	(??_strcpy+1)^0,c
  5102  003764  4A0F               	infsnz	strcpy@s^0,f,c
  5103  003766  2A10               	incf	(strcpy@s+1)^0,f,c
  5104  003768  C00D  FFF6         	movff	??_strcpy,tblptrl
  5105  00376C  C00E  FFF7         	movff	??_strcpy+1,tblptrh
  5106  003770  0E00               	movlw	low (__mediumconst shr (0+16))
  5107  003772  6EF8               	movwf	tblptru,c
  5108  003774  C011  FFD9         	movff	strcpy@d,fsr2l
  5109  003778  C012  FFDA         	movff	strcpy@d+1,fsr2h
  5110  00377C  4A11               	infsnz	strcpy@d^0,f,c
  5111  00377E  2A12               	incf	(strcpy@d+1)^0,f,c
  5112  003780  0E0E               	movlw	(high __ramtop+-1)
  5113  003782  64F7               	cpfsgt	tblptrh,c
  5114  003784  D003               	bra	u6527
  5115  003786  0008               	tblrd		*
  5116  003788  50F5               	movf	tablat,w,c
  5117  00378A  D005               	bra	u6520
  5118  00378C                     u6527:
  5119  00378C  CFF6 FFE9          	movff	tblptrl,fsr0l
  5120  003790  CFF7 FFEA          	movff	tblptrh,fsr0h
  5121  003794  50EF               	movf	indf0,w,c
  5122  003796                     u6520:
  5123  003796  6EDF               	movwf	indf2,c
  5124  003798  50DF               	movf	indf2,w,c
  5125  00379A  A4D8               	btfss	status,2,c
  5126  00379C  EFD2  F01B         	goto	u6531
  5127  0037A0  EFD4  F01B         	goto	u6530
  5128  0037A4                     u6531:
  5129  0037A4  EFAE  F01B         	goto	l6446
  5130  0037A8                     u6530:
  5131  0037A8  0012               	return		;funcret
  5132  0037AA                     __end_of_strcpy:
  5133                           	opt callstack 0
  5134                           
  5135 ;; *************** function _memmove *****************
  5136 ;; Defined at:
  5137 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memmove.c"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;  d1              2    8[COMRAM] PTR void 
  5140 ;;		 -> Command(16), 
  5141 ;;  s1              2   10[COMRAM] PTR const void 
  5142 ;;		 -> Command(16), 
  5143 ;;  n               2   12[COMRAM] unsigned int 
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;  s               2   18[COMRAM] PTR const unsigned char 
  5146 ;;		 -> Command(16), 
  5147 ;;  d               2   16[COMRAM] PTR unsigned char 
  5148 ;;		 -> Command(16), 
  5149 ;; Return value:  Size  Location     Type
  5150 ;;                  2    8[COMRAM] PTR void 
  5151 ;; Registers used:
  5152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5153 ;; Tracked objects:
  5154 ;;		On entry : 0/0
  5155 ;;		On exit  : 0/0
  5156 ;;		Unchanged: 0/0
  5157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5158 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5159 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5160 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5161 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5162 ;;Total ram usage:       12 bytes
  5163 ;; Hardware stack levels used:    1
  5164 ;; Hardware stack levels required when called:    4
  5165 ;; This function calls:
  5166 ;;		Nothing
  5167 ;; This function is called by:
  5168 ;;		_ReadRX232
  5169 ;; This function uses a non-reentrant model
  5170 ;;
  5171                           
  5172                           	psect	text7
  5173  002BB0                     __ptext7:
  5174                           	opt callstack 0
  5175  002BB0                     _memmove:
  5176                           	opt callstack 23
  5177  002BB0  C00B  F013         	movff	memmove@s1,memmove@s
  5178  002BB4  C00C  F014         	movff	memmove@s1+1,memmove@s+1
  5179  002BB8  C009  F011         	movff	memmove@d1,memmove@d
  5180  002BBC  C00A  F012         	movff	memmove@d1+1,memmove@d+1
  5181  002BC0  5011               	movf	memmove@d^0,w,c
  5182  002BC2  5C13               	subwf	memmove@s^0,w,c
  5183  002BC4  5012               	movf	(memmove@d+1)^0,w,c
  5184  002BC6  5814               	subwfb	(memmove@s+1)^0,w,c
  5185  002BC8  B0D8               	btfsc	status,0,c
  5186  002BCA  EFE9  F015         	goto	u6651
  5187  002BCE  EFEB  F015         	goto	u6650
  5188  002BD2                     u6651:
  5189  002BD2  EF22  F016         	goto	l6550
  5190  002BD6                     u6650:
  5191  002BD6  500D               	movf	memmove@n^0,w,c
  5192  002BD8  2413               	addwf	memmove@s^0,w,c
  5193  002BDA  6E0F               	movwf	??_memmove^0,c
  5194  002BDC  500E               	movf	(memmove@n+1)^0,w,c
  5195  002BDE  2014               	addwfc	(memmove@s+1)^0,w,c
  5196  002BE0  6E10               	movwf	(??_memmove+1)^0,c
  5197  002BE2  500F               	movf	??_memmove^0,w,c
  5198  002BE4  5C11               	subwf	memmove@d^0,w,c
  5199  002BE6  5010               	movf	(??_memmove+1)^0,w,c
  5200  002BE8  5812               	subwfb	(memmove@d+1)^0,w,c
  5201  002BEA  B0D8               	btfsc	status,0,c
  5202  002BEC  EFFA  F015         	goto	u6661
  5203  002BF0  EFFC  F015         	goto	u6660
  5204  002BF4                     u6661:
  5205  002BF4  EF22  F016         	goto	l6550
  5206  002BF8                     u6660:
  5207  002BF8  500D               	movf	memmove@n^0,w,c
  5208  002BFA  2613               	addwf	memmove@s^0,f,c
  5209  002BFC  500E               	movf	(memmove@n+1)^0,w,c
  5210  002BFE  2214               	addwfc	(memmove@s+1)^0,f,c
  5211  002C00  500D               	movf	memmove@n^0,w,c
  5212  002C02  2611               	addwf	memmove@d^0,f,c
  5213  002C04  500E               	movf	(memmove@n+1)^0,w,c
  5214  002C06  2212               	addwfc	(memmove@d+1)^0,f,c
  5215  002C08                     l6546:
  5216  002C08  0613               	decf	memmove@s^0,f,c
  5217  002C0A  A0D8               	btfss	status,0,c
  5218  002C0C  0614               	decf	(memmove@s+1)^0,f,c
  5219  002C0E  C013  FFD9         	movff	memmove@s,fsr2l
  5220  002C12  C014  FFDA         	movff	memmove@s+1,fsr2h
  5221  002C16  0611               	decf	memmove@d^0,f,c
  5222  002C18  A0D8               	btfss	status,0,c
  5223  002C1A  0612               	decf	(memmove@d+1)^0,f,c
  5224  002C1C  C011  FFE1         	movff	memmove@d,fsr1l
  5225  002C20  C012  FFE2         	movff	memmove@d+1,fsr1h
  5226  002C24  CFDF FFE7          	movff	indf2,indf1
  5227  002C28  060D               	decf	memmove@n^0,f,c
  5228  002C2A  A0D8               	btfss	status,0,c
  5229  002C2C  060E               	decf	(memmove@n+1)^0,f,c
  5230  002C2E  500D               	movf	memmove@n^0,w,c
  5231  002C30  100E               	iorwf	(memmove@n+1)^0,w,c
  5232  002C32  A4D8               	btfss	status,2,c
  5233  002C34  EF1E  F016         	goto	u6671
  5234  002C38  EF20  F016         	goto	u6670
  5235  002C3C                     u6671:
  5236  002C3C  EF04  F016         	goto	l6546
  5237  002C40                     u6670:
  5238  002C40  EF45  F016         	goto	l1893
  5239  002C44                     l6550:
  5240  002C44  500D               	movf	memmove@n^0,w,c
  5241  002C46  100E               	iorwf	(memmove@n+1)^0,w,c
  5242  002C48  B4D8               	btfsc	status,2,c
  5243  002C4A  EF29  F016         	goto	u6681
  5244  002C4E  EF2B  F016         	goto	u6680
  5245  002C52                     u6681:
  5246  002C52  EF45  F016         	goto	l1893
  5247  002C56                     u6680:
  5248  002C56                     l6552:
  5249  002C56  C013  FFD9         	movff	memmove@s,fsr2l
  5250  002C5A  C014  FFDA         	movff	memmove@s+1,fsr2h
  5251  002C5E  C011  FFE1         	movff	memmove@d,fsr1l
  5252  002C62  C012  FFE2         	movff	memmove@d+1,fsr1h
  5253  002C66  CFDF FFE7          	movff	indf2,indf1
  5254  002C6A  4A13               	infsnz	memmove@s^0,f,c
  5255  002C6C  2A14               	incf	(memmove@s+1)^0,f,c
  5256  002C6E  4A11               	infsnz	memmove@d^0,f,c
  5257  002C70  2A12               	incf	(memmove@d+1)^0,f,c
  5258  002C72  060D               	decf	memmove@n^0,f,c
  5259  002C74  A0D8               	btfss	status,0,c
  5260  002C76  060E               	decf	(memmove@n+1)^0,f,c
  5261  002C78  500D               	movf	memmove@n^0,w,c
  5262  002C7A  100E               	iorwf	(memmove@n+1)^0,w,c
  5263  002C7C  A4D8               	btfss	status,2,c
  5264  002C7E  EF43  F016         	goto	u6691
  5265  002C82  EF45  F016         	goto	u6690
  5266  002C86                     u6691:
  5267  002C86  EF2B  F016         	goto	l6552
  5268  002C8A                     u6690:
  5269  002C8A                     l1893:
  5270  002C8A  0012               	return		;funcret
  5271  002C8C                     __end_of_memmove:
  5272                           	opt callstack 0
  5273                           
  5274 ;; *************** function _EUSART2_is_rx_ready *****************
  5275 ;; Defined at:
  5276 ;;		line 139 in file "mcc_generated_files/eusart2.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;		None
  5279 ;; Auto vars:     Size  Location     Type
  5280 ;;		None
  5281 ;; Return value:  Size  Location     Type
  5282 ;;                  1    wreg      _Bool 
  5283 ;; Registers used:
  5284 ;;		wreg, status,2
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/0
  5287 ;;		On exit  : 0/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5294 ;;Total ram usage:        0 bytes
  5295 ;; Hardware stack levels used:    1
  5296 ;; Hardware stack levels required when called:    4
  5297 ;; This function calls:
  5298 ;;		Nothing
  5299 ;; This function is called by:
  5300 ;;		_ReadRX232
  5301 ;;		_SaveCardDat
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           	psect	text8
  5306  003F90                     __ptext8:
  5307                           	opt callstack 0
  5308  003F90                     _EUSART2_is_rx_ready:
  5309                           	opt callstack 23
  5310  003F90                     
  5311                           ;mcc_generated_files/eusart2.c: 141:     return (eusart2RxCount ? 1 : 0);
  5312  003F90  0100               	movlb	0	; () banked
  5313  003F92  51DE               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  5314  003F94  A4D8               	btfss	status,2,c
  5315  003F96  EFCF  F01F         	goto	u6571
  5316  003F9A  EFD2  F01F         	goto	u6570
  5317  003F9E                     u6571:
  5318  003F9E  0E01               	movlw	1
  5319  003FA0  EFD3  F01F         	goto	u6580
  5320  003FA4                     u6570:
  5321  003FA4  0E00               	movlw	0
  5322  003FA6                     u6580:
  5323  003FA6                     
  5324                           ; BSR set to: 0
  5325  003FA6  0012               	return		;funcret
  5326  003FA8                     __end_of_EUSART2_is_rx_ready:
  5327                           	opt callstack 0
  5328                           
  5329 ;; *************** function _EUSART2_Read *****************
  5330 ;; Defined at:
  5331 ;;		line 153 in file "mcc_generated_files/eusart2.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;		None
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;  readValue       1    4[COMRAM] unsigned char 
  5336 ;; Return value:  Size  Location     Type
  5337 ;;                  1    wreg      unsigned char 
  5338 ;; Registers used:
  5339 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5340 ;; Tracked objects:
  5341 ;;		On entry : 0/0
  5342 ;;		On exit  : 0/0
  5343 ;;		Unchanged: 0/0
  5344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5346 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5348 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5349 ;;Total ram usage:        1 bytes
  5350 ;; Hardware stack levels used:    1
  5351 ;; Hardware stack levels required when called:    4
  5352 ;; This function calls:
  5353 ;;		Nothing
  5354 ;; This function is called by:
  5355 ;;		_ReadRX232
  5356 ;;		_SaveCardDat
  5357 ;;		_getch
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           	psect	text9
  5362  003920                     __ptext9:
  5363                           	opt callstack 0
  5364  003920                     _EUSART2_Read:
  5365                           	opt callstack 23
  5366  003920                     l6498:
  5367                           
  5368                           ;mcc_generated_files/eusart2.c: 157:     while(0 == eusart2RxCount)
  5369  003920  0100               	movlb	0	; () banked
  5370  003922  51DE               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  5371  003924  B4D8               	btfsc	status,2,c
  5372  003926  EF97  F01C         	goto	u6591
  5373  00392A  EF99  F01C         	goto	u6590
  5374  00392E                     u6591:
  5375  00392E  EF90  F01C         	goto	l6498
  5376  003932                     u6590:
  5377  003932                     
  5378                           ; BSR set to: 0
  5379                           ;mcc_generated_files/eusart2.c: 161:     eusart2RxLastError = eusart2RxStatusBuffer[eusa
      +                          rt2RxTail];
  5380  003932  0E54               	movlw	low _eusart2RxStatusBuffer
  5381  003934  25DF               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
  5382  003936  6ED9               	movwf	fsr2l,c
  5383  003938  6ADA               	clrf	fsr2h,c
  5384  00393A  0E01               	movlw	high _eusart2RxStatusBuffer
  5385  00393C  22DA               	addwfc	fsr2h,f,c
  5386  00393E  50DF               	movf	indf2,w,c
  5387  003940  6FDD               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  5388                           
  5389                           ;mcc_generated_files/eusart2.c: 163:     readValue = eusart2RxBuffer[eusart2RxTail++];
  5390  003942  0E64               	movlw	low _eusart2RxBuffer
  5391  003944  25DF               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
  5392  003946  6ED9               	movwf	fsr2l,c
  5393  003948  6ADA               	clrf	fsr2h,c
  5394  00394A  0E03               	movlw	high _eusart2RxBuffer
  5395  00394C  22DA               	addwfc	fsr2h,f,c
  5396  00394E  50DF               	movf	indf2,w,c
  5397  003950  6E05               	movwf	EUSART2_Read@readValue^0,c
  5398  003952                     
  5399                           ; BSR set to: 0
  5400  003952  2BDF               	incf	_eusart2RxTail& (0+255),f,b	;volatile
  5401  003954                     
  5402                           ; BSR set to: 0
  5403                           ;mcc_generated_files/eusart2.c: 164:     if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
  5404  003954  0E1F               	movlw	31
  5405  003956  65DF               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
  5406  003958  EFB0  F01C         	goto	u6601
  5407  00395C  EFB2  F01C         	goto	u6600
  5408  003960                     u6601:
  5409  003960  EFB4  F01C         	goto	l6508
  5410  003964                     u6600:
  5411  003964                     
  5412                           ; BSR set to: 0
  5413                           ;mcc_generated_files/eusart2.c: 165:     {;mcc_generated_files/eusart2.c: 166:         e
      +                          usart2RxTail = 0;
  5414  003964  0E00               	movlw	0
  5415  003966  6FDF               	movwf	_eusart2RxTail& (0+255),b	;volatile
  5416  003968                     l6508:
  5417                           
  5418                           ; BSR set to: 0
  5419                           ;mcc_generated_files/eusart2.c: 168:     PIE3bits.RC2IE = 0;
  5420  003968  010E               	movlb	14	; () banked
  5421  00396A  9FC5               	bcf	197,7,b	;volatile
  5422  00396C                     
  5423                           ; BSR set to: 14
  5424                           ;mcc_generated_files/eusart2.c: 169:     eusart2RxCount--;
  5425  00396C  0100               	movlb	0	; () banked
  5426  00396E  07DE               	decf	_eusart2RxCount& (0+255),f,b	;volatile
  5427  003970                     
  5428                           ; BSR set to: 0
  5429                           ;mcc_generated_files/eusart2.c: 170:     PIE3bits.RC2IE = 1;
  5430  003970  010E               	movlb	14	; () banked
  5431  003972  8FC5               	bsf	197,7,b	;volatile
  5432  003974                     
  5433                           ; BSR set to: 14
  5434                           ;mcc_generated_files/eusart2.c: 172:     return readValue;
  5435  003974  5005               	movf	EUSART2_Read@readValue^0,w,c
  5436  003976                     
  5437                           ; BSR set to: 14
  5438  003976  0012               	return		;funcret
  5439  003978                     __end_of_EUSART2_Read:
  5440                           	opt callstack 0
  5441                           
  5442 ;; *************** function _ClearEEAddRange *****************
  5443 ;; Defined at:
  5444 ;;		line 201 in file "RS232.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;  StartAdd        2   41[BANK0 ] unsigned int 
  5447 ;;  NumBytes        2   43[BANK0 ] unsigned int 
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;  i               2   84[COMRAM] int 
  5450 ;; Return value:  Size  Location     Type
  5451 ;;                  1    wreg      void 
  5452 ;; Registers used:
  5453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5454 ;; Tracked objects:
  5455 ;;		On entry : 0/0
  5456 ;;		On exit  : 0/0
  5457 ;;		Unchanged: 0/0
  5458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5459 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5460 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5462 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5463 ;;Total ram usage:        6 bytes
  5464 ;; Hardware stack levels used:    1
  5465 ;; Hardware stack levels required when called:   13
  5466 ;; This function calls:
  5467 ;;		_DATAEE_WriteByte
  5468 ;;		_printf
  5469 ;; This function is called by:
  5470 ;;		_SaveCardDat
  5471 ;; This function uses a non-reentrant model
  5472 ;;
  5473                           
  5474                           	psect	text10
  5475  0038C4                     __ptext10:
  5476                           	opt callstack 0
  5477  0038C4                     _ClearEEAddRange:
  5478                           	opt callstack 15
  5479  0038C4                     
  5480                           ;RS232.c: 204:     printf("Clearing EEPROM from Address: 0x%04x for num bytes: %i \r\n",
      +                           StartAdd, NumBytes);
  5481  0038C4  0E53               	movlw	low STR_66
  5482  0038C6  0100               	movlb	0	; () banked
  5483  0038C8  6F7D               	movwf	printf@fmt& (0+255),b
  5484  0038CA  0EF9               	movlw	high STR_66
  5485  0038CC  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5486  0038CE  C089  F07F         	movff	ClearEEAddRange@StartAdd,?_printf+2
  5487  0038D2  C08A  F080         	movff	ClearEEAddRange@StartAdd+1,?_printf+3
  5488  0038D6  C08B  F081         	movff	ClearEEAddRange@NumBytes,?_printf+4
  5489  0038DA  C08C  F082         	movff	ClearEEAddRange@NumBytes+1,?_printf+5
  5490  0038DE  EC73  F01F         	call	_printf	;wreg free
  5491  0038E2                     
  5492                           ;RS232.c: 206:     for(int i = 0; i<NumBytes; i++){
  5493  0038E2  0E00               	movlw	0
  5494  0038E4  6E56               	movwf	(ClearEEAddRange@i+1)^0,c
  5495  0038E6  0E00               	movlw	0
  5496  0038E8  6E55               	movwf	ClearEEAddRange@i^0,c
  5497  0038EA  EF83  F01C         	goto	l6702
  5498  0038EE                     l6698:
  5499                           
  5500                           ; BSR set to: 0
  5501                           ;RS232.c: 207:         DATAEE_WriteByte(StartAdd +i, 0xFF);
  5502  0038EE  5189               	movf	ClearEEAddRange@StartAdd& (0+255),w,b
  5503  0038F0  2455               	addwf	ClearEEAddRange@i^0,w,c
  5504  0038F2  6E05               	movwf	DATAEE_WriteByte@bAdd^0,c
  5505  0038F4  518A               	movf	(ClearEEAddRange@StartAdd+1)& (0+255),w,b
  5506  0038F6  2056               	addwfc	(ClearEEAddRange@i+1)^0,w,c
  5507  0038F8  6E06               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
  5508  0038FA  0EFF               	movlw	255
  5509  0038FC  6E07               	movwf	DATAEE_WriteByte@bData^0,c
  5510  0038FE  ECD2  F01D         	call	_DATAEE_WriteByte	;wreg free
  5511  003902                     
  5512                           ;RS232.c: 208:     }
  5513  003902  4A55               	infsnz	ClearEEAddRange@i^0,f,c
  5514  003904  2A56               	incf	(ClearEEAddRange@i+1)^0,f,c
  5515  003906                     l6702:
  5516  003906  0100               	movlb	0	; () banked
  5517  003908  518B               	movf	ClearEEAddRange@NumBytes& (0+255),w,b
  5518  00390A  5C55               	subwf	ClearEEAddRange@i^0,w,c
  5519  00390C  518C               	movf	(ClearEEAddRange@NumBytes+1)& (0+255),w,b
  5520  00390E  5856               	subwfb	(ClearEEAddRange@i+1)^0,w,c
  5521  003910  A0D8               	btfss	status,0,c
  5522  003912  EF8D  F01C         	goto	u6911
  5523  003916  EF8F  F01C         	goto	u6910
  5524  00391A                     u6911:
  5525  00391A  EF77  F01C         	goto	l6698
  5526  00391E                     u6910:
  5527  00391E                     
  5528                           ; BSR set to: 0
  5529  00391E  0012               	return		;funcret
  5530  003920                     __end_of_ClearEEAddRange:
  5531                           	opt callstack 0
  5532                           
  5533 ;; *************** function _DATAEE_WriteByte *****************
  5534 ;; Defined at:
  5535 ;;		line 165 in file "mcc_generated_files/memory.c"
  5536 ;; Parameters:    Size  Location     Type
  5537 ;;  bAdd            2    4[COMRAM] unsigned short 
  5538 ;;  bData           1    6[COMRAM] unsigned char 
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;  GIEBitValue     1    7[COMRAM] unsigned char 
  5541 ;; Return value:  Size  Location     Type
  5542 ;;                  1    wreg      void 
  5543 ;; Registers used:
  5544 ;;		wreg, status,2, status,0
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/0
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5550 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5551 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5553 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5554 ;;Total ram usage:        4 bytes
  5555 ;; Hardware stack levels used:    1
  5556 ;; Hardware stack levels required when called:    4
  5557 ;; This function calls:
  5558 ;;		Nothing
  5559 ;; This function is called by:
  5560 ;;		_ClearEEAddRange
  5561 ;;		_SaveCardDat
  5562 ;; This function uses a non-reentrant model
  5563 ;;
  5564                           
  5565                           	psect	text11
  5566  003BA4                     __ptext11:
  5567                           	opt callstack 0
  5568  003BA4                     _DATAEE_WriteByte:
  5569                           	opt callstack 24
  5570  003BA4                     
  5571                           ;mcc_generated_files/memory.c: 165: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 166: {;mcc_generated_files/memory.c: 167:  uint8_t GIEBitV
      +                          alue = INTCONbits.GIE;
  5572  003BA4  0E00               	movlw	0
  5573  003BA6  BEF2               	btfsc	242,7,c	;volatile
  5574  003BA8  0E01               	movlw	1
  5575  003BAA  6E08               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
  5576  003BAC                     
  5577                           ;mcc_generated_files/memory.c: 169:     NVMADRH = ((bAdd >> 8) & 0x03);
  5578  003BAC  5006               	movf	(DATAEE_WriteByte@bAdd+1)^0,w,c
  5579  003BAE  0B03               	andlw	3
  5580  003BB0  6E7F               	movwf	127,c	;volatile
  5581  003BB2                     
  5582                           ;mcc_generated_files/memory.c: 170:     NVMADRL = (bAdd & 0xFF);
  5583  003BB2  C005  FF7E         	movff	DATAEE_WriteByte@bAdd,3966	;volatile
  5584  003BB6                     
  5585                           ;mcc_generated_files/memory.c: 171:     NVMDAT = bData;
  5586  003BB6  C007  FF80         	movff	DATAEE_WriteByte@bData,3968	;volatile
  5587  003BBA                     
  5588                           ;mcc_generated_files/memory.c: 172:     NVMCON1bits.NVMREG = 0;
  5589  003BBA  0E3F               	movlw	-193
  5590  003BBC  1681               	andwf	129,f,c	;volsfr
  5591  003BBE                     
  5592                           ;mcc_generated_files/memory.c: 173:     NVMCON1bits.WREN = 1;
  5593  003BBE  8481               	bsf	129,2,c	;volsfr
  5594  003BC0                     
  5595                           ;mcc_generated_files/memory.c: 174:  INTCONbits.GIE = 0;
  5596  003BC0  9EF2               	bcf	242,7,c	;volatile
  5597  003BC2                     
  5598                           ;mcc_generated_files/memory.c: 175:     NVMCON2 = 0x55;
  5599  003BC2  0E55               	movlw	85
  5600  003BC4  6E82               	movwf	130,c	;volsfr
  5601  003BC6                     
  5602                           ;mcc_generated_files/memory.c: 176:     NVMCON2 = 0xAA;
  5603  003BC6  0EAA               	movlw	170
  5604  003BC8  6E82               	movwf	130,c	;volsfr
  5605  003BCA                     
  5606                           ;mcc_generated_files/memory.c: 177:     NVMCON1bits.WR = 1;
  5607  003BCA  8281               	bsf	129,1,c	;volsfr
  5608  003BCC                     l212:
  5609                           
  5610                           ;mcc_generated_files/memory.c: 179:     while (NVMCON1bits.WR)
  5611  003BCC  B281               	btfsc	129,1,c	;volsfr
  5612  003BCE  EFEB  F01D         	goto	u6551
  5613  003BD2  EFED  F01D         	goto	u6550
  5614  003BD6                     u6551:
  5615  003BD6  EFE6  F01D         	goto	l212
  5616  003BDA                     u6550:
  5617  003BDA                     
  5618                           ;mcc_generated_files/memory.c: 183:     NVMCON1bits.WREN = 0;
  5619  003BDA  9481               	bcf	129,2,c	;volsfr
  5620                           
  5621                           ;mcc_generated_files/memory.c: 184:  INTCONbits.GIE = GIEBitValue;
  5622  003BDC  B008               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
  5623  003BDE  D002               	bra	u6565
  5624  003BE0  9EF2               	bcf	242,7,c	;volatile
  5625  003BE2  D001               	bra	u6566
  5626  003BE4                     u6565:
  5627  003BE4  8EF2               	bsf	242,7,c	;volatile
  5628  003BE6                     u6566:
  5629  003BE6  0012               	return		;funcret
  5630  003BE8                     __end_of_DATAEE_WriteByte:
  5631                           	opt callstack 0
  5632                           
  5633 ;; *************** function _InitialiseString *****************
  5634 ;; Defined at:
  5635 ;;		line 59 in file "RS232.c"
  5636 ;; Parameters:    Size  Location     Type
  5637 ;;  Partial         1    wreg     _Bool 
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;  Partial         1   90[BANK0 ] _Bool 
  5640 ;;  i               2   99[BANK0 ] int 
  5641 ;;  i               2   97[BANK0 ] int 
  5642 ;;  PartNum        19   41[BANK0 ] unsigned char [19]
  5643 ;;  SerialNum      11   79[BANK0 ] unsigned char [11]
  5644 ;;  Date           11   60[BANK0 ] unsigned char [11]
  5645 ;;  Time            8   71[BANK0 ] unsigned char [8]
  5646 ;;  RevNum          2   91[BANK0 ] unsigned char [2]
  5647 ;;  j               2   95[BANK0 ] int 
  5648 ;;  readDataEven    1   94[BANK0 ] unsigned char 
  5649 ;;  readDataOdd     1   93[BANK0 ] unsigned char 
  5650 ;; Return value:  Size  Location     Type
  5651 ;;                  1    wreg      void 
  5652 ;; Registers used:
  5653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5654 ;; Tracked objects:
  5655 ;;		On entry : 0/0
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5660 ;;      Locals:         0      60       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5661 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5662 ;;      Totals:         2      60       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5663 ;;Total ram usage:       62 bytes
  5664 ;; Hardware stack levels used:    1
  5665 ;; Hardware stack levels required when called:   13
  5666 ;; This function calls:
  5667 ;;		_CardConfigIni
  5668 ;;		_printf
  5669 ;; This function is called by:
  5670 ;;		_main
  5671 ;;		_ValidateCmd
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           	psect	text12
  5676  000B58                     __ptext12:
  5677                           	opt callstack 0
  5678  000B58                     _InitialiseString:
  5679                           	opt callstack 16
  5680                           
  5681                           ;incstack = 0
  5682                           ;InitialiseString@Partial stored from wreg
  5683  000B58  0100               	movlb	0	; () banked
  5684  000B5A  6FBA               	movwf	InitialiseString@Partial& (0+255),b
  5685  000B5C                     
  5686                           ;RS232.c: 61:     char readDataOdd, readDataEven;;RS232.c: 63:     char SerialNum[11] = 
      +                          { '\0' };
  5687  000B5C  EE20  F0AF         	lfsr	2,InitialiseString@SerialNum
  5688  000B60  0E0A               	movlw	10
  5689  000B62                     u6961:
  5690  000B62  6ADE               	clrf	postinc2,c
  5691  000B64  06E8               	decf	wreg,f,c
  5692  000B66  E2FD               	bc	u6961
  5693  000B68                     
  5694                           ;RS232.c: 65:     CardConfigIni("Serial", SerialNum,0x0300,5);
  5695  000B68  0ED6               	movlw	low STR_28
  5696  000B6A  6E0A               	movwf	CardConfigIni@Name^0,c
  5697  000B6C  0EFF               	movlw	high STR_28
  5698  000B6E  6E0B               	movwf	(CardConfigIni@Name+1)^0,c
  5699  000B70  0EAF               	movlw	low InitialiseString@SerialNum
  5700  000B72  6E0C               	movwf	CardConfigIni@RetNum^0,c
  5701  000B74  0E00               	movlw	high InitialiseString@SerialNum
  5702  000B76  6E0D               	movwf	(CardConfigIni@RetNum+1)^0,c
  5703  000B78  0E03               	movlw	3
  5704  000B7A  6E0F               	movwf	(CardConfigIni@dataeeAddrWrk+1)^0,c
  5705  000B7C  0E00               	movlw	0
  5706  000B7E  6E0E               	movwf	CardConfigIni@dataeeAddrWrk^0,c
  5707  000B80  0E00               	movlw	0
  5708  000B82  6E11               	movwf	(CardConfigIni@NumBytes+1)^0,c
  5709  000B84  0E05               	movlw	5
  5710  000B86  6E10               	movwf	CardConfigIni@NumBytes^0,c
  5711  000B88  EC42  F00B         	call	_CardConfigIni	;wreg free
  5712  000B8C                     
  5713                           ;RS232.c: 67:     char PartNum[19] = { '\0' };
  5714  000B8C  EE20  F089         	lfsr	2,InitialiseString@PartNum
  5715  000B90  0E12               	movlw	18
  5716  000B92                     u6971:
  5717  000B92  6ADE               	clrf	postinc2,c
  5718  000B94  06E8               	decf	wreg,f,c
  5719  000B96  E2FD               	bc	u6971
  5720                           
  5721                           ;RS232.c: 68:     CardConfigIni("Part", PartNum,0x0100,8);
  5722  000B98  0EEA               	movlw	low STR_30
  5723  000B9A  6E0A               	movwf	CardConfigIni@Name^0,c
  5724  000B9C  0EFF               	movlw	high STR_30
  5725  000B9E  6E0B               	movwf	(CardConfigIni@Name+1)^0,c
  5726  000BA0  0E89               	movlw	low InitialiseString@PartNum
  5727  000BA2  6E0C               	movwf	CardConfigIni@RetNum^0,c
  5728  000BA4  0E00               	movlw	high InitialiseString@PartNum
  5729  000BA6  6E0D               	movwf	(CardConfigIni@RetNum+1)^0,c
  5730  000BA8  0E01               	movlw	1
  5731  000BAA  6E0F               	movwf	(CardConfigIni@dataeeAddrWrk+1)^0,c
  5732  000BAC  0E00               	movlw	0
  5733  000BAE  6E0E               	movwf	CardConfigIni@dataeeAddrWrk^0,c
  5734  000BB0  0E00               	movlw	0
  5735  000BB2  6E11               	movwf	(CardConfigIni@NumBytes+1)^0,c
  5736  000BB4  0E08               	movlw	8
  5737  000BB6  6E10               	movwf	CardConfigIni@NumBytes^0,c
  5738  000BB8  EC42  F00B         	call	_CardConfigIni	;wreg free
  5739  000BBC                     
  5740                           ;RS232.c: 70:     char RevNum[2] = { '\0' };
  5741  000BBC  0E00               	movlw	0
  5742  000BBE  0100               	movlb	0	; () banked
  5743  000BC0  6FBC               	movwf	(InitialiseString@RevNum+1)& (0+255),b
  5744  000BC2  0E00               	movlw	0
  5745  000BC4  6FBB               	movwf	InitialiseString@RevNum& (0+255),b
  5746  000BC6                     
  5747                           ; BSR set to: 0
  5748                           ;RS232.c: 71:     CardConfigIni("Rev", RevNum,0x0200,1);
  5749  000BC6  0EF4               	movlw	low STR_32
  5750  000BC8  6E0A               	movwf	CardConfigIni@Name^0,c
  5751  000BCA  0EFF               	movlw	high STR_32
  5752  000BCC  6E0B               	movwf	(CardConfigIni@Name+1)^0,c
  5753  000BCE  0EBB               	movlw	low InitialiseString@RevNum
  5754  000BD0  6E0C               	movwf	CardConfigIni@RetNum^0,c
  5755  000BD2  0E00               	movlw	high InitialiseString@RevNum
  5756  000BD4  6E0D               	movwf	(CardConfigIni@RetNum+1)^0,c
  5757  000BD6  0E02               	movlw	2
  5758  000BD8  6E0F               	movwf	(CardConfigIni@dataeeAddrWrk+1)^0,c
  5759  000BDA  0E00               	movlw	0
  5760  000BDC  6E0E               	movwf	CardConfigIni@dataeeAddrWrk^0,c
  5761  000BDE  0E00               	movlw	0
  5762  000BE0  6E11               	movwf	(CardConfigIni@NumBytes+1)^0,c
  5763  000BE2  0E01               	movlw	1
  5764  000BE4  6E10               	movwf	CardConfigIni@NumBytes^0,c
  5765  000BE6  EC42  F00B         	call	_CardConfigIni	;wreg free
  5766  000BEA                     
  5767                           ;RS232.c: 75:     printf("\r\nDan and Sam's Modbus GPIO Expansion\r\n");
  5768  000BEA  0E6E               	movlw	low STR_37
  5769  000BEC  0100               	movlb	0	; () banked
  5770  000BEE  6F7D               	movwf	printf@fmt& (0+255),b
  5771  000BF0  0EFB               	movlw	high STR_37
  5772  000BF2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5773  000BF4  EC73  F01F         	call	_printf	;wreg free
  5774  000BF8                     
  5775                           ;RS232.c: 79:     printf("Card Ser No. %s \r\n",SerialNum);
  5776  000BF8  0E21               	movlw	low STR_38
  5777  000BFA  0100               	movlb	0	; () banked
  5778  000BFC  6F7D               	movwf	printf@fmt& (0+255),b
  5779  000BFE  0EFF               	movlw	high STR_38
  5780  000C00  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5781  000C02  0EAF               	movlw	low InitialiseString@SerialNum
  5782  000C04  6F7F               	movwf	(?_printf+2)& (0+255),b
  5783  000C06  0E00               	movlw	high InitialiseString@SerialNum
  5784  000C08  6F80               	movwf	(?_printf+3)& (0+255),b
  5785  000C0A  EC73  F01F         	call	_printf	;wreg free
  5786  000C0E                     
  5787                           ;RS232.c: 80:     printf("Card Part No. %s \r\n",PartNum);
  5788  000C0E  0E0D               	movlw	low STR_39
  5789  000C10  0100               	movlb	0	; () banked
  5790  000C12  6F7D               	movwf	printf@fmt& (0+255),b
  5791  000C14  0EFF               	movlw	high STR_39
  5792  000C16  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5793  000C18  0E89               	movlw	low InitialiseString@PartNum
  5794  000C1A  6F7F               	movwf	(?_printf+2)& (0+255),b
  5795  000C1C  0E00               	movlw	high InitialiseString@PartNum
  5796  000C1E  6F80               	movwf	(?_printf+3)& (0+255),b
  5797  000C20  EC73  F01F         	call	_printf	;wreg free
  5798  000C24                     
  5799                           ;RS232.c: 81:     printf("Card Revision. %s \r\n",RevNum);
  5800  000C24  0EE3               	movlw	low STR_40
  5801  000C26  0100               	movlb	0	; () banked
  5802  000C28  6F7D               	movwf	printf@fmt& (0+255),b
  5803  000C2A  0EFE               	movlw	high STR_40
  5804  000C2C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5805  000C2E  0EBB               	movlw	low InitialiseString@RevNum
  5806  000C30  6F7F               	movwf	(?_printf+2)& (0+255),b
  5807  000C32  0E00               	movlw	high InitialiseString@RevNum
  5808  000C34  6F80               	movwf	(?_printf+3)& (0+255),b
  5809  000C36  EC73  F01F         	call	_printf	;wreg free
  5810  000C3A                     
  5811                           ;RS232.c: 82:     printf("Card Address. 0x05 \r\n");
  5812  000C3A  0E8B               	movlw	low STR_41
  5813  000C3C  0100               	movlb	0	; () banked
  5814  000C3E  6F7D               	movwf	printf@fmt& (0+255),b
  5815  000C40  0EFE               	movlw	high STR_41
  5816  000C42  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5817  000C44  EC73  F01F         	call	_printf	;wreg free
  5818  000C48                     
  5819                           ;RS232.c: 83:     printf("Compiled on %s at %s by XC8 version %u\r\n\n",
  5820  000C48  0EF2               	movlw	low STR_42
  5821  000C4A  0100               	movlb	0	; () banked
  5822  000C4C  6F7D               	movwf	printf@fmt& (0+255),b
  5823  000C4E  0EFA               	movlw	high STR_42
  5824  000C50  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5825  000C52  0EC1               	movlw	low STR_43
  5826  000C54  6F7F               	movwf	(?_printf+2)& (0+255),b
  5827  000C56  0EFF               	movlw	high STR_43
  5828  000C58  6F80               	movwf	(?_printf+3)& (0+255),b
  5829  000C5A  0ECD               	movlw	low STR_44
  5830  000C5C  6F81               	movwf	(?_printf+4)& (0+255),b
  5831  000C5E  0EFF               	movlw	high STR_44
  5832  000C60  6F82               	movwf	(?_printf+5)& (0+255),b
  5833  000C62  0E08               	movlw	8
  5834  000C64  6F84               	movwf	(?_printf+7)& (0+255),b
  5835  000C66  0E34               	movlw	52
  5836  000C68  6F83               	movwf	(?_printf+6)& (0+255),b
  5837  000C6A  EC73  F01F         	call	_printf	;wreg free
  5838                           
  5839                           ;RS232.c: 86:     int j = 0;
  5840  000C6E  0E00               	movlw	0
  5841  000C70  0100               	movlb	0	; () banked
  5842  000C72  6FC0               	movwf	(InitialiseString@j+1)& (0+255),b
  5843  000C74  0E00               	movlw	0
  5844  000C76  6FBF               	movwf	InitialiseString@j& (0+255),b
  5845  000C78                     
  5846                           ; BSR set to: 0
  5847                           ;RS232.c: 89:     char Date[11] = "Mar 24 2021";
  5848  000C78  EE21  F02A         	lfsr	2,InitialiseString@F10720
  5849  000C7C  EE10  F09C         	lfsr	1,InitialiseString@Date
  5850  000C80  0E0A               	movlw	10
  5851  000C82                     u6981:
  5852  000C82  CFDB FFE3          	movff	plusw2,plusw1
  5853  000C86  06E8               	decf	wreg,f,c
  5854  000C88  E2FC               	bc	u6981
  5855  000C8A                     
  5856                           ; BSR set to: 0
  5857                           ;RS232.c: 90:     for(int i=0; i<12; i = i+2){
  5858  000C8A  0E00               	movlw	0
  5859  000C8C  6FC2               	movwf	(InitialiseString@i+1)& (0+255),b
  5860  000C8E  0E00               	movlw	0
  5861  000C90  6FC1               	movwf	InitialiseString@i& (0+255),b
  5862  000C92                     l6846:
  5863                           
  5864                           ; BSR set to: 0
  5865                           ;RS232.c: 91:         readDataOdd = Date[i];
  5866  000C92  0E9C               	movlw	low InitialiseString@Date
  5867  000C94  25C1               	addwf	InitialiseString@i& (0+255),w,b
  5868  000C96  6ED9               	movwf	fsr2l,c
  5869  000C98  0E00               	movlw	high InitialiseString@Date
  5870  000C9A  21C2               	addwfc	(InitialiseString@i+1)& (0+255),w,b
  5871  000C9C  6EDA               	movwf	fsr2h,c
  5872  000C9E  50DF               	movf	indf2,w,c
  5873  000CA0  6FBD               	movwf	InitialiseString@readDataOdd& (0+255),b
  5874                           
  5875                           ;RS232.c: 92:         readDataEven = Date[i +1];
  5876  000CA2  0E01               	movlw	1
  5877  000CA4  25C1               	addwf	InitialiseString@i& (0+255),w,b
  5878  000CA6  6E55               	movwf	??_InitialiseString^0,c
  5879  000CA8  0E00               	movlw	0
  5880  000CAA  21C2               	addwfc	(InitialiseString@i+1)& (0+255),w,b
  5881  000CAC  6E56               	movwf	(??_InitialiseString+1)^0,c
  5882  000CAE  0E9C               	movlw	low InitialiseString@Date
  5883  000CB0  2455               	addwf	??_InitialiseString^0,w,c
  5884  000CB2  6ED9               	movwf	fsr2l,c
  5885  000CB4  0E00               	movlw	high InitialiseString@Date
  5886  000CB6  2056               	addwfc	(??_InitialiseString+1)^0,w,c
  5887  000CB8  6EDA               	movwf	fsr2h,c
  5888  000CBA  50DF               	movf	indf2,w,c
  5889  000CBC  6FBE               	movwf	InitialiseString@readDataEven& (0+255),b
  5890                           
  5891                           ;RS232.c: 93:         MB304xx[j] = readDataOdd *256 + readDataEven;
  5892  000CBE  51BE               	movf	InitialiseString@readDataEven& (0+255),w,b
  5893  000CC0  C0BD  F055         	movff	InitialiseString@readDataOdd,??_InitialiseString
  5894  000CC4  6A56               	clrf	(??_InitialiseString+1)^0,c
  5895  000CC6  C055  F056         	movff	??_InitialiseString,??_InitialiseString+1
  5896  000CCA  6A55               	clrf	??_InitialiseString^0,c
  5897  000CCC  2655               	addwf	??_InitialiseString^0,f,c
  5898  000CCE  0E00               	movlw	0
  5899  000CD0  2256               	addwfc	(??_InitialiseString+1)^0,f,c
  5900  000CD2  90D8               	bcf	status,0,c
  5901  000CD4  35BF               	rlcf	InitialiseString@j& (0+255),w,b
  5902  000CD6  6ED9               	movwf	fsr2l,c
  5903  000CD8  35C0               	rlcf	(InitialiseString@j+1)& (0+255),w,b
  5904  000CDA  6EDA               	movwf	fsr2h,c
  5905  000CDC  0E1E               	movlw	low _MB304xx
  5906  000CDE  26D9               	addwf	fsr2l,f,c
  5907  000CE0  0E01               	movlw	high _MB304xx
  5908  000CE2  22DA               	addwfc	fsr2h,f,c
  5909  000CE4  C055  FFDE         	movff	??_InitialiseString,postinc2
  5910  000CE8  C056  FFDD         	movff	??_InitialiseString+1,postdec2
  5911  000CEC                     
  5912                           ; BSR set to: 0
  5913                           ;RS232.c: 94:         j++;
  5914  000CEC  4BBF               	infsnz	InitialiseString@j& (0+255),f,b
  5915  000CEE  2BC0               	incf	(InitialiseString@j+1)& (0+255),f,b
  5916  000CF0                     
  5917                           ; BSR set to: 0
  5918                           ;RS232.c: 95:     }
  5919  000CF0  0E02               	movlw	2
  5920  000CF2  25C1               	addwf	InitialiseString@i& (0+255),w,b
  5921  000CF4  6FC1               	movwf	InitialiseString@i& (0+255),b
  5922  000CF6  0E00               	movlw	0
  5923  000CF8  21C2               	addwfc	(InitialiseString@i+1)& (0+255),w,b
  5924  000CFA  6FC2               	movwf	(InitialiseString@i+1)& (0+255),b
  5925  000CFC                     
  5926                           ; BSR set to: 0
  5927  000CFC  BFC2               	btfsc	(InitialiseString@i+1)& (0+255),7,b
  5928  000CFE  EF8A  F006         	goto	u6991
  5929  000D02  51C2               	movf	(InitialiseString@i+1)& (0+255),w,b
  5930  000D04  E109               	bnz	u6990
  5931  000D06  0E0C               	movlw	12
  5932  000D08  5DC1               	subwf	InitialiseString@i& (0+255),w,b
  5933  000D0A  A0D8               	btfss	status,0,c
  5934  000D0C  EF8A  F006         	goto	u6991
  5935  000D10  EF8C  F006         	goto	u6990
  5936  000D14                     u6991:
  5937  000D14  EF49  F006         	goto	l6846
  5938  000D18                     u6990:
  5939  000D18                     
  5940                           ; BSR set to: 0
  5941                           ;RS232.c: 98:     j = 0;
  5942  000D18  0E00               	movlw	0
  5943  000D1A  6FC0               	movwf	(InitialiseString@j+1)& (0+255),b
  5944  000D1C  0E00               	movlw	0
  5945  000D1E  6FBF               	movwf	InitialiseString@j& (0+255),b
  5946  000D20                     
  5947                           ; BSR set to: 0
  5948                           ;RS232.c: 99:     char Time[8] = "22:55:24";
  5949  000D20  EE21  F03F         	lfsr	2,InitialiseString@F10723
  5950  000D24  EE10  F0A7         	lfsr	1,InitialiseString@Time
  5951  000D28  0E07               	movlw	7
  5952  000D2A                     u7001:
  5953  000D2A  CFDB FFE3          	movff	plusw2,plusw1
  5954  000D2E  06E8               	decf	wreg,f,c
  5955  000D30  E2FC               	bc	u7001
  5956  000D32                     
  5957                           ; BSR set to: 0
  5958                           ;RS232.c: 100:     for(int i=0; i<8; i = i+2){
  5959  000D32  0E00               	movlw	0
  5960  000D34  6FC4               	movwf	(InitialiseString@i_1415+1)& (0+255),b
  5961  000D36  0E00               	movlw	0
  5962  000D38  6FC3               	movwf	InitialiseString@i_1415& (0+255),b
  5963  000D3A                     l6864:
  5964                           
  5965                           ; BSR set to: 0
  5966                           ;RS232.c: 101:         readDataOdd = Time[i];
  5967  000D3A  0EA7               	movlw	low InitialiseString@Time
  5968  000D3C  25C3               	addwf	InitialiseString@i_1415& (0+255),w,b
  5969  000D3E  6ED9               	movwf	fsr2l,c
  5970  000D40  0E00               	movlw	high InitialiseString@Time
  5971  000D42  21C4               	addwfc	(InitialiseString@i_1415+1)& (0+255),w,b
  5972  000D44  6EDA               	movwf	fsr2h,c
  5973  000D46  50DF               	movf	indf2,w,c
  5974  000D48  6FBD               	movwf	InitialiseString@readDataOdd& (0+255),b
  5975                           
  5976                           ;RS232.c: 102:         readDataEven = Time[i +1];
  5977  000D4A  0E01               	movlw	1
  5978  000D4C  25C3               	addwf	InitialiseString@i_1415& (0+255),w,b
  5979  000D4E  6E55               	movwf	??_InitialiseString^0,c
  5980  000D50  0E00               	movlw	0
  5981  000D52  21C4               	addwfc	(InitialiseString@i_1415+1)& (0+255),w,b
  5982  000D54  6E56               	movwf	(??_InitialiseString+1)^0,c
  5983  000D56  0EA7               	movlw	low InitialiseString@Time
  5984  000D58  2455               	addwf	??_InitialiseString^0,w,c
  5985  000D5A  6ED9               	movwf	fsr2l,c
  5986  000D5C  0E00               	movlw	high InitialiseString@Time
  5987  000D5E  2056               	addwfc	(??_InitialiseString+1)^0,w,c
  5988  000D60  6EDA               	movwf	fsr2h,c
  5989  000D62  50DF               	movf	indf2,w,c
  5990  000D64  6FBE               	movwf	InitialiseString@readDataEven& (0+255),b
  5991                           
  5992                           ;RS232.c: 103:         MB305xx[j] = readDataOdd *256 + readDataEven;
  5993  000D66  51BE               	movf	InitialiseString@readDataEven& (0+255),w,b
  5994  000D68  C0BD  F055         	movff	InitialiseString@readDataOdd,??_InitialiseString
  5995  000D6C  6A56               	clrf	(??_InitialiseString+1)^0,c
  5996  000D6E  C055  F056         	movff	??_InitialiseString,??_InitialiseString+1
  5997  000D72  6A55               	clrf	??_InitialiseString^0,c
  5998  000D74  2655               	addwf	??_InitialiseString^0,f,c
  5999  000D76  0E00               	movlw	0
  6000  000D78  2256               	addwfc	(??_InitialiseString+1)^0,f,c
  6001  000D7A  90D8               	bcf	status,0,c
  6002  000D7C  35BF               	rlcf	InitialiseString@j& (0+255),w,b
  6003  000D7E  6ED9               	movwf	fsr2l,c
  6004  000D80  35C0               	rlcf	(InitialiseString@j+1)& (0+255),w,b
  6005  000D82  6EDA               	movwf	fsr2h,c
  6006  000D84  0E00               	movlw	low _MB305xx
  6007  000D86  26D9               	addwf	fsr2l,f,c
  6008  000D88  0E01               	movlw	high _MB305xx
  6009  000D8A  22DA               	addwfc	fsr2h,f,c
  6010  000D8C  C055  FFDE         	movff	??_InitialiseString,postinc2
  6011  000D90  C056  FFDD         	movff	??_InitialiseString+1,postdec2
  6012  000D94                     
  6013                           ; BSR set to: 0
  6014                           ;RS232.c: 104:         j++;
  6015  000D94  4BBF               	infsnz	InitialiseString@j& (0+255),f,b
  6016  000D96  2BC0               	incf	(InitialiseString@j+1)& (0+255),f,b
  6017  000D98                     
  6018                           ; BSR set to: 0
  6019                           ;RS232.c: 105:     }
  6020  000D98  0E02               	movlw	2
  6021  000D9A  25C3               	addwf	InitialiseString@i_1415& (0+255),w,b
  6022  000D9C  6FC3               	movwf	InitialiseString@i_1415& (0+255),b
  6023  000D9E  0E00               	movlw	0
  6024  000DA0  21C4               	addwfc	(InitialiseString@i_1415+1)& (0+255),w,b
  6025  000DA2  6FC4               	movwf	(InitialiseString@i_1415+1)& (0+255),b
  6026  000DA4                     
  6027                           ; BSR set to: 0
  6028  000DA4  BFC4               	btfsc	(InitialiseString@i_1415+1)& (0+255),7,b
  6029  000DA6  EFDE  F006         	goto	u7011
  6030  000DAA  51C4               	movf	(InitialiseString@i_1415+1)& (0+255),w,b
  6031  000DAC  E109               	bnz	u7010
  6032  000DAE  0E08               	movlw	8
  6033  000DB0  5DC3               	subwf	InitialiseString@i_1415& (0+255),w,b
  6034  000DB2  A0D8               	btfss	status,0,c
  6035  000DB4  EFDE  F006         	goto	u7011
  6036  000DB8  EFE0  F006         	goto	u7010
  6037  000DBC                     u7011:
  6038  000DBC  EF9D  F006         	goto	l6864
  6039  000DC0                     u7010:
  6040  000DC0                     
  6041                           ; BSR set to: 0
  6042                           ;RS232.c: 108:     if(Partial != 1){
  6043  000DC0  05BA               	decf	InitialiseString@Partial& (0+255),w,b
  6044  000DC2  B4D8               	btfsc	status,2,c
  6045  000DC4  EFE6  F006         	goto	u7021
  6046  000DC8  EFE8  F006         	goto	u7020
  6047  000DCC                     u7021:
  6048  000DCC  EF65  F007         	goto	l907
  6049  000DD0                     u7020:
  6050  000DD0                     
  6051                           ; BSR set to: 0
  6052                           ;RS232.c: 109:         printf("Initalisation Complete - Ready\r\n\n");
  6053  000DD0  0E4E               	movlw	low STR_45
  6054  000DD2  6F7D               	movwf	printf@fmt& (0+255),b
  6055  000DD4  0EFC               	movlw	high STR_45
  6056  000DD6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6057  000DD8  EC73  F01F         	call	_printf	;wreg free
  6058                           
  6059                           ;RS232.c: 110:         printf("Modbus Function Codes Supported:\r\n\n");
  6060  000DDC  0E06               	movlw	low STR_46
  6061  000DDE  0100               	movlb	0	; () banked
  6062  000DE0  6F7D               	movwf	printf@fmt& (0+255),b
  6063  000DE2  0EFC               	movlw	high STR_46
  6064  000DE4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6065  000DE6  EC73  F01F         	call	_printf	;wreg free
  6066                           
  6067                           ;RS232.c: 111:         printf("   0x03 - Read Multiple 16bit Registers\r\n");
  6068  000DEA  0E1C               	movlw	low STR_47
  6069  000DEC  0100               	movlb	0	; () banked
  6070  000DEE  6F7D               	movwf	printf@fmt& (0+255),b
  6071  000DF0  0EFB               	movlw	high STR_47
  6072  000DF2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6073  000DF4  EC73  F01F         	call	_printf	;wreg free
  6074                           
  6075                           ;RS232.c: 112:         printf("      Add 0x0000 to 0x0031 - 32x Circuit Get Status (lowe
      +                          r 8bits only)\r\n");
  6076  000DF8  0E0A               	movlw	low STR_48
  6077  000DFA  0100               	movlb	0	; () banked
  6078  000DFC  6F7D               	movwf	printf@fmt& (0+255),b
  6079  000DFE  0EF9               	movlw	high STR_48
  6080  000E00  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6081  000E02  EC73  F01F         	call	_printf	;wreg free
  6082                           
  6083                           ;RS232.c: 113:         printf("      Add 0x0100 to 0x0108 - Part Number\r\n");
  6084  000E06  0EC7               	movlw	low STR_49
  6085  000E08  0100               	movlb	0	; () banked
  6086  000E0A  6F7D               	movwf	printf@fmt& (0+255),b
  6087  000E0C  0EFA               	movlw	high STR_49
  6088  000E0E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6089  000E10  EC73  F01F         	call	_printf	;wreg free
  6090                           
  6091                           ;RS232.c: 114:         printf("      Add 0x0200 - Revision\r\n");
  6092  000E14  0E33               	movlw	low STR_50
  6093  000E16  0100               	movlb	0	; () banked
  6094  000E18  6F7D               	movwf	printf@fmt& (0+255),b
  6095  000E1A  0EFD               	movlw	high STR_50
  6096  000E1C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6097  000E1E  EC73  F01F         	call	_printf	;wreg free
  6098                           
  6099                           ;RS232.c: 115:         printf("      Add 0x0300 to 0x0304 - Revision\r\n");
  6100  000E22  0E46               	movlw	low STR_51
  6101  000E24  0100               	movlb	0	; () banked
  6102  000E26  6F7D               	movwf	printf@fmt& (0+255),b
  6103  000E28  0EFB               	movlw	high STR_51
  6104  000E2A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6105  000E2C  EC73  F01F         	call	_printf	;wreg free
  6106                           
  6107                           ;RS232.c: 116:         printf("      Add 0x0400 to 0x0405 - Compile Date (ASCII)\r\n");
  6108  000E30  0E67               	movlw	low STR_52
  6109  000E32  0100               	movlb	0	; () banked
  6110  000E34  6F7D               	movwf	printf@fmt& (0+255),b
  6111  000E36  0EFA               	movlw	high STR_52
  6112  000E38  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6113  000E3A  EC73  F01F         	call	_printf	;wreg free
  6114                           
  6115                           ;RS232.c: 117:         printf("      Add 0x0500 to 0x0504 - Compile Time - (ASCII)\r\n")
      +                          ;
  6116  000E3E  0EC6               	movlw	low STR_53
  6117  000E40  0100               	movlb	0	; () banked
  6118  000E42  6F7D               	movwf	printf@fmt& (0+255),b
  6119  000E44  0EF9               	movlw	high STR_53
  6120  000E46  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6121  000E48  EC73  F01F         	call	_printf	;wreg free
  6122                           
  6123                           ;RS232.c: 118:         printf("      Add 0x0600 to 0x0602 - 3x Analogue Inputs - WIP\r\n
      +                          \n");
  6124  000E4C  0E8D               	movlw	low STR_54
  6125  000E4E  0100               	movlb	0	; () banked
  6126  000E50  6F7D               	movwf	printf@fmt& (0+255),b
  6127  000E52  0EF9               	movlw	high STR_54
  6128  000E54  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6129  000E56  EC73  F01F         	call	_printf	;wreg free
  6130                           
  6131                           ;RS232.c: 119:         printf("   0x10 - Write Multiple Registers (Max 32x 16bit)\r\n");
  6132  000E5A  0E32               	movlw	low STR_55
  6133  000E5C  0100               	movlb	0	; () banked
  6134  000E5E  6F7D               	movwf	printf@fmt& (0+255),b
  6135  000E60  0EFA               	movlw	high STR_55
  6136  000E62  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6137  000E64  EC73  F01F         	call	_printf	;wreg free
  6138                           
  6139                           ;RS232.c: 120:         printf("      Add 0x0000 to 0x0031 - 32x Circuit Set Status  (low
      +                          er 8bits only)\r\n\n");
  6140  000E68  0EBF               	movlw	low STR_56
  6141  000E6A  0100               	movlb	0	; () banked
  6142  000E6C  6F7D               	movwf	printf@fmt& (0+255),b
  6143  000E6E  0EF8               	movlw	high STR_56
  6144  000E70  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6145  000E72  EC73  F01F         	call	_printf	;wreg free
  6146                           
  6147                           ;RS232.c: 122:         printf("Commands Supported:\r\n");
  6148  000E76  0EA1               	movlw	low STR_57
  6149  000E78  0100               	movlb	0	; () banked
  6150  000E7A  6F7D               	movwf	printf@fmt& (0+255),b
  6151  000E7C  0EFE               	movlw	high STR_57
  6152  000E7E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6153  000E80  EC73  F01F         	call	_printf	;wreg free
  6154                           
  6155                           ;RS232.c: 123:         printf("   ? - Initalise and display card details\r\n");
  6156  000E84  0E9B               	movlw	low STR_58
  6157  000E86  0100               	movlb	0	; () banked
  6158  000E88  6F7D               	movwf	printf@fmt& (0+255),b
  6159  000E8A  0EFA               	movlw	high STR_58
  6160  000E8C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6161  000E8E  EC73  F01F         	call	_printf	;wreg free
  6162                           
  6163                           ;RS232.c: 124:         printf("   serial - Set card serial number\r\n");
  6164  000E92  0EBC               	movlw	low STR_59
  6165  000E94  0100               	movlb	0	; () banked
  6166  000E96  6F7D               	movwf	printf@fmt& (0+255),b
  6167  000E98  0EFB               	movlw	high STR_59
  6168  000E9A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6169  000E9C  EC73  F01F         	call	_printf	;wreg free
  6170                           
  6171                           ;RS232.c: 125:         printf("   part - Set card part number\r\n");
  6172  000EA0  0E92               	movlw	low STR_60
  6173  000EA2  0100               	movlb	0	; () banked
  6174  000EA4  6F7D               	movwf	printf@fmt& (0+255),b
  6175  000EA6  0EFC               	movlw	high STR_60
  6176  000EA8  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6177  000EAA  EC73  F01F         	call	_printf	;wreg free
  6178                           
  6179                           ;RS232.c: 126:         printf("   rev - Set card part number\r\n");
  6180  000EAE  0ED4               	movlw	low STR_61
  6181  000EB0  0100               	movlb	0	; () banked
  6182  000EB2  6F7D               	movwf	printf@fmt& (0+255),b
  6183  000EB4  0EFC               	movlw	high STR_61
  6184  000EB6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6185  000EB8  EC73  F01F         	call	_printf	;wreg free
  6186                           
  6187                           ;RS232.c: 128:         printf("\r\nEnter Command : ");
  6188  000EBC  0E34               	movlw	low STR_4
  6189  000EBE  0100               	movlb	0	; () banked
  6190  000EC0  6F7D               	movwf	printf@fmt& (0+255),b
  6191  000EC2  0EFF               	movlw	high STR_4
  6192  000EC4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6193  000EC6  EC73  F01F         	call	_printf	;wreg free
  6194  000ECA                     l907:
  6195  000ECA  0012               	return		;funcret
  6196  000ECC                     __end_of_InitialiseString:
  6197                           	opt callstack 0
  6198                           
  6199 ;; *************** function _CardConfigIni *****************
  6200 ;; Defined at:
  6201 ;;		line 10 in file "RS232.c"
  6202 ;; Parameters:    Size  Location     Type
  6203 ;;  Name            2    9[COMRAM] PTR unsigned char 
  6204 ;;		 -> STR_36(4), STR_35(5), STR_34(7), 
  6205 ;;  RetNum          2   11[COMRAM] PTR unsigned char 
  6206 ;;		 -> InitialiseString@RevNum(2), InitialiseString@PartNum(19), InitialiseString@SerialNum(11), 
  6207 ;;  dataeeAddrWr    2   13[COMRAM] unsigned short 
  6208 ;;  NumBytes        2   15[COMRAM] int 
  6209 ;; Auto vars:     Size  Location     Type
  6210 ;;  i               2   21[COMRAM] int 
  6211 ;;  j               2   19[COMRAM] int 
  6212 ;;  readDataEven    1   24[COMRAM] unsigned char 
  6213 ;;  readDataOdd     1   23[COMRAM] unsigned char 
  6214 ;; Return value:  Size  Location     Type
  6215 ;;                  1    wreg      void 
  6216 ;; Registers used:
  6217 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6218 ;; Tracked objects:
  6219 ;;		On entry : 0/0
  6220 ;;		On exit  : 0/0
  6221 ;;		Unchanged: 0/0
  6222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6223 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6224 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6225 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6226 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6227 ;;Total ram usage:       16 bytes
  6228 ;; Hardware stack levels used:    1
  6229 ;; Hardware stack levels required when called:    5
  6230 ;; This function calls:
  6231 ;;		_DATAEE_ReadByte
  6232 ;;		_strcmp
  6233 ;; This function is called by:
  6234 ;;		_InitialiseString
  6235 ;; This function uses a non-reentrant model
  6236 ;;
  6237                           
  6238                           	psect	text13
  6239  001684                     __ptext13:
  6240                           	opt callstack 0
  6241  001684                     _CardConfigIni:
  6242                           	opt callstack 23
  6243  001684                     
  6244                           ;RS232.c: 14:     char readDataOdd, readDataEven;;RS232.c: 15:     int i=0, j=0;
  6245  001684  0E00               	movlw	0
  6246  001686  6E17               	movwf	(CardConfigIni@i+1)^0,c
  6247  001688  0E00               	movlw	0
  6248  00168A  6E16               	movwf	CardConfigIni@i^0,c
  6249  00168C  0E00               	movlw	0
  6250  00168E  6E15               	movwf	(CardConfigIni@j+1)^0,c
  6251  001690  0E00               	movlw	0
  6252  001692  6E14               	movwf	CardConfigIni@j^0,c
  6253                           
  6254                           ;RS232.c: 19:     for(i = 0; i < NumBytes; i++){
  6255  001694  0E00               	movlw	0
  6256  001696  6E17               	movwf	(CardConfigIni@i+1)^0,c
  6257  001698  0E00               	movlw	0
  6258  00169A  6E16               	movwf	CardConfigIni@i^0,c
  6259  00169C  EF22  F00C         	goto	l6690
  6260  0016A0                     l6652:
  6261                           
  6262                           ;RS232.c: 20:         readDataOdd = DATAEE_ReadByte(dataeeAddrWrk);
  6263  0016A0  C00E  F005         	movff	CardConfigIni@dataeeAddrWrk,DATAEE_ReadByte@bAdd
  6264  0016A4  C00F  F006         	movff	CardConfigIni@dataeeAddrWrk+1,DATAEE_ReadByte@bAdd+1
  6265  0016A8  ECD4  F01F         	call	_DATAEE_ReadByte	;wreg free
  6266  0016AC  6E18               	movwf	CardConfigIni@readDataOdd^0,c
  6267  0016AE                     
  6268                           ;RS232.c: 22:         _delay((unsigned long)((50)*(32000000/4000.0)));
  6269  0016AE  0E03               	movlw	3
  6270  0016B0  6E13               	movwf	(??_CardConfigIni+1)^0,c
  6271  0016B2  0E08               	movlw	8
  6272  0016B4  6E12               	movwf	??_CardConfigIni^0,c
  6273  0016B6  0E77               	movlw	119
  6274  0016B8                     u7667:
  6275  0016B8  2EE8               	decfsz	wreg,f,c
  6276  0016BA  D7FE               	bra	u7667
  6277  0016BC  2E12               	decfsz	??_CardConfigIni^0,f,c
  6278  0016BE  D7FC               	bra	u7667
  6279  0016C0  2E13               	decfsz	(??_CardConfigIni+1)^0,f,c
  6280  0016C2  D7FA               	bra	u7667
  6281  0016C4  F000               	nop	
  6282  0016C6                     
  6283                           ;RS232.c: 25:         if(readDataOdd != 0xFF){
  6284  0016C6  2818               	incf	CardConfigIni@readDataOdd^0,w,c
  6285  0016C8  B4D8               	btfsc	status,2,c
  6286  0016CA  EF69  F00B         	goto	u6851
  6287  0016CE  EF6B  F00B         	goto	u6850
  6288  0016D2                     u6851:
  6289  0016D2  EF75  F00B         	goto	l6662
  6290  0016D6                     u6850:
  6291  0016D6                     
  6292                           ;RS232.c: 26:             RetNum[j] = readDataOdd;
  6293  0016D6  5014               	movf	CardConfigIni@j^0,w,c
  6294  0016D8  240C               	addwf	CardConfigIni@RetNum^0,w,c
  6295  0016DA  6ED9               	movwf	fsr2l,c
  6296  0016DC  5015               	movf	(CardConfigIni@j+1)^0,w,c
  6297  0016DE  200D               	addwfc	(CardConfigIni@RetNum+1)^0,w,c
  6298  0016E0  6EDA               	movwf	fsr2h,c
  6299  0016E2  C018  FFDF         	movff	CardConfigIni@readDataOdd,indf2
  6300  0016E6                     
  6301                           ;RS232.c: 27:             j++;
  6302  0016E6  4A14               	infsnz	CardConfigIni@j^0,f,c
  6303  0016E8  2A15               	incf	(CardConfigIni@j+1)^0,f,c
  6304  0016EA                     l6662:
  6305                           
  6306                           ;RS232.c: 30:         dataeeAddrWrk++;
  6307  0016EA  4A0E               	infsnz	CardConfigIni@dataeeAddrWrk^0,f,c
  6308  0016EC  2A0F               	incf	(CardConfigIni@dataeeAddrWrk+1)^0,f,c
  6309  0016EE                     
  6310                           ;RS232.c: 31:         readDataEven = DATAEE_ReadByte(dataeeAddrWrk);
  6311  0016EE  C00E  F005         	movff	CardConfigIni@dataeeAddrWrk,DATAEE_ReadByte@bAdd
  6312  0016F2  C00F  F006         	movff	CardConfigIni@dataeeAddrWrk+1,DATAEE_ReadByte@bAdd+1
  6313  0016F6  ECD4  F01F         	call	_DATAEE_ReadByte	;wreg free
  6314  0016FA  6E19               	movwf	CardConfigIni@readDataEven^0,c
  6315  0016FC                     
  6316                           ;RS232.c: 33:         dataeeAddrWrk++;
  6317  0016FC  4A0E               	infsnz	CardConfigIni@dataeeAddrWrk^0,f,c
  6318  0016FE  2A0F               	incf	(CardConfigIni@dataeeAddrWrk+1)^0,f,c
  6319  001700                     
  6320                           ;RS232.c: 34:         _delay((unsigned long)((50)*(32000000/4000.0)));
  6321  001700  0E03               	movlw	3
  6322  001702  6E13               	movwf	(??_CardConfigIni+1)^0,c
  6323  001704  0E08               	movlw	8
  6324  001706  6E12               	movwf	??_CardConfigIni^0,c
  6325  001708  0E77               	movlw	119
  6326  00170A                     u7677:
  6327  00170A  2EE8               	decfsz	wreg,f,c
  6328  00170C  D7FE               	bra	u7677
  6329  00170E  2E12               	decfsz	??_CardConfigIni^0,f,c
  6330  001710  D7FC               	bra	u7677
  6331  001712  2E13               	decfsz	(??_CardConfigIni+1)^0,f,c
  6332  001714  D7FA               	bra	u7677
  6333  001716  F000               	nop	
  6334  001718                     
  6335                           ;RS232.c: 37:         if(readDataEven != 0xFF){
  6336  001718  2819               	incf	CardConfigIni@readDataEven^0,w,c
  6337  00171A  B4D8               	btfsc	status,2,c
  6338  00171C  EF92  F00B         	goto	u6861
  6339  001720  EF94  F00B         	goto	u6860
  6340  001724                     u6861:
  6341  001724  EF9E  F00B         	goto	l6676
  6342  001728                     u6860:
  6343  001728                     
  6344                           ;RS232.c: 38:             RetNum[j] = readDataEven;
  6345  001728  5014               	movf	CardConfigIni@j^0,w,c
  6346  00172A  240C               	addwf	CardConfigIni@RetNum^0,w,c
  6347  00172C  6ED9               	movwf	fsr2l,c
  6348  00172E  5015               	movf	(CardConfigIni@j+1)^0,w,c
  6349  001730  200D               	addwfc	(CardConfigIni@RetNum+1)^0,w,c
  6350  001732  6EDA               	movwf	fsr2h,c
  6351  001734  C019  FFDF         	movff	CardConfigIni@readDataEven,indf2
  6352  001738                     
  6353                           ;RS232.c: 39:             j++;
  6354  001738  4A14               	infsnz	CardConfigIni@j^0,f,c
  6355  00173A  2A15               	incf	(CardConfigIni@j+1)^0,f,c
  6356  00173C                     l6676:
  6357                           
  6358                           ;RS232.c: 42:         if(!strcmp("Serial",Name)){
  6359  00173C  0ED6               	movlw	low STR_28
  6360  00173E  6E05               	movwf	strcmp@l^0,c
  6361  001740  0EFF               	movlw	high STR_28
  6362  001742  6E06               	movwf	(strcmp@l+1)^0,c
  6363  001744  C00A  F007         	movff	CardConfigIni@Name,strcmp@r
  6364  001748  C00B  F008         	movff	CardConfigIni@Name+1,strcmp@r+1
  6365  00174C  EC08  F019         	call	_strcmp	;wreg free
  6366  001750  5005               	movf	?_strcmp^0,w,c
  6367  001752  1006               	iorwf	(?_strcmp+1)^0,w,c
  6368  001754  A4D8               	btfss	status,2,c
  6369  001756  EFAF  F00B         	goto	u6871
  6370  00175A  EFB1  F00B         	goto	u6870
  6371  00175E                     u6871:
  6372  00175E  EFCA  F00B         	goto	l6680
  6373  001762                     u6870:
  6374  001762                     
  6375                           ;RS232.c: 43:             MB303xx[i] = readDataOdd *256 + readDataEven;
  6376  001762  5019               	movf	CardConfigIni@readDataEven^0,w,c
  6377  001764  C018  F012         	movff	CardConfigIni@readDataOdd,??_CardConfigIni
  6378  001768  6A13               	clrf	(??_CardConfigIni+1)^0,c
  6379  00176A  C012  F013         	movff	??_CardConfigIni,??_CardConfigIni+1
  6380  00176E  6A12               	clrf	??_CardConfigIni^0,c
  6381  001770  2612               	addwf	??_CardConfigIni^0,f,c
  6382  001772  0E00               	movlw	0
  6383  001774  2213               	addwfc	(??_CardConfigIni+1)^0,f,c
  6384  001776  90D8               	bcf	status,0,c
  6385  001778  3416               	rlcf	CardConfigIni@i^0,w,c
  6386  00177A  6ED9               	movwf	fsr2l,c
  6387  00177C  3417               	rlcf	(CardConfigIni@i+1)^0,w,c
  6388  00177E  6EDA               	movwf	fsr2h,c
  6389  001780  0E35               	movlw	low _MB303xx
  6390  001782  26D9               	addwf	fsr2l,f,c
  6391  001784  0E01               	movlw	high _MB303xx
  6392  001786  22DA               	addwfc	fsr2h,f,c
  6393  001788  C012  FFDE         	movff	??_CardConfigIni,postinc2
  6394  00178C  C013  FFDD         	movff	??_CardConfigIni+1,postdec2
  6395                           
  6396                           ;RS232.c: 44:         }else if(!strcmp("Part",Name)){
  6397  001790  EF20  F00C         	goto	l6688
  6398  001794                     l6680:
  6399  001794  0EEA               	movlw	low STR_30
  6400  001796  6E05               	movwf	strcmp@l^0,c
  6401  001798  0EFF               	movlw	high STR_30
  6402  00179A  6E06               	movwf	(strcmp@l+1)^0,c
  6403  00179C  C00A  F007         	movff	CardConfigIni@Name,strcmp@r
  6404  0017A0  C00B  F008         	movff	CardConfigIni@Name+1,strcmp@r+1
  6405  0017A4  EC08  F019         	call	_strcmp	;wreg free
  6406  0017A8  5005               	movf	?_strcmp^0,w,c
  6407  0017AA  1006               	iorwf	(?_strcmp+1)^0,w,c
  6408  0017AC  A4D8               	btfss	status,2,c
  6409  0017AE  EFDB  F00B         	goto	u6881
  6410  0017B2  EFDD  F00B         	goto	u6880
  6411  0017B6                     u6881:
  6412  0017B6  EFF6  F00B         	goto	l6684
  6413  0017BA                     u6880:
  6414  0017BA                     
  6415                           ;RS232.c: 45:             MB301xx[i] = readDataOdd *256 + readDataEven;
  6416  0017BA  5019               	movf	CardConfigIni@readDataEven^0,w,c
  6417  0017BC  C018  F012         	movff	CardConfigIni@readDataOdd,??_CardConfigIni
  6418  0017C0  6A13               	clrf	(??_CardConfigIni+1)^0,c
  6419  0017C2  C012  F013         	movff	??_CardConfigIni,??_CardConfigIni+1
  6420  0017C6  6A12               	clrf	??_CardConfigIni^0,c
  6421  0017C8  2612               	addwf	??_CardConfigIni^0,f,c
  6422  0017CA  0E00               	movlw	0
  6423  0017CC  2213               	addwfc	(??_CardConfigIni+1)^0,f,c
  6424  0017CE  90D8               	bcf	status,0,c
  6425  0017D0  3416               	rlcf	CardConfigIni@i^0,w,c
  6426  0017D2  6ED9               	movwf	fsr2l,c
  6427  0017D4  3417               	rlcf	(CardConfigIni@i+1)^0,w,c
  6428  0017D6  6EDA               	movwf	fsr2h,c
  6429  0017D8  0E10               	movlw	low _MB301xx
  6430  0017DA  26D9               	addwf	fsr2l,f,c
  6431  0017DC  0E01               	movlw	high _MB301xx
  6432  0017DE  22DA               	addwfc	fsr2h,f,c
  6433  0017E0  C012  FFDE         	movff	??_CardConfigIni,postinc2
  6434  0017E4  C013  FFDD         	movff	??_CardConfigIni+1,postdec2
  6435                           
  6436                           ;RS232.c: 46:         }else if(!strcmp("Rev",Name)){
  6437  0017E8  EF20  F00C         	goto	l6688
  6438  0017EC                     l6684:
  6439  0017EC  0EF4               	movlw	low STR_32
  6440  0017EE  6E05               	movwf	strcmp@l^0,c
  6441  0017F0  0EFF               	movlw	high STR_32
  6442  0017F2  6E06               	movwf	(strcmp@l+1)^0,c
  6443  0017F4  C00A  F007         	movff	CardConfigIni@Name,strcmp@r
  6444  0017F8  C00B  F008         	movff	CardConfigIni@Name+1,strcmp@r+1
  6445  0017FC  EC08  F019         	call	_strcmp	;wreg free
  6446  001800  5005               	movf	?_strcmp^0,w,c
  6447  001802  1006               	iorwf	(?_strcmp+1)^0,w,c
  6448  001804  A4D8               	btfss	status,2,c
  6449  001806  EF07  F00C         	goto	u6891
  6450  00180A  EF09  F00C         	goto	u6890
  6451  00180E                     u6891:
  6452  00180E  EF20  F00C         	goto	l6688
  6453  001812                     u6890:
  6454  001812                     
  6455                           ;RS232.c: 47:             MB302xx[i] = readDataOdd *256 + readDataEven;
  6456  001812  5019               	movf	CardConfigIni@readDataEven^0,w,c
  6457  001814  C018  F012         	movff	CardConfigIni@readDataOdd,??_CardConfigIni
  6458  001818  6A13               	clrf	(??_CardConfigIni+1)^0,c
  6459  00181A  C012  F013         	movff	??_CardConfigIni,??_CardConfigIni+1
  6460  00181E  6A12               	clrf	??_CardConfigIni^0,c
  6461  001820  2612               	addwf	??_CardConfigIni^0,f,c
  6462  001822  0E00               	movlw	0
  6463  001824  2213               	addwfc	(??_CardConfigIni+1)^0,f,c
  6464  001826  90D8               	bcf	status,0,c
  6465  001828  3416               	rlcf	CardConfigIni@i^0,w,c
  6466  00182A  6ED9               	movwf	fsr2l,c
  6467  00182C  3417               	rlcf	(CardConfigIni@i+1)^0,w,c
  6468  00182E  6EDA               	movwf	fsr2h,c
  6469  001830  0EFA               	movlw	low _MB302xx
  6470  001832  26D9               	addwf	fsr2l,f,c
  6471  001834  0E00               	movlw	high _MB302xx
  6472  001836  22DA               	addwfc	fsr2h,f,c
  6473  001838  C012  FFDE         	movff	??_CardConfigIni,postinc2
  6474  00183C  C013  FFDD         	movff	??_CardConfigIni+1,postdec2
  6475  001840                     l6688:
  6476                           
  6477                           ;RS232.c: 51:     }
  6478  001840  4A16               	infsnz	CardConfigIni@i^0,f,c
  6479  001842  2A17               	incf	(CardConfigIni@i+1)^0,f,c
  6480  001844                     l6690:
  6481  001844  5010               	movf	CardConfigIni@NumBytes^0,w,c
  6482  001846  5C16               	subwf	CardConfigIni@i^0,w,c
  6483  001848  5017               	movf	(CardConfigIni@i+1)^0,w,c
  6484  00184A  0A80               	xorlw	128
  6485  00184C  6E12               	movwf	??_CardConfigIni^0,c
  6486  00184E  5011               	movf	(CardConfigIni@NumBytes+1)^0,w,c
  6487  001850  0A80               	xorlw	128
  6488  001852  5812               	subwfb	??_CardConfigIni^0,w,c
  6489  001854  A0D8               	btfss	status,0,c
  6490  001856  EF2F  F00C         	goto	u6901
  6491  00185A  EF31  F00C         	goto	u6900
  6492  00185E                     u6901:
  6493  00185E  EF50  F00B         	goto	l6652
  6494  001862                     u6900:
  6495  001862                     
  6496                           ;RS232.c: 53:     RetNum[j] = '\0';
  6497  001862  5014               	movf	CardConfigIni@j^0,w,c
  6498  001864  240C               	addwf	CardConfigIni@RetNum^0,w,c
  6499  001866  6ED9               	movwf	fsr2l,c
  6500  001868  5015               	movf	(CardConfigIni@j+1)^0,w,c
  6501  00186A  200D               	addwfc	(CardConfigIni@RetNum+1)^0,w,c
  6502  00186C  6EDA               	movwf	fsr2h,c
  6503  00186E  0E00               	movlw	0
  6504  001870  6EDF               	movwf	indf2,c
  6505  001872  0012               	return		;funcret
  6506  001874                     __end_of_CardConfigIni:
  6507                           	opt callstack 0
  6508                           
  6509 ;; *************** function _strcmp *****************
  6510 ;; Defined at:
  6511 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcmp.c"
  6512 ;; Parameters:    Size  Location     Type
  6513 ;;  l               2    4[COMRAM] PTR const unsigned char 
  6514 ;;		 -> STR_33(4), STR_31(5), STR_29(7), Command(16), 
  6515 ;;  r               2    6[COMRAM] PTR const unsigned char 
  6516 ;;		 -> STR_84(4), STR_82(5), STR_80(7), STR_78(2), 
  6517 ;;		 -> STR_76(6), STR_36(4), STR_35(5), STR_34(7), 
  6518 ;; Auto vars:     Size  Location     Type
  6519 ;;		None
  6520 ;; Return value:  Size  Location     Type
  6521 ;;                  2    4[COMRAM] int 
  6522 ;; Registers used:
  6523 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  6524 ;; Tracked objects:
  6525 ;;		On entry : 0/0
  6526 ;;		On exit  : 0/0
  6527 ;;		Unchanged: 0/0
  6528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6529 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6531 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6532 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6533 ;;Total ram usage:        5 bytes
  6534 ;; Hardware stack levels used:    1
  6535 ;; Hardware stack levels required when called:    4
  6536 ;; This function calls:
  6537 ;;		Nothing
  6538 ;; This function is called by:
  6539 ;;		_CardConfigIni
  6540 ;;		_ValidateCmd
  6541 ;; This function uses a non-reentrant model
  6542 ;;
  6543                           
  6544                           	psect	text14
  6545  003210                     __ptext14:
  6546                           	opt callstack 0
  6547  003210                     _strcmp:
  6548                           	opt callstack 25
  6549  003210  EF0E  F019         	goto	l6528
  6550  003214                     l6526:
  6551  003214  4A05               	infsnz	strcmp@l^0,f,c
  6552  003216  2A06               	incf	(strcmp@l+1)^0,f,c
  6553  003218  4A07               	infsnz	strcmp@r^0,f,c
  6554  00321A  2A08               	incf	(strcmp@r+1)^0,f,c
  6555  00321C                     l6528:
  6556  00321C  C007  FFF6         	movff	strcmp@r,tblptrl
  6557  003220  C008  FFF7         	movff	strcmp@r+1,tblptrh
  6558  003224                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6559  003224  6AF8               	clrf	tblptru,c
  6560  003226                     	endif
  6561  003226                     	if	0	;tblptru may be non-zero
  6562  003226                     	endif
  6563  003226  0008               	tblrd		*
  6564  003228  CFF5 F009          	movff	tablat,??_strcmp
  6565  00322C  C005  FFF6         	movff	strcmp@l,tblptrl
  6566  003230  C006  FFF7         	movff	strcmp@l+1,tblptrh
  6567  003234  0E00               	movlw	low (__mediumconst shr (0+16))
  6568  003236  6EF8               	movwf	tblptru,c
  6569  003238  0E0E               	movlw	(high __ramtop+-1)
  6570  00323A  64F7               	cpfsgt	tblptrh,c
  6571  00323C  D003               	bra	u6617
  6572  00323E  0008               	tblrd		*
  6573  003240  50F5               	movf	tablat,w,c
  6574  003242  D005               	bra	u6615
  6575  003244                     u6617:
  6576  003244  CFF6 FFE9          	movff	tblptrl,fsr0l
  6577  003248  CFF7 FFEA          	movff	tblptrh,fsr0h
  6578  00324C  50EF               	movf	indf0,w,c
  6579  00324E                     u6615:
  6580  00324E  1809               	xorwf	??_strcmp^0,w,c
  6581  003250  A4D8               	btfss	status,2,c
  6582  003252  EF2D  F019         	goto	u6611
  6583  003256  EF2F  F019         	goto	u6610
  6584  00325A                     u6611:
  6585  00325A  EF48  F019         	goto	l6532
  6586  00325E                     u6610:
  6587  00325E  C005  FFF6         	movff	strcmp@l,tblptrl
  6588  003262  C006  FFF7         	movff	strcmp@l+1,tblptrh
  6589  003266  0E00               	movlw	low (__mediumconst shr (0+16))
  6590  003268  6EF8               	movwf	tblptru,c
  6591  00326A  0E0E               	movlw	(high __ramtop+-1)
  6592  00326C  64F7               	cpfsgt	tblptrh,c
  6593  00326E  D003               	bra	u6627
  6594  003270  0008               	tblrd		*
  6595  003272  50F5               	movf	tablat,w,c
  6596  003274  D005               	bra	u6620
  6597  003276                     u6627:
  6598  003276  CFF6 FFE9          	movff	tblptrl,fsr0l
  6599  00327A  CFF7 FFEA          	movff	tblptrh,fsr0h
  6600  00327E  50EF               	movf	indf0,w,c
  6601  003280                     u6620:
  6602  003280  0900               	iorlw	0
  6603  003282  A4D8               	btfss	status,2,c
  6604  003284  EF46  F019         	goto	u6631
  6605  003288  EF48  F019         	goto	u6630
  6606  00328C                     u6631:
  6607  00328C  EF0A  F019         	goto	l6526
  6608  003290                     u6630:
  6609  003290                     l6532:
  6610  003290  C005  FFF6         	movff	strcmp@l,tblptrl
  6611  003294  C006  FFF7         	movff	strcmp@l+1,tblptrh
  6612  003298  0E00               	movlw	low (__mediumconst shr (0+16))
  6613  00329A  6EF8               	movwf	tblptru,c
  6614  00329C  0E0E               	movlw	(high __ramtop+-1)
  6615  00329E  64F7               	cpfsgt	tblptrh,c
  6616  0032A0  D003               	bra	u6647
  6617  0032A2  0008               	tblrd		*
  6618  0032A4  50F5               	movf	tablat,w,c
  6619  0032A6  D005               	bra	u6640
  6620  0032A8                     u6647:
  6621  0032A8  CFF6 FFE9          	movff	tblptrl,fsr0l
  6622  0032AC  CFF7 FFEA          	movff	tblptrh,fsr0h
  6623  0032B0  50EF               	movf	indf0,w,c
  6624  0032B2                     u6640:
  6625  0032B2  6E09               	movwf	??_strcmp^0,c
  6626  0032B4  C007  FFF6         	movff	strcmp@r,tblptrl
  6627  0032B8  C008  FFF7         	movff	strcmp@r+1,tblptrh
  6628  0032BC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6629  0032BC  6AF8               	clrf	tblptru,c
  6630  0032BE                     	endif
  6631  0032BE                     	if	0	;tblptru may be non-zero
  6632  0032BE                     	endif
  6633  0032BE  0008               	tblrd		*
  6634  0032C0  50F5               	movf	tablat,w,c
  6635  0032C2  5C09               	subwf	??_strcmp^0,w,c
  6636  0032C4  6E05               	movwf	?_strcmp^0,c
  6637  0032C6  6A06               	clrf	(?_strcmp+1)^0,c
  6638  0032C8  A0D8               	btfss	status,0,c
  6639  0032CA  0606               	decf	(?_strcmp+1)^0,f,c
  6640  0032CC  0012               	return		;funcret
  6641  0032CE                     __end_of_strcmp:
  6642                           	opt callstack 0
  6643                           
  6644 ;; *************** function _DATAEE_ReadByte *****************
  6645 ;; Defined at:
  6646 ;;		line 187 in file "mcc_generated_files/memory.c"
  6647 ;; Parameters:    Size  Location     Type
  6648 ;;  bAdd            2    4[COMRAM] unsigned short 
  6649 ;; Auto vars:     Size  Location     Type
  6650 ;;		None
  6651 ;; Return value:  Size  Location     Type
  6652 ;;                  1    wreg      unsigned char 
  6653 ;; Registers used:
  6654 ;;		wreg, status,2, status,0
  6655 ;; Tracked objects:
  6656 ;;		On entry : 0/0
  6657 ;;		On exit  : 0/0
  6658 ;;		Unchanged: 0/0
  6659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6660 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6663 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6664 ;;Total ram usage:        2 bytes
  6665 ;; Hardware stack levels used:    1
  6666 ;; Hardware stack levels required when called:    4
  6667 ;; This function calls:
  6668 ;;		Nothing
  6669 ;; This function is called by:
  6670 ;;		_CardConfigIni
  6671 ;; This function uses a non-reentrant model
  6672 ;;
  6673                           
  6674                           	psect	text15
  6675  003FA8                     __ptext15:
  6676                           	opt callstack 0
  6677  003FA8                     _DATAEE_ReadByte:
  6678                           	opt callstack 23
  6679  003FA8                     
  6680                           ;mcc_generated_files/memory.c: 187: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 188: {;mcc_generated_files/memory.c: 189:     NVMADRH = ((bAdd >> 8) & 
      +                          0x03);
  6681  003FA8  5006               	movf	(DATAEE_ReadByte@bAdd+1)^0,w,c
  6682  003FAA  0B03               	andlw	3
  6683  003FAC  6E7F               	movwf	127,c	;volatile
  6684  003FAE                     
  6685                           ;mcc_generated_files/memory.c: 190:     NVMADRL = (bAdd & 0xFF);
  6686  003FAE  C005  FF7E         	movff	DATAEE_ReadByte@bAdd,3966	;volatile
  6687  003FB2                     
  6688                           ;mcc_generated_files/memory.c: 191:     NVMCON1bits.NVMREG = 0;
  6689  003FB2  0E3F               	movlw	-193
  6690  003FB4  1681               	andwf	129,f,c	;volsfr
  6691  003FB6                     
  6692                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.RD = 1;
  6693  003FB6  8081               	bsf	129,0,c	;volsfr
  6694  003FB8                     
  6695                           ;mcc_generated_files/memory.c: 193:     __nop();
  6696  003FB8  F000               	nop	
  6697  003FBA                     
  6698                           ;mcc_generated_files/memory.c: 194:     __nop();
  6699  003FBA  F000               	nop	
  6700  003FBC                     
  6701                           ;mcc_generated_files/memory.c: 196:     return (NVMDAT);
  6702  003FBC  5080               	movf	128,w,c	;volatile
  6703  003FBE  0012               	return		;funcret
  6704  003FC0                     __end_of_DATAEE_ReadByte:
  6705                           	opt callstack 0
  6706                           
  6707 ;; *************** function _SYSTEM_Initialize *****************
  6708 ;; Defined at:
  6709 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6710 ;; Parameters:    Size  Location     Type
  6711 ;;		None
  6712 ;; Auto vars:     Size  Location     Type
  6713 ;;		None
  6714 ;; Return value:  Size  Location     Type
  6715 ;;                  1    wreg      void 
  6716 ;; Registers used:
  6717 ;;		wreg, status,2, status,0, cstack
  6718 ;; Tracked objects:
  6719 ;;		On entry : 0/0
  6720 ;;		On exit  : 0/0
  6721 ;;		Unchanged: 0/0
  6722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6727 ;;Total ram usage:        0 bytes
  6728 ;; Hardware stack levels used:    1
  6729 ;; Hardware stack levels required when called:    6
  6730 ;; This function calls:
  6731 ;;		_EUSART1_Initialize
  6732 ;;		_EUSART2_Initialize
  6733 ;;		_INTERRUPT_Initialize
  6734 ;;		_OSCILLATOR_Initialize
  6735 ;;		_PIN_MANAGER_Initialize
  6736 ;;		_PMD_Initialize
  6737 ;; This function is called by:
  6738 ;;		_main
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742                           	psect	text16
  6743  003F76                     __ptext16:
  6744                           	opt callstack 0
  6745  003F76                     _SYSTEM_Initialize:
  6746                           	opt callstack 24
  6747  003F76                     
  6748                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  6749  003F76  EC74  F020         	call	_INTERRUPT_Initialize	;wreg free
  6750  003F7A                     
  6751                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  6752  003F7A  ECAD  F01F         	call	_PMD_Initialize	;wreg free
  6753  003F7E                     
  6754                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  6755  003F7E  EC07  F01A         	call	_PIN_MANAGER_Initialize	;wreg free
  6756  003F82                     
  6757                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  6758  003F82  ECE0  F01F         	call	_OSCILLATOR_Initialize	;wreg free
  6759  003F86                     
  6760                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  6761  003F86  EC4E  F01A         	call	_EUSART1_Initialize	;wreg free
  6762  003F8A                     
  6763                           ;mcc_generated_files/mcc.c: 57:     EUSART2_Initialize();
  6764  003F8A  EC8E  F01A         	call	_EUSART2_Initialize	;wreg free
  6765  003F8E  0012               	return		;funcret
  6766  003F90                     __end_of_SYSTEM_Initialize:
  6767                           	opt callstack 0
  6768                           
  6769 ;; *************** function _PMD_Initialize *****************
  6770 ;; Defined at:
  6771 ;;		line 74 in file "mcc_generated_files/mcc.c"
  6772 ;; Parameters:    Size  Location     Type
  6773 ;;		None
  6774 ;; Auto vars:     Size  Location     Type
  6775 ;;		None
  6776 ;; Return value:  Size  Location     Type
  6777 ;;                  1    wreg      void 
  6778 ;; Registers used:
  6779 ;;		wreg, status,2
  6780 ;; Tracked objects:
  6781 ;;		On entry : 0/0
  6782 ;;		On exit  : 0/0
  6783 ;;		Unchanged: 0/0
  6784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6789 ;;Total ram usage:        0 bytes
  6790 ;; Hardware stack levels used:    1
  6791 ;; Hardware stack levels required when called:    4
  6792 ;; This function calls:
  6793 ;;		Nothing
  6794 ;; This function is called by:
  6795 ;;		_SYSTEM_Initialize
  6796 ;; This function uses a non-reentrant model
  6797 ;;
  6798                           
  6799                           	psect	text17
  6800  003F5A                     __ptext17:
  6801                           	opt callstack 0
  6802  003F5A                     _PMD_Initialize:
  6803                           	opt callstack 25
  6804  003F5A                     
  6805                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  6806  003F5A  0E00               	movlw	0
  6807  003F5C  010E               	movlb	14	; () banked
  6808  003F5E  6FE1               	movwf	225,b	;volatile
  6809                           
  6810                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  6811  003F60  0E00               	movlw	0
  6812  003F62  6FE2               	movwf	226,b	;volatile
  6813                           
  6814                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  6815  003F64  0E00               	movlw	0
  6816  003F66  6FE3               	movwf	227,b	;volatile
  6817                           
  6818                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  6819  003F68  0E00               	movlw	0
  6820  003F6A  6FE4               	movwf	228,b	;volatile
  6821                           
  6822                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  6823  003F6C  0E00               	movlw	0
  6824  003F6E  6FE5               	movwf	229,b	;volatile
  6825                           
  6826                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  6827  003F70  0E00               	movlw	0
  6828  003F72  6FE6               	movwf	230,b	;volatile
  6829  003F74                     
  6830                           ; BSR set to: 14
  6831  003F74  0012               	return		;funcret
  6832  003F76                     __end_of_PMD_Initialize:
  6833                           	opt callstack 0
  6834                           
  6835 ;; *************** function _PIN_MANAGER_Initialize *****************
  6836 ;; Defined at:
  6837 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6838 ;; Parameters:    Size  Location     Type
  6839 ;;		None
  6840 ;; Auto vars:     Size  Location     Type
  6841 ;;		None
  6842 ;; Return value:  Size  Location     Type
  6843 ;;                  1    wreg      void 
  6844 ;; Registers used:
  6845 ;;		wreg, status,2
  6846 ;; Tracked objects:
  6847 ;;		On entry : 0/0
  6848 ;;		On exit  : 0/0
  6849 ;;		Unchanged: 0/0
  6850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6855 ;;Total ram usage:        0 bytes
  6856 ;; Hardware stack levels used:    1
  6857 ;; Hardware stack levels required when called:    4
  6858 ;; This function calls:
  6859 ;;		Nothing
  6860 ;; This function is called by:
  6861 ;;		_SYSTEM_Initialize
  6862 ;; This function uses a non-reentrant model
  6863 ;;
  6864                           
  6865                           	psect	text18
  6866  00340E                     __ptext18:
  6867                           	opt callstack 0
  6868  00340E                     _PIN_MANAGER_Initialize:
  6869                           	opt callstack 25
  6870  00340E                     
  6871                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  6872  00340E  0E00               	movlw	0
  6873  003410  6E87               	movwf	135,c	;volatile
  6874                           
  6875                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  6876  003412  0E00               	movlw	0
  6877  003414  6E86               	movwf	134,c	;volatile
  6878                           
  6879                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  6880  003416  0E00               	movlw	0
  6881  003418  6E83               	movwf	131,c	;volatile
  6882                           
  6883                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  6884  00341A  0E00               	movlw	0
  6885  00341C  6E84               	movwf	132,c	;volatile
  6886                           
  6887                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  6888  00341E  0E00               	movlw	0
  6889  003420  6E85               	movwf	133,c	;volatile
  6890                           
  6891                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  6892  003422  0E07               	movlw	7
  6893  003424  6E8C               	movwf	140,c	;volatile
  6894                           
  6895                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x07;
  6896  003426  0E07               	movlw	7
  6897  003428  6E88               	movwf	136,c	;volatile
  6898                           
  6899                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  6900  00342A  0EBF               	movlw	191
  6901  00342C  6E89               	movwf	137,c	;volatile
  6902                           
  6903                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  6904  00342E  0EBF               	movlw	191
  6905  003430  6E8A               	movwf	138,c	;volatile
  6906                           
  6907                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  6908  003432  0EFE               	movlw	254
  6909  003434  6E8B               	movwf	139,c	;volatile
  6910  003436                     
  6911                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  6912  003436  010F               	movlb	15	; () banked
  6913  003438  6926               	setf	38,b	;volatile
  6914                           
  6915                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x3B;
  6916  00343A  0E3B               	movlw	59
  6917  00343C  6F21               	movwf	33,b	;volatile
  6918                           
  6919                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x37;
  6920  00343E  0E37               	movlw	55
  6921  003440  6F19               	movwf	25,b	;volatile
  6922                           
  6923                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  6924  003442  0E07               	movlw	7
  6925  003444  6F2E               	movwf	46,b	;volatile
  6926  003446                     
  6927                           ; BSR set to: 15
  6928                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  6929  003446  6911               	setf	17,b	;volatile
  6930                           
  6931                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  6932  003448  0E00               	movlw	0
  6933  00344A  6F25               	movwf	37,b	;volatile
  6934                           
  6935                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  6936  00344C  0E00               	movlw	0
  6937  00344E  6F2D               	movwf	45,b	;volatile
  6938                           
  6939                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  6940  003450  0E00               	movlw	0
  6941  003452  6F18               	movwf	24,b	;volatile
  6942                           
  6943                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  6944  003454  0E00               	movlw	0
  6945  003456  6F10               	movwf	16,b	;volatile
  6946                           
  6947                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  6948  003458  0E00               	movlw	0
  6949  00345A  6F20               	movwf	32,b	;volatile
  6950                           
  6951                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  6952  00345C  0E00               	movlw	0
  6953  00345E  6F2C               	movwf	44,b	;volatile
  6954                           
  6955                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  6956  003460  0E00               	movlw	0
  6957  003462  6F0F               	movwf	15,b	;volatile
  6958                           
  6959                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  6960  003464  0E00               	movlw	0
  6961  003466  6F17               	movwf	23,b	;volatile
  6962                           
  6963                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  6964  003468  0E00               	movlw	0
  6965  00346A  6F1F               	movwf	31,b	;volatile
  6966                           
  6967                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  6968  00346C  0E00               	movlw	0
  6969  00346E  6F24               	movwf	36,b	;volatile
  6970  003470                     
  6971                           ; BSR set to: 15
  6972                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  6973  003470  690E               	setf	14,b	;volatile
  6974  003472                     
  6975                           ; BSR set to: 15
  6976                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  6977  003472  6916               	setf	22,b	;volatile
  6978  003474                     
  6979                           ; BSR set to: 15
  6980                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  6981  003474  691E               	setf	30,b	;volatile
  6982  003476                     
  6983                           ; BSR set to: 15
  6984                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  6985  003476  6923               	setf	35,b	;volatile
  6986                           
  6987                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  6988  003478  0E07               	movlw	7
  6989  00347A  6F2B               	movwf	43,b	;volatile
  6990  00347C                     
  6991                           ; BSR set to: 15
  6992                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  6993  00347C  690D               	setf	13,b	;volatile
  6994  00347E                     
  6995                           ; BSR set to: 15
  6996                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  6997  00347E  6915               	setf	21,b	;volatile
  6998  003480                     
  6999                           ; BSR set to: 15
  7000                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  7001  003480  691D               	setf	29,b	;volatile
  7002  003482                     
  7003                           ; BSR set to: 15
  7004                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  7005  003482  6922               	setf	34,b	;volatile
  7006                           
  7007                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  7008  003484  0E0F               	movlw	15
  7009  003486  6F2A               	movwf	42,b	;volatile
  7010                           
  7011                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x17;
  7012  003488  0E17               	movlw	23
  7013  00348A  010E               	movlb	14	; () banked
  7014  00348C  6FB5               	movwf	181,b	;volatile
  7015                           
  7016                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x0B;
  7017  00348E  0E0B               	movlw	11
  7018  003490  6FF5               	movwf	245,b	;volatile
  7019                           
  7020                           ;mcc_generated_files/pin_manager.c: 129:     RC6PPS = 0x09;
  7021  003492  0E09               	movlw	9
  7022  003494  6FFD               	movwf	253,b	;volatile
  7023                           
  7024                           ;mcc_generated_files/pin_manager.c: 130:     RX2PPS = 0x0F;
  7025  003496  0E0F               	movlw	15
  7026  003498  6F8D               	movwf	141,b	;volatile
  7027  00349A                     
  7028                           ; BSR set to: 14
  7029  00349A  0012               	return		;funcret
  7030  00349C                     __end_of_PIN_MANAGER_Initialize:
  7031                           	opt callstack 0
  7032                           
  7033 ;; *************** function _OSCILLATOR_Initialize *****************
  7034 ;; Defined at:
  7035 ;;		line 60 in file "mcc_generated_files/mcc.c"
  7036 ;; Parameters:    Size  Location     Type
  7037 ;;		None
  7038 ;; Auto vars:     Size  Location     Type
  7039 ;;		None
  7040 ;; Return value:  Size  Location     Type
  7041 ;;                  1    wreg      void 
  7042 ;; Registers used:
  7043 ;;		wreg, status,2
  7044 ;; Tracked objects:
  7045 ;;		On entry : 0/0
  7046 ;;		On exit  : 0/0
  7047 ;;		Unchanged: 0/0
  7048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7053 ;;Total ram usage:        0 bytes
  7054 ;; Hardware stack levels used:    1
  7055 ;; Hardware stack levels required when called:    4
  7056 ;; This function calls:
  7057 ;;		Nothing
  7058 ;; This function is called by:
  7059 ;;		_SYSTEM_Initialize
  7060 ;; This function uses a non-reentrant model
  7061 ;;
  7062                           
  7063                           	psect	text19
  7064  003FC0                     __ptext19:
  7065                           	opt callstack 0
  7066  003FC0                     _OSCILLATOR_Initialize:
  7067                           	opt callstack 25
  7068  003FC0                     
  7069                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
  7070  003FC0  0E60               	movlw	96
  7071  003FC2  010E               	movlb	14	; () banked
  7072  003FC4  6FD8               	movwf	216,b	;volatile
  7073                           
  7074                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  7075  003FC6  0E00               	movlw	0
  7076  003FC8  6FDA               	movwf	218,b	;volatile
  7077                           
  7078                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  7079  003FCA  0E00               	movlw	0
  7080  003FCC  6FDC               	movwf	220,b	;volatile
  7081                           
  7082                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x06;
  7083  003FCE  0E06               	movlw	6
  7084  003FD0  6FDE               	movwf	222,b	;volatile
  7085                           
  7086                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  7087  003FD2  0E00               	movlw	0
  7088  003FD4  6FDD               	movwf	221,b	;volatile
  7089  003FD6                     
  7090                           ; BSR set to: 14
  7091  003FD6  0012               	return		;funcret
  7092  003FD8                     __end_of_OSCILLATOR_Initialize:
  7093                           	opt callstack 0
  7094                           
  7095 ;; *************** function _INTERRUPT_Initialize *****************
  7096 ;; Defined at:
  7097 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7098 ;; Parameters:    Size  Location     Type
  7099 ;;		None
  7100 ;; Auto vars:     Size  Location     Type
  7101 ;;		None
  7102 ;; Return value:  Size  Location     Type
  7103 ;;                  1    wreg      void 
  7104 ;; Registers used:
  7105 ;;		None
  7106 ;; Tracked objects:
  7107 ;;		On entry : 0/0
  7108 ;;		On exit  : 0/0
  7109 ;;		Unchanged: 0/0
  7110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7115 ;;Total ram usage:        0 bytes
  7116 ;; Hardware stack levels used:    1
  7117 ;; Hardware stack levels required when called:    4
  7118 ;; This function calls:
  7119 ;;		Nothing
  7120 ;; This function is called by:
  7121 ;;		_SYSTEM_Initialize
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125                           	psect	text20
  7126  0040E8                     __ptext20:
  7127                           	opt callstack 0
  7128  0040E8                     _INTERRUPT_Initialize:
  7129                           	opt callstack 25
  7130  0040E8                     
  7131                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  7132  0040E8  9AF2               	bcf	242,5,c	;volatile
  7133  0040EA  0012               	return		;funcret
  7134  0040EC                     __end_of_INTERRUPT_Initialize:
  7135                           	opt callstack 0
  7136                           
  7137 ;; *************** function _EUSART2_Initialize *****************
  7138 ;; Defined at:
  7139 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  7140 ;; Parameters:    Size  Location     Type
  7141 ;;		None
  7142 ;; Auto vars:     Size  Location     Type
  7143 ;;		None
  7144 ;; Return value:  Size  Location     Type
  7145 ;;                  1    wreg      void 
  7146 ;; Registers used:
  7147 ;;		wreg, status,2, status,0, cstack
  7148 ;; Tracked objects:
  7149 ;;		On entry : 0/0
  7150 ;;		On exit  : 0/0
  7151 ;;		Unchanged: 0/0
  7152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7157 ;;Total ram usage:        0 bytes
  7158 ;; Hardware stack levels used:    1
  7159 ;; Hardware stack levels required when called:    5
  7160 ;; This function calls:
  7161 ;;		_EUSART2_SetErrorHandler
  7162 ;;		_EUSART2_SetFramingErrorHandler
  7163 ;;		_EUSART2_SetOverrunErrorHandler
  7164 ;;		_EUSART2_SetRxInterruptHandler
  7165 ;;		_EUSART2_SetTxInterruptHandler
  7166 ;; This function is called by:
  7167 ;;		_SYSTEM_Initialize
  7168 ;; This function uses a non-reentrant model
  7169 ;;
  7170                           
  7171                           	psect	text21
  7172  00351C                     __ptext21:
  7173                           	opt callstack 0
  7174  00351C                     _EUSART2_Initialize:
  7175                           	opt callstack 24
  7176  00351C                     
  7177                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  7178  00351C  010E               	movlb	14	; () banked
  7179  00351E  9FC5               	bcf	197,7,b	;volatile
  7180  003520                     
  7181                           ; BSR set to: 14
  7182                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  7183  003520  0E90               	movlw	low _EUSART2_Receive_ISR
  7184  003522  6E05               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler^0,c
  7185  003524  0E30               	movlw	high _EUSART2_Receive_ISR
  7186  003526  6E06               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)^0,c
  7187  003528  EC2F  F020         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  7188  00352C                     
  7189                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  7190  00352C  010E               	movlb	14	; () banked
  7191  00352E  9DC5               	bcf	197,6,b	;volatile
  7192                           
  7193                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  7194  003530  0E5C               	movlw	low _EUSART2_Transmit_ISR
  7195  003532  6E05               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler^0,c
  7196  003534  0E3B               	movlw	high _EUSART2_Transmit_ISR
  7197  003536  6E06               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)^0,c
  7198  003538  EC2A  F020         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  7199  00353C                     
  7200                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
  7201  00353C  0E08               	movlw	8
  7202  00353E  010E               	movlb	14	; () banked
  7203  003540  6F9F               	movwf	159,b	;volatile
  7204  003542                     
  7205                           ; BSR set to: 14
  7206                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
  7207  003542  0E90               	movlw	144
  7208  003544  6F9D               	movwf	157,b	;volatile
  7209  003546                     
  7210                           ; BSR set to: 14
  7211                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
  7212  003546  0E24               	movlw	36
  7213  003548  6F9E               	movwf	158,b	;volatile
  7214  00354A                     
  7215                           ; BSR set to: 14
  7216                           ;mcc_generated_files/eusart2.c: 108:     SP2BRGL = 0xA0;
  7217  00354A  0EA0               	movlw	160
  7218  00354C  6F9B               	movwf	155,b	;volatile
  7219  00354E                     
  7220                           ; BSR set to: 14
  7221                           ;mcc_generated_files/eusart2.c: 112:     SP2BRGH = 0x01;
  7222  00354E  0E01               	movlw	1
  7223  003550  6F9C               	movwf	156,b	;volatile
  7224  003552                     
  7225                           ; BSR set to: 14
  7226                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  7227  003552  0EEC               	movlw	low _EUSART2_DefaultFramingErrorHandler
  7228  003554  6E05               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  7229  003556  0E40               	movlw	high _EUSART2_DefaultFramingErrorHandler
  7230  003558  6E06               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  7231  00355A  EC39  F020         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  7232  00355E                     
  7233                           ;mcc_generated_files/eusart2.c: 116:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  7234  00355E  0EC2               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  7235  003560  6E05               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  7236  003562  0E40               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  7237  003564  6E06               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  7238  003566  EC34  F020         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  7239  00356A                     
  7240                           ;mcc_generated_files/eusart2.c: 117:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  7241  00356A  0ED6               	movlw	low _EUSART2_DefaultErrorHandler
  7242  00356C  6E05               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  7243  00356E  0E40               	movlw	high _EUSART2_DefaultErrorHandler
  7244  003570  6E06               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  7245  003572  EC3E  F020         	call	_EUSART2_SetErrorHandler	;wreg free
  7246                           
  7247                           ;mcc_generated_files/eusart2.c: 119:     eusart2RxLastError.status = 0;
  7248  003576  0E00               	movlw	0
  7249  003578  0100               	movlb	0	; () banked
  7250  00357A  6FDD               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  7251                           
  7252                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxHead = 0;
  7253  00357C  0E00               	movlw	0
  7254  00357E  6FE1               	movwf	_eusart2TxHead& (0+255),b	;volatile
  7255                           
  7256                           ;mcc_generated_files/eusart2.c: 123:     eusart2TxTail = 0;
  7257  003580  0E00               	movlw	0
  7258  003582  6FE0               	movwf	_eusart2TxTail& (0+255),b	;volatile
  7259                           
  7260                           ;mcc_generated_files/eusart2.c: 124:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  7261  003584  0E20               	movlw	32
  7262  003586  6FFF               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  7263                           
  7264                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxHead = 0;
  7265  003588  0E00               	movlw	0
  7266  00358A  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
  7267                           
  7268                           ;mcc_generated_files/eusart2.c: 127:     eusart2RxTail = 0;
  7269  00358C  0E00               	movlw	0
  7270  00358E  6FDF               	movwf	_eusart2RxTail& (0+255),b	;volatile
  7271                           
  7272                           ;mcc_generated_files/eusart2.c: 128:     eusart2RxCount = 0;
  7273  003590  0E00               	movlw	0
  7274  003592  6FDE               	movwf	_eusart2RxCount& (0+255),b	;volatile
  7275  003594                     
  7276                           ; BSR set to: 0
  7277                           ;mcc_generated_files/eusart2.c: 131:     PIE3bits.RC2IE = 1;
  7278  003594  010E               	movlb	14	; () banked
  7279  003596  8FC5               	bsf	197,7,b	;volatile
  7280  003598                     
  7281                           ; BSR set to: 14
  7282  003598  0012               	return		;funcret
  7283  00359A                     __end_of_EUSART2_Initialize:
  7284                           	opt callstack 0
  7285                           
  7286 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  7287 ;; Defined at:
  7288 ;;		line 287 in file "mcc_generated_files/eusart2.c"
  7289 ;; Parameters:    Size  Location     Type
  7290 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7291 ;;		 -> EUSART2_Transmit_ISR(1), 
  7292 ;; Auto vars:     Size  Location     Type
  7293 ;;		None
  7294 ;; Return value:  Size  Location     Type
  7295 ;;                  1    wreg      void 
  7296 ;; Registers used:
  7297 ;;		wreg, status,2, status,0
  7298 ;; Tracked objects:
  7299 ;;		On entry : 0/0
  7300 ;;		On exit  : 0/0
  7301 ;;		Unchanged: 0/0
  7302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7303 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7306 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7307 ;;Total ram usage:        2 bytes
  7308 ;; Hardware stack levels used:    1
  7309 ;; Hardware stack levels required when called:    4
  7310 ;; This function calls:
  7311 ;;		Nothing
  7312 ;; This function is called by:
  7313 ;;		_EUSART2_Initialize
  7314 ;; This function uses a non-reentrant model
  7315 ;;
  7316                           
  7317                           	psect	text22
  7318  004054                     __ptext22:
  7319                           	opt callstack 0
  7320  004054                     _EUSART2_SetTxInterruptHandler:
  7321                           	opt callstack 24
  7322  004054                     
  7323                           ;mcc_generated_files/eusart2.c: 288:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  7324  004054  C005  F0FC         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  7325  004058  C006  F0FD         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  7326  00405C  0012               	return		;funcret
  7327  00405E                     __end_of_EUSART2_SetTxInterruptHandler:
  7328                           	opt callstack 0
  7329                           
  7330 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  7331 ;; Defined at:
  7332 ;;		line 291 in file "mcc_generated_files/eusart2.c"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7335 ;;		 -> EUSART2_Receive_ISR(1), 
  7336 ;; Auto vars:     Size  Location     Type
  7337 ;;		None
  7338 ;; Return value:  Size  Location     Type
  7339 ;;                  1    wreg      void 
  7340 ;; Registers used:
  7341 ;;		wreg, status,2, status,0
  7342 ;; Tracked objects:
  7343 ;;		On entry : 0/0
  7344 ;;		On exit  : 0/0
  7345 ;;		Unchanged: 0/0
  7346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7350 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7351 ;;Total ram usage:        2 bytes
  7352 ;; Hardware stack levels used:    1
  7353 ;; Hardware stack levels required when called:    4
  7354 ;; This function calls:
  7355 ;;		Nothing
  7356 ;; This function is called by:
  7357 ;;		_EUSART2_Initialize
  7358 ;; This function uses a non-reentrant model
  7359 ;;
  7360                           
  7361                           	psect	text23
  7362  00405E                     __ptext23:
  7363                           	opt callstack 0
  7364  00405E                     _EUSART2_SetRxInterruptHandler:
  7365                           	opt callstack 24
  7366  00405E                     
  7367                           ;mcc_generated_files/eusart2.c: 292:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  7368  00405E  C005  F1FA         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  7369  004062  C006  F1FB         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  7370  004066  0012               	return		;funcret
  7371  004068                     __end_of_EUSART2_SetRxInterruptHandler:
  7372                           	opt callstack 0
  7373                           
  7374 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  7375 ;; Defined at:
  7376 ;;		line 279 in file "mcc_generated_files/eusart2.c"
  7377 ;; Parameters:    Size  Location     Type
  7378 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7379 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  7380 ;; Auto vars:     Size  Location     Type
  7381 ;;		None
  7382 ;; Return value:  Size  Location     Type
  7383 ;;                  1    wreg      void 
  7384 ;; Registers used:
  7385 ;;		wreg, status,2, status,0
  7386 ;; Tracked objects:
  7387 ;;		On entry : 0/0
  7388 ;;		On exit  : 0/0
  7389 ;;		Unchanged: 0/0
  7390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7391 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7394 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7395 ;;Total ram usage:        2 bytes
  7396 ;; Hardware stack levels used:    1
  7397 ;; Hardware stack levels required when called:    4
  7398 ;; This function calls:
  7399 ;;		Nothing
  7400 ;; This function is called by:
  7401 ;;		_EUSART2_Initialize
  7402 ;; This function uses a non-reentrant model
  7403 ;;
  7404                           
  7405                           	psect	text24
  7406  004068                     __ptext24:
  7407                           	opt callstack 0
  7408  004068                     _EUSART2_SetOverrunErrorHandler:
  7409                           	opt callstack 24
  7410  004068                     
  7411                           ;mcc_generated_files/eusart2.c: 280:     EUSART2_OverrunErrorHandler = interruptHandler;
  7412  004068  C005  F1F2         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  7413  00406C  C006  F1F3         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  7414  004070  0012               	return		;funcret
  7415  004072                     __end_of_EUSART2_SetOverrunErrorHandler:
  7416                           	opt callstack 0
  7417                           
  7418 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  7419 ;; Defined at:
  7420 ;;		line 275 in file "mcc_generated_files/eusart2.c"
  7421 ;; Parameters:    Size  Location     Type
  7422 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7423 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  7424 ;; Auto vars:     Size  Location     Type
  7425 ;;		None
  7426 ;; Return value:  Size  Location     Type
  7427 ;;                  1    wreg      void 
  7428 ;; Registers used:
  7429 ;;		wreg, status,2, status,0
  7430 ;; Tracked objects:
  7431 ;;		On entry : 0/0
  7432 ;;		On exit  : 0/0
  7433 ;;		Unchanged: 0/0
  7434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7435 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7438 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7439 ;;Total ram usage:        2 bytes
  7440 ;; Hardware stack levels used:    1
  7441 ;; Hardware stack levels required when called:    4
  7442 ;; This function calls:
  7443 ;;		Nothing
  7444 ;; This function is called by:
  7445 ;;		_EUSART2_Initialize
  7446 ;; This function uses a non-reentrant model
  7447 ;;
  7448                           
  7449                           	psect	text25
  7450  004072                     __ptext25:
  7451                           	opt callstack 0
  7452  004072                     _EUSART2_SetFramingErrorHandler:
  7453                           	opt callstack 24
  7454  004072                     
  7455                           ;mcc_generated_files/eusart2.c: 276:     EUSART2_FramingErrorHandler = interruptHandler;
  7456  004072  C005  F1F4         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  7457  004076  C006  F1F5         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  7458  00407A  0012               	return		;funcret
  7459  00407C                     __end_of_EUSART2_SetFramingErrorHandler:
  7460                           	opt callstack 0
  7461                           
  7462 ;; *************** function _EUSART2_SetErrorHandler *****************
  7463 ;; Defined at:
  7464 ;;		line 283 in file "mcc_generated_files/eusart2.c"
  7465 ;; Parameters:    Size  Location     Type
  7466 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7467 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  7468 ;; Auto vars:     Size  Location     Type
  7469 ;;		None
  7470 ;; Return value:  Size  Location     Type
  7471 ;;                  1    wreg      void 
  7472 ;; Registers used:
  7473 ;;		wreg, status,2, status,0
  7474 ;; Tracked objects:
  7475 ;;		On entry : 0/0
  7476 ;;		On exit  : 0/0
  7477 ;;		Unchanged: 0/0
  7478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7479 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7482 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7483 ;;Total ram usage:        2 bytes
  7484 ;; Hardware stack levels used:    1
  7485 ;; Hardware stack levels required when called:    4
  7486 ;; This function calls:
  7487 ;;		Nothing
  7488 ;; This function is called by:
  7489 ;;		_EUSART2_Initialize
  7490 ;; This function uses a non-reentrant model
  7491 ;;
  7492                           
  7493                           	psect	text26
  7494  00407C                     __ptext26:
  7495                           	opt callstack 0
  7496  00407C                     _EUSART2_SetErrorHandler:
  7497                           	opt callstack 24
  7498  00407C                     
  7499                           ;mcc_generated_files/eusart2.c: 284:     EUSART2_ErrorHandler = interruptHandler;
  7500  00407C  C005  F1F0         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  7501  004080  C006  F1F1         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  7502  004084  0012               	return		;funcret
  7503  004086                     __end_of_EUSART2_SetErrorHandler:
  7504                           	opt callstack 0
  7505                           
  7506 ;; *************** function _EUSART1_Initialize *****************
  7507 ;; Defined at:
  7508 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  7509 ;; Parameters:    Size  Location     Type
  7510 ;;		None
  7511 ;; Auto vars:     Size  Location     Type
  7512 ;;		None
  7513 ;; Return value:  Size  Location     Type
  7514 ;;                  1    wreg      void 
  7515 ;; Registers used:
  7516 ;;		wreg, status,2, status,0, cstack
  7517 ;; Tracked objects:
  7518 ;;		On entry : 0/0
  7519 ;;		On exit  : 0/0
  7520 ;;		Unchanged: 0/0
  7521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7526 ;;Total ram usage:        0 bytes
  7527 ;; Hardware stack levels used:    1
  7528 ;; Hardware stack levels required when called:    5
  7529 ;; This function calls:
  7530 ;;		_EUSART1_SetErrorHandler
  7531 ;;		_EUSART1_SetFramingErrorHandler
  7532 ;;		_EUSART1_SetOverrunErrorHandler
  7533 ;;		_EUSART1_SetRxInterruptHandler
  7534 ;;		_EUSART1_SetTxInterruptHandler
  7535 ;; This function is called by:
  7536 ;;		_SYSTEM_Initialize
  7537 ;; This function uses a non-reentrant model
  7538 ;;
  7539                           
  7540                           	psect	text27
  7541  00349C                     __ptext27:
  7542                           	opt callstack 0
  7543  00349C                     _EUSART1_Initialize:
  7544                           	opt callstack 24
  7545  00349C                     
  7546                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  7547  00349C  010E               	movlb	14	; () banked
  7548  00349E  9BC5               	bcf	197,5,b	;volatile
  7549  0034A0                     
  7550                           ; BSR set to: 14
  7551                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  7552  0034A0  0E50               	movlw	low _EUSART1_Receive_ISR
  7553  0034A2  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  7554  0034A4  0E31               	movlw	high _EUSART1_Receive_ISR
  7555  0034A6  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  7556  0034A8  EC48  F020         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  7557  0034AC                     
  7558                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  7559  0034AC  010E               	movlb	14	; () banked
  7560  0034AE  99C5               	bcf	197,4,b	;volatile
  7561                           
  7562                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  7563  0034B0  0E2C               	movlw	low _EUSART1_Transmit_ISR
  7564  0034B2  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  7565  0034B4  0E3C               	movlw	high _EUSART1_Transmit_ISR
  7566  0034B6  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  7567  0034B8  EC43  F020         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  7568  0034BC                     
  7569                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  7570  0034BC  0E08               	movlw	8
  7571  0034BE  6E9F               	movwf	159,c	;volatile
  7572  0034C0                     
  7573                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  7574  0034C0  0E90               	movlw	144
  7575  0034C2  6E9D               	movwf	157,c	;volatile
  7576  0034C4                     
  7577                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  7578  0034C4  0E24               	movlw	36
  7579  0034C6  6E9E               	movwf	158,c	;volatile
  7580  0034C8                     
  7581                           ;mcc_generated_files/eusart1.c: 108:     SP1BRGL = 0xA0;
  7582  0034C8  0EA0               	movlw	160
  7583  0034CA  6E9B               	movwf	155,c	;volatile
  7584  0034CC                     
  7585                           ;mcc_generated_files/eusart1.c: 111:     SP1BRGH = 0x03;
  7586  0034CC  0E03               	movlw	3
  7587  0034CE  6E9C               	movwf	156,c	;volatile
  7588  0034D0                     
  7589                           ;mcc_generated_files/eusart1.c: 112:     SP1BRGH = 0x01;
  7590  0034D0  0E01               	movlw	1
  7591  0034D2  6E9C               	movwf	156,c	;volatile
  7592                           
  7593                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  7594  0034D4  0EEE               	movlw	low _EUSART1_DefaultFramingErrorHandler
  7595  0034D6  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  7596  0034D8  0E40               	movlw	high _EUSART1_DefaultFramingErrorHandler
  7597  0034DA  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  7598  0034DC  EC52  F020         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  7599                           
  7600                           ;mcc_generated_files/eusart1.c: 116:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  7601  0034E0  0EDC               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  7602  0034E2  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  7603  0034E4  0E40               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  7604  0034E6  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  7605  0034E8  EC4D  F020         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  7606                           
  7607                           ;mcc_generated_files/eusart1.c: 117:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  7608  0034EC  0EE2               	movlw	low _EUSART1_DefaultErrorHandler
  7609  0034EE  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  7610  0034F0  0E40               	movlw	high _EUSART1_DefaultErrorHandler
  7611  0034F2  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  7612  0034F4  EC57  F020         	call	_EUSART1_SetErrorHandler	;wreg free
  7613  0034F8                     
  7614                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  7615  0034F8  0E00               	movlw	0
  7616  0034FA  0100               	movlb	0	; () banked
  7617  0034FC  6FD8               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  7618  0034FE                     
  7619                           ; BSR set to: 0
  7620                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxHead = 0;
  7621  0034FE  0E00               	movlw	0
  7622  003500  6FDC               	movwf	_eusart1TxHead& (0+255),b	;volatile
  7623  003502                     
  7624                           ; BSR set to: 0
  7625                           ;mcc_generated_files/eusart1.c: 123:     eusart1TxTail = 0;
  7626  003502  0E00               	movlw	0
  7627  003504  6FDB               	movwf	_eusart1TxTail& (0+255),b	;volatile
  7628  003506                     
  7629                           ; BSR set to: 0
  7630                           ;mcc_generated_files/eusart1.c: 124:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  7631  003506  0E10               	movlw	16
  7632  003508  6FFE               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  7633  00350A                     
  7634                           ; BSR set to: 0
  7635                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxHead = 0;
  7636  00350A  0E00               	movlw	0
  7637  00350C  6E59               	movwf	_eusart1RxHead^0,c	;volatile
  7638  00350E                     
  7639                           ; BSR set to: 0
  7640                           ;mcc_generated_files/eusart1.c: 127:     eusart1RxTail = 0;
  7641  00350E  0E00               	movlw	0
  7642  003510  6FDA               	movwf	_eusart1RxTail& (0+255),b	;volatile
  7643  003512                     
  7644                           ; BSR set to: 0
  7645                           ;mcc_generated_files/eusart1.c: 128:     eusart1RxCount = 0;
  7646  003512  0E00               	movlw	0
  7647  003514  6FD9               	movwf	_eusart1RxCount& (0+255),b	;volatile
  7648  003516                     
  7649                           ; BSR set to: 0
  7650                           ;mcc_generated_files/eusart1.c: 131:     PIE3bits.RC1IE = 1;
  7651  003516  010E               	movlb	14	; () banked
  7652  003518  8BC5               	bsf	197,5,b	;volatile
  7653  00351A                     
  7654                           ; BSR set to: 14
  7655  00351A  0012               	return		;funcret
  7656  00351C                     __end_of_EUSART1_Initialize:
  7657                           	opt callstack 0
  7658                           
  7659 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  7660 ;; Defined at:
  7661 ;;		line 278 in file "mcc_generated_files/eusart1.c"
  7662 ;; Parameters:    Size  Location     Type
  7663 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7664 ;;		 -> EUSART1_Transmit_ISR(1), 
  7665 ;; Auto vars:     Size  Location     Type
  7666 ;;		None
  7667 ;; Return value:  Size  Location     Type
  7668 ;;                  1    wreg      void 
  7669 ;; Registers used:
  7670 ;;		wreg, status,2, status,0
  7671 ;; Tracked objects:
  7672 ;;		On entry : 0/0
  7673 ;;		On exit  : 0/0
  7674 ;;		Unchanged: 0/0
  7675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7676 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7679 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7680 ;;Total ram usage:        2 bytes
  7681 ;; Hardware stack levels used:    1
  7682 ;; Hardware stack levels required when called:    4
  7683 ;; This function calls:
  7684 ;;		Nothing
  7685 ;; This function is called by:
  7686 ;;		_EUSART1_Initialize
  7687 ;; This function uses a non-reentrant model
  7688 ;;
  7689                           
  7690                           	psect	text28
  7691  004086                     __ptext28:
  7692                           	opt callstack 0
  7693  004086                     _EUSART1_SetTxInterruptHandler:
  7694                           	opt callstack 24
  7695  004086                     
  7696                           ;mcc_generated_files/eusart1.c: 279:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  7697  004086  C005  F1F8         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  7698  00408A  C006  F1F9         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  7699  00408E  0012               	return		;funcret
  7700  004090                     __end_of_EUSART1_SetTxInterruptHandler:
  7701                           	opt callstack 0
  7702                           
  7703 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  7704 ;; Defined at:
  7705 ;;		line 282 in file "mcc_generated_files/eusart1.c"
  7706 ;; Parameters:    Size  Location     Type
  7707 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7708 ;;		 -> EUSART1_Receive_ISR(1), 
  7709 ;; Auto vars:     Size  Location     Type
  7710 ;;		None
  7711 ;; Return value:  Size  Location     Type
  7712 ;;                  1    wreg      void 
  7713 ;; Registers used:
  7714 ;;		wreg, status,2, status,0
  7715 ;; Tracked objects:
  7716 ;;		On entry : 0/0
  7717 ;;		On exit  : 0/0
  7718 ;;		Unchanged: 0/0
  7719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7720 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7723 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7724 ;;Total ram usage:        2 bytes
  7725 ;; Hardware stack levels used:    1
  7726 ;; Hardware stack levels required when called:    4
  7727 ;; This function calls:
  7728 ;;		Nothing
  7729 ;; This function is called by:
  7730 ;;		_EUSART1_Initialize
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           	psect	text29
  7735  004090                     __ptext29:
  7736                           	opt callstack 0
  7737  004090                     _EUSART1_SetRxInterruptHandler:
  7738                           	opt callstack 24
  7739  004090                     
  7740                           ;mcc_generated_files/eusart1.c: 283:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  7741  004090  C005  F1F6         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  7742  004094  C006  F1F7         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  7743  004098  0012               	return		;funcret
  7744  00409A                     __end_of_EUSART1_SetRxInterruptHandler:
  7745                           	opt callstack 0
  7746                           
  7747 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  7748 ;; Defined at:
  7749 ;;		line 270 in file "mcc_generated_files/eusart1.c"
  7750 ;; Parameters:    Size  Location     Type
  7751 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7752 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  7753 ;; Auto vars:     Size  Location     Type
  7754 ;;		None
  7755 ;; Return value:  Size  Location     Type
  7756 ;;                  1    wreg      void 
  7757 ;; Registers used:
  7758 ;;		wreg, status,2, status,0
  7759 ;; Tracked objects:
  7760 ;;		On entry : 0/0
  7761 ;;		On exit  : 0/0
  7762 ;;		Unchanged: 0/0
  7763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7764 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7767 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7768 ;;Total ram usage:        2 bytes
  7769 ;; Hardware stack levels used:    1
  7770 ;; Hardware stack levels required when called:    4
  7771 ;; This function calls:
  7772 ;;		Nothing
  7773 ;; This function is called by:
  7774 ;;		_EUSART1_Initialize
  7775 ;; This function uses a non-reentrant model
  7776 ;;
  7777                           
  7778                           	psect	text30
  7779  00409A                     __ptext30:
  7780                           	opt callstack 0
  7781  00409A                     _EUSART1_SetOverrunErrorHandler:
  7782                           	opt callstack 24
  7783  00409A                     
  7784                           ;mcc_generated_files/eusart1.c: 271:     EUSART1_OverrunErrorHandler = interruptHandler;
  7785  00409A  C005  F1EC         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  7786  00409E  C006  F1ED         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  7787  0040A2  0012               	return		;funcret
  7788  0040A4                     __end_of_EUSART1_SetOverrunErrorHandler:
  7789                           	opt callstack 0
  7790                           
  7791 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  7792 ;; Defined at:
  7793 ;;		line 266 in file "mcc_generated_files/eusart1.c"
  7794 ;; Parameters:    Size  Location     Type
  7795 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7796 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  7797 ;; Auto vars:     Size  Location     Type
  7798 ;;		None
  7799 ;; Return value:  Size  Location     Type
  7800 ;;                  1    wreg      void 
  7801 ;; Registers used:
  7802 ;;		wreg, status,2, status,0
  7803 ;; Tracked objects:
  7804 ;;		On entry : 0/0
  7805 ;;		On exit  : 0/0
  7806 ;;		Unchanged: 0/0
  7807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7808 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7811 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7812 ;;Total ram usage:        2 bytes
  7813 ;; Hardware stack levels used:    1
  7814 ;; Hardware stack levels required when called:    4
  7815 ;; This function calls:
  7816 ;;		Nothing
  7817 ;; This function is called by:
  7818 ;;		_EUSART1_Initialize
  7819 ;; This function uses a non-reentrant model
  7820 ;;
  7821                           
  7822                           	psect	text31
  7823  0040A4                     __ptext31:
  7824                           	opt callstack 0
  7825  0040A4                     _EUSART1_SetFramingErrorHandler:
  7826                           	opt callstack 24
  7827  0040A4                     
  7828                           ;mcc_generated_files/eusart1.c: 267:     EUSART1_FramingErrorHandler = interruptHandler;
  7829  0040A4  C005  F1EE         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  7830  0040A8  C006  F1EF         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  7831  0040AC  0012               	return		;funcret
  7832  0040AE                     __end_of_EUSART1_SetFramingErrorHandler:
  7833                           	opt callstack 0
  7834                           
  7835 ;; *************** function _EUSART1_SetErrorHandler *****************
  7836 ;; Defined at:
  7837 ;;		line 274 in file "mcc_generated_files/eusart1.c"
  7838 ;; Parameters:    Size  Location     Type
  7839 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7840 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  7841 ;; Auto vars:     Size  Location     Type
  7842 ;;		None
  7843 ;; Return value:  Size  Location     Type
  7844 ;;                  1    wreg      void 
  7845 ;; Registers used:
  7846 ;;		wreg, status,2, status,0
  7847 ;; Tracked objects:
  7848 ;;		On entry : 0/0
  7849 ;;		On exit  : 0/0
  7850 ;;		Unchanged: 0/0
  7851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7852 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7855 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7856 ;;Total ram usage:        2 bytes
  7857 ;; Hardware stack levels used:    1
  7858 ;; Hardware stack levels required when called:    4
  7859 ;; This function calls:
  7860 ;;		Nothing
  7861 ;; This function is called by:
  7862 ;;		_EUSART1_Initialize
  7863 ;; This function uses a non-reentrant model
  7864 ;;
  7865                           
  7866                           	psect	text32
  7867  0040AE                     __ptext32:
  7868                           	opt callstack 0
  7869  0040AE                     _EUSART1_SetErrorHandler:
  7870                           	opt callstack 24
  7871  0040AE                     
  7872                           ;mcc_generated_files/eusart1.c: 275:     EUSART1_ErrorHandler = interruptHandler;
  7873  0040AE  C005  F1EA         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  7874  0040B2  C006  F1EB         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  7875  0040B6  0012               	return		;funcret
  7876  0040B8                     __end_of_EUSART1_SetErrorHandler:
  7877                           	opt callstack 0
  7878                           
  7879 ;; *************** function _PrintModbus *****************
  7880 ;; Defined at:
  7881 ;;		line 90 in file "Modbus.c"
  7882 ;; Parameters:    Size  Location     Type
  7883 ;;		None
  7884 ;; Auto vars:     Size  Location     Type
  7885 ;;  i               2   41[BANK0 ] int 
  7886 ;; Return value:  Size  Location     Type
  7887 ;;                  1    wreg      void 
  7888 ;; Registers used:
  7889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7890 ;; Tracked objects:
  7891 ;;		On entry : 0/0
  7892 ;;		On exit  : 0/0
  7893 ;;		Unchanged: 0/0
  7894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7896 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7897 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7898 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7899 ;;Total ram usage:        3 bytes
  7900 ;; Hardware stack levels used:    1
  7901 ;; Hardware stack levels required when called:   13
  7902 ;; This function calls:
  7903 ;;		_printf
  7904 ;; This function is called by:
  7905 ;;		_main
  7906 ;; This function uses a non-reentrant model
  7907 ;;
  7908                           
  7909                           	psect	text33
  7910  00359A                     __ptext33:
  7911                           	opt callstack 0
  7912  00359A                     _PrintModbus:
  7913                           	opt callstack 17
  7914  00359A                     
  7915                           ;Modbus.c: 95:     printf("\r\nModbus Data Capture Complete:\r\n");
  7916  00359A  0E70               	movlw	low STR_10
  7917  00359C  0100               	movlb	0	; () banked
  7918  00359E  6F7D               	movwf	printf@fmt& (0+255),b
  7919  0035A0  0EFC               	movlw	high STR_10
  7920  0035A2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7921  0035A4  EC73  F01F         	call	_printf	;wreg free
  7922  0035A8                     
  7923                           ;Modbus.c: 97:     for(i=0; i< ModDataCnt ; i++ ){
  7924  0035A8  0E00               	movlw	0
  7925  0035AA  0100               	movlb	0	; () banked
  7926  0035AC  6F8A               	movwf	(PrintModbus@i+1)& (0+255),b
  7927  0035AE  0E00               	movlw	0
  7928  0035B0  6F89               	movwf	PrintModbus@i& (0+255),b
  7929  0035B2  EFF3  F01A         	goto	l7336
  7930  0035B6                     l7332:
  7931                           
  7932                           ; BSR set to: 0
  7933                           ;Modbus.c: 98:         printf("   Byte %i : 0x%02x \r\n", i, ModbusData[i]);
  7934  0035B6  0E74               	movlw	low STR_11
  7935  0035B8  6F7D               	movwf	printf@fmt& (0+255),b
  7936  0035BA  0EFE               	movlw	high STR_11
  7937  0035BC  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7938  0035BE  C089  F07F         	movff	PrintModbus@i,?_printf+2
  7939  0035C2  C08A  F080         	movff	PrintModbus@i+1,?_printf+3
  7940  0035C6  0E00               	movlw	low _ModbusData
  7941  0035C8  2589               	addwf	PrintModbus@i& (0+255),w,b
  7942  0035CA  6ED9               	movwf	fsr2l,c
  7943  0035CC  0E02               	movlw	high _ModbusData
  7944  0035CE  218A               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  7945  0035D0  6EDA               	movwf	fsr2h,c
  7946  0035D2  50DF               	movf	indf2,w,c
  7947  0035D4  6E55               	movwf	??_PrintModbus^0,c
  7948  0035D6  5055               	movf	??_PrintModbus^0,w,c
  7949  0035D8  6F81               	movwf	(?_printf+4)& (0+255),b
  7950  0035DA  6B82               	clrf	(?_printf+5)& (0+255),b
  7951  0035DC  EC73  F01F         	call	_printf	;wreg free
  7952  0035E0                     
  7953                           ;Modbus.c: 99:     }
  7954  0035E0  0100               	movlb	0	; () banked
  7955  0035E2  4B89               	infsnz	PrintModbus@i& (0+255),f,b
  7956  0035E4  2B8A               	incf	(PrintModbus@i+1)& (0+255),f,b
  7957  0035E6                     l7336:
  7958                           
  7959                           ; BSR set to: 0
  7960  0035E6  51D3               	movf	_ModDataCnt& (0+255),w,b
  7961  0035E8  5D89               	subwf	PrintModbus@i& (0+255),w,b
  7962  0035EA  518A               	movf	(PrintModbus@i+1)& (0+255),w,b
  7963  0035EC  0A80               	xorlw	128
  7964  0035EE  6E55               	movwf	??_PrintModbus^0,c
  7965  0035F0  51D4               	movf	(_ModDataCnt+1)& (0+255),w,b
  7966  0035F2  0A80               	xorlw	128
  7967  0035F4  5855               	subwfb	??_PrintModbus^0,w,c
  7968  0035F6  A0D8               	btfss	status,0,c
  7969  0035F8  EF00  F01B         	goto	u7531
  7970  0035FC  EF02  F01B         	goto	u7530
  7971  003600                     u7531:
  7972  003600  EFDB  F01A         	goto	l7332
  7973  003604                     u7530:
  7974  003604                     
  7975                           ; BSR set to: 0
  7976                           ;Modbus.c: 100:     printf("\r\n\n");
  7977  003604  0E06               	movlw	low (STR_56+71)
  7978  003606  6F7D               	movwf	printf@fmt& (0+255),b
  7979  003608  0EF9               	movlw	high (STR_56+71)
  7980  00360A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7981  00360C  EC73  F01F         	call	_printf	;wreg free
  7982  003610  0012               	return		;funcret
  7983  003612                     __end_of_PrintModbus:
  7984                           	opt callstack 0
  7985                           
  7986 ;; *************** function _ModbusRx *****************
  7987 ;; Defined at:
  7988 ;;		line 425 in file "Modbus.c"
  7989 ;; Parameters:    Size  Location     Type
  7990 ;;		None
  7991 ;; Auto vars:     Size  Location     Type
  7992 ;;		None
  7993 ;; Return value:  Size  Location     Type
  7994 ;;                  1    wreg      _Bool 
  7995 ;; Registers used:
  7996 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7997 ;; Tracked objects:
  7998 ;;		On entry : 0/0
  7999 ;;		On exit  : 0/0
  8000 ;;		Unchanged: 0/0
  8001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8004 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8005 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8006 ;;Total ram usage:        1 bytes
  8007 ;; Hardware stack levels used:    1
  8008 ;; Hardware stack levels required when called:   14
  8009 ;; This function calls:
  8010 ;;		_AddRxBuffToModBus
  8011 ;;		_ClearRxBuff
  8012 ;;		_EUSART1_Read
  8013 ;;		_EUSART1_is_rx_ready
  8014 ;;		_RXMode
  8015 ;;		_checkCRC
  8016 ;;		_printf
  8017 ;; This function is called by:
  8018 ;;		_main
  8019 ;; This function uses a non-reentrant model
  8020 ;;
  8021                           
  8022                           	psect	text34
  8023  00225A                     __ptext34:
  8024                           	opt callstack 0
  8025  00225A                     _ModbusRx:
  8026                           	opt callstack 16
  8027  00225A                     
  8028                           ;Modbus.c: 426:     RXMode();
  8029  00225A  EC65  F020         	call	_RXMode	;wreg free
  8030  00225E                     
  8031                           ;Modbus.c: 427:     if(EUSART1_is_rx_ready()){
  8032  00225E  ECEC  F01F         	call	_EUSART1_is_rx_ready	;wreg free
  8033  002262  0900               	iorlw	0
  8034  002264  B4D8               	btfsc	status,2,c
  8035  002266  EF37  F011         	goto	u7341
  8036  00226A  EF39  F011         	goto	u7340
  8037  00226E                     u7341:
  8038  00226E  EFE9  F011         	goto	l7166
  8039  002272                     u7340:
  8040  002272                     
  8041                           ;Modbus.c: 428:         if(Debug ==1){
  8042  002272  0100               	movlb	0	; () banked
  8043  002274  05D7               	decf	_Debug& (0+255),w,b
  8044  002276  A4D8               	btfss	status,2,c
  8045  002278  EF40  F011         	goto	u7351
  8046  00227C  EF42  F011         	goto	u7350
  8047  002280                     u7351:
  8048  002280  EF48  F011         	goto	l7124
  8049  002284                     u7350:
  8050  002284                     
  8051                           ; BSR set to: 0
  8052                           ;Modbus.c: 429:             printf("Something in ESUART1 \r\n");
  8053  002284  0E5C               	movlw	low STR_24
  8054  002286  6F7D               	movwf	printf@fmt& (0+255),b
  8055  002288  0EFE               	movlw	high STR_24
  8056  00228A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8057  00228C  EC73  F01F         	call	_printf	;wreg free
  8058  002290                     l7124:
  8059                           
  8060                           ;Modbus.c: 432:             if(EUSART1_is_rx_ready()){
  8061  002290  ECEC  F01F         	call	_EUSART1_is_rx_ready	;wreg free
  8062  002294  0900               	iorlw	0
  8063  002296  B4D8               	btfsc	status,2,c
  8064  002298  EF50  F011         	goto	u7361
  8065  00229C  EF52  F011         	goto	u7360
  8066  0022A0                     u7361:
  8067  0022A0  EF89  F011         	goto	l7140
  8068  0022A4                     u7360:
  8069  0022A4  EF7C  F011         	goto	l7136
  8070  0022A8                     l7128:
  8071                           
  8072                           ;Modbus.c: 436:                     rxData[ByteNum] = EUSART1_Read();
  8073  0022A8  ECBC  F01C         	call	_EUSART1_Read	;wreg free
  8074  0022AC  6E56               	movwf	??_ModbusRx^0,c
  8075  0022AE  0E00               	movlw	low _rxData
  8076  0022B0  0100               	movlb	0	; () banked
  8077  0022B2  25D1               	addwf	_ByteNum& (0+255),w,b
  8078  0022B4  6ED9               	movwf	fsr2l,c
  8079  0022B6  0E05               	movlw	high _rxData
  8080  0022B8  21D2               	addwfc	(_ByteNum+1)& (0+255),w,b
  8081  0022BA  6EDA               	movwf	fsr2h,c
  8082  0022BC  C056  FFDF         	movff	??_ModbusRx,indf2
  8083  0022C0                     
  8084                           ; BSR set to: 0
  8085                           ;Modbus.c: 438:                     if(Debug == 1){
  8086  0022C0  05D7               	decf	_Debug& (0+255),w,b
  8087  0022C2  A4D8               	btfss	status,2,c
  8088  0022C4  EF66  F011         	goto	u7371
  8089  0022C8  EF68  F011         	goto	u7370
  8090  0022CC                     u7371:
  8091  0022CC  EF79  F011         	goto	l7134
  8092  0022D0                     u7370:
  8093  0022D0                     
  8094                           ; BSR set to: 0
  8095                           ;Modbus.c: 439:                         printf("Read: 0x%02x \r\n",rxData[ByteNum]);
  8096  0022D0  0E89               	movlw	low STR_25
  8097  0022D2  6F7D               	movwf	printf@fmt& (0+255),b
  8098  0022D4  0EFF               	movlw	high STR_25
  8099  0022D6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8100  0022D8  0E00               	movlw	low _rxData
  8101  0022DA  25D1               	addwf	_ByteNum& (0+255),w,b
  8102  0022DC  6ED9               	movwf	fsr2l,c
  8103  0022DE  0E05               	movlw	high _rxData
  8104  0022E0  21D2               	addwfc	(_ByteNum+1)& (0+255),w,b
  8105  0022E2  6EDA               	movwf	fsr2h,c
  8106  0022E4  50DF               	movf	indf2,w,c
  8107  0022E6  6E56               	movwf	??_ModbusRx^0,c
  8108  0022E8  5056               	movf	??_ModbusRx^0,w,c
  8109  0022EA  6F7F               	movwf	(?_printf+2)& (0+255),b
  8110  0022EC  6B80               	clrf	(?_printf+3)& (0+255),b
  8111  0022EE  EC73  F01F         	call	_printf	;wreg free
  8112  0022F2                     l7134:
  8113                           
  8114                           ;Modbus.c: 441:                     ByteNum++;
  8115  0022F2  0100               	movlb	0	; () banked
  8116  0022F4  4BD1               	infsnz	_ByteNum& (0+255),f,b
  8117  0022F6  2BD2               	incf	(_ByteNum+1)& (0+255),f,b
  8118  0022F8                     l7136:
  8119                           
  8120                           ;Modbus.c: 434:                 while(EUSART1_is_rx_ready()){
  8121  0022F8  ECEC  F01F         	call	_EUSART1_is_rx_ready	;wreg free
  8122  0022FC  0900               	iorlw	0
  8123  0022FE  A4D8               	btfss	status,2,c
  8124  002300  EF84  F011         	goto	u7381
  8125  002304  EF86  F011         	goto	u7380
  8126  002308                     u7381:
  8127  002308  EF54  F011         	goto	l7128
  8128  00230C                     u7380:
  8129  00230C                     
  8130                           ;Modbus.c: 444:                 RXStat = 1;
  8131  00230C  0E01               	movlw	1
  8132  00230E  0100               	movlb	0	; () banked
  8133  002310  6FD6               	movwf	_RXStat& (0+255),b
  8134  002312                     l7140:
  8135                           
  8136                           ;Modbus.c: 447:             if(RXStat ==1){
  8137  002312  0100               	movlb	0	; () banked
  8138  002314  05D6               	decf	_RXStat& (0+255),w,b
  8139  002316  A4D8               	btfss	status,2,c
  8140  002318  EF90  F011         	goto	u7391
  8141  00231C  EF92  F011         	goto	u7390
  8142  002320                     u7391:
  8143  002320  EFAE  F011         	goto	l7152
  8144  002324                     u7390:
  8145  002324                     
  8146                           ; BSR set to: 0
  8147                           ;Modbus.c: 450:                 AddRxBuffToModBus();
  8148  002324  ECB4  F016         	call	_AddRxBuffToModBus	;wreg free
  8149  002328                     
  8150                           ;Modbus.c: 451:                 ClearRxBuff();
  8151  002328  EC89  F01D         	call	_ClearRxBuff	;wreg free
  8152  00232C                     
  8153                           ;Modbus.c: 452:                 RXStat = 0;
  8154  00232C  0E00               	movlw	0
  8155  00232E  0100               	movlb	0	; () banked
  8156  002330  6FD6               	movwf	_RXStat& (0+255),b
  8157  002332                     
  8158                           ; BSR set to: 0
  8159                           ;Modbus.c: 453:                 ByteNum = 0;
  8160  002332  0E00               	movlw	0
  8161  002334  6FD2               	movwf	(_ByteNum+1)& (0+255),b
  8162  002336  0E00               	movlw	0
  8163  002338  6FD1               	movwf	_ByteNum& (0+255),b
  8164  00233A                     
  8165                           ; BSR set to: 0
  8166  00233A  B883               	btfsc	131,4,c	;volatile
  8167  00233C  EFA2  F011         	goto	u7401
  8168  002340  EFA5  F011         	goto	u7400
  8169  002344                     u7401:
  8170  002344  0E01               	movlw	1
  8171  002346  EFA6  F011         	goto	u7406
  8172  00234A                     u7400:
  8173  00234A  0E00               	movlw	0
  8174  00234C                     u7406:
  8175  00234C  0AFF               	xorlw	255
  8176  00234E  6E56               	movwf	??_ModbusRx^0,c
  8177  002350  3A56               	swapf	??_ModbusRx^0,f,c
  8178  002352  5083               	movf	131,w,c	;volatile
  8179  002354  1856               	xorwf	??_ModbusRx^0,w,c
  8180  002356  0BEF               	andlw	-17
  8181  002358  1856               	xorwf	??_ModbusRx^0,w,c
  8182  00235A  6E83               	movwf	131,c	;volatile
  8183  00235C                     l7152:
  8184                           
  8185                           ; BSR set to: 0
  8186                           ;Modbus.c: 458:         }while(ModDataCnt != ExpectedBytes);
  8187  00235C  51F8               	movf	_ExpectedBytes& (0+255),w,b
  8188  00235E  19D3               	xorwf	_ModDataCnt& (0+255),w,b
  8189  002360  E107               	bnz	u7411
  8190  002362  51F9               	movf	(_ExpectedBytes+1)& (0+255),w,b
  8191  002364  19D4               	xorwf	(_ModDataCnt+1)& (0+255),w,b
  8192  002366  A4D8               	btfss	status,2,c
  8193  002368  EFB8  F011         	goto	u7411
  8194  00236C  EFBA  F011         	goto	u7410
  8195  002370                     u7411:
  8196  002370  EF48  F011         	goto	l7124
  8197  002374                     u7410:
  8198  002374                     
  8199                           ; BSR set to: 0
  8200  002374  BA83               	btfsc	131,5,c	;volatile
  8201  002376  EFBF  F011         	goto	u7421
  8202  00237A  EFC2  F011         	goto	u7420
  8203  00237E                     u7421:
  8204  00237E  0E01               	movlw	1
  8205  002380  EFC3  F011         	goto	u7426
  8206  002384                     u7420:
  8207  002384  0E00               	movlw	0
  8208  002386                     u7426:
  8209  002386  0AFF               	xorlw	255
  8210  002388  6E56               	movwf	??_ModbusRx^0,c
  8211  00238A  3A56               	swapf	??_ModbusRx^0,f,c
  8212  00238C  4656               	rlncf	??_ModbusRx^0,f,c
  8213  00238E  5083               	movf	131,w,c	;volatile
  8214  002390  1856               	xorwf	??_ModbusRx^0,w,c
  8215  002392  0BDF               	andlw	-33
  8216  002394  1856               	xorwf	??_ModbusRx^0,w,c
  8217  002396  6E83               	movwf	131,c	;volatile
  8218  002398                     
  8219                           ; BSR set to: 0
  8220                           ;Modbus.c: 463:         if(checkCRC() == 1)
  8221  002398  EC9D  F012         	call	_checkCRC	;wreg free
  8222  00239C  06E8               	decf	wreg,f,c
  8223  00239E  A4D8               	btfss	status,2,c
  8224  0023A0  EFD4  F011         	goto	u7431
  8225  0023A4  EFD6  F011         	goto	u7430
  8226  0023A8                     u7431:
  8227  0023A8  EFDF  F011         	goto	l7160
  8228  0023AC                     u7430:
  8229  0023AC                     
  8230                           ;Modbus.c: 464:         {;Modbus.c: 465:             printf("\r\nReceived Modbus CRC che
      +                          cked out.\r\n");
  8231  0023AC  0EE1               	movlw	low STR_26
  8232  0023AE  0100               	movlb	0	; () banked
  8233  0023B0  6F7D               	movwf	printf@fmt& (0+255),b
  8234  0023B2  0EFB               	movlw	high STR_26
  8235  0023B4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8236  0023B6  EC73  F01F         	call	_printf	;wreg free
  8237                           
  8238                           ;Modbus.c: 466:         }else{
  8239  0023BA  EFE6  F011         	goto	l7162
  8240  0023BE                     l7160:
  8241                           
  8242                           ;Modbus.c: 467:             printf("\r\nReceived Modbus CRC is bad.\r\n");
  8243  0023BE  0EF4               	movlw	low STR_27
  8244  0023C0  0100               	movlb	0	; () banked
  8245  0023C2  6F7D               	movwf	printf@fmt& (0+255),b
  8246  0023C4  0EFC               	movlw	high STR_27
  8247  0023C6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8248  0023C8  EC73  F01F         	call	_printf	;wreg free
  8249  0023CC                     l7162:
  8250                           
  8251                           ;Modbus.c: 471:         return 1;
  8252  0023CC  0E01               	movlw	1
  8253  0023CE  EFEA  F011         	goto	l828
  8254  0023D2                     l7166:
  8255                           
  8256                           ;Modbus.c: 473:     return 0;
  8257  0023D2  0E00               	movlw	0
  8258  0023D4                     l828:
  8259  0023D4  0012               	return		;funcret
  8260  0023D6                     __end_of_ModbusRx:
  8261                           	opt callstack 0
  8262                           
  8263 ;; *************** function _checkCRC *****************
  8264 ;; Defined at:
  8265 ;;		line 106 in file "Modbus.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;		None
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;  i               2   54[BANK0 ] int 
  8270 ;;  crc             2   52[BANK0 ] unsigned int 
  8271 ;;  j               2   50[BANK0 ] int 
  8272 ;;  crcLow          2   48[BANK0 ] unsigned int 
  8273 ;;  crcHigh         2   46[BANK0 ] unsigned int 
  8274 ;; Return value:  Size  Location     Type
  8275 ;;                  1    wreg      _Bool 
  8276 ;; Registers used:
  8277 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8278 ;; Tracked objects:
  8279 ;;		On entry : 0/0
  8280 ;;		On exit  : 0/0
  8281 ;;		Unchanged: 0/0
  8282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8284 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8285 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8286 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8287 ;;Total ram usage:       15 bytes
  8288 ;; Hardware stack levels used:    1
  8289 ;; Hardware stack levels required when called:   13
  8290 ;; This function calls:
  8291 ;;		_printf
  8292 ;; This function is called by:
  8293 ;;		_ModbusRx
  8294 ;; This function uses a non-reentrant model
  8295 ;;
  8296                           
  8297                           	psect	text35
  8298  00253A                     __ptext35:
  8299                           	opt callstack 0
  8300  00253A                     _checkCRC:
  8301                           	opt callstack 16
  8302  00253A                     
  8303                           ;Modbus.c: 107:   unsigned int crc = 0xFFFF;
  8304  00253A  0100               	movlb	0	; () banked
  8305  00253C  6994               	setf	checkCRC@crc& (0+255),b
  8306  00253E  6995               	setf	(checkCRC@crc+1)& (0+255),b
  8307  002540                     
  8308                           ; BSR set to: 0
  8309                           ;Modbus.c: 109:   unsigned int crcLow = 0;
  8310  002540  0E00               	movlw	0
  8311  002542  6F91               	movwf	(checkCRC@crcLow+1)& (0+255),b
  8312  002544  0E00               	movlw	0
  8313  002546  6F90               	movwf	checkCRC@crcLow& (0+255),b
  8314                           
  8315                           ;Modbus.c: 110:   int i,j = 0;
  8316  002548  0E00               	movlw	0
  8317  00254A  6F93               	movwf	(checkCRC@j+1)& (0+255),b
  8318  00254C  0E00               	movlw	0
  8319  00254E  6F92               	movwf	checkCRC@j& (0+255),b
  8320                           
  8321                           ;Modbus.c: 112:     for(i=0;i<ModDataCnt-2;i++){
  8322  002550  0E00               	movlw	0
  8323  002552  6F97               	movwf	(checkCRC@i+1)& (0+255),b
  8324  002554  0E00               	movlw	0
  8325  002556  6F96               	movwf	checkCRC@i& (0+255),b
  8326  002558  EFDD  F012         	goto	l6964
  8327  00255C                     l6946:
  8328                           
  8329                           ; BSR set to: 0
  8330                           ;Modbus.c: 113:       crc ^= ModbusData[i];
  8331  00255C  0E00               	movlw	low _ModbusData
  8332  00255E  2596               	addwf	checkCRC@i& (0+255),w,b
  8333  002560  6ED9               	movwf	fsr2l,c
  8334  002562  0E02               	movlw	high _ModbusData
  8335  002564  2197               	addwfc	(checkCRC@i+1)& (0+255),w,b
  8336  002566  6EDA               	movwf	fsr2h,c
  8337  002568  50DF               	movf	indf2,w,c
  8338  00256A  6F89               	movwf	??_checkCRC& (0+255),b
  8339  00256C  5189               	movf	??_checkCRC& (0+255),w,b
  8340  00256E  1B94               	xorwf	checkCRC@crc& (0+255),f,b
  8341  002570                     
  8342                           ; BSR set to: 0
  8343                           ;Modbus.c: 114:       for(j=8; j!=0; j--){
  8344  002570  0E00               	movlw	0
  8345  002572  6F93               	movwf	(checkCRC@j+1)& (0+255),b
  8346  002574  0E08               	movlw	8
  8347  002576  6F92               	movwf	checkCRC@j& (0+255),b
  8348  002578                     l724:
  8349                           
  8350                           ; BSR set to: 0
  8351                           ;Modbus.c: 115:         if((crc & 0x0001) != 0){
  8352  002578  A194               	btfss	checkCRC@crc& (0+255),0,b
  8353  00257A  EFC1  F012         	goto	u7121
  8354  00257E  EFC3  F012         	goto	u7120
  8355  002582                     u7121:
  8356  002582  EFCC  F012         	goto	l6958
  8357  002586                     u7120:
  8358  002586                     
  8359                           ; BSR set to: 0
  8360                           ;Modbus.c: 116:           crc >>= 1;
  8361  002586  90D8               	bcf	status,0,c
  8362  002588  3395               	rrcf	(checkCRC@crc+1)& (0+255),f,b
  8363  00258A  3394               	rrcf	checkCRC@crc& (0+255),f,b
  8364  00258C                     
  8365                           ; BSR set to: 0
  8366                           ;Modbus.c: 117:           crc ^= 0xA001;
  8367  00258C  0E01               	movlw	1
  8368  00258E  1B94               	xorwf	checkCRC@crc& (0+255),f,b
  8369  002590  0EA0               	movlw	160
  8370  002592  1B95               	xorwf	(checkCRC@crc+1)& (0+255),f,b
  8371                           
  8372                           ;Modbus.c: 118:         }
  8373  002594  EFCF  F012         	goto	l727
  8374  002598                     l6958:
  8375                           
  8376                           ; BSR set to: 0
  8377                           ;Modbus.c: 120:           crc >>= 1;
  8378  002598  90D8               	bcf	status,0,c
  8379  00259A  3395               	rrcf	(checkCRC@crc+1)& (0+255),f,b
  8380  00259C  3394               	rrcf	checkCRC@crc& (0+255),f,b
  8381  00259E                     l727:
  8382                           
  8383                           ; BSR set to: 0
  8384                           ;Modbus.c: 122:       }
  8385  00259E  0792               	decf	checkCRC@j& (0+255),f,b
  8386  0025A0  A0D8               	btfss	status,0,c
  8387  0025A2  0793               	decf	(checkCRC@j+1)& (0+255),f,b
  8388  0025A4                     
  8389                           ; BSR set to: 0
  8390  0025A4  5192               	movf	checkCRC@j& (0+255),w,b
  8391  0025A6  1193               	iorwf	(checkCRC@j+1)& (0+255),w,b
  8392  0025A8  A4D8               	btfss	status,2,c
  8393  0025AA  EFD9  F012         	goto	u7131
  8394  0025AE  EFDB  F012         	goto	u7130
  8395  0025B2                     u7131:
  8396  0025B2  EFBC  F012         	goto	l724
  8397  0025B6                     u7130:
  8398  0025B6                     
  8399                           ; BSR set to: 0
  8400                           ;Modbus.c: 123:     }
  8401  0025B6  4B96               	infsnz	checkCRC@i& (0+255),f,b
  8402  0025B8  2B97               	incf	(checkCRC@i+1)& (0+255),f,b
  8403  0025BA                     l6964:
  8404                           
  8405                           ; BSR set to: 0
  8406  0025BA  0EFE               	movlw	254
  8407  0025BC  6F89               	movwf	??_checkCRC& (0+255),b
  8408  0025BE  0EFF               	movlw	255
  8409  0025C0  6F8A               	movwf	(??_checkCRC+1)& (0+255),b
  8410  0025C2  C0D3  F08B         	movff	_ModDataCnt,??_checkCRC+2
  8411  0025C6  C0D4  F08C         	movff	_ModDataCnt+1,??_checkCRC+3
  8412  0025CA  5189               	movf	??_checkCRC& (0+255),w,b
  8413  0025CC  278B               	addwf	(??_checkCRC+2)& (0+255),f,b
  8414  0025CE  518A               	movf	(??_checkCRC+1)& (0+255),w,b
  8415  0025D0  238C               	addwfc	(??_checkCRC+3)& (0+255),f,b
  8416  0025D2  518B               	movf	(??_checkCRC+2)& (0+255),w,b
  8417  0025D4  5D96               	subwf	checkCRC@i& (0+255),w,b
  8418  0025D6  5197               	movf	(checkCRC@i+1)& (0+255),w,b
  8419  0025D8  0A80               	xorlw	128
  8420  0025DA  6F8D               	movwf	(??_checkCRC+4)& (0+255),b
  8421  0025DC  518C               	movf	(??_checkCRC+3)& (0+255),w,b
  8422  0025DE  0A80               	xorlw	128
  8423  0025E0  598D               	subwfb	(??_checkCRC+4)& (0+255),w,b
  8424  0025E2  A0D8               	btfss	status,0,c
  8425  0025E4  EFF6  F012         	goto	u7141
  8426  0025E8  EFF8  F012         	goto	u7140
  8427  0025EC                     u7141:
  8428  0025EC  EFAE  F012         	goto	l6946
  8429  0025F0                     u7140:
  8430  0025F0                     
  8431                           ; BSR set to: 0
  8432                           ;Modbus.c: 125:   crcHigh = (crc & 0x00FF);
  8433  0025F0  5194               	movf	checkCRC@crc& (0+255),w,b
  8434  0025F2  6F8E               	movwf	checkCRC@crcHigh& (0+255),b
  8435  0025F4  6B8F               	clrf	(checkCRC@crcHigh+1)& (0+255),b
  8436                           
  8437                           ;Modbus.c: 126:   crcLow = (crc & 0xFF00) >>8;
  8438  0025F6  C094  F089         	movff	checkCRC@crc,??_checkCRC
  8439  0025FA  C095  F08A         	movff	checkCRC@crc+1,??_checkCRC+1
  8440  0025FE  C08A  F089         	movff	??_checkCRC+1,??_checkCRC
  8441  002602  6B8A               	clrf	(??_checkCRC+1)& (0+255),b
  8442  002604  5189               	movf	??_checkCRC& (0+255),w,b
  8443  002606  6F90               	movwf	checkCRC@crcLow& (0+255),b
  8444  002608  6B91               	clrf	(checkCRC@crcLow+1)& (0+255),b
  8445  00260A                     
  8446                           ; BSR set to: 0
  8447                           ;Modbus.c: 128:   if(Debug == 1){
  8448  00260A  05D7               	decf	_Debug& (0+255),w,b
  8449  00260C  A4D8               	btfss	status,2,c
  8450  00260E  EF0B  F013         	goto	u7151
  8451  002612  EF0D  F013         	goto	u7150
  8452  002616                     u7151:
  8453  002616  EF1B  F013         	goto	l6972
  8454  00261A                     u7150:
  8455  00261A                     
  8456                           ; BSR set to: 0
  8457                           ;Modbus.c: 129:     printf("crcHigh: 0x%02x  crcLow: 0x%02x  \r\n", crcHigh, crcLow);
  8458  00261A  0E2A               	movlw	low STR_13
  8459  00261C  6F7D               	movwf	printf@fmt& (0+255),b
  8460  00261E  0EFC               	movlw	high STR_13
  8461  002620  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8462  002622  C08E  F07F         	movff	checkCRC@crcHigh,?_printf+2
  8463  002626  C08F  F080         	movff	checkCRC@crcHigh+1,?_printf+3
  8464  00262A  C090  F081         	movff	checkCRC@crcLow,?_printf+4
  8465  00262E  C091  F082         	movff	checkCRC@crcLow+1,?_printf+5
  8466  002632  EC73  F01F         	call	_printf	;wreg free
  8467  002636                     l6972:
  8468                           
  8469                           ;Modbus.c: 133:   if((crcHigh == ModbusData[i])&&(crcLow == ModbusData[i+1]))
  8470  002636  0E00               	movlw	low _ModbusData
  8471  002638  0100               	movlb	0	; () banked
  8472  00263A  2596               	addwf	checkCRC@i& (0+255),w,b
  8473  00263C  6ED9               	movwf	fsr2l,c
  8474  00263E  0E02               	movlw	high _ModbusData
  8475  002640  2197               	addwfc	(checkCRC@i+1)& (0+255),w,b
  8476  002642  6EDA               	movwf	fsr2h,c
  8477  002644  50DF               	movf	indf2,w,c
  8478  002646  6F89               	movwf	??_checkCRC& (0+255),b
  8479  002648  6B8A               	clrf	(??_checkCRC+1)& (0+255),b
  8480  00264A  518E               	movf	checkCRC@crcHigh& (0+255),w,b
  8481  00264C  1989               	xorwf	??_checkCRC& (0+255),w,b
  8482  00264E  E107               	bnz	u7161
  8483  002650  518F               	movf	(checkCRC@crcHigh+1)& (0+255),w,b
  8484  002652  198A               	xorwf	(??_checkCRC+1)& (0+255),w,b
  8485  002654  A4D8               	btfss	status,2,c
  8486  002656  EF2F  F013         	goto	u7161
  8487  00265A  EF31  F013         	goto	u7160
  8488  00265E                     u7161:
  8489  00265E  EF49  F013         	goto	l6982
  8490  002662                     u7160:
  8491  002662                     
  8492                           ; BSR set to: 0
  8493  002662  0E01               	movlw	low (_ModbusData+1)
  8494  002664  2596               	addwf	checkCRC@i& (0+255),w,b
  8495  002666  6ED9               	movwf	fsr2l,c
  8496  002668  0E02               	movlw	high (_ModbusData+1)
  8497  00266A  2197               	addwfc	(checkCRC@i+1)& (0+255),w,b
  8498  00266C  6EDA               	movwf	fsr2h,c
  8499  00266E  50DF               	movf	indf2,w,c
  8500  002670  6F89               	movwf	??_checkCRC& (0+255),b
  8501  002672  6B8A               	clrf	(??_checkCRC+1)& (0+255),b
  8502  002674  5190               	movf	checkCRC@crcLow& (0+255),w,b
  8503  002676  1989               	xorwf	??_checkCRC& (0+255),w,b
  8504  002678  E107               	bnz	u7171
  8505  00267A  5191               	movf	(checkCRC@crcLow+1)& (0+255),w,b
  8506  00267C  198A               	xorwf	(??_checkCRC+1)& (0+255),w,b
  8507  00267E  A4D8               	btfss	status,2,c
  8508  002680  EF44  F013         	goto	u7171
  8509  002684  EF46  F013         	goto	u7170
  8510  002688                     u7171:
  8511  002688  EF49  F013         	goto	l6982
  8512  00268C                     u7170:
  8513  00268C                     
  8514                           ; BSR set to: 0
  8515                           ;Modbus.c: 134:   {;Modbus.c: 135:     return 1;
  8516  00268C  0E01               	movlw	1
  8517  00268E  EF4A  F013         	goto	l731
  8518  002692                     l6982:
  8519                           
  8520                           ; BSR set to: 0
  8521                           ;Modbus.c: 138:     return 0;
  8522  002692  0E00               	movlw	0
  8523  002694                     l731:
  8524                           
  8525                           ; BSR set to: 0
  8526  002694  0012               	return		;funcret
  8527  002696                     __end_of_checkCRC:
  8528                           	opt callstack 0
  8529                           
  8530 ;; *************** function _RXMode *****************
  8531 ;; Defined at:
  8532 ;;		line 42 in file "Modbus.c"
  8533 ;; Parameters:    Size  Location     Type
  8534 ;;		None
  8535 ;; Auto vars:     Size  Location     Type
  8536 ;;		None
  8537 ;; Return value:  Size  Location     Type
  8538 ;;                  1    wreg      void 
  8539 ;; Registers used:
  8540 ;;		None
  8541 ;; Tracked objects:
  8542 ;;		On entry : 0/0
  8543 ;;		On exit  : 0/0
  8544 ;;		Unchanged: 0/0
  8545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8550 ;;Total ram usage:        0 bytes
  8551 ;; Hardware stack levels used:    1
  8552 ;; Hardware stack levels required when called:    4
  8553 ;; This function calls:
  8554 ;;		Nothing
  8555 ;; This function is called by:
  8556 ;;		_main
  8557 ;;		_ModbusRx
  8558 ;; This function uses a non-reentrant model
  8559 ;;
  8560                           
  8561                           	psect	text36
  8562  0040CA                     __ptext36:
  8563                           	opt callstack 0
  8564  0040CA                     _RXMode:
  8565                           	opt callstack 26
  8566  0040CA  9086               	bcf	134,0,c	;volatile
  8567  0040CC  9683               	bcf	131,3,c	;volatile
  8568  0040CE  0012               	return		;funcret
  8569  0040D0                     __end_of_RXMode:
  8570                           	opt callstack 0
  8571                           
  8572 ;; *************** function _EUSART1_is_rx_ready *****************
  8573 ;; Defined at:
  8574 ;;		line 139 in file "mcc_generated_files/eusart1.c"
  8575 ;; Parameters:    Size  Location     Type
  8576 ;;		None
  8577 ;; Auto vars:     Size  Location     Type
  8578 ;;		None
  8579 ;; Return value:  Size  Location     Type
  8580 ;;                  1    wreg      _Bool 
  8581 ;; Registers used:
  8582 ;;		wreg, status,2
  8583 ;; Tracked objects:
  8584 ;;		On entry : 0/0
  8585 ;;		On exit  : 0/0
  8586 ;;		Unchanged: 0/0
  8587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8592 ;;Total ram usage:        0 bytes
  8593 ;; Hardware stack levels used:    1
  8594 ;; Hardware stack levels required when called:    4
  8595 ;; This function calls:
  8596 ;;		Nothing
  8597 ;; This function is called by:
  8598 ;;		_ModbusRx
  8599 ;; This function uses a non-reentrant model
  8600 ;;
  8601                           
  8602                           	psect	text37
  8603  003FD8                     __ptext37:
  8604                           	opt callstack 0
  8605  003FD8                     _EUSART1_is_rx_ready:
  8606                           	opt callstack 25
  8607  003FD8                     
  8608                           ;mcc_generated_files/eusart1.c: 141:     return (eusart1RxCount ? 1 : 0);
  8609  003FD8  0100               	movlb	0	; () banked
  8610  003FDA  51D9               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  8611  003FDC  A4D8               	btfss	status,2,c
  8612  003FDE  EFF3  F01F         	goto	u6921
  8613  003FE2  EFF6  F01F         	goto	u6920
  8614  003FE6                     u6921:
  8615  003FE6  0E01               	movlw	1
  8616  003FE8  EFF7  F01F         	goto	u6930
  8617  003FEC                     u6920:
  8618  003FEC  0E00               	movlw	0
  8619  003FEE                     u6930:
  8620  003FEE                     
  8621                           ; BSR set to: 0
  8622  003FEE  0012               	return		;funcret
  8623  003FF0                     __end_of_EUSART1_is_rx_ready:
  8624                           	opt callstack 0
  8625                           
  8626 ;; *************** function _EUSART1_Read *****************
  8627 ;; Defined at:
  8628 ;;		line 153 in file "mcc_generated_files/eusart1.c"
  8629 ;; Parameters:    Size  Location     Type
  8630 ;;		None
  8631 ;; Auto vars:     Size  Location     Type
  8632 ;;  readValue       1    4[COMRAM] unsigned char 
  8633 ;; Return value:  Size  Location     Type
  8634 ;;                  1    wreg      unsigned char 
  8635 ;; Registers used:
  8636 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8637 ;; Tracked objects:
  8638 ;;		On entry : 0/0
  8639 ;;		On exit  : 0/0
  8640 ;;		Unchanged: 0/0
  8641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8643 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8645 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8646 ;;Total ram usage:        1 bytes
  8647 ;; Hardware stack levels used:    1
  8648 ;; Hardware stack levels required when called:    4
  8649 ;; This function calls:
  8650 ;;		Nothing
  8651 ;; This function is called by:
  8652 ;;		_ModbusRx
  8653 ;; This function uses a non-reentrant model
  8654 ;;
  8655                           
  8656                           	psect	text38
  8657  003978                     __ptext38:
  8658                           	opt callstack 0
  8659  003978                     _EUSART1_Read:
  8660                           	opt callstack 25
  8661  003978                     l6796:
  8662                           
  8663                           ;mcc_generated_files/eusart1.c: 157:     while(0 == eusart1RxCount)
  8664  003978  0100               	movlb	0	; () banked
  8665  00397A  51D9               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  8666  00397C  B4D8               	btfsc	status,2,c
  8667  00397E  EFC3  F01C         	goto	u6941
  8668  003982  EFC5  F01C         	goto	u6940
  8669  003986                     u6941:
  8670  003986  EFBC  F01C         	goto	l6796
  8671  00398A                     u6940:
  8672  00398A                     
  8673                           ; BSR set to: 0
  8674                           ;mcc_generated_files/eusart1.c: 161:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  8675  00398A  0E00               	movlw	low _eusart1RxStatusBuffer
  8676  00398C  25DA               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  8677  00398E  6ED9               	movwf	fsr2l,c
  8678  003990  6ADA               	clrf	fsr2h,c
  8679  003992  0E03               	movlw	high _eusart1RxStatusBuffer
  8680  003994  22DA               	addwfc	fsr2h,f,c
  8681  003996  50DF               	movf	indf2,w,c
  8682  003998  6FD8               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  8683                           
  8684                           ;mcc_generated_files/eusart1.c: 163:     readValue = eusart1RxBuffer[eusart1RxTail++];
  8685  00399A  0E00               	movlw	low _eusart1RxBuffer
  8686  00399C  25DA               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  8687  00399E  6ED9               	movwf	fsr2l,c
  8688  0039A0  6ADA               	clrf	fsr2h,c
  8689  0039A2  0E04               	movlw	high _eusart1RxBuffer
  8690  0039A4  22DA               	addwfc	fsr2h,f,c
  8691  0039A6  50DF               	movf	indf2,w,c
  8692  0039A8  6E05               	movwf	EUSART1_Read@readValue^0,c
  8693  0039AA                     
  8694                           ; BSR set to: 0
  8695  0039AA  2BDA               	incf	_eusart1RxTail& (0+255),f,b	;volatile
  8696  0039AC                     
  8697                           ; BSR set to: 0
  8698                           ;mcc_generated_files/eusart1.c: 164:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  8699  0039AC  0E63               	movlw	99
  8700  0039AE  65DA               	cpfsgt	_eusart1RxTail& (0+255),b	;volatile
  8701  0039B0  EFDC  F01C         	goto	u6951
  8702  0039B4  EFDE  F01C         	goto	u6950
  8703  0039B8                     u6951:
  8704  0039B8  EFE0  F01C         	goto	l6806
  8705  0039BC                     u6950:
  8706  0039BC                     
  8707                           ; BSR set to: 0
  8708                           ;mcc_generated_files/eusart1.c: 165:     {;mcc_generated_files/eusart1.c: 166:         e
      +                          usart1RxTail = 0;
  8709  0039BC  0E00               	movlw	0
  8710  0039BE  6FDA               	movwf	_eusart1RxTail& (0+255),b	;volatile
  8711  0039C0                     l6806:
  8712                           
  8713                           ; BSR set to: 0
  8714                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 0;
  8715  0039C0  010E               	movlb	14	; () banked
  8716  0039C2  9BC5               	bcf	197,5,b	;volatile
  8717  0039C4                     
  8718                           ; BSR set to: 14
  8719                           ;mcc_generated_files/eusart1.c: 169:     eusart1RxCount--;
  8720  0039C4  0100               	movlb	0	; () banked
  8721  0039C6  07D9               	decf	_eusart1RxCount& (0+255),f,b	;volatile
  8722  0039C8                     
  8723                           ; BSR set to: 0
  8724                           ;mcc_generated_files/eusart1.c: 170:     PIE3bits.RC1IE = 1;
  8725  0039C8  010E               	movlb	14	; () banked
  8726  0039CA  8BC5               	bsf	197,5,b	;volatile
  8727  0039CC                     
  8728                           ; BSR set to: 14
  8729                           ;mcc_generated_files/eusart1.c: 172:     return readValue;
  8730  0039CC  5005               	movf	EUSART1_Read@readValue^0,w,c
  8731  0039CE                     
  8732                           ; BSR set to: 14
  8733  0039CE  0012               	return		;funcret
  8734  0039D0                     __end_of_EUSART1_Read:
  8735                           	opt callstack 0
  8736                           
  8737 ;; *************** function _ClearRxBuff *****************
  8738 ;; Defined at:
  8739 ;;		line 58 in file "Modbus.c"
  8740 ;; Parameters:    Size  Location     Type
  8741 ;;		None
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;  i               2    5[COMRAM] int 
  8744 ;; Return value:  Size  Location     Type
  8745 ;;                  1    wreg      void 
  8746 ;; Registers used:
  8747 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8748 ;; Tracked objects:
  8749 ;;		On entry : 0/0
  8750 ;;		On exit  : 0/0
  8751 ;;		Unchanged: 0/0
  8752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8754 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8755 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8756 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8757 ;;Total ram usage:        3 bytes
  8758 ;; Hardware stack levels used:    1
  8759 ;; Hardware stack levels required when called:    4
  8760 ;; This function calls:
  8761 ;;		Nothing
  8762 ;; This function is called by:
  8763 ;;		_main
  8764 ;;		_ModbusRx
  8765 ;; This function uses a non-reentrant model
  8766 ;;
  8767                           
  8768                           	psect	text39
  8769  003B12                     __ptext39:
  8770                           	opt callstack 0
  8771  003B12                     _ClearRxBuff:
  8772                           	opt callstack 25
  8773  003B12                     
  8774                           ;Modbus.c: 60:     int i = 0;
  8775  003B12  0E00               	movlw	0
  8776  003B14  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  8777  003B16  0E00               	movlw	0
  8778  003B18  6E06               	movwf	ClearRxBuff@i^0,c
  8779                           
  8780                           ;Modbus.c: 61:     for(i=0; i<ByteNum; i++ ){
  8781  003B1A  0E00               	movlw	0
  8782  003B1C  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  8783  003B1E  0E00               	movlw	0
  8784  003B20  6E06               	movwf	ClearRxBuff@i^0,c
  8785  003B22  EF9D  F01D         	goto	l6882
  8786  003B26                     l6878:
  8787                           
  8788                           ; BSR set to: 0
  8789                           ;Modbus.c: 62:         rxData[i] = 0xFF;
  8790  003B26  0E00               	movlw	low _rxData
  8791  003B28  2406               	addwf	ClearRxBuff@i^0,w,c
  8792  003B2A  6ED9               	movwf	fsr2l,c
  8793  003B2C  0E05               	movlw	high _rxData
  8794  003B2E  2007               	addwfc	(ClearRxBuff@i+1)^0,w,c
  8795  003B30  6EDA               	movwf	fsr2h,c
  8796  003B32  0EFF               	movlw	255
  8797  003B34  6EDF               	movwf	indf2,c
  8798  003B36                     
  8799                           ; BSR set to: 0
  8800                           ;Modbus.c: 63:     }
  8801  003B36  4A06               	infsnz	ClearRxBuff@i^0,f,c
  8802  003B38  2A07               	incf	(ClearRxBuff@i+1)^0,f,c
  8803  003B3A                     l6882:
  8804  003B3A  0100               	movlb	0	; () banked
  8805  003B3C  51D1               	movf	_ByteNum& (0+255),w,b
  8806  003B3E  5C06               	subwf	ClearRxBuff@i^0,w,c
  8807  003B40  5007               	movf	(ClearRxBuff@i+1)^0,w,c
  8808  003B42  0A80               	xorlw	128
  8809  003B44  6E05               	movwf	??_ClearRxBuff^0,c
  8810  003B46  51D2               	movf	(_ByteNum+1)& (0+255),w,b
  8811  003B48  0A80               	xorlw	128
  8812  003B4A  5805               	subwfb	??_ClearRxBuff^0,w,c
  8813  003B4C  A0D8               	btfss	status,0,c
  8814  003B4E  EFAB  F01D         	goto	u7031
  8815  003B52  EFAD  F01D         	goto	u7030
  8816  003B56                     u7031:
  8817  003B56  EF93  F01D         	goto	l6878
  8818  003B5A                     u7030:
  8819  003B5A                     
  8820                           ; BSR set to: 0
  8821  003B5A  0012               	return		;funcret
  8822  003B5C                     __end_of_ClearRxBuff:
  8823                           	opt callstack 0
  8824                           
  8825 ;; *************** function _AddRxBuffToModBus *****************
  8826 ;; Defined at:
  8827 ;;		line 67 in file "Modbus.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;		None
  8830 ;; Auto vars:     Size  Location     Type
  8831 ;;  i               2   41[BANK0 ] int 
  8832 ;; Return value:  Size  Location     Type
  8833 ;;                  1    wreg      void 
  8834 ;; Registers used:
  8835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8836 ;; Tracked objects:
  8837 ;;		On entry : 0/0
  8838 ;;		On exit  : 0/0
  8839 ;;		Unchanged: 0/0
  8840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8842 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8843 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8844 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8845 ;;Total ram usage:        3 bytes
  8846 ;; Hardware stack levels used:    1
  8847 ;; Hardware stack levels required when called:   13
  8848 ;; This function calls:
  8849 ;;		_printf
  8850 ;; This function is called by:
  8851 ;;		_ModbusRx
  8852 ;; This function uses a non-reentrant model
  8853 ;;
  8854                           
  8855                           	psect	text40
  8856  002D68                     __ptext40:
  8857                           	opt callstack 0
  8858  002D68                     _AddRxBuffToModBus:
  8859                           	opt callstack 16
  8860  002D68                     
  8861                           ;Modbus.c: 68:     int i = 0;
  8862  002D68  0E00               	movlw	0
  8863  002D6A  0100               	movlb	0	; () banked
  8864  002D6C  6F8A               	movwf	(AddRxBuffToModBus@i+1)& (0+255),b
  8865  002D6E  0E00               	movlw	0
  8866  002D70  6F89               	movwf	AddRxBuffToModBus@i& (0+255),b
  8867                           
  8868                           ;Modbus.c: 70:     for(i=0l; i<ByteNum; i++){
  8869  002D72  0E00               	movlw	0
  8870  002D74  6F8A               	movwf	(AddRxBuffToModBus@i+1)& (0+255),b
  8871  002D76  0E00               	movlw	0
  8872  002D78  6F89               	movwf	AddRxBuffToModBus@i& (0+255),b
  8873  002D7A  EFD1  F016         	goto	l6926
  8874  002D7E                     l6920:
  8875                           
  8876                           ; BSR set to: 0
  8877                           ;Modbus.c: 71:         ModbusData[ModDataCnt] = rxData[i];
  8878  002D7E  0E00               	movlw	low _rxData
  8879  002D80  2589               	addwf	AddRxBuffToModBus@i& (0+255),w,b
  8880  002D82  6ED9               	movwf	fsr2l,c
  8881  002D84  0E05               	movlw	high _rxData
  8882  002D86  218A               	addwfc	(AddRxBuffToModBus@i+1)& (0+255),w,b
  8883  002D88  6EDA               	movwf	fsr2h,c
  8884  002D8A  0E00               	movlw	low _ModbusData
  8885  002D8C  25D3               	addwf	_ModDataCnt& (0+255),w,b
  8886  002D8E  6EE1               	movwf	fsr1l,c
  8887  002D90  0E02               	movlw	high _ModbusData
  8888  002D92  21D4               	addwfc	(_ModDataCnt+1)& (0+255),w,b
  8889  002D94  6EE2               	movwf	fsr1h,c
  8890  002D96  CFDF FFE7          	movff	indf2,indf1
  8891  002D9A                     
  8892                           ; BSR set to: 0
  8893                           ;Modbus.c: 72:         ModDataCnt++;
  8894  002D9A  4BD3               	infsnz	_ModDataCnt& (0+255),f,b
  8895  002D9C  2BD4               	incf	(_ModDataCnt+1)& (0+255),f,b
  8896  002D9E                     
  8897                           ; BSR set to: 0
  8898                           ;Modbus.c: 73:     }
  8899  002D9E  4B89               	infsnz	AddRxBuffToModBus@i& (0+255),f,b
  8900  002DA0  2B8A               	incf	(AddRxBuffToModBus@i+1)& (0+255),f,b
  8901  002DA2                     l6926:
  8902                           
  8903                           ; BSR set to: 0
  8904  002DA2  51D1               	movf	_ByteNum& (0+255),w,b
  8905  002DA4  5D89               	subwf	AddRxBuffToModBus@i& (0+255),w,b
  8906  002DA6  518A               	movf	(AddRxBuffToModBus@i+1)& (0+255),w,b
  8907  002DA8  0A80               	xorlw	128
  8908  002DAA  6E55               	movwf	??_AddRxBuffToModBus^0,c
  8909  002DAC  51D2               	movf	(_ByteNum+1)& (0+255),w,b
  8910  002DAE  0A80               	xorlw	128
  8911  002DB0  5855               	subwfb	??_AddRxBuffToModBus^0,w,c
  8912  002DB2  A0D8               	btfss	status,0,c
  8913  002DB4  EFDE  F016         	goto	u7081
  8914  002DB8  EFE0  F016         	goto	u7080
  8915  002DBC                     u7081:
  8916  002DBC  EFBF  F016         	goto	l6920
  8917  002DC0                     u7080:
  8918  002DC0                     
  8919                           ; BSR set to: 0
  8920                           ;Modbus.c: 75:     if(Debug ==1){
  8921  002DC0  05D7               	decf	_Debug& (0+255),w,b
  8922  002DC2  A4D8               	btfss	status,2,c
  8923  002DC4  EFE6  F016         	goto	u7091
  8924  002DC8  EFE8  F016         	goto	u7090
  8925  002DCC                     u7091:
  8926  002DCC  EFF9  F016         	goto	l6932
  8927  002DD0                     u7090:
  8928  002DD0                     
  8929                           ; BSR set to: 0
  8930                           ;Modbus.c: 76:         printf("Completed Adding rxData Buffer to ModbusData Array\r\n\n"
      +                          );
  8931  002DD0  0EFC               	movlw	low STR_8
  8932  002DD2  6F7D               	movwf	printf@fmt& (0+255),b
  8933  002DD4  0EF9               	movlw	high STR_8
  8934  002DD6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8935  002DD8  EC73  F01F         	call	_printf	;wreg free
  8936                           
  8937                           ;Modbus.c: 77:         printf("ModDataCnt sitting at %i\r\n\n", ModDataCnt);
  8938  002DDC  0E6E               	movlw	low STR_9
  8939  002DDE  0100               	movlb	0	; () banked
  8940  002DE0  6F7D               	movwf	printf@fmt& (0+255),b
  8941  002DE2  0EFD               	movlw	high STR_9
  8942  002DE4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8943  002DE6  C0D3  F07F         	movff	_ModDataCnt,?_printf+2
  8944  002DEA  C0D4  F080         	movff	_ModDataCnt+1,?_printf+3
  8945  002DEE  EC73  F01F         	call	_printf	;wreg free
  8946  002DF2                     l6932:
  8947                           
  8948                           ;Modbus.c: 80:     if(ModbusData[1] == 0x0F){
  8949  002DF2  0E0F               	movlw	15
  8950  002DF4  0102               	movlb	2	; () banked
  8951  002DF6  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  8952  002DF8  A4D8               	btfss	status,2,c
  8953  002DFA  EF01  F017         	goto	u7101
  8954  002DFE  EF03  F017         	goto	u7100
  8955  002E02                     u7101:
  8956  002E02  EF0C  F017         	goto	l6936
  8957  002E06                     u7100:
  8958  002E06                     l6934:
  8959                           
  8960                           ; BSR set to: 2
  8961                           ;Modbus.c: 81:         ExpectedBytes = ModbusData[6] + 9;
  8962  002E06  0E09               	movlw	9
  8963  002E08  2506               	addwf	(_ModbusData+6)& (0+255),w,b
  8964  002E0A  0100               	movlb	0	; () banked
  8965  002E0C  6FF8               	movwf	_ExpectedBytes& (0+255),b
  8966  002E0E  6BF9               	clrf	(_ExpectedBytes+1)& (0+255),b
  8967  002E10  0E00               	movlw	0
  8968  002E12  23F9               	addwfc	(_ExpectedBytes+1)& (0+255),f,b
  8969                           
  8970                           ;Modbus.c: 82:     }else if (ModbusData[1] == 0x10){
  8971  002E14  EF1C  F017         	goto	l713
  8972  002E18                     l6936:
  8973                           
  8974                           ; BSR set to: 2
  8975  002E18  0E10               	movlw	16
  8976  002E1A  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  8977  002E1C  A4D8               	btfss	status,2,c
  8978  002E1E  EF13  F017         	goto	u7111
  8979  002E22  EF15  F017         	goto	u7110
  8980  002E26                     u7111:
  8981  002E26  EF17  F017         	goto	l6940
  8982  002E2A                     u7110:
  8983  002E2A  EF03  F017         	goto	l6934
  8984  002E2E                     l6940:
  8985                           
  8986                           ; BSR set to: 2
  8987                           ;Modbus.c: 85:         ExpectedBytes = 8;
  8988  002E2E  0E00               	movlw	0
  8989  002E30  0100               	movlb	0	; () banked
  8990  002E32  6FF9               	movwf	(_ExpectedBytes+1)& (0+255),b
  8991  002E34  0E08               	movlw	8
  8992  002E36  6FF8               	movwf	_ExpectedBytes& (0+255),b
  8993  002E38                     l713:
  8994                           
  8995                           ; BSR set to: 0
  8996  002E38  0012               	return		;funcret
  8997  002E3A                     __end_of_AddRxBuffToModBus:
  8998                           	opt callstack 0
  8999                           
  9000 ;; *************** function _ModbusFC10 *****************
  9001 ;; Defined at:
  9002 ;;		line 274 in file "Modbus.c"
  9003 ;; Parameters:    Size  Location     Type
  9004 ;;		None
  9005 ;; Auto vars:     Size  Location     Type
  9006 ;;  j               2   51[BANK0 ] int 
  9007 ;;  i               2   49[BANK0 ] int 
  9008 ;;  TempData        2   47[BANK0 ] unsigned int 
  9009 ;; Return value:  Size  Location     Type
  9010 ;;                  1    wreg      void 
  9011 ;; Registers used:
  9012 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9013 ;; Tracked objects:
  9014 ;;		On entry : 0/0
  9015 ;;		On exit  : 0/0
  9016 ;;		Unchanged: 0/0
  9017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9019 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9020 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9021 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9022 ;;Total ram usage:       10 bytes
  9023 ;; Hardware stack levels used:    1
  9024 ;; Hardware stack levels required when called:   14
  9025 ;; This function calls:
  9026 ;;		_PrintMB400
  9027 ;;		_PrintModRespon
  9028 ;;		_UART1_Write_string
  9029 ;;		_generateCRC
  9030 ;; This function is called by:
  9031 ;;		_main
  9032 ;; This function uses a non-reentrant model
  9033 ;;
  9034                           
  9035                           	psect	text41
  9036  001A44                     __ptext41:
  9037                           	opt callstack 0
  9038  001A44                     _ModbusFC10:
  9039                           	opt callstack 16
  9040  001A44                     
  9041                           ;Modbus.c: 279:     int j = 0;
  9042  001A44  0E00               	movlw	0
  9043  001A46  0100               	movlb	0	; () banked
  9044  001A48  6F94               	movwf	(ModbusFC10@j+1)& (0+255),b
  9045  001A4A  0E00               	movlw	0
  9046  001A4C  6F93               	movwf	ModbusFC10@j& (0+255),b
  9047                           
  9048                           ;Modbus.c: 280:     unsigned int TempData = 0x0000;
  9049  001A4E  0E00               	movlw	0
  9050  001A50  6F90               	movwf	(ModbusFC10@TempData+1)& (0+255),b
  9051  001A52  0E00               	movlw	0
  9052  001A54  6F8F               	movwf	ModbusFC10@TempData& (0+255),b
  9053                           
  9054                           ;Modbus.c: 282:     MBResCnt = 0;
  9055  001A56  0E00               	movlw	0
  9056  001A58  6FD0               	movwf	(_MBResCnt+1)& (0+255),b
  9057  001A5A  0E00               	movlw	0
  9058  001A5C  6FCF               	movwf	_MBResCnt& (0+255),b
  9059  001A5E                     
  9060                           ; BSR set to: 0
  9061                           ;Modbus.c: 283:     MBRespon[MBResCnt] = ModbusData[0];
  9062  001A5E  0EA0               	movlw	low _MBRespon
  9063  001A60  25CF               	addwf	_MBResCnt& (0+255),w,b
  9064  001A62  6ED9               	movwf	fsr2l,c
  9065  001A64  0E02               	movlw	high _MBRespon
  9066  001A66  21D0               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9067  001A68  6EDA               	movwf	fsr2h,c
  9068  001A6A  C200  FFDF         	movff	_ModbusData,indf2
  9069  001A6E                     
  9070                           ; BSR set to: 0
  9071                           ;Modbus.c: 284:     MBResCnt++;
  9072  001A6E  4BCF               	infsnz	_MBResCnt& (0+255),f,b
  9073  001A70  2BD0               	incf	(_MBResCnt+1)& (0+255),f,b
  9074  001A72                     
  9075                           ; BSR set to: 0
  9076                           ;Modbus.c: 285:     MBRespon[MBResCnt] = ModbusData[1];
  9077  001A72  0EA0               	movlw	low _MBRespon
  9078  001A74  25CF               	addwf	_MBResCnt& (0+255),w,b
  9079  001A76  6ED9               	movwf	fsr2l,c
  9080  001A78  0E02               	movlw	high _MBRespon
  9081  001A7A  21D0               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9082  001A7C  6EDA               	movwf	fsr2h,c
  9083  001A7E  C201  FFDF         	movff	_ModbusData+1,indf2
  9084  001A82                     
  9085                           ; BSR set to: 0
  9086                           ;Modbus.c: 286:     MBResCnt++;
  9087  001A82  4BCF               	infsnz	_MBResCnt& (0+255),f,b
  9088  001A84  2BD0               	incf	(_MBResCnt+1)& (0+255),f,b
  9089  001A86                     
  9090                           ; BSR set to: 0
  9091                           ;Modbus.c: 287:     MBRespon[MBResCnt] = ModbusData[2];
  9092  001A86  0EA0               	movlw	low _MBRespon
  9093  001A88  25CF               	addwf	_MBResCnt& (0+255),w,b
  9094  001A8A  6ED9               	movwf	fsr2l,c
  9095  001A8C  0E02               	movlw	high _MBRespon
  9096  001A8E  21D0               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9097  001A90  6EDA               	movwf	fsr2h,c
  9098  001A92  C202  FFDF         	movff	_ModbusData+2,indf2
  9099  001A96                     
  9100                           ; BSR set to: 0
  9101                           ;Modbus.c: 288:     MBResCnt++;
  9102  001A96  4BCF               	infsnz	_MBResCnt& (0+255),f,b
  9103  001A98  2BD0               	incf	(_MBResCnt+1)& (0+255),f,b
  9104  001A9A                     
  9105                           ; BSR set to: 0
  9106                           ;Modbus.c: 289:     MBRespon[MBResCnt] = ModbusData[3];
  9107  001A9A  0EA0               	movlw	low _MBRespon
  9108  001A9C  25CF               	addwf	_MBResCnt& (0+255),w,b
  9109  001A9E  6ED9               	movwf	fsr2l,c
  9110  001AA0  0E02               	movlw	high _MBRespon
  9111  001AA2  21D0               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9112  001AA4  6EDA               	movwf	fsr2h,c
  9113  001AA6  C203  FFDF         	movff	_ModbusData+3,indf2
  9114  001AAA                     
  9115                           ; BSR set to: 0
  9116                           ;Modbus.c: 290:     MBResCnt++;
  9117  001AAA  4BCF               	infsnz	_MBResCnt& (0+255),f,b
  9118  001AAC  2BD0               	incf	(_MBResCnt+1)& (0+255),f,b
  9119  001AAE                     
  9120                           ; BSR set to: 0
  9121                           ;Modbus.c: 291:     MBRespon[MBResCnt] = ModbusData[4];
  9122  001AAE  0EA0               	movlw	low _MBRespon
  9123  001AB0  25CF               	addwf	_MBResCnt& (0+255),w,b
  9124  001AB2  6ED9               	movwf	fsr2l,c
  9125  001AB4  0E02               	movlw	high _MBRespon
  9126  001AB6  21D0               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9127  001AB8  6EDA               	movwf	fsr2h,c
  9128  001ABA  C204  FFDF         	movff	_ModbusData+4,indf2
  9129  001ABE                     
  9130                           ; BSR set to: 0
  9131                           ;Modbus.c: 292:     MBResCnt++;
  9132  001ABE  4BCF               	infsnz	_MBResCnt& (0+255),f,b
  9133  001AC0  2BD0               	incf	(_MBResCnt+1)& (0+255),f,b
  9134  001AC2                     
  9135                           ; BSR set to: 0
  9136                           ;Modbus.c: 293:     MBRespon[MBResCnt] = ModbusData[5];
  9137  001AC2  0EA0               	movlw	low _MBRespon
  9138  001AC4  25CF               	addwf	_MBResCnt& (0+255),w,b
  9139  001AC6  6ED9               	movwf	fsr2l,c
  9140  001AC8  0E02               	movlw	high _MBRespon
  9141  001ACA  21D0               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9142  001ACC  6EDA               	movwf	fsr2h,c
  9143  001ACE  C205  FFDF         	movff	_ModbusData+5,indf2
  9144  001AD2                     
  9145                           ; BSR set to: 0
  9146                           ;Modbus.c: 294:     MBResCnt++;
  9147  001AD2  4BCF               	infsnz	_MBResCnt& (0+255),f,b
  9148  001AD4  2BD0               	incf	(_MBResCnt+1)& (0+255),f,b
  9149                           
  9150                           ;Modbus.c: 296:     for(i=0; i< (ModbusData[5]) ; i++ ){
  9151  001AD6  0E00               	movlw	0
  9152  001AD8  6F92               	movwf	(ModbusFC10@i+1)& (0+255),b
  9153  001ADA  0E00               	movlw	0
  9154  001ADC  6F91               	movwf	ModbusFC10@i& (0+255),b
  9155  001ADE  EFA7  F00D         	goto	l7282
  9156  001AE2                     l7274:
  9157                           
  9158                           ; BSR set to: 0
  9159                           ;Modbus.c: 303:         TempData = ModbusData[7 +j] *256 + ModbusData[8 +j];
  9160  001AE2  0E08               	movlw	low (_ModbusData+8)
  9161  001AE4  2593               	addwf	ModbusFC10@j& (0+255),w,b
  9162  001AE6  6ED9               	movwf	fsr2l,c
  9163  001AE8  0E02               	movlw	high (_ModbusData+8)
  9164  001AEA  2194               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
  9165  001AEC  6EDA               	movwf	fsr2h,c
  9166  001AEE  50DF               	movf	indf2,w,c
  9167  001AF0  6F8B               	movwf	??_ModbusFC10& (0+255),b
  9168  001AF2  0E07               	movlw	low (_ModbusData+7)
  9169  001AF4  2593               	addwf	ModbusFC10@j& (0+255),w,b
  9170  001AF6  6ED9               	movwf	fsr2l,c
  9171  001AF8  0E02               	movlw	high (_ModbusData+7)
  9172  001AFA  2194               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
  9173  001AFC  6EDA               	movwf	fsr2h,c
  9174  001AFE  50DF               	movf	indf2,w,c
  9175  001B00  6F8C               	movwf	(??_ModbusFC10+1)& (0+255),b
  9176  001B02  518C               	movf	(??_ModbusFC10+1)& (0+255),w,b
  9177  001B04  6F8E               	movwf	(??_ModbusFC10+3)& (0+255),b
  9178  001B06  6B8D               	clrf	(??_ModbusFC10+2)& (0+255),b
  9179  001B08  518B               	movf	??_ModbusFC10& (0+255),w,b
  9180  001B0A  258D               	addwf	(??_ModbusFC10+2)& (0+255),w,b
  9181  001B0C  6F8F               	movwf	ModbusFC10@TempData& (0+255),b
  9182  001B0E  0E00               	movlw	0
  9183  001B10  218E               	addwfc	(??_ModbusFC10+3)& (0+255),w,b
  9184  001B12  6F90               	movwf	(ModbusFC10@TempData+1)& (0+255),b
  9185  001B14                     
  9186                           ; BSR set to: 0
  9187                           ;Modbus.c: 304:         j = j+2;
  9188  001B14  0E02               	movlw	2
  9189  001B16  2593               	addwf	ModbusFC10@j& (0+255),w,b
  9190  001B18  6F93               	movwf	ModbusFC10@j& (0+255),b
  9191  001B1A  0E00               	movlw	0
  9192  001B1C  2194               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
  9193  001B1E  6F94               	movwf	(ModbusFC10@j+1)& (0+255),b
  9194  001B20                     
  9195                           ; BSR set to: 0
  9196                           ;Modbus.c: 305:         MB400xx[ModbusData[3] +i] = TempData;
  9197  001B20  0102               	movlb	2	; () banked
  9198  001B22  5103               	movf	(_ModbusData+3)& (0+255),w,b
  9199  001B24  0100               	movlb	0	; () banked
  9200  001B26  2591               	addwf	ModbusFC10@i& (0+255),w,b
  9201  001B28  6F8B               	movwf	??_ModbusFC10& (0+255),b
  9202  001B2A  0E00               	movlw	0
  9203  001B2C  2192               	addwfc	(ModbusFC10@i+1)& (0+255),w,b
  9204  001B2E  6F8C               	movwf	(??_ModbusFC10+1)& (0+255),b
  9205  001B30  90D8               	bcf	status,0,c
  9206  001B32  378B               	rlcf	??_ModbusFC10& (0+255),f,b
  9207  001B34  378C               	rlcf	(??_ModbusFC10+1)& (0+255),f,b
  9208  001B36  0E64               	movlw	low _MB400xx
  9209  001B38  258B               	addwf	??_ModbusFC10& (0+255),w,b
  9210  001B3A  6ED9               	movwf	fsr2l,c
  9211  001B3C  0E04               	movlw	high _MB400xx
  9212  001B3E  218C               	addwfc	(??_ModbusFC10+1)& (0+255),w,b
  9213  001B40  6EDA               	movwf	fsr2h,c
  9214  001B42  C08F  FFDE         	movff	ModbusFC10@TempData,postinc2
  9215  001B46  C090  FFDD         	movff	ModbusFC10@TempData+1,postdec2
  9216  001B4A                     
  9217                           ; BSR set to: 0
  9218                           ;Modbus.c: 306:     }
  9219  001B4A  4B91               	infsnz	ModbusFC10@i& (0+255),f,b
  9220  001B4C  2B92               	incf	(ModbusFC10@i+1)& (0+255),f,b
  9221  001B4E                     l7282:
  9222                           
  9223                           ; BSR set to: 0
  9224  001B4E  0102               	movlb	2	; () banked
  9225  001B50  5105               	movf	(_ModbusData+5)& (0+255),w,b
  9226  001B52  0100               	movlb	0	; () banked
  9227  001B54  6F8B               	movwf	??_ModbusFC10& (0+255),b
  9228  001B56  6B8C               	clrf	(??_ModbusFC10+1)& (0+255),b
  9229  001B58  518B               	movf	??_ModbusFC10& (0+255),w,b
  9230  001B5A  5D91               	subwf	ModbusFC10@i& (0+255),w,b
  9231  001B5C  5192               	movf	(ModbusFC10@i+1)& (0+255),w,b
  9232  001B5E  0A80               	xorlw	128
  9233  001B60  6F8D               	movwf	(??_ModbusFC10+2)& (0+255),b
  9234  001B62  518C               	movf	(??_ModbusFC10+1)& (0+255),w,b
  9235  001B64  0A80               	xorlw	128
  9236  001B66  598D               	subwfb	(??_ModbusFC10+2)& (0+255),w,b
  9237  001B68  A0D8               	btfss	status,0,c
  9238  001B6A  EFB9  F00D         	goto	u7511
  9239  001B6E  EFBB  F00D         	goto	u7510
  9240  001B72                     u7511:
  9241  001B72  EF71  F00D         	goto	l7274
  9242  001B76                     u7510:
  9243  001B76                     
  9244                           ; BSR set to: 0
  9245                           ;Modbus.c: 308:     ByteHi = generateCRC(MBResCnt, 1);
  9246  001B76  C0CF  F005         	movff	_MBResCnt,generateCRC@MessCnt
  9247  001B7A  C0D0  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  9248  001B7E  0E01               	movlw	1
  9249  001B80  6E07               	movwf	generateCRC@HiOrLo^0,c
  9250  001B82  EC46  F016         	call	_generateCRC	;wreg free
  9251  001B86  C005  F0CD         	movff	?_generateCRC,_ByteHi
  9252  001B8A  C006  F0CE         	movff	?_generateCRC+1,_ByteHi+1
  9253                           
  9254                           ;Modbus.c: 309:     ByteLo = generateCRC(MBResCnt, 0);
  9255  001B8E  C0CF  F005         	movff	_MBResCnt,generateCRC@MessCnt
  9256  001B92  C0D0  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  9257  001B96  0E00               	movlw	0
  9258  001B98  6E07               	movwf	generateCRC@HiOrLo^0,c
  9259  001B9A  EC46  F016         	call	_generateCRC	;wreg free
  9260  001B9E  C005  F0F4         	movff	?_generateCRC,_ByteLo
  9261  001BA2  C006  F0F5         	movff	?_generateCRC+1,_ByteLo+1
  9262  001BA6                     
  9263                           ;Modbus.c: 311:     MBRespon[MBResCnt] = ByteHi;
  9264  001BA6  0EA0               	movlw	low _MBRespon
  9265  001BA8  0100               	movlb	0	; () banked
  9266  001BAA  25CF               	addwf	_MBResCnt& (0+255),w,b
  9267  001BAC  6ED9               	movwf	fsr2l,c
  9268  001BAE  0E02               	movlw	high _MBRespon
  9269  001BB0  21D0               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9270  001BB2  6EDA               	movwf	fsr2h,c
  9271  001BB4  C0CD  FFDF         	movff	_ByteHi,indf2
  9272  001BB8                     
  9273                           ; BSR set to: 0
  9274                           ;Modbus.c: 312:     MBRespon[MBResCnt +1] = ByteLo;
  9275  001BB8  0EA1               	movlw	low (_MBRespon+1)
  9276  001BBA  25CF               	addwf	_MBResCnt& (0+255),w,b
  9277  001BBC  6ED9               	movwf	fsr2l,c
  9278  001BBE  0E02               	movlw	high (_MBRespon+1)
  9279  001BC0  21D0               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9280  001BC2  6EDA               	movwf	fsr2h,c
  9281  001BC4  C0F4  FFDF         	movff	_ByteLo,indf2
  9282  001BC8                     
  9283                           ; BSR set to: 0
  9284                           ;Modbus.c: 313:     MBResCnt = MBResCnt +2;
  9285  001BC8  0E02               	movlw	2
  9286  001BCA  25CF               	addwf	_MBResCnt& (0+255),w,b
  9287  001BCC  6FCF               	movwf	_MBResCnt& (0+255),b
  9288  001BCE  0E00               	movlw	0
  9289  001BD0  21D0               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9290  001BD2  6FD0               	movwf	(_MBResCnt+1)& (0+255),b
  9291  001BD4                     
  9292                           ; BSR set to: 0
  9293                           ;Modbus.c: 315:     if(Debug==1){
  9294  001BD4  05D7               	decf	_Debug& (0+255),w,b
  9295  001BD6  A4D8               	btfss	status,2,c
  9296  001BD8  EFF0  F00D         	goto	u7521
  9297  001BDC  EFF2  F00D         	goto	u7520
  9298  001BE0                     u7521:
  9299  001BE0  EFF6  F00D         	goto	l7296
  9300  001BE4                     u7520:
  9301  001BE4                     
  9302                           ; BSR set to: 0
  9303                           ;Modbus.c: 316:         PrintMB400();
  9304  001BE4  EC40  F01B         	call	_PrintMB400	;wreg free
  9305                           
  9306                           ;Modbus.c: 317:         PrintModRespon();
  9307  001BE8  EC67  F019         	call	_PrintModRespon	;wreg free
  9308  001BEC                     l7296:
  9309                           
  9310                           ;Modbus.c: 320:     UART1_Write_string(MBRespon,MBResCnt);
  9311  001BEC  0EA0               	movlw	low _MBRespon
  9312  001BEE  6E06               	movwf	UART1_Write_string@data^0,c
  9313  001BF0  0E02               	movlw	high _MBRespon
  9314  001BF2  6E07               	movwf	(UART1_Write_string@data+1)^0,c
  9315  001BF4  C0CF  F008         	movff	_MBResCnt,UART1_Write_string@data_len
  9316  001BF8  C0D0  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
  9317  001BFC  EC09  F01B         	call	_UART1_Write_string	;wreg free
  9318  001C00  0012               	return		;funcret
  9319  001C02                     __end_of_ModbusFC10:
  9320                           	opt callstack 0
  9321                           
  9322 ;; *************** function _PrintMB400 *****************
  9323 ;; Defined at:
  9324 ;;		line 23 in file "Modbus.c"
  9325 ;; Parameters:    Size  Location     Type
  9326 ;;		None
  9327 ;; Auto vars:     Size  Location     Type
  9328 ;;  i               2   84[COMRAM] int 
  9329 ;; Return value:  Size  Location     Type
  9330 ;;                  1    wreg      void 
  9331 ;; Registers used:
  9332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9333 ;; Tracked objects:
  9334 ;;		On entry : 0/0
  9335 ;;		On exit  : 0/0
  9336 ;;		Unchanged: 0/0
  9337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9339 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9341 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9342 ;;Total ram usage:        2 bytes
  9343 ;; Hardware stack levels used:    1
  9344 ;; Hardware stack levels required when called:   13
  9345 ;; This function calls:
  9346 ;;		_printf
  9347 ;; This function is called by:
  9348 ;;		_main
  9349 ;;		_ModbusFC10
  9350 ;; This function uses a non-reentrant model
  9351 ;;
  9352                           
  9353                           	psect	text42
  9354  003680                     __ptext42:
  9355                           	opt callstack 0
  9356  003680                     _PrintMB400:
  9357                           	opt callstack 17
  9358  003680                     
  9359                           ;Modbus.c: 25:     printf("UpdatedMB400 \r\n");
  9360  003680  0E79               	movlw	low STR_6
  9361  003682  0100               	movlb	0	; () banked
  9362  003684  6F7D               	movwf	printf@fmt& (0+255),b
  9363  003686  0EFF               	movlw	high STR_6
  9364  003688  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9365  00368A  EC73  F01F         	call	_printf	;wreg free
  9366  00368E                     
  9367                           ;Modbus.c: 28:     for(i=0; i<32; i++ ){
  9368  00368E  0E00               	movlw	0
  9369  003690  6E56               	movwf	(PrintMB400@i+1)^0,c
  9370  003692  0E00               	movlw	0
  9371  003694  6E55               	movwf	PrintMB400@i^0,c
  9372  003696                     l6894:
  9373                           
  9374                           ;Modbus.c: 29:         printf("   Reg: %i Data: 0x%04x \r\n", i, MB400xx[i]);
  9375  003696  0EC2               	movlw	low STR_7
  9376  003698  0100               	movlb	0	; () banked
  9377  00369A  6F7D               	movwf	printf@fmt& (0+255),b
  9378  00369C  0EFD               	movlw	high STR_7
  9379  00369E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9380  0036A0  C055  F07F         	movff	PrintMB400@i,?_printf+2
  9381  0036A4  C056  F080         	movff	PrintMB400@i+1,?_printf+3
  9382  0036A8  90D8               	bcf	status,0,c
  9383  0036AA  3455               	rlcf	PrintMB400@i^0,w,c
  9384  0036AC  6ED9               	movwf	fsr2l,c
  9385  0036AE  3456               	rlcf	(PrintMB400@i+1)^0,w,c
  9386  0036B0  6EDA               	movwf	fsr2h,c
  9387  0036B2  0E64               	movlw	low _MB400xx
  9388  0036B4  26D9               	addwf	fsr2l,f,c
  9389  0036B6  0E04               	movlw	high _MB400xx
  9390  0036B8  22DA               	addwfc	fsr2h,f,c
  9391  0036BA  CFDE F081          	movff	postinc2,?_printf+4
  9392  0036BE  CFDD F082          	movff	postdec2,?_printf+5
  9393  0036C2  EC73  F01F         	call	_printf	;wreg free
  9394  0036C6                     
  9395                           ;Modbus.c: 30:     }
  9396  0036C6  4A55               	infsnz	PrintMB400@i^0,f,c
  9397  0036C8  2A56               	incf	(PrintMB400@i+1)^0,f,c
  9398  0036CA  BE56               	btfsc	(PrintMB400@i+1)^0,7,c
  9399  0036CC  EF71  F01B         	goto	u7041
  9400  0036D0  5056               	movf	(PrintMB400@i+1)^0,w,c
  9401  0036D2  E109               	bnz	u7040
  9402  0036D4  0E20               	movlw	32
  9403  0036D6  5C55               	subwf	PrintMB400@i^0,w,c
  9404  0036D8  A0D8               	btfss	status,0,c
  9405  0036DA  EF71  F01B         	goto	u7041
  9406  0036DE  EF73  F01B         	goto	u7040
  9407  0036E2                     u7041:
  9408  0036E2  EF4B  F01B         	goto	l6894
  9409  0036E6                     u7040:
  9410  0036E6  0012               	return		;funcret
  9411  0036E8                     __end_of_PrintMB400:
  9412                           	opt callstack 0
  9413                           
  9414 ;; *************** function _ModbusFC03 *****************
  9415 ;; Defined at:
  9416 ;;		line 143 in file "Modbus.c"
  9417 ;; Parameters:    Size  Location     Type
  9418 ;;		None
  9419 ;; Auto vars:     Size  Location     Type
  9420 ;;  i               2   84[COMRAM] int 
  9421 ;; Return value:  Size  Location     Type
  9422 ;;                  1    wreg      void 
  9423 ;; Registers used:
  9424 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9425 ;; Tracked objects:
  9426 ;;		On entry : 0/0
  9427 ;;		On exit  : 0/0
  9428 ;;		Unchanged: 0/0
  9429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9431 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9432 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9433 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9434 ;;Total ram usage:        6 bytes
  9435 ;; Hardware stack levels used:    1
  9436 ;; Hardware stack levels required when called:   13
  9437 ;; This function calls:
  9438 ;;		_UART1_Write_string
  9439 ;;		_generateCRC
  9440 ;;		_printf
  9441 ;; This function is called by:
  9442 ;;		_main
  9443 ;; This function uses a non-reentrant model
  9444 ;;
  9445                           
  9446                           	psect	text43
  9447  0006B4                     __ptext43:
  9448                           	opt callstack 0
  9449  0006B4                     _ModbusFC03:
  9450                           	opt callstack 17
  9451  0006B4                     
  9452                           ;Modbus.c: 148:     MBResCnt = 0;
  9453  0006B4  0E00               	movlw	0
  9454  0006B6  0100               	movlb	0	; () banked
  9455  0006B8  6FD0               	movwf	(_MBResCnt+1)& (0+255),b
  9456  0006BA  0E00               	movlw	0
  9457  0006BC  6FCF               	movwf	_MBResCnt& (0+255),b
  9458  0006BE                     
  9459                           ; BSR set to: 0
  9460                           ;Modbus.c: 149:     MBRespon[MBResCnt] = ModbusData[0];
  9461  0006BE  0EA0               	movlw	low _MBRespon
  9462  0006C0  25CF               	addwf	_MBResCnt& (0+255),w,b
  9463  0006C2  6ED9               	movwf	fsr2l,c
  9464  0006C4  0E02               	movlw	high _MBRespon
  9465  0006C6  21D0               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9466  0006C8  6EDA               	movwf	fsr2h,c
  9467  0006CA  C200  FFDF         	movff	_ModbusData,indf2
  9468  0006CE                     
  9469                           ; BSR set to: 0
  9470                           ;Modbus.c: 150:     MBResCnt++;
  9471  0006CE  4BCF               	infsnz	_MBResCnt& (0+255),f,b
  9472  0006D0  2BD0               	incf	(_MBResCnt+1)& (0+255),f,b
  9473  0006D2                     
  9474                           ; BSR set to: 0
  9475                           ;Modbus.c: 151:     MBRespon[MBResCnt] = ModbusData[1];
  9476  0006D2  0EA0               	movlw	low _MBRespon
  9477  0006D4  25CF               	addwf	_MBResCnt& (0+255),w,b
  9478  0006D6  6ED9               	movwf	fsr2l,c
  9479  0006D8  0E02               	movlw	high _MBRespon
  9480  0006DA  21D0               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9481  0006DC  6EDA               	movwf	fsr2h,c
  9482  0006DE  C201  FFDF         	movff	_ModbusData+1,indf2
  9483  0006E2                     
  9484                           ; BSR set to: 0
  9485                           ;Modbus.c: 152:     MBResCnt++;
  9486  0006E2  4BCF               	infsnz	_MBResCnt& (0+255),f,b
  9487  0006E4  2BD0               	incf	(_MBResCnt+1)& (0+255),f,b
  9488  0006E6                     
  9489                           ; BSR set to: 0
  9490                           ;Modbus.c: 153:     MBRespon[MBResCnt] = ModbusData[5] *2;
  9491  0006E6  0102               	movlb	2	; () banked
  9492  0006E8  5105               	movf	(_ModbusData+5)& (0+255),w,b
  9493  0006EA  0D02               	mullw	2
  9494  0006EC  0EA0               	movlw	low _MBRespon
  9495  0006EE  0100               	movlb	0	; () banked
  9496  0006F0  25CF               	addwf	_MBResCnt& (0+255),w,b
  9497  0006F2  6ED9               	movwf	fsr2l,c
  9498  0006F4  0E02               	movlw	high _MBRespon
  9499  0006F6  21D0               	addwfc	(_MBResCnt+1)& (0+255),w,b
  9500  0006F8  6EDA               	movwf	fsr2h,c
  9501  0006FA  CFF3 FFDF          	movff	prodl,indf2
  9502  0006FE                     
  9503                           ; BSR set to: 0
  9504                           ;Modbus.c: 154:     MBResCnt++;
  9505  0006FE  4BCF               	infsnz	_MBResCnt& (0+255),f,b
  9506  000700  2BD0               	incf	(_MBResCnt+1)& (0+255),f,b
  9507                           
  9508                           ;Modbus.c: 158:     switch(ModbusData[2]){
  9509  000702  EFBB  F003         	goto	l7200
  9510  000706                     l7184:
  9511                           
  9512                           ; BSR set to: 0
  9513                           ;Modbus.c: 161:         {;Modbus.c: 162:             printf("Requested Circuit Data\r\n\
      +                          n");
  9514  000706  0EDD               	movlw	low STR_14
  9515  000708  6F7D               	movwf	printf@fmt& (0+255),b
  9516  00070A  0EFD               	movlw	high STR_14
  9517  00070C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9518  00070E  EC73  F01F         	call	_printf	;wreg free
  9519                           
  9520                           ;Modbus.c: 163:             break;
  9521  000712  EFE6  F003         	goto	l7202
  9522  000716                     l7186:
  9523                           
  9524                           ; BSR set to: 0
  9525                           ;Modbus.c: 166:         {;Modbus.c: 167:             printf("Requested Part No.\r\n\n");
  9526  000716  0EB7               	movlw	low STR_15
  9527  000718  6F7D               	movwf	printf@fmt& (0+255),b
  9528  00071A  0EFE               	movlw	high STR_15
  9529  00071C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9530  00071E  EC73  F01F         	call	_printf	;wreg free
  9531                           
  9532                           ;Modbus.c: 168:             break;
  9533  000722  EFE6  F003         	goto	l7202
  9534  000726                     l7188:
  9535                           
  9536                           ; BSR set to: 0
  9537                           ;Modbus.c: 171:         {;Modbus.c: 172:             printf("Requested Revision\r\n\n");
  9538  000726  0ECD               	movlw	low STR_16
  9539  000728  6F7D               	movwf	printf@fmt& (0+255),b
  9540  00072A  0EFE               	movlw	high STR_16
  9541  00072C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9542  00072E  EC73  F01F         	call	_printf	;wreg free
  9543                           
  9544                           ;Modbus.c: 173:             break;
  9545  000732  EFE6  F003         	goto	l7202
  9546  000736                     l7190:
  9547                           
  9548                           ; BSR set to: 0
  9549                           ;Modbus.c: 176:         {;Modbus.c: 177:             printf("Requested Serial No.\r\n\n"
      +                          );
  9550  000736  0E44               	movlw	low STR_17
  9551  000738  6F7D               	movwf	printf@fmt& (0+255),b
  9552  00073A  0EFE               	movlw	high STR_17
  9553  00073C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9554  00073E  EC73  F01F         	call	_printf	;wreg free
  9555                           
  9556                           ;Modbus.c: 178:             break;
  9557  000742  EFE6  F003         	goto	l7202
  9558  000746                     l7192:
  9559                           
  9560                           ; BSR set to: 0
  9561                           ;Modbus.c: 181:         {;Modbus.c: 182:             printf("Requested Compile Date\r\n\
      +                          n");
  9562  000746  0E11               	movlw	low STR_18
  9563  000748  6F7D               	movwf	printf@fmt& (0+255),b
  9564  00074A  0EFE               	movlw	high STR_18
  9565  00074C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9566  00074E  EC73  F01F         	call	_printf	;wreg free
  9567                           
  9568                           ;Modbus.c: 183:             break;
  9569  000752  EFE6  F003         	goto	l7202
  9570  000756                     l7194:
  9571                           
  9572                           ; BSR set to: 0
  9573                           ;Modbus.c: 186:         {;Modbus.c: 187:             printf("Requested Compile Time\r\n\
      +                          n");
  9574  000756  0EF7               	movlw	low STR_19
  9575  000758  6F7D               	movwf	printf@fmt& (0+255),b
  9576  00075A  0EFD               	movlw	high STR_19
  9577  00075C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9578  00075E  EC73  F01F         	call	_printf	;wreg free
  9579                           
  9580                           ;Modbus.c: 188:             break;
  9581  000762  EFE6  F003         	goto	l7202
  9582  000766                     l7196:
  9583                           
  9584                           ; BSR set to: 0
  9585                           ;Modbus.c: 191:         {;Modbus.c: 192:             printf("Requested Analogue Inputs\r
      +                          \n\n");
  9586  000766  0E51               	movlw	low STR_20
  9587  000768  6F7D               	movwf	printf@fmt& (0+255),b
  9588  00076A  0EFD               	movlw	high STR_20
  9589  00076C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9590  00076E  EC73  F01F         	call	_printf	;wreg free
  9591                           
  9592                           ;Modbus.c: 193:             break;
  9593  000772  EFE6  F003         	goto	l7202
  9594  000776                     l7200:
  9595                           
  9596                           ; BSR set to: 0
  9597  000776  0102               	movlb	2	; () banked
  9598  000778  5102               	movf	(_ModbusData+2)& (0+255),w,b
  9599  00077A  0100               	movlb	0	; () banked
  9600  00077C  6F89               	movwf	??_ModbusFC03& (0+255),b
  9601  00077E  6B8A               	clrf	(??_ModbusFC03+1)& (0+255),b
  9602                           
  9603                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9604                           ; Switch size 1, requested type "simple"
  9605                           ; Number of cases is 1, Range of values is 0 to 0
  9606                           ; switch strategies available:
  9607                           ; Name         Instructions Cycles
  9608                           ; simple_byte            4     3 (average)
  9609                           ;	Chosen strategy is simple_byte
  9610  000780  518A               	movf	(??_ModbusFC03+1)& (0+255),w,b
  9611  000782  0A00               	xorlw	0	; case 0
  9612  000784  B4D8               	btfsc	status,2,c
  9613  000786  EFC7  F003         	goto	l7618
  9614  00078A  EFE6  F003         	goto	l7202
  9615  00078E                     l7618:
  9616                           
  9617                           ; BSR set to: 0
  9618                           ; Switch size 1, requested type "simple"
  9619                           ; Number of cases is 7, Range of values is 0 to 6
  9620                           ; switch strategies available:
  9621                           ; Name         Instructions Cycles
  9622                           ; simple_byte           22    12 (average)
  9623                           ;	Chosen strategy is simple_byte
  9624  00078E  5189               	movf	??_ModbusFC03& (0+255),w,b
  9625  000790  0A00               	xorlw	0	; case 0
  9626  000792  B4D8               	btfsc	status,2,c
  9627  000794  EF83  F003         	goto	l7184
  9628  000798  0A01               	xorlw	1	; case 1
  9629  00079A  B4D8               	btfsc	status,2,c
  9630  00079C  EF8B  F003         	goto	l7186
  9631  0007A0  0A03               	xorlw	3	; case 2
  9632  0007A2  B4D8               	btfsc	status,2,c
  9633  0007A4  EF93  F003         	goto	l7188
  9634  0007A8  0A01               	xorlw	1	; case 3
  9635  0007AA  B4D8               	btfsc	status,2,c
  9636  0007AC  EF9B  F003         	goto	l7190
  9637  0007B0  0A07               	xorlw	7	; case 4
  9638  0007B2  B4D8               	btfsc	status,2,c
  9639  0007B4  EFA3  F003         	goto	l7192
  9640  0007B8  0A01               	xorlw	1	; case 5
  9641  0007BA  B4D8               	btfsc	status,2,c
  9642  0007BC  EFAB  F003         	goto	l7194
  9643  0007C0  0A03               	xorlw	3	; case 6
  9644  0007C2  B4D8               	btfsc	status,2,c
  9645  0007C4  EFB3  F003         	goto	l7196
  9646  0007C8  EFE6  F003         	goto	l7202
  9647  0007CC                     l7202:
  9648                           
  9649                           ;Modbus.c: 198:     for(i=0; i< (ModbusData[5]) ; i++ ){
  9650  0007CC  0E00               	movlw	0
  9651  0007CE  6E56               	movwf	(ModbusFC03@i+1)^0,c
  9652  0007D0  0E00               	movlw	0
  9653  0007D2  6E55               	movwf	ModbusFC03@i^0,c
  9654  0007D4  EF5E  F005         	goto	l7232
  9655  0007D8                     l7204:
  9656                           
  9657                           ; BSR set to: 0
  9658                           ;Modbus.c: 203:         if(ModbusData[2] == 0x03){
  9659  0007D8  0E03               	movlw	3
  9660  0007DA  0102               	movlb	2	; () banked
  9661  0007DC  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
  9662  0007DE  A4D8               	btfss	status,2,c
  9663  0007E0  EFF4  F003         	goto	u7441
  9664  0007E4  EFF6  F003         	goto	u7440
  9665  0007E8                     u7441:
  9666  0007E8  EF27  F004         	goto	l7208
  9667  0007EC                     u7440:
  9668  0007EC                     
  9669                           ; BSR set to: 2
  9670                           ;Modbus.c: 210:             ByteLo = MB303xx[ModbusData[3] +i] & 0x00FF;
  9671  0007EC  5103               	movf	(_ModbusData+3)& (0+255),w,b
  9672  0007EE  2455               	addwf	ModbusFC03@i^0,w,c
  9673  0007F0  0100               	movlb	0	; () banked
  9674  0007F2  6F89               	movwf	??_ModbusFC03& (0+255),b
  9675  0007F4  0E00               	movlw	0
  9676  0007F6  2056               	addwfc	(ModbusFC03@i+1)^0,w,c
  9677  0007F8  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
  9678  0007FA  90D8               	bcf	status,0,c
  9679  0007FC  3789               	rlcf	??_ModbusFC03& (0+255),f,b
  9680  0007FE  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  9681  000800  0E35               	movlw	low _MB303xx
  9682  000802  2589               	addwf	??_ModbusFC03& (0+255),w,b
  9683  000804  6ED9               	movwf	fsr2l,c
  9684  000806  0E01               	movlw	high _MB303xx
  9685  000808  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  9686  00080A  6EDA               	movwf	fsr2h,c
  9687  00080C  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
  9688  000810  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
  9689  000814  518B               	movf	(??_ModbusFC03+2)& (0+255),w,b
  9690  000816  6FF4               	movwf	_ByteLo& (0+255),b
  9691  000818  6BF5               	clrf	(_ByteLo+1)& (0+255),b
  9692                           
  9693                           ;Modbus.c: 211:             ByteHi = MB303xx[ModbusData[3] +i] >> 8;
  9694  00081A  0102               	movlb	2	; () banked
  9695  00081C  5103               	movf	(_ModbusData+3)& (0+255),w,b
  9696  00081E  2455               	addwf	ModbusFC03@i^0,w,c
  9697  000820  0100               	movlb	0	; () banked
  9698  000822  6F89               	movwf	??_ModbusFC03& (0+255),b
  9699  000824  0E00               	movlw	0
  9700  000826  2056               	addwfc	(ModbusFC03@i+1)^0,w,c
  9701  000828  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
  9702  00082A  90D8               	bcf	status,0,c
  9703  00082C  3789               	rlcf	??_ModbusFC03& (0+255),f,b
  9704  00082E  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  9705  000830  0E35               	movlw	low _MB303xx
  9706  000832  2589               	addwf	??_ModbusFC03& (0+255),w,b
  9707  000834  6ED9               	movwf	fsr2l,c
  9708  000836  0E01               	movlw	high _MB303xx
  9709  000838  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  9710  00083A  6EDA               	movwf	fsr2h,c
  9711  00083C  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
  9712  000840  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
  9713  000844  518C               	movf	(??_ModbusFC03+3)& (0+255),w,b
  9714  000846  6FCD               	movwf	_ByteHi& (0+255),b
  9715  000848  6BCE               	clrf	(_ByteHi+1)& (0+255),b
  9716                           
  9717                           ;Modbus.c: 214:         }else if(ModbusData[2] == 0x01){
  9718  00084A  EF47  F005         	goto	l747
  9719  00084E                     l7208:
  9720                           
  9721                           ; BSR set to: 2
  9722  00084E  0502               	decf	(_ModbusData+2)& (0+255),w,b
  9723  000850  A4D8               	btfss	status,2,c
  9724  000852  EF2D  F004         	goto	u7451
  9725  000856  EF2F  F004         	goto	u7450
  9726  00085A                     u7451:
  9727  00085A  EF60  F004         	goto	l7212
  9728  00085E                     u7450:
  9729  00085E                     
  9730                           ; BSR set to: 2
  9731                           ;Modbus.c: 221:             ByteLo = MB301xx[ModbusData[3] +i] & 0x00FF;
  9732  00085E  5103               	movf	(_ModbusData+3)& (0+255),w,b
  9733  000860  2455               	addwf	ModbusFC03@i^0,w,c
  9734  000862  0100               	movlb	0	; () banked
  9735  000864  6F89               	movwf	??_ModbusFC03& (0+255),b
  9736  000866  0E00               	movlw	0
  9737  000868  2056               	addwfc	(ModbusFC03@i+1)^0,w,c
  9738  00086A  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
  9739  00086C  90D8               	bcf	status,0,c
  9740  00086E  3789               	rlcf	??_ModbusFC03& (0+255),f,b
  9741  000870  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  9742  000872  0E10               	movlw	low _MB301xx
  9743  000874  2589               	addwf	??_ModbusFC03& (0+255),w,b
  9744  000876  6ED9               	movwf	fsr2l,c
  9745  000878  0E01               	movlw	high _MB301xx
  9746  00087A  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  9747  00087C  6EDA               	movwf	fsr2h,c
  9748  00087E  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
  9749  000882  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
  9750  000886  518B               	movf	(??_ModbusFC03+2)& (0+255),w,b
  9751  000888  6FF4               	movwf	_ByteLo& (0+255),b
  9752  00088A  6BF5               	clrf	(_ByteLo+1)& (0+255),b
  9753                           
  9754                           ;Modbus.c: 222:             ByteHi = MB301xx[ModbusData[3] +i] >> 8;
  9755  00088C  0102               	movlb	2	; () banked
  9756  00088E  5103               	movf	(_ModbusData+3)& (0+255),w,b
  9757  000890  2455               	addwf	ModbusFC03@i^0,w,c
  9758  000892  0100               	movlb	0	; () banked
  9759  000894  6F89               	movwf	??_ModbusFC03& (0+255),b
  9760  000896  0E00               	movlw	0
  9761  000898  2056               	addwfc	(ModbusFC03@i+1)^0,w,c
  9762  00089A  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
  9763  00089C  90D8               	bcf	status,0,c
  9764  00089E  3789               	rlcf	??_ModbusFC03& (0+255),f,b
  9765  0008A0  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  9766  0008A2  0E10               	movlw	low _MB301xx
  9767  0008A4  2589               	addwf	??_ModbusFC03& (0+255),w,b
  9768  0008A6  6ED9               	movwf	fsr2l,c
  9769  0008A8  0E01               	movlw	high _MB301xx
  9770  0008AA  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  9771  0008AC  6EDA               	movwf	fsr2h,c
  9772  0008AE  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
  9773  0008B2  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
  9774  0008B6  518C               	movf	(??_ModbusFC03+3)& (0+255),w,b
  9775  0008B8  6FCD               	movwf	_ByteHi& (0+255),b
  9776  0008BA  6BCE               	clrf	(_ByteHi+1)& (0+255),b
  9777                           
  9778                           ;Modbus.c: 224:         }
  9779  0008BC  EF47  F005         	goto	l747
  9780  0008C0                     l7212:
  9781                           
  9782                           ; BSR set to: 2
  9783  0008C0  0E02               	movlw	2
  9784  0008C2  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
  9785  0008C4  A4D8               	btfss	status,2,c
  9786  0008C6  EF67  F004         	goto	u7461
  9787  0008CA  EF69  F004         	goto	u7460
  9788  0008CE                     u7461:
  9789  0008CE  EF9A  F004         	goto	l7216
  9790  0008D2                     u7460:
  9791  0008D2                     
  9792                           ; BSR set to: 2
  9793                           ;Modbus.c: 231:             ByteLo = MB302xx[ModbusData[3] +i] & 0x00FF;
  9794  0008D2  5103               	movf	(_ModbusData+3)& (0+255),w,b
  9795  0008D4  2455               	addwf	ModbusFC03@i^0,w,c
  9796  0008D6  0100               	movlb	0	; () banked
  9797  0008D8  6F89               	movwf	??_ModbusFC03& (0+255),b
  9798  0008DA  0E00               	movlw	0
  9799  0008DC  2056               	addwfc	(ModbusFC03@i+1)^0,w,c
  9800  0008DE  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
  9801  0008E0  90D8               	bcf	status,0,c
  9802  0008E2  3789               	rlcf	??_ModbusFC03& (0+255),f,b
  9803  0008E4  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  9804  0008E6  0EFA               	movlw	low _MB302xx
  9805  0008E8  2589               	addwf	??_ModbusFC03& (0+255),w,b
  9806  0008EA  6ED9               	movwf	fsr2l,c
  9807  0008EC  0E00               	movlw	high _MB302xx
  9808  0008EE  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  9809  0008F0  6EDA               	movwf	fsr2h,c
  9810  0008F2  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
  9811  0008F6  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
  9812  0008FA  518B               	movf	(??_ModbusFC03+2)& (0+255),w,b
  9813  0008FC  6FF4               	movwf	_ByteLo& (0+255),b
  9814  0008FE  6BF5               	clrf	(_ByteLo+1)& (0+255),b
  9815                           
  9816                           ;Modbus.c: 232:             ByteHi = MB302xx[ModbusData[3] +i] >> 8;
  9817  000900  0102               	movlb	2	; () banked
  9818  000902  5103               	movf	(_ModbusData+3)& (0+255),w,b
  9819  000904  2455               	addwf	ModbusFC03@i^0,w,c
  9820  000906  0100               	movlb	0	; () banked
  9821  000908  6F89               	movwf	??_ModbusFC03& (0+255),b
  9822  00090A  0E00               	movlw	0
  9823  00090C  2056               	addwfc	(ModbusFC03@i+1)^0,w,c
  9824  00090E  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
  9825  000910  90D8               	bcf	status,0,c
  9826  000912  3789               	rlcf	??_ModbusFC03& (0+255),f,b
  9827  000914  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  9828  000916  0EFA               	movlw	low _MB302xx
  9829  000918  2589               	addwf	??_ModbusFC03& (0+255),w,b
  9830  00091A  6ED9               	movwf	fsr2l,c
  9831  00091C  0E00               	movlw	high _MB302xx
  9832  00091E  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  9833  000920  6EDA               	movwf	fsr2h,c
  9834  000922  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
  9835  000926  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
  9836  00092A  518C               	movf	(??_ModbusFC03+3)& (0+255),w,b
  9837  00092C  6FCD               	movwf	_ByteHi& (0+255),b
  9838  00092E  6BCE               	clrf	(_ByteHi+1)& (0+255),b
  9839                           
  9840                           ;Modbus.c: 234:         }else if(ModbusData[2] == 0x04){
  9841  000930  EF47  F005         	goto	l747
  9842  000934                     l7216:
  9843                           
  9844                           ; BSR set to: 2
  9845  000934  0E04               	movlw	4
  9846  000936  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
  9847  000938  A4D8               	btfss	status,2,c
  9848  00093A  EFA1  F004         	goto	u7471
  9849  00093E  EFA3  F004         	goto	u7470
  9850  000942                     u7471:
  9851  000942  EFD4  F004         	goto	l7220
  9852  000946                     u7470:
  9853  000946                     
  9854                           ; BSR set to: 2
  9855                           ;Modbus.c: 236:             ByteLo = MB304xx[ModbusData[3] +i] & 0x00FF;
  9856  000946  5103               	movf	(_ModbusData+3)& (0+255),w,b
  9857  000948  2455               	addwf	ModbusFC03@i^0,w,c
  9858  00094A  0100               	movlb	0	; () banked
  9859  00094C  6F89               	movwf	??_ModbusFC03& (0+255),b
  9860  00094E  0E00               	movlw	0
  9861  000950  2056               	addwfc	(ModbusFC03@i+1)^0,w,c
  9862  000952  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
  9863  000954  90D8               	bcf	status,0,c
  9864  000956  3789               	rlcf	??_ModbusFC03& (0+255),f,b
  9865  000958  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  9866  00095A  0E1E               	movlw	low _MB304xx
  9867  00095C  2589               	addwf	??_ModbusFC03& (0+255),w,b
  9868  00095E  6ED9               	movwf	fsr2l,c
  9869  000960  0E01               	movlw	high _MB304xx
  9870  000962  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  9871  000964  6EDA               	movwf	fsr2h,c
  9872  000966  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
  9873  00096A  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
  9874  00096E  518B               	movf	(??_ModbusFC03+2)& (0+255),w,b
  9875  000970  6FF4               	movwf	_ByteLo& (0+255),b
  9876  000972  6BF5               	clrf	(_ByteLo+1)& (0+255),b
  9877                           
  9878                           ;Modbus.c: 237:             ByteHi = MB304xx[ModbusData[3] +i] >> 8;
  9879  000974  0102               	movlb	2	; () banked
  9880  000976  5103               	movf	(_ModbusData+3)& (0+255),w,b
  9881  000978  2455               	addwf	ModbusFC03@i^0,w,c
  9882  00097A  0100               	movlb	0	; () banked
  9883  00097C  6F89               	movwf	??_ModbusFC03& (0+255),b
  9884  00097E  0E00               	movlw	0
  9885  000980  2056               	addwfc	(ModbusFC03@i+1)^0,w,c
  9886  000982  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
  9887  000984  90D8               	bcf	status,0,c
  9888  000986  3789               	rlcf	??_ModbusFC03& (0+255),f,b
  9889  000988  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  9890  00098A  0E1E               	movlw	low _MB304xx
  9891  00098C  2589               	addwf	??_ModbusFC03& (0+255),w,b
  9892  00098E  6ED9               	movwf	fsr2l,c
  9893  000990  0E01               	movlw	high _MB304xx
  9894  000992  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  9895  000994  6EDA               	movwf	fsr2h,c
  9896  000996  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
  9897  00099A  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
  9898  00099E  518C               	movf	(??_ModbusFC03+3)& (0+255),w,b
  9899  0009A0  6FCD               	movwf	_ByteHi& (0+255),b
  9900  0009A2  6BCE               	clrf	(_ByteHi+1)& (0+255),b
  9901                           
  9902                           ;Modbus.c: 239:         }else if(ModbusData[2] == 0x05){
  9903  0009A4  EF47  F005         	goto	l747
  9904  0009A8                     l7220:
  9905                           
  9906                           ; BSR set to: 2
  9907  0009A8  0E05               	movlw	5
  9908  0009AA  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
  9909  0009AC  A4D8               	btfss	status,2,c
  9910  0009AE  EFDB  F004         	goto	u7481
  9911  0009B2  EFDD  F004         	goto	u7480
  9912  0009B6                     u7481:
  9913  0009B6  EF0E  F005         	goto	l7224
  9914  0009BA                     u7480:
  9915  0009BA                     
  9916                           ; BSR set to: 2
  9917                           ;Modbus.c: 241:             ByteLo = MB305xx[ModbusData[3] +i] & 0x00FF;
  9918  0009BA  5103               	movf	(_ModbusData+3)& (0+255),w,b
  9919  0009BC  2455               	addwf	ModbusFC03@i^0,w,c
  9920  0009BE  0100               	movlb	0	; () banked
  9921  0009C0  6F89               	movwf	??_ModbusFC03& (0+255),b
  9922  0009C2  0E00               	movlw	0
  9923  0009C4  2056               	addwfc	(ModbusFC03@i+1)^0,w,c
  9924  0009C6  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
  9925  0009C8  90D8               	bcf	status,0,c
  9926  0009CA  3789               	rlcf	??_ModbusFC03& (0+255),f,b
  9927  0009CC  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  9928  0009CE  0E00               	movlw	low _MB305xx
  9929  0009D0  2589               	addwf	??_ModbusFC03& (0+255),w,b
  9930  0009D2  6ED9               	movwf	fsr2l,c
  9931  0009D4  0E01               	movlw	high _MB305xx
  9932  0009D6  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  9933  0009D8  6EDA               	movwf	fsr2h,c
  9934  0009DA  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
  9935  0009DE  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
  9936  0009E2  518B               	movf	(??_ModbusFC03+2)& (0+255),w,b
  9937  0009E4  6FF4               	movwf	_ByteLo& (0+255),b
  9938  0009E6  6BF5               	clrf	(_ByteLo+1)& (0+255),b
  9939                           
  9940                           ;Modbus.c: 242:             ByteHi = MB305xx[ModbusData[3] +i] >> 8;
  9941  0009E8  0102               	movlb	2	; () banked
  9942  0009EA  5103               	movf	(_ModbusData+3)& (0+255),w,b
  9943  0009EC  2455               	addwf	ModbusFC03@i^0,w,c
  9944  0009EE  0100               	movlb	0	; () banked
  9945  0009F0  6F89               	movwf	??_ModbusFC03& (0+255),b
  9946  0009F2  0E00               	movlw	0
  9947  0009F4  2056               	addwfc	(ModbusFC03@i+1)^0,w,c
  9948  0009F6  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
  9949  0009F8  90D8               	bcf	status,0,c
  9950  0009FA  3789               	rlcf	??_ModbusFC03& (0+255),f,b
  9951  0009FC  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  9952  0009FE  0E00               	movlw	low _MB305xx
  9953  000A00  2589               	addwf	??_ModbusFC03& (0+255),w,b
  9954  000A02  6ED9               	movwf	fsr2l,c
  9955  000A04  0E01               	movlw	high _MB305xx
  9956  000A06  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  9957  000A08  6EDA               	movwf	fsr2h,c
  9958  000A0A  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
  9959  000A0E  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
  9960  000A12  518C               	movf	(??_ModbusFC03+3)& (0+255),w,b
  9961  000A14  6FCD               	movwf	_ByteHi& (0+255),b
  9962  000A16  6BCE               	clrf	(_ByteHi+1)& (0+255),b
  9963                           
  9964                           ;Modbus.c: 244:         }
  9965  000A18  EF47  F005         	goto	l747
  9966  000A1C                     l7224:
  9967                           
  9968                           ; BSR set to: 2
  9969  000A1C  5102               	movf	(_ModbusData+2)& (0+255),w,b
  9970  000A1E  A4D8               	btfss	status,2,c
  9971  000A20  EF14  F005         	goto	u7491
  9972  000A24  EF16  F005         	goto	u7490
  9973  000A28                     u7491:
  9974  000A28  EF47  F005         	goto	l751
  9975  000A2C                     u7490:
  9976  000A2C                     
  9977                           ; BSR set to: 2
  9978                           ;Modbus.c: 246:             ByteLo = MB300xx[ModbusData[3] +i] & 0x00FF;
  9979  000A2C  5103               	movf	(_ModbusData+3)& (0+255),w,b
  9980  000A2E  2455               	addwf	ModbusFC03@i^0,w,c
  9981  000A30  0100               	movlb	0	; () banked
  9982  000A32  6F89               	movwf	??_ModbusFC03& (0+255),b
  9983  000A34  0E00               	movlw	0
  9984  000A36  2056               	addwfc	(ModbusFC03@i+1)^0,w,c
  9985  000A38  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
  9986  000A3A  90D8               	bcf	status,0,c
  9987  000A3C  3789               	rlcf	??_ModbusFC03& (0+255),f,b
  9988  000A3E  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  9989  000A40  0EB7               	movlw	low _MB300xx
  9990  000A42  2589               	addwf	??_ModbusFC03& (0+255),w,b
  9991  000A44  6ED9               	movwf	fsr2l,c
  9992  000A46  0E03               	movlw	high _MB300xx
  9993  000A48  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  9994  000A4A  6EDA               	movwf	fsr2h,c
  9995  000A4C  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
  9996  000A50  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
  9997  000A54  518B               	movf	(??_ModbusFC03+2)& (0+255),w,b
  9998  000A56  6FF4               	movwf	_ByteLo& (0+255),b
  9999  000A58  6BF5               	clrf	(_ByteLo+1)& (0+255),b
 10000                           
 10001                           ;Modbus.c: 247:             ByteHi = MB300xx[ModbusData[3] +i] >> 8;
 10002  000A5A  0102               	movlb	2	; () banked
 10003  000A5C  5103               	movf	(_ModbusData+3)& (0+255),w,b
 10004  000A5E  2455               	addwf	ModbusFC03@i^0,w,c
 10005  000A60  0100               	movlb	0	; () banked
 10006  000A62  6F89               	movwf	??_ModbusFC03& (0+255),b
 10007  000A64  0E00               	movlw	0
 10008  000A66  2056               	addwfc	(ModbusFC03@i+1)^0,w,c
 10009  000A68  6F8A               	movwf	(??_ModbusFC03+1)& (0+255),b
 10010  000A6A  90D8               	bcf	status,0,c
 10011  000A6C  3789               	rlcf	??_ModbusFC03& (0+255),f,b
 10012  000A6E  378A               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 10013  000A70  0EB7               	movlw	low _MB300xx
 10014  000A72  2589               	addwf	??_ModbusFC03& (0+255),w,b
 10015  000A74  6ED9               	movwf	fsr2l,c
 10016  000A76  0E03               	movlw	high _MB300xx
 10017  000A78  218A               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 10018  000A7A  6EDA               	movwf	fsr2h,c
 10019  000A7C  CFDE F08B          	movff	postinc2,??_ModbusFC03+2
 10020  000A80  CFDD F08C          	movff	postdec2,??_ModbusFC03+3
 10021  000A84  518C               	movf	(??_ModbusFC03+3)& (0+255),w,b
 10022  000A86  6FCD               	movwf	_ByteHi& (0+255),b
 10023  000A88  6BCE               	clrf	(_ByteHi+1)& (0+255),b
 10024  000A8A  EF47  F005         	goto	l747
 10025  000A8E                     l751:
 10026  000A8E                     l747:
 10027                           
 10028                           ;Modbus.c: 251:         MBRespon[MBResCnt] = ByteHi;
 10029  000A8E  0EA0               	movlw	low _MBRespon
 10030  000A90  0100               	movlb	0	; () banked
 10031  000A92  25CF               	addwf	_MBResCnt& (0+255),w,b
 10032  000A94  6ED9               	movwf	fsr2l,c
 10033  000A96  0E02               	movlw	high _MBRespon
 10034  000A98  21D0               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10035  000A9A  6EDA               	movwf	fsr2h,c
 10036  000A9C  C0CD  FFDF         	movff	_ByteHi,indf2
 10037  000AA0                     
 10038                           ; BSR set to: 0
 10039                           ;Modbus.c: 252:         MBResCnt++;
 10040  000AA0  4BCF               	infsnz	_MBResCnt& (0+255),f,b
 10041  000AA2  2BD0               	incf	(_MBResCnt+1)& (0+255),f,b
 10042  000AA4                     
 10043                           ; BSR set to: 0
 10044                           ;Modbus.c: 253:         MBRespon[MBResCnt] = ByteLo;
 10045  000AA4  0EA0               	movlw	low _MBRespon
 10046  000AA6  25CF               	addwf	_MBResCnt& (0+255),w,b
 10047  000AA8  6ED9               	movwf	fsr2l,c
 10048  000AAA  0E02               	movlw	high _MBRespon
 10049  000AAC  21D0               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10050  000AAE  6EDA               	movwf	fsr2h,c
 10051  000AB0  C0F4  FFDF         	movff	_ByteLo,indf2
 10052                           
 10053                           ;Modbus.c: 254:         MBResCnt++;
 10054  000AB4  4BCF               	infsnz	_MBResCnt& (0+255),f,b
 10055  000AB6  2BD0               	incf	(_MBResCnt+1)& (0+255),f,b
 10056                           
 10057                           ;Modbus.c: 256:     }
 10058  000AB8  4A55               	infsnz	ModbusFC03@i^0,f,c
 10059  000ABA  2A56               	incf	(ModbusFC03@i+1)^0,f,c
 10060  000ABC                     l7232:
 10061  000ABC  0102               	movlb	2	; () banked
 10062  000ABE  5105               	movf	(_ModbusData+5)& (0+255),w,b
 10063  000AC0  0100               	movlb	0	; () banked
 10064  000AC2  6F89               	movwf	??_ModbusFC03& (0+255),b
 10065  000AC4  6B8A               	clrf	(??_ModbusFC03+1)& (0+255),b
 10066  000AC6  5189               	movf	??_ModbusFC03& (0+255),w,b
 10067  000AC8  5C55               	subwf	ModbusFC03@i^0,w,c
 10068  000ACA  5056               	movf	(ModbusFC03@i+1)^0,w,c
 10069  000ACC  0A80               	xorlw	128
 10070  000ACE  6F8B               	movwf	(??_ModbusFC03+2)& (0+255),b
 10071  000AD0  518A               	movf	(??_ModbusFC03+1)& (0+255),w,b
 10072  000AD2  0A80               	xorlw	128
 10073  000AD4  598B               	subwfb	(??_ModbusFC03+2)& (0+255),w,b
 10074  000AD6  A0D8               	btfss	status,0,c
 10075  000AD8  EF70  F005         	goto	u7501
 10076  000ADC  EF72  F005         	goto	u7500
 10077  000AE0                     u7501:
 10078  000AE0  EFEC  F003         	goto	l7204
 10079  000AE4                     u7500:
 10080  000AE4                     
 10081                           ; BSR set to: 0
 10082                           ;Modbus.c: 258:     ByteHi = generateCRC(MBResCnt, 1);
 10083  000AE4  C0CF  F005         	movff	_MBResCnt,generateCRC@MessCnt
 10084  000AE8  C0D0  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 10085  000AEC  0E01               	movlw	1
 10086  000AEE  6E07               	movwf	generateCRC@HiOrLo^0,c
 10087  000AF0  EC46  F016         	call	_generateCRC	;wreg free
 10088  000AF4  C005  F0CD         	movff	?_generateCRC,_ByteHi
 10089  000AF8  C006  F0CE         	movff	?_generateCRC+1,_ByteHi+1
 10090                           
 10091                           ;Modbus.c: 259:     ByteLo = generateCRC(MBResCnt, 0);
 10092  000AFC  C0CF  F005         	movff	_MBResCnt,generateCRC@MessCnt
 10093  000B00  C0D0  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 10094  000B04  0E00               	movlw	0
 10095  000B06  6E07               	movwf	generateCRC@HiOrLo^0,c
 10096  000B08  EC46  F016         	call	_generateCRC	;wreg free
 10097  000B0C  C005  F0F4         	movff	?_generateCRC,_ByteLo
 10098  000B10  C006  F0F5         	movff	?_generateCRC+1,_ByteLo+1
 10099  000B14                     
 10100                           ;Modbus.c: 261:     MBRespon[MBResCnt] = ByteHi;
 10101  000B14  0EA0               	movlw	low _MBRespon
 10102  000B16  0100               	movlb	0	; () banked
 10103  000B18  25CF               	addwf	_MBResCnt& (0+255),w,b
 10104  000B1A  6ED9               	movwf	fsr2l,c
 10105  000B1C  0E02               	movlw	high _MBRespon
 10106  000B1E  21D0               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10107  000B20  6EDA               	movwf	fsr2h,c
 10108  000B22  C0CD  FFDF         	movff	_ByteHi,indf2
 10109  000B26                     
 10110                           ; BSR set to: 0
 10111                           ;Modbus.c: 262:     MBRespon[MBResCnt +1] = ByteLo;
 10112  000B26  0EA1               	movlw	low (_MBRespon+1)
 10113  000B28  25CF               	addwf	_MBResCnt& (0+255),w,b
 10114  000B2A  6ED9               	movwf	fsr2l,c
 10115  000B2C  0E02               	movlw	high (_MBRespon+1)
 10116  000B2E  21D0               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10117  000B30  6EDA               	movwf	fsr2h,c
 10118  000B32  C0F4  FFDF         	movff	_ByteLo,indf2
 10119  000B36                     
 10120                           ; BSR set to: 0
 10121                           ;Modbus.c: 263:     MBResCnt = MBResCnt +2;
 10122  000B36  0E02               	movlw	2
 10123  000B38  25CF               	addwf	_MBResCnt& (0+255),w,b
 10124  000B3A  6FCF               	movwf	_MBResCnt& (0+255),b
 10125  000B3C  0E00               	movlw	0
 10126  000B3E  21D0               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10127  000B40  6FD0               	movwf	(_MBResCnt+1)& (0+255),b
 10128  000B42                     
 10129                           ; BSR set to: 0
 10130                           ;Modbus.c: 269:     UART1_Write_string(MBRespon,MBResCnt);
 10131  000B42  0EA0               	movlw	low _MBRespon
 10132  000B44  6E06               	movwf	UART1_Write_string@data^0,c
 10133  000B46  0E02               	movlw	high _MBRespon
 10134  000B48  6E07               	movwf	(UART1_Write_string@data+1)^0,c
 10135  000B4A  C0CF  F008         	movff	_MBResCnt,UART1_Write_string@data_len
 10136  000B4E  C0D0  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
 10137  000B52  EC09  F01B         	call	_UART1_Write_string	;wreg free
 10138  000B56  0012               	return		;funcret
 10139  000B58                     __end_of_ModbusFC03:
 10140                           	opt callstack 0
 10141                           
 10142 ;; *************** function _ModbusError *****************
 10143 ;; Defined at:
 10144 ;;		line 398 in file "Modbus.c"
 10145 ;; Parameters:    Size  Location     Type
 10146 ;;  ErrorCode       2   43[BANK0 ] int 
 10147 ;; Auto vars:     Size  Location     Type
 10148 ;;  i               2    0        int 
 10149 ;; Return value:  Size  Location     Type
 10150 ;;                  1    wreg      void 
 10151 ;; Registers used:
 10152 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10153 ;; Tracked objects:
 10154 ;;		On entry : 0/0
 10155 ;;		On exit  : 0/0
 10156 ;;		Unchanged: 0/0
 10157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10158 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10159 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10161 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10162 ;;Total ram usage:        4 bytes
 10163 ;; Hardware stack levels used:    1
 10164 ;; Hardware stack levels required when called:   14
 10165 ;; This function calls:
 10166 ;;		_PrintModRespon
 10167 ;;		_UART1_Write_string
 10168 ;;		_generateCRC
 10169 ;; This function is called by:
 10170 ;;		_main
 10171 ;; This function uses a non-reentrant model
 10172 ;;
 10173                           
 10174                           	psect	text44
 10175  002F0A                     __ptext44:
 10176                           	opt callstack 0
 10177  002F0A                     _ModbusError:
 10178                           	opt callstack 16
 10179  002F0A                     
 10180                           ;Modbus.c: 403:     MBResCnt = 0;
 10181  002F0A  0E00               	movlw	0
 10182  002F0C  0100               	movlb	0	; () banked
 10183  002F0E  6FD0               	movwf	(_MBResCnt+1)& (0+255),b
 10184  002F10  0E00               	movlw	0
 10185  002F12  6FCF               	movwf	_MBResCnt& (0+255),b
 10186  002F14                     
 10187                           ; BSR set to: 0
 10188                           ;Modbus.c: 404:     MBRespon[MBResCnt] = ModbusData[0];
 10189  002F14  0EA0               	movlw	low _MBRespon
 10190  002F16  25CF               	addwf	_MBResCnt& (0+255),w,b
 10191  002F18  6ED9               	movwf	fsr2l,c
 10192  002F1A  0E02               	movlw	high _MBRespon
 10193  002F1C  21D0               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10194  002F1E  6EDA               	movwf	fsr2h,c
 10195  002F20  C200  FFDF         	movff	_ModbusData,indf2
 10196  002F24                     
 10197                           ; BSR set to: 0
 10198                           ;Modbus.c: 405:     MBResCnt++;
 10199  002F24  4BCF               	infsnz	_MBResCnt& (0+255),f,b
 10200  002F26  2BD0               	incf	(_MBResCnt+1)& (0+255),f,b
 10201  002F28                     
 10202                           ; BSR set to: 0
 10203                           ;Modbus.c: 406:     MBRespon[MBResCnt] = ModbusData[1] + 128;
 10204  002F28  0EA0               	movlw	low _MBRespon
 10205  002F2A  25CF               	addwf	_MBResCnt& (0+255),w,b
 10206  002F2C  6ED9               	movwf	fsr2l,c
 10207  002F2E  0E02               	movlw	high _MBRespon
 10208  002F30  21D0               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10209  002F32  6EDA               	movwf	fsr2h,c
 10210  002F34  0102               	movlb	2	; () banked
 10211  002F36  5101               	movf	(_ModbusData+1)& (0+255),w,b
 10212  002F38  0F80               	addlw	128
 10213  002F3A  6EDF               	movwf	indf2,c
 10214  002F3C                     
 10215                           ; BSR set to: 2
 10216                           ;Modbus.c: 407:     MBResCnt++;
 10217  002F3C  0100               	movlb	0	; () banked
 10218  002F3E  4BCF               	infsnz	_MBResCnt& (0+255),f,b
 10219  002F40  2BD0               	incf	(_MBResCnt+1)& (0+255),f,b
 10220  002F42                     
 10221                           ; BSR set to: 0
 10222                           ;Modbus.c: 408:     MBRespon[MBResCnt] = ErrorCode;
 10223  002F42  0EA0               	movlw	low _MBRespon
 10224  002F44  25CF               	addwf	_MBResCnt& (0+255),w,b
 10225  002F46  6ED9               	movwf	fsr2l,c
 10226  002F48  0E02               	movlw	high _MBRespon
 10227  002F4A  21D0               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10228  002F4C  6EDA               	movwf	fsr2h,c
 10229  002F4E  C08B  FFDF         	movff	ModbusError@ErrorCode,indf2
 10230  002F52                     
 10231                           ; BSR set to: 0
 10232                           ;Modbus.c: 409:     MBResCnt++;
 10233  002F52  4BCF               	infsnz	_MBResCnt& (0+255),f,b
 10234  002F54  2BD0               	incf	(_MBResCnt+1)& (0+255),f,b
 10235  002F56                     
 10236                           ; BSR set to: 0
 10237                           ;Modbus.c: 411:     ByteHi = generateCRC(MBResCnt, 1);
 10238  002F56  C0CF  F005         	movff	_MBResCnt,generateCRC@MessCnt
 10239  002F5A  C0D0  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 10240  002F5E  0E01               	movlw	1
 10241  002F60  6E07               	movwf	generateCRC@HiOrLo^0,c
 10242  002F62  EC46  F016         	call	_generateCRC	;wreg free
 10243  002F66  C005  F0CD         	movff	?_generateCRC,_ByteHi
 10244  002F6A  C006  F0CE         	movff	?_generateCRC+1,_ByteHi+1
 10245  002F6E                     
 10246                           ;Modbus.c: 412:     ByteLo = generateCRC(MBResCnt, 0);
 10247  002F6E  C0CF  F005         	movff	_MBResCnt,generateCRC@MessCnt
 10248  002F72  C0D0  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 10249  002F76  0E00               	movlw	0
 10250  002F78  6E07               	movwf	generateCRC@HiOrLo^0,c
 10251  002F7A  EC46  F016         	call	_generateCRC	;wreg free
 10252  002F7E  C005  F0F4         	movff	?_generateCRC,_ByteLo
 10253  002F82  C006  F0F5         	movff	?_generateCRC+1,_ByteLo+1
 10254  002F86                     
 10255                           ;Modbus.c: 414:     MBRespon[MBResCnt] = ByteHi;
 10256  002F86  0EA0               	movlw	low _MBRespon
 10257  002F88  0100               	movlb	0	; () banked
 10258  002F8A  25CF               	addwf	_MBResCnt& (0+255),w,b
 10259  002F8C  6ED9               	movwf	fsr2l,c
 10260  002F8E  0E02               	movlw	high _MBRespon
 10261  002F90  21D0               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10262  002F92  6EDA               	movwf	fsr2h,c
 10263  002F94  C0CD  FFDF         	movff	_ByteHi,indf2
 10264  002F98                     
 10265                           ; BSR set to: 0
 10266                           ;Modbus.c: 415:     MBRespon[MBResCnt +1] = ByteLo;
 10267  002F98  0EA1               	movlw	low (_MBRespon+1)
 10268  002F9A  25CF               	addwf	_MBResCnt& (0+255),w,b
 10269  002F9C  6ED9               	movwf	fsr2l,c
 10270  002F9E  0E02               	movlw	high (_MBRespon+1)
 10271  002FA0  21D0               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10272  002FA2  6EDA               	movwf	fsr2h,c
 10273  002FA4  C0F4  FFDF         	movff	_ByteLo,indf2
 10274  002FA8                     
 10275                           ; BSR set to: 0
 10276                           ;Modbus.c: 416:     MBResCnt = MBResCnt +2;
 10277  002FA8  0E02               	movlw	2
 10278  002FAA  25CF               	addwf	_MBResCnt& (0+255),w,b
 10279  002FAC  6FCF               	movwf	_MBResCnt& (0+255),b
 10280  002FAE  0E00               	movlw	0
 10281  002FB0  21D0               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10282  002FB2  6FD0               	movwf	(_MBResCnt+1)& (0+255),b
 10283  002FB4                     
 10284                           ; BSR set to: 0
 10285                           ;Modbus.c: 418:     PrintModRespon();
 10286  002FB4  EC67  F019         	call	_PrintModRespon	;wreg free
 10287  002FB8                     
 10288                           ;Modbus.c: 419:     UART1_Write_string(MBRespon,MBResCnt);
 10289  002FB8  0EA0               	movlw	low _MBRespon
 10290  002FBA  6E06               	movwf	UART1_Write_string@data^0,c
 10291  002FBC  0E02               	movlw	high _MBRespon
 10292  002FBE  6E07               	movwf	(UART1_Write_string@data+1)^0,c
 10293  002FC0  C0CF  F008         	movff	_MBResCnt,UART1_Write_string@data_len
 10294  002FC4  C0D0  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
 10295  002FC8  EC09  F01B         	call	_UART1_Write_string	;wreg free
 10296  002FCC  0012               	return		;funcret
 10297  002FCE                     __end_of_ModbusError:
 10298                           	opt callstack 0
 10299                           
 10300 ;; *************** function _generateCRC *****************
 10301 ;; Defined at:
 10302 ;;		line 326 in file "Modbus.c"
 10303 ;; Parameters:    Size  Location     Type
 10304 ;;  MessCnt         2    4[COMRAM] int 
 10305 ;;  HiOrLo          1    6[COMRAM] _Bool 
 10306 ;; Auto vars:     Size  Location     Type
 10307 ;;  crc             2   17[COMRAM] unsigned int 
 10308 ;;  j               2   15[COMRAM] int 
 10309 ;;  i               2   13[COMRAM] int 
 10310 ;;  crcLow          2   11[COMRAM] unsigned int 
 10311 ;;  crcHigh         2    9[COMRAM] unsigned int 
 10312 ;; Return value:  Size  Location     Type
 10313 ;;                  2    4[COMRAM] unsigned int 
 10314 ;; Registers used:
 10315 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10316 ;; Tracked objects:
 10317 ;;		On entry : 0/0
 10318 ;;		On exit  : 0/0
 10319 ;;		Unchanged: 0/0
 10320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10321 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10322 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10323 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10324 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10325 ;;Total ram usage:       15 bytes
 10326 ;; Hardware stack levels used:    1
 10327 ;; Hardware stack levels required when called:    4
 10328 ;; This function calls:
 10329 ;;		Nothing
 10330 ;; This function is called by:
 10331 ;;		_ModbusFC03
 10332 ;;		_ModbusFC10
 10333 ;;		_ModbusError
 10334 ;; This function uses a non-reentrant model
 10335 ;;
 10336                           
 10337                           	psect	text45
 10338  002C8C                     __ptext45:
 10339                           	opt callstack 0
 10340  002C8C                     _generateCRC:
 10341                           	opt callstack 25
 10342  002C8C                     
 10343                           ;Modbus.c: 327:   unsigned int crc = 0xFFFF;
 10344  002C8C  6812               	setf	generateCRC@crc^0,c
 10345  002C8E  6813               	setf	(generateCRC@crc+1)^0,c
 10346  002C90                     
 10347                           ;Modbus.c: 329:   unsigned int crcLow = 0;
 10348  002C90  0E00               	movlw	0
 10349  002C92  6E0D               	movwf	(generateCRC@crcLow+1)^0,c
 10350  002C94  0E00               	movlw	0
 10351  002C96  6E0C               	movwf	generateCRC@crcLow^0,c
 10352                           
 10353                           ;Modbus.c: 330:   int i,j = 0;
 10354  002C98  0E00               	movlw	0
 10355  002C9A  6E11               	movwf	(generateCRC@j+1)^0,c
 10356  002C9C  0E00               	movlw	0
 10357  002C9E  6E10               	movwf	generateCRC@j^0,c
 10358                           
 10359                           ;Modbus.c: 332:     for(i=0;i<MessCnt;i++){
 10360  002CA0  0E00               	movlw	0
 10361  002CA2  6E0F               	movwf	(generateCRC@i+1)^0,c
 10362  002CA4  0E00               	movlw	0
 10363  002CA6  6E0E               	movwf	generateCRC@i^0,c
 10364  002CA8  EF85  F016         	goto	l7008
 10365  002CAC                     l6990:
 10366                           
 10367                           ;Modbus.c: 333:       crc ^= MBRespon[i];
 10368  002CAC  0EA0               	movlw	low _MBRespon
 10369  002CAE  240E               	addwf	generateCRC@i^0,w,c
 10370  002CB0  6ED9               	movwf	fsr2l,c
 10371  002CB2  0E02               	movlw	high _MBRespon
 10372  002CB4  200F               	addwfc	(generateCRC@i+1)^0,w,c
 10373  002CB6  6EDA               	movwf	fsr2h,c
 10374  002CB8  50DF               	movf	indf2,w,c
 10375  002CBA  6E08               	movwf	??_generateCRC^0,c
 10376  002CBC  5008               	movf	??_generateCRC^0,w,c
 10377  002CBE  1A12               	xorwf	generateCRC@crc^0,f,c
 10378  002CC0                     
 10379                           ;Modbus.c: 334:       for(j=8; j!=0; j--){
 10380  002CC0  0E00               	movlw	0
 10381  002CC2  6E11               	movwf	(generateCRC@j+1)^0,c
 10382  002CC4  0E08               	movlw	8
 10383  002CC6  6E10               	movwf	generateCRC@j^0,c
 10384  002CC8                     l770:
 10385                           
 10386                           ;Modbus.c: 335:         if((crc & 0x0001) != 0){
 10387  002CC8  A012               	btfss	generateCRC@crc^0,0,c
 10388  002CCA  EF69  F016         	goto	u7181
 10389  002CCE  EF6B  F016         	goto	u7180
 10390  002CD2                     u7181:
 10391  002CD2  EF74  F016         	goto	l7002
 10392  002CD6                     u7180:
 10393  002CD6                     
 10394                           ;Modbus.c: 336:           crc >>= 1;
 10395  002CD6  90D8               	bcf	status,0,c
 10396  002CD8  3213               	rrcf	(generateCRC@crc+1)^0,f,c
 10397  002CDA  3212               	rrcf	generateCRC@crc^0,f,c
 10398  002CDC                     
 10399                           ;Modbus.c: 337:           crc ^= 0xA001;
 10400  002CDC  0E01               	movlw	1
 10401  002CDE  1A12               	xorwf	generateCRC@crc^0,f,c
 10402  002CE0  0EA0               	movlw	160
 10403  002CE2  1A13               	xorwf	(generateCRC@crc+1)^0,f,c
 10404                           
 10405                           ;Modbus.c: 338:         }
 10406  002CE4  EF77  F016         	goto	l773
 10407  002CE8                     l7002:
 10408                           
 10409                           ;Modbus.c: 340:           crc >>= 1;
 10410  002CE8  90D8               	bcf	status,0,c
 10411  002CEA  3213               	rrcf	(generateCRC@crc+1)^0,f,c
 10412  002CEC  3212               	rrcf	generateCRC@crc^0,f,c
 10413  002CEE                     l773:
 10414                           
 10415                           ;Modbus.c: 342:       }
 10416  002CEE  0610               	decf	generateCRC@j^0,f,c
 10417  002CF0  A0D8               	btfss	status,0,c
 10418  002CF2  0611               	decf	(generateCRC@j+1)^0,f,c
 10419  002CF4  5010               	movf	generateCRC@j^0,w,c
 10420  002CF6  1011               	iorwf	(generateCRC@j+1)^0,w,c
 10421  002CF8  A4D8               	btfss	status,2,c
 10422  002CFA  EF81  F016         	goto	u7191
 10423  002CFE  EF83  F016         	goto	u7190
 10424  002D02                     u7191:
 10425  002D02  EF64  F016         	goto	l770
 10426  002D06                     u7190:
 10427  002D06                     
 10428                           ;Modbus.c: 343:     }
 10429  002D06  4A0E               	infsnz	generateCRC@i^0,f,c
 10430  002D08  2A0F               	incf	(generateCRC@i+1)^0,f,c
 10431  002D0A                     l7008:
 10432  002D0A  5005               	movf	generateCRC@MessCnt^0,w,c
 10433  002D0C  5C0E               	subwf	generateCRC@i^0,w,c
 10434  002D0E  500F               	movf	(generateCRC@i+1)^0,w,c
 10435  002D10  0A80               	xorlw	128
 10436  002D12  6E08               	movwf	??_generateCRC^0,c
 10437  002D14  5006               	movf	(generateCRC@MessCnt+1)^0,w,c
 10438  002D16  0A80               	xorlw	128
 10439  002D18  5808               	subwfb	??_generateCRC^0,w,c
 10440  002D1A  A0D8               	btfss	status,0,c
 10441  002D1C  EF92  F016         	goto	u7201
 10442  002D20  EF94  F016         	goto	u7200
 10443  002D24                     u7201:
 10444  002D24  EF56  F016         	goto	l6990
 10445  002D28                     u7200:
 10446  002D28                     
 10447                           ;Modbus.c: 345:     crcHigh = (crc & 0x00FF);
 10448  002D28  5012               	movf	generateCRC@crc^0,w,c
 10449  002D2A  6E0A               	movwf	generateCRC@crcHigh^0,c
 10450  002D2C  6A0B               	clrf	(generateCRC@crcHigh+1)^0,c
 10451                           
 10452                           ;Modbus.c: 346:     crcLow = (crc & 0xFF00) >>8;
 10453  002D2E  C012  F008         	movff	generateCRC@crc,??_generateCRC
 10454  002D32  C013  F009         	movff	generateCRC@crc+1,??_generateCRC+1
 10455  002D36  C009  F008         	movff	??_generateCRC+1,??_generateCRC
 10456  002D3A  6A09               	clrf	(??_generateCRC+1)^0,c
 10457  002D3C  5008               	movf	??_generateCRC^0,w,c
 10458  002D3E  6E0C               	movwf	generateCRC@crcLow^0,c
 10459  002D40  6A0D               	clrf	(generateCRC@crcLow+1)^0,c
 10460  002D42                     
 10461                           ;Modbus.c: 348:     if(HiOrLo == 1){
 10462  002D42  0407               	decf	generateCRC@HiOrLo^0,w,c
 10463  002D44  A4D8               	btfss	status,2,c
 10464  002D46  EFA7  F016         	goto	u7211
 10465  002D4A  EFA9  F016         	goto	u7210
 10466  002D4E                     u7211:
 10467  002D4E  EFAF  F016         	goto	l775
 10468  002D52                     u7210:
 10469  002D52                     
 10470                           ;Modbus.c: 349:         return crcHigh;
 10471  002D52  C00A  F005         	movff	generateCRC@crcHigh,?_generateCRC
 10472  002D56  C00B  F006         	movff	generateCRC@crcHigh+1,?_generateCRC+1
 10473  002D5A  EFB3  F016         	goto	l776
 10474  002D5E                     l775:
 10475                           
 10476                           ;Modbus.c: 351:         return crcLow;
 10477  002D5E  C00C  F005         	movff	generateCRC@crcLow,?_generateCRC
 10478  002D62  C00D  F006         	movff	generateCRC@crcLow+1,?_generateCRC+1
 10479  002D66                     l776:
 10480  002D66  0012               	return		;funcret
 10481  002D68                     __end_of_generateCRC:
 10482                           	opt callstack 0
 10483                           
 10484 ;; *************** function _UART1_Write_string *****************
 10485 ;; Defined at:
 10486 ;;		line 356 in file "Modbus.c"
 10487 ;; Parameters:    Size  Location     Type
 10488 ;;  data            2    5[COMRAM] PTR unsigned char 
 10489 ;;		 -> MBRespon(75), 
 10490 ;;  data_len        2    7[COMRAM] int 
 10491 ;; Auto vars:     Size  Location     Type
 10492 ;;  i               2   10[COMRAM] int 
 10493 ;; Return value:  Size  Location     Type
 10494 ;;                  1    wreg      void 
 10495 ;; Registers used:
 10496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10497 ;; Tracked objects:
 10498 ;;		On entry : 0/0
 10499 ;;		On exit  : 0/0
 10500 ;;		Unchanged: 0/0
 10501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10502 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10503 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10504 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10505 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10506 ;;Total ram usage:        7 bytes
 10507 ;; Hardware stack levels used:    1
 10508 ;; Hardware stack levels required when called:    5
 10509 ;; This function calls:
 10510 ;;		_EUSART1_Write
 10511 ;;		_EUSART1_is_tx_done
 10512 ;;		_EUSART1_is_tx_ready
 10513 ;;		_TXMode
 10514 ;; This function is called by:
 10515 ;;		_ModbusFC03
 10516 ;;		_ModbusFC10
 10517 ;;		_ModbusError
 10518 ;; This function uses a non-reentrant model
 10519 ;;
 10520                           
 10521                           	psect	text46
 10522  003612                     __ptext46:
 10523                           	opt callstack 0
 10524  003612                     _UART1_Write_string:
 10525                           	opt callstack 24
 10526  003612                     
 10527                           ;Modbus.c: 356: void UART1_Write_string(unsigned char * data, int data_len);Modbus.c: 35
      +                          7: {;Modbus.c: 358:     TXMode();
 10528  003612  EC68  F020         	call	_TXMode	;wreg free
 10529  003616                     l7020:
 10530  003616  ECF8  F01F         	call	_EUSART1_is_tx_ready	;wreg free
 10531  00361A  0900               	iorlw	0
 10532  00361C  B4D8               	btfsc	status,2,c
 10533  00361E  EF13  F01B         	goto	u7221
 10534  003622  EF15  F01B         	goto	u7220
 10535  003626                     u7221:
 10536  003626  EF0B  F01B         	goto	l7020
 10537  00362A                     u7220:
 10538  00362A                     
 10539                           ;Modbus.c: 360:     for (int i = 0; i < data_len; i++) {
 10540  00362A  0E00               	movlw	0
 10541  00362C  6E0C               	movwf	(UART1_Write_string@i+1)^0,c
 10542  00362E  0E00               	movlw	0
 10543  003630  6E0B               	movwf	UART1_Write_string@i^0,c
 10544  003632  EF30  F01B         	goto	l7030
 10545  003636                     l7024:
 10546                           
 10547                           ;Modbus.c: 361:         EUSART1_Write(data[i]);
 10548  003636  500B               	movf	UART1_Write_string@i^0,w,c
 10549  003638  2406               	addwf	UART1_Write_string@data^0,w,c
 10550  00363A  6ED9               	movwf	fsr2l,c
 10551  00363C  500C               	movf	(UART1_Write_string@i+1)^0,w,c
 10552  00363E  2007               	addwfc	(UART1_Write_string@data+1)^0,w,c
 10553  003640  6EDA               	movwf	fsr2h,c
 10554  003642  50DF               	movf	indf2,w,c
 10555  003644  ECD5  F01B         	call	_EUSART1_Write
 10556  003648                     l7026:
 10557  003648  EC1B  F020         	call	_EUSART1_is_tx_done	;wreg free
 10558  00364C  0900               	iorlw	0
 10559  00364E  B4D8               	btfsc	status,2,c
 10560  003650  EF2C  F01B         	goto	u7231
 10561  003654  EF2E  F01B         	goto	u7230
 10562  003658                     u7231:
 10563  003658  EF24  F01B         	goto	l7026
 10564  00365C                     u7230:
 10565  00365C                     
 10566                           ;Modbus.c: 363:     }
 10567  00365C  4A0B               	infsnz	UART1_Write_string@i^0,f,c
 10568  00365E  2A0C               	incf	(UART1_Write_string@i+1)^0,f,c
 10569  003660                     l7030:
 10570  003660  5008               	movf	UART1_Write_string@data_len^0,w,c
 10571  003662  5C0B               	subwf	UART1_Write_string@i^0,w,c
 10572  003664  500C               	movf	(UART1_Write_string@i+1)^0,w,c
 10573  003666  0A80               	xorlw	128
 10574  003668  6E0A               	movwf	??_UART1_Write_string^0,c
 10575  00366A  5009               	movf	(UART1_Write_string@data_len+1)^0,w,c
 10576  00366C  0A80               	xorlw	128
 10577  00366E  580A               	subwfb	??_UART1_Write_string^0,w,c
 10578  003670  A0D8               	btfss	status,0,c
 10579  003672  EF3D  F01B         	goto	u7241
 10580  003676  EF3F  F01B         	goto	u7240
 10581  00367A                     u7241:
 10582  00367A  EF1B  F01B         	goto	l7024
 10583  00367E                     u7240:
 10584  00367E  0012               	return		;funcret
 10585  003680                     __end_of_UART1_Write_string:
 10586                           	opt callstack 0
 10587                           
 10588 ;; *************** function _TXMode *****************
 10589 ;; Defined at:
 10590 ;;		line 36 in file "Modbus.c"
 10591 ;; Parameters:    Size  Location     Type
 10592 ;;		None
 10593 ;; Auto vars:     Size  Location     Type
 10594 ;;		None
 10595 ;; Return value:  Size  Location     Type
 10596 ;;                  1    wreg      void 
 10597 ;; Registers used:
 10598 ;;		None
 10599 ;; Tracked objects:
 10600 ;;		On entry : 0/0
 10601 ;;		On exit  : 0/0
 10602 ;;		Unchanged: 0/0
 10603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10608 ;;Total ram usage:        0 bytes
 10609 ;; Hardware stack levels used:    1
 10610 ;; Hardware stack levels required when called:    4
 10611 ;; This function calls:
 10612 ;;		Nothing
 10613 ;; This function is called by:
 10614 ;;		_UART1_Write_string
 10615 ;; This function uses a non-reentrant model
 10616 ;;
 10617                           
 10618                           	psect	text47
 10619  0040D0                     __ptext47:
 10620                           	opt callstack 0
 10621  0040D0                     _TXMode:
 10622                           	opt callstack 24
 10623  0040D0  8086               	bsf	134,0,c	;volatile
 10624  0040D2  8683               	bsf	131,3,c	;volatile
 10625  0040D4  0012               	return		;funcret
 10626  0040D6                     __end_of_TXMode:
 10627                           	opt callstack 0
 10628                           
 10629 ;; *************** function _EUSART1_is_tx_ready *****************
 10630 ;; Defined at:
 10631 ;;		line 134 in file "mcc_generated_files/eusart1.c"
 10632 ;; Parameters:    Size  Location     Type
 10633 ;;		None
 10634 ;; Auto vars:     Size  Location     Type
 10635 ;;		None
 10636 ;; Return value:  Size  Location     Type
 10637 ;;                  1    wreg      _Bool 
 10638 ;; Registers used:
 10639 ;;		wreg, status,2
 10640 ;; Tracked objects:
 10641 ;;		On entry : 0/0
 10642 ;;		On exit  : 0/0
 10643 ;;		Unchanged: 0/0
 10644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10649 ;;Total ram usage:        0 bytes
 10650 ;; Hardware stack levels used:    1
 10651 ;; Hardware stack levels required when called:    4
 10652 ;; This function calls:
 10653 ;;		Nothing
 10654 ;; This function is called by:
 10655 ;;		_UART1_Write_string
 10656 ;; This function uses a non-reentrant model
 10657 ;;
 10658                           
 10659                           	psect	text48
 10660  003FF0                     __ptext48:
 10661                           	opt callstack 0
 10662  003FF0                     _EUSART1_is_tx_ready:
 10663                           	opt callstack 24
 10664  003FF0                     
 10665                           ;mcc_generated_files/eusart1.c: 136:     return (eusart1TxBufferRemaining ? 1 : 0);
 10666  003FF0  0100               	movlb	0	; () banked
 10667  003FF2  51FE               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 10668  003FF4  A4D8               	btfss	status,2,c
 10669  003FF6  EFFF  F01F         	goto	u6731
 10670  003FFA  EF02  F020         	goto	u6730
 10671  003FFE                     u6731:
 10672  003FFE  0E01               	movlw	1
 10673  004000  EF03  F020         	goto	u6740
 10674  004004                     u6730:
 10675  004004  0E00               	movlw	0
 10676  004006                     u6740:
 10677  004006                     
 10678                           ; BSR set to: 0
 10679  004006  0012               	return		;funcret
 10680  004008                     __end_of_EUSART1_is_tx_ready:
 10681                           	opt callstack 0
 10682                           
 10683 ;; *************** function _EUSART1_is_tx_done *****************
 10684 ;; Defined at:
 10685 ;;		line 144 in file "mcc_generated_files/eusart1.c"
 10686 ;; Parameters:    Size  Location     Type
 10687 ;;		None
 10688 ;; Auto vars:     Size  Location     Type
 10689 ;;		None
 10690 ;; Return value:  Size  Location     Type
 10691 ;;                  1    wreg      _Bool 
 10692 ;; Registers used:
 10693 ;;		wreg
 10694 ;; Tracked objects:
 10695 ;;		On entry : 0/0
 10696 ;;		On exit  : 0/0
 10697 ;;		Unchanged: 0/0
 10698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10703 ;;Total ram usage:        0 bytes
 10704 ;; Hardware stack levels used:    1
 10705 ;; Hardware stack levels required when called:    4
 10706 ;; This function calls:
 10707 ;;		Nothing
 10708 ;; This function is called by:
 10709 ;;		_UART1_Write_string
 10710 ;; This function uses a non-reentrant model
 10711 ;;
 10712                           
 10713                           	psect	text49
 10714  004036                     __ptext49:
 10715                           	opt callstack 0
 10716  004036                     _EUSART1_is_tx_done:
 10717                           	opt callstack 24
 10718  004036                     
 10719                           ;mcc_generated_files/eusart1.c: 146:     return TX1STAbits.TRMT;
 10720  004036  B29E               	btfsc	158,1,c	;volatile
 10721  004038  EF20  F020         	goto	u6751
 10722  00403C  EF23  F020         	goto	u6750
 10723  004040                     u6751:
 10724  004040  0E01               	movlw	1
 10725  004042  EF24  F020         	goto	u6756
 10726  004046                     u6750:
 10727  004046  0E00               	movlw	0
 10728  004048                     u6756:
 10729  004048  0012               	return		;funcret
 10730  00404A                     __end_of_EUSART1_is_tx_done:
 10731                           	opt callstack 0
 10732                           
 10733 ;; *************** function _EUSART1_Write *****************
 10734 ;; Defined at:
 10735 ;;		line 175 in file "mcc_generated_files/eusart1.c"
 10736 ;; Parameters:    Size  Location     Type
 10737 ;;  txData          1    wreg     unsigned char 
 10738 ;; Auto vars:     Size  Location     Type
 10739 ;;  txData          1    4[COMRAM] unsigned char 
 10740 ;; Return value:  Size  Location     Type
 10741 ;;                  1    wreg      void 
 10742 ;; Registers used:
 10743 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10744 ;; Tracked objects:
 10745 ;;		On entry : 0/0
 10746 ;;		On exit  : 0/0
 10747 ;;		Unchanged: 0/0
 10748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10750 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10752 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10753 ;;Total ram usage:        1 bytes
 10754 ;; Hardware stack levels used:    1
 10755 ;; Hardware stack levels required when called:    4
 10756 ;; This function calls:
 10757 ;;		Nothing
 10758 ;; This function is called by:
 10759 ;;		_UART1_Write_string
 10760 ;; This function uses a non-reentrant model
 10761 ;;
 10762                           
 10763                           	psect	text50
 10764  0037AA                     __ptext50:
 10765                           	opt callstack 0
 10766  0037AA                     _EUSART1_Write:
 10767                           	opt callstack 24
 10768                           
 10769                           ;incstack = 0
 10770                           ;EUSART1_Write@txData stored from wreg
 10771  0037AA  6E05               	movwf	EUSART1_Write@txData^0,c
 10772  0037AC                     l6598:
 10773                           
 10774                           ;mcc_generated_files/eusart1.c: 177:     while(0 == eusart1TxBufferRemaining)
 10775  0037AC  0100               	movlb	0	; () banked
 10776  0037AE  51FE               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 10777  0037B0  B4D8               	btfsc	status,2,c
 10778  0037B2  EFDD  F01B         	goto	u6761
 10779  0037B6  EFDF  F01B         	goto	u6760
 10780  0037BA                     u6761:
 10781  0037BA  EFD6  F01B         	goto	l6598
 10782  0037BE                     u6760:
 10783  0037BE                     
 10784                           ; BSR set to: 0
 10785                           ;mcc_generated_files/eusart1.c: 181:     if(0 == PIE3bits.TX1IE)
 10786  0037BE  010E               	movlb	14	; () banked
 10787  0037C0  B9C5               	btfsc	197,4,b	;volatile
 10788  0037C2  EFE5  F01B         	goto	u6771
 10789  0037C6  EFE7  F01B         	goto	u6770
 10790  0037CA                     u6771:
 10791  0037CA  EFEB  F01B         	goto	l471
 10792  0037CE                     u6770:
 10793  0037CE                     
 10794                           ; BSR set to: 14
 10795                           ;mcc_generated_files/eusart1.c: 182:     {;mcc_generated_files/eusart1.c: 183:         T
      +                          X1REG = txData;
 10796  0037CE  C005  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
 10797                           
 10798                           ;mcc_generated_files/eusart1.c: 184:     }
 10799  0037D2  EF01  F01C         	goto	l6612
 10800  0037D6                     l471:
 10801                           
 10802                           ; BSR set to: 14
 10803                           ;mcc_generated_files/eusart1.c: 186:     {;mcc_generated_files/eusart1.c: 187:         P
      +                          IE3bits.TX1IE = 0;
 10804  0037D6  99C5               	bcf	197,4,b	;volatile
 10805  0037D8                     
 10806                           ; BSR set to: 14
 10807                           ;mcc_generated_files/eusart1.c: 188:         eusart1TxBuffer[eusart1TxHead++] = txData;
 10808  0037D8  0E74               	movlw	low _eusart1TxBuffer
 10809  0037DA  0100               	movlb	0	; () banked
 10810  0037DC  25DC               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 10811  0037DE  6ED9               	movwf	fsr2l,c
 10812  0037E0  6ADA               	clrf	fsr2h,c
 10813  0037E2  0E01               	movlw	high _eusart1TxBuffer
 10814  0037E4  22DA               	addwfc	fsr2h,f,c
 10815  0037E6  C005  FFDF         	movff	EUSART1_Write@txData,indf2
 10816  0037EA                     
 10817                           ; BSR set to: 0
 10818  0037EA  2BDC               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 10819  0037EC                     
 10820                           ; BSR set to: 0
 10821                           ;mcc_generated_files/eusart1.c: 189:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 10822  0037EC  0E0F               	movlw	15
 10823  0037EE  65DC               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
 10824  0037F0  EFFC  F01B         	goto	u6781
 10825  0037F4  EFFE  F01B         	goto	u6780
 10826  0037F8                     u6781:
 10827  0037F8  EF00  F01C         	goto	l6610
 10828  0037FC                     u6780:
 10829  0037FC                     
 10830                           ; BSR set to: 0
 10831                           ;mcc_generated_files/eusart1.c: 190:         {;mcc_generated_files/eusart1.c: 191:      
      +                                 eusart1TxHead = 0;
 10832  0037FC  0E00               	movlw	0
 10833  0037FE  6FDC               	movwf	_eusart1TxHead& (0+255),b	;volatile
 10834  003800                     l6610:
 10835                           
 10836                           ; BSR set to: 0
 10837                           ;mcc_generated_files/eusart1.c: 193:         eusart1TxBufferRemaining--;
 10838  003800  07FE               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 10839  003802                     l6612:
 10840                           
 10841                           ;mcc_generated_files/eusart1.c: 195:     PIE3bits.TX1IE = 1;
 10842  003802  010E               	movlb	14	; () banked
 10843  003804  89C5               	bsf	197,4,b	;volatile
 10844  003806                     
 10845                           ; BSR set to: 14
 10846  003806  0012               	return		;funcret
 10847  003808                     __end_of_EUSART1_Write:
 10848                           	opt callstack 0
 10849                           
 10850 ;; *************** function _PrintModRespon *****************
 10851 ;; Defined at:
 10852 ;;		line 370 in file "Modbus.c"
 10853 ;; Parameters:    Size  Location     Type
 10854 ;;		None
 10855 ;; Auto vars:     Size  Location     Type
 10856 ;;  i               2   41[BANK0 ] int 
 10857 ;; Return value:  Size  Location     Type
 10858 ;;                  1    wreg      void 
 10859 ;; Registers used:
 10860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10861 ;; Tracked objects:
 10862 ;;		On entry : 0/0
 10863 ;;		On exit  : 0/0
 10864 ;;		Unchanged: 0/0
 10865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10867 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10868 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10869 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10870 ;;Total ram usage:        3 bytes
 10871 ;; Hardware stack levels used:    1
 10872 ;; Hardware stack levels required when called:   13
 10873 ;; This function calls:
 10874 ;;		_EUSART2_is_tx_done
 10875 ;;		_EUSART2_is_tx_ready
 10876 ;;		_printf
 10877 ;; This function is called by:
 10878 ;;		_main
 10879 ;;		_ModbusFC10
 10880 ;;		_ModbusError
 10881 ;; This function uses a non-reentrant model
 10882 ;;
 10883                           
 10884                           	psect	text51
 10885  0032CE                     __ptext51:
 10886                           	opt callstack 0
 10887  0032CE                     _PrintModRespon:
 10888                           	opt callstack 17
 10889  0032CE                     
 10890                           ;Modbus.c: 374:     printf("Modbus Response Count %i:\r\n",MBResCnt);
 10891  0032CE  0E8A               	movlw	low STR_21
 10892  0032D0  0100               	movlb	0	; () banked
 10893  0032D2  6F7D               	movwf	printf@fmt& (0+255),b
 10894  0032D4  0EFD               	movlw	high STR_21
 10895  0032D6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10896  0032D8  C0CF  F07F         	movff	_MBResCnt,?_printf+2
 10897  0032DC  C0D0  F080         	movff	_MBResCnt+1,?_printf+3
 10898  0032E0  EC73  F01F         	call	_printf	;wreg free
 10899  0032E4                     
 10900                           ;Modbus.c: 376:     for(i=0; i< MBResCnt ; i++ ){
 10901  0032E4  0E00               	movlw	0
 10902  0032E6  0100               	movlb	0	; () banked
 10903  0032E8  6F8A               	movwf	(PrintModRespon@i+1)& (0+255),b
 10904  0032EA  0E00               	movlw	0
 10905  0032EC  6F89               	movwf	PrintModRespon@i& (0+255),b
 10906  0032EE  EFA6  F019         	goto	l6914
 10907  0032F2                     l6906:
 10908  0032F2  EC04  F020         	call	_EUSART2_is_tx_ready	;wreg free
 10909  0032F6  0900               	iorlw	0
 10910  0032F8  B4D8               	btfsc	status,2,c
 10911  0032FA  EF81  F019         	goto	u7051
 10912  0032FE  EF83  F019         	goto	u7050
 10913  003302                     u7051:
 10914  003302  EF79  F019         	goto	l6906
 10915  003306                     u7050:
 10916  003306                     
 10917                           ;Modbus.c: 378:         printf("   Byte %02i : 0x%02x \r\n", i, MBRespon[i]);
 10918  003306  0E2B               	movlw	low STR_22
 10919  003308  0100               	movlb	0	; () banked
 10920  00330A  6F7D               	movwf	printf@fmt& (0+255),b
 10921  00330C  0EFE               	movlw	high STR_22
 10922  00330E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10923  003310  C089  F07F         	movff	PrintModRespon@i,?_printf+2
 10924  003314  C08A  F080         	movff	PrintModRespon@i+1,?_printf+3
 10925  003318  0EA0               	movlw	low _MBRespon
 10926  00331A  2589               	addwf	PrintModRespon@i& (0+255),w,b
 10927  00331C  6ED9               	movwf	fsr2l,c
 10928  00331E  0E02               	movlw	high _MBRespon
 10929  003320  218A               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
 10930  003322  6EDA               	movwf	fsr2h,c
 10931  003324  50DF               	movf	indf2,w,c
 10932  003326  6E55               	movwf	??_PrintModRespon^0,c
 10933  003328  5055               	movf	??_PrintModRespon^0,w,c
 10934  00332A  6F81               	movwf	(?_printf+4)& (0+255),b
 10935  00332C  6B82               	clrf	(?_printf+5)& (0+255),b
 10936  00332E  EC73  F01F         	call	_printf	;wreg free
 10937  003332                     l6910:
 10938  003332  EC10  F020         	call	_EUSART2_is_tx_done	;wreg free
 10939  003336  0900               	iorlw	0
 10940  003338  B4D8               	btfsc	status,2,c
 10941  00333A  EFA1  F019         	goto	u7061
 10942  00333E  EFA3  F019         	goto	u7060
 10943  003342                     u7061:
 10944  003342  EF99  F019         	goto	l6910
 10945  003346                     u7060:
 10946  003346                     
 10947                           ;Modbus.c: 380:     }
 10948  003346  0100               	movlb	0	; () banked
 10949  003348  4B89               	infsnz	PrintModRespon@i& (0+255),f,b
 10950  00334A  2B8A               	incf	(PrintModRespon@i+1)& (0+255),f,b
 10951  00334C                     l6914:
 10952                           
 10953                           ; BSR set to: 0
 10954  00334C  51CF               	movf	_MBResCnt& (0+255),w,b
 10955  00334E  5D89               	subwf	PrintModRespon@i& (0+255),w,b
 10956  003350  518A               	movf	(PrintModRespon@i+1)& (0+255),w,b
 10957  003352  0A80               	xorlw	128
 10958  003354  6E55               	movwf	??_PrintModRespon^0,c
 10959  003356  51D0               	movf	(_MBResCnt+1)& (0+255),w,b
 10960  003358  0A80               	xorlw	128
 10961  00335A  5855               	subwfb	??_PrintModRespon^0,w,c
 10962  00335C  A0D8               	btfss	status,0,c
 10963  00335E  EFB3  F019         	goto	u7071
 10964  003362  EFB5  F019         	goto	u7070
 10965  003366                     u7071:
 10966  003366  EF79  F019         	goto	l6906
 10967  00336A                     u7070:
 10968  00336A                     
 10969                           ; BSR set to: 0
 10970                           ;Modbus.c: 382:     printf("\r\n\n");
 10971  00336A  0E06               	movlw	low (STR_56+71)
 10972  00336C  6F7D               	movwf	printf@fmt& (0+255),b
 10973  00336E  0EF9               	movlw	high (STR_56+71)
 10974  003370  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10975  003372  EC73  F01F         	call	_printf	;wreg free
 10976  003376  0012               	return		;funcret
 10977  003378                     __end_of_PrintModRespon:
 10978                           	opt callstack 0
 10979                           
 10980 ;; *************** function _printf *****************
 10981 ;; Defined at:
 10982 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
 10983 ;; Parameters:    Size  Location     Type
 10984 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
 10985 ;;		 -> STR_74(12), STR_72(13), STR_71(17), STR_70(15), 
 10986 ;;		 -> STR_69(33), STR_67(38), STR_66(58), STR_65(17), 
 10987 ;;		 -> STR_64(16), STR_63(4), STR_62(19), STR_61(32), 
 10988 ;;		 -> STR_60(33), STR_59(37), STR_58(44), STR_57(22), 
 10989 ;;		 -> STR_56(75), STR_55(53), STR_54(57), STR_53(54), 
 10990 ;;		 -> STR_52(52), STR_51(40), STR_50(30), STR_49(43), 
 10991 ;;		 -> STR_48(73), STR_47(42), STR_46(36), STR_45(34), 
 10992 ;;		 -> STR_42(42), STR_41(22), STR_40(21), STR_39(20), 
 10993 ;;		 -> STR_38(19), STR_37(40), STR_27(32), STR_26(37), 
 10994 ;;		 -> STR_25(16), STR_24(24), STR_23(4), STR_22(25), 
 10995 ;;		 -> STR_21(28), STR_20(29), STR_19(26), STR_18(26), 
 10996 ;;		 -> STR_17(24), STR_16(22), STR_15(22), STR_14(26), 
 10997 ;;		 -> STR_13(36), STR_12(4), STR_11(23), STR_10(34), 
 10998 ;;		 -> STR_9(28), STR_8(54), STR_7(27), STR_6(16), 
 10999 ;;		 -> STR_4(19), STR_3(28), STR_2(31), STR_1(21), 
 11000 ;; Auto vars:     Size  Location     Type
 11001 ;;  ap              2   39[BANK0 ] PTR void [1]
 11002 ;;		 -> ?_printf(2), 
 11003 ;;  ret             2    0        int 
 11004 ;; Return value:  Size  Location     Type
 11005 ;;                  2   29[BANK0 ] int 
 11006 ;; Registers used:
 11007 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11008 ;; Tracked objects:
 11009 ;;		On entry : 0/0
 11010 ;;		On exit  : 0/0
 11011 ;;		Unchanged: 0/0
 11012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11013 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11014 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11016 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11017 ;;Total ram usage:       12 bytes
 11018 ;; Hardware stack levels used:    1
 11019 ;; Hardware stack levels required when called:   12
 11020 ;; This function calls:
 11021 ;;		_vfprintf
 11022 ;; This function is called by:
 11023 ;;		_main
 11024 ;;		_PrintMB400
 11025 ;;		_AddRxBuffToModBus
 11026 ;;		_PrintModbus
 11027 ;;		_checkCRC
 11028 ;;		_ModbusFC03
 11029 ;;		_PrintModRespon
 11030 ;;		_ModbusRx
 11031 ;;		_InitialiseString
 11032 ;;		_ReadRX232
 11033 ;;		_TogDebug
 11034 ;;		_ClearEEAddRange
 11035 ;;		_SaveCardDat
 11036 ;; This function uses a non-reentrant model
 11037 ;;
 11038                           
 11039                           	psect	text52
 11040  003EE6                     __ptext52:
 11041                           	opt callstack 0
 11042  003EE6                     _printf:
 11043                           	opt callstack 18
 11044  003EE6  0E7F               	movlw	low (?_printf+2)
 11045  003EE8  0100               	movlb	0	; () banked
 11046  003EEA  6F87               	movwf	printf@ap& (0+255),b
 11047  003EEC  0E00               	movlw	high (?_printf+2)
 11048  003EEE  6F88               	movwf	(printf@ap+1)& (0+255),b
 11049  003EF0                     
 11050                           ; BSR set to: 0
 11051  003EF0  0E00               	movlw	0
 11052  003EF2  6F77               	movwf	vfprintf@fp& (0+255),b
 11053  003EF4  0E00               	movlw	0
 11054  003EF6  6F78               	movwf	(vfprintf@fp+1)& (0+255),b
 11055  003EF8  C07D  F079         	movff	printf@fmt,vfprintf@fmt
 11056  003EFC  C07E  F07A         	movff	printf@fmt+1,vfprintf@fmt+1
 11057  003F00  0E87               	movlw	low printf@ap
 11058  003F02  6F7B               	movwf	vfprintf@ap& (0+255),b
 11059  003F04  0E00               	movlw	high printf@ap
 11060  003F06  6F7C               	movwf	(vfprintf@ap+1)& (0+255),b
 11061  003F08  EC74  F01B         	call	_vfprintf	;wreg free
 11062  003F0C  0012               	return		;funcret
 11063  003F0E                     __end_of_printf:
 11064                           	opt callstack 0
 11065                           
 11066 ;; *************** function _vfprintf *****************
 11067 ;; Defined at:
 11068 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11069 ;; Parameters:    Size  Location     Type
 11070 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
 11071 ;;		 -> NULL(0), 
 11072 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
 11073 ;;		 -> STR_74(12), STR_72(13), STR_71(17), STR_70(15), 
 11074 ;;		 -> STR_69(33), STR_67(38), STR_66(58), STR_65(17), 
 11075 ;;		 -> STR_64(16), STR_63(4), STR_62(19), STR_61(32), 
 11076 ;;		 -> STR_60(33), STR_59(37), STR_58(44), STR_57(22), 
 11077 ;;		 -> STR_56(75), STR_55(53), STR_54(57), STR_53(54), 
 11078 ;;		 -> STR_52(52), STR_51(40), STR_50(30), STR_49(43), 
 11079 ;;		 -> STR_48(73), STR_47(42), STR_46(36), STR_45(34), 
 11080 ;;		 -> STR_42(42), STR_41(22), STR_40(21), STR_39(20), 
 11081 ;;		 -> STR_38(19), STR_37(40), STR_27(32), STR_26(37), 
 11082 ;;		 -> STR_25(16), STR_24(24), STR_23(4), STR_22(25), 
 11083 ;;		 -> STR_21(28), STR_20(29), STR_19(26), STR_18(26), 
 11084 ;;		 -> STR_17(24), STR_16(22), STR_15(22), STR_14(26), 
 11085 ;;		 -> STR_13(36), STR_12(4), STR_11(23), STR_10(34), 
 11086 ;;		 -> STR_9(28), STR_8(54), STR_7(27), STR_6(16), 
 11087 ;;		 -> STR_4(19), STR_3(28), STR_2(31), STR_1(21), 
 11088 ;;  ap              2   27[BANK0 ] PTR PTR void 
 11089 ;;		 -> printf@ap(2), 
 11090 ;; Auto vars:     Size  Location     Type
 11091 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
 11092 ;;		 -> STR_74(12), STR_72(13), STR_71(17), STR_70(15), 
 11093 ;;		 -> STR_69(33), STR_67(38), STR_66(58), STR_65(17), 
 11094 ;;		 -> STR_64(16), STR_63(4), STR_62(19), STR_61(32), 
 11095 ;;		 -> STR_60(33), STR_59(37), STR_58(44), STR_57(22), 
 11096 ;;		 -> STR_56(75), STR_55(53), STR_54(57), STR_53(54), 
 11097 ;;		 -> STR_52(52), STR_51(40), STR_50(30), STR_49(43), 
 11098 ;;		 -> STR_48(73), STR_47(42), STR_46(36), STR_45(34), 
 11099 ;;		 -> STR_42(42), STR_41(22), STR_40(21), STR_39(20), 
 11100 ;;		 -> STR_38(19), STR_37(40), STR_27(32), STR_26(37), 
 11101 ;;		 -> STR_25(16), STR_24(24), STR_23(4), STR_22(25), 
 11102 ;;		 -> STR_21(28), STR_20(29), STR_19(26), STR_18(26), 
 11103 ;;		 -> STR_17(24), STR_16(22), STR_15(22), STR_14(26), 
 11104 ;;		 -> STR_13(36), STR_12(4), STR_11(23), STR_10(34), 
 11105 ;;		 -> STR_9(28), STR_8(54), STR_7(27), STR_6(16), 
 11106 ;;		 -> STR_4(19), STR_3(28), STR_2(31), STR_1(21), 
 11107 ;; Return value:  Size  Location     Type
 11108 ;;                  2   23[BANK0 ] int 
 11109 ;; Registers used:
 11110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11111 ;; Tracked objects:
 11112 ;;		On entry : 0/0
 11113 ;;		On exit  : 0/0
 11114 ;;		Unchanged: 0/0
 11115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11116 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11117 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11119 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11120 ;;Total ram usage:        8 bytes
 11121 ;; Hardware stack levels used:    1
 11122 ;; Hardware stack levels required when called:   11
 11123 ;; This function calls:
 11124 ;;		_vfpfcnvrt
 11125 ;; This function is called by:
 11126 ;;		_printf
 11127 ;; This function uses a non-reentrant model
 11128 ;;
 11129                           
 11130                           	psect	text53
 11131  0036E8                     __ptext53:
 11132                           	opt callstack 0
 11133  0036E8                     _vfprintf:
 11134                           	opt callstack 18
 11135  0036E8                     
 11136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 11137  0036E8  C079  F053         	movff	vfprintf@fmt,vfprintf@cfmt
 11138  0036EC  C07A  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 11139  0036F0                     
 11140                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 11141  0036F0  0E00               	movlw	0
 11142  0036F2  0100               	movlb	0	; () banked
 11143  0036F4  6FC6               	movwf	(_nout+1)& (0+255),b
 11144  0036F6  0E00               	movlw	0
 11145  0036F8  6FC5               	movwf	_nout& (0+255),b
 11146                           
 11147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 11148  0036FA  EF92  F01B         	goto	l6454
 11149  0036FE                     l6452:
 11150                           
 11151                           ; BSR set to: 0
 11152                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 11153  0036FE  C077  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
 11154  003702  C078  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 11155  003706  0E53               	movlw	low vfprintf@cfmt
 11156  003708  6E4B               	movwf	vfpfcnvrt@fmt^0,c
 11157  00370A  0E00               	movlw	high vfprintf@cfmt
 11158  00370C  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
 11159  00370E  C07B  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
 11160  003712  C07C  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 11161  003716  EC95  F000         	call	_vfpfcnvrt	;wreg free
 11162  00371A  5049               	movf	?_vfpfcnvrt^0,w,c
 11163  00371C  0100               	movlb	0	; () banked
 11164  00371E  27C5               	addwf	_nout& (0+255),f,b
 11165  003720  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
 11166  003722  23C6               	addwfc	(_nout+1)& (0+255),f,b
 11167  003724                     l6454:
 11168                           
 11169                           ; BSR set to: 0
 11170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 11171  003724  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
 11172  003728  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 11173  00372C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11174  00372C  6AF8               	clrf	tblptru,c
 11175  00372E                     	endif
 11176  00372E                     	if	0	;tblptru may be non-zero
 11177  00372E                     	endif
 11178  00372E  0008               	tblrd		*
 11179  003730  50F5               	movf	tablat,w,c
 11180  003732  0900               	iorlw	0
 11181  003734  A4D8               	btfss	status,2,c
 11182  003736  EF9F  F01B         	goto	u6541
 11183  00373A  EFA1  F01B         	goto	u6540
 11184  00373E                     u6541:
 11185  00373E  EF7F  F01B         	goto	l6452
 11186  003742                     u6540:
 11187  003742                     
 11188                           ; BSR set to: 0
 11189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 11190  003742  C0C5  F077         	movff	_nout,?_vfprintf
 11191  003746  C0C6  F078         	movff	_nout+1,?_vfprintf+1
 11192  00374A                     
 11193                           ; BSR set to: 0
 11194  00374A  0012               	return		;funcret
 11195  00374C                     __end_of_vfprintf:
 11196                           	opt callstack 0
 11197                           
 11198 ;; *************** function _vfpfcnvrt *****************
 11199 ;; Defined at:
 11200 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11201 ;; Parameters:    Size  Location     Type
 11202 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
 11203 ;;		 -> NULL(0), 
 11204 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
 11205 ;;		 -> vfprintf@cfmt(2), 
 11206 ;;  ap              2   76[COMRAM] PTR PTR void 
 11207 ;;		 -> printf@ap(2), 
 11208 ;; Auto vars:     Size  Location     Type
 11209 ;;  llu             8   15[BANK0 ] unsigned long long 
 11210 ;;  ll              8    0[BANK0 ] long long 
 11211 ;;  f               4    0        long long 
 11212 ;;  vp              3    0        PTR void 
 11213 ;;  ct              3    0        unsigned char [3]
 11214 ;;  done            2   11[BANK0 ] int 
 11215 ;;  cp              2    8[BANK0 ] PTR unsigned char 
 11216 ;;		 -> ?_printf(2), ValidateCmd@ConfName_1483(20), ValidateCmd@ConfName_1479(20), ValidateCmd@ConfName(20), 
 11217 ;;		 -> STR_44(9), STR_43(12), InitialiseString@RevNum(2), InitialiseString@PartNum(19), 
 11218 ;;		 -> InitialiseString@SerialNum(11), Command(16), 
 11219 ;;  i               2    0        int 
 11220 ;;  c               1   10[BANK0 ] unsigned char 
 11221 ;; Return value:  Size  Location     Type
 11222 ;;                  2   72[COMRAM] int 
 11223 ;; Registers used:
 11224 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11225 ;; Tracked objects:
 11226 ;;		On entry : 0/0
 11227 ;;		On exit  : 0/0
 11228 ;;		Unchanged: 0/0
 11229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11230 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11231 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11232 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11233 ;;      Totals:        10      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11234 ;;Total ram usage:       33 bytes
 11235 ;; Hardware stack levels used:    1
 11236 ;; Hardware stack levels required when called:   10
 11237 ;; This function calls:
 11238 ;;		_atoi
 11239 ;;		_dtoa
 11240 ;;		_fputc
 11241 ;;		_isdigit
 11242 ;;		_stoa
 11243 ;;		_utoa
 11244 ;;		_xtoa
 11245 ;; This function is called by:
 11246 ;;		_vfprintf
 11247 ;; This function uses a non-reentrant model
 11248 ;;
 11249                           
 11250                           	psect	text54
 11251  00012A                     __ptext54:
 11252                           	opt callstack 0
 11253  00012A                     _vfpfcnvrt:
 11254                           	opt callstack 18
 11255  00012A                     
 11256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 11257  00012A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11258  00012E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11259  000132  CFDE FFF6          	movff	postinc2,tblptrl
 11260  000136  CFDD FFF7          	movff	postdec2,tblptrh
 11261  00013A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11262  00013A  6AF8               	clrf	tblptru,c
 11263  00013C                     	endif
 11264  00013C                     	if	0	;tblptru may be non-zero
 11265  00013C                     	endif
 11266  00013C  0008               	tblrd		*
 11267  00013E  50F5               	movf	tablat,w,c
 11268  000140  0A25               	xorlw	37
 11269  000142  A4D8               	btfss	status,2,c
 11270  000144  EFA6  F000         	goto	u6371
 11271  000148  EFA8  F000         	goto	u6370
 11272  00014C                     u6371:
 11273  00014C  EF3D  F003         	goto	l6426
 11274  000150                     u6370:
 11275  000150                     
 11276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 11277  000150  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11278  000154  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11279  000158  2ADE               	incf	postinc2,f,c
 11280  00015A  0E00               	movlw	0
 11281  00015C  22DD               	addwfc	postdec2,f,c
 11282  00015E                     
 11283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 11284  00015E  0E00               	movlw	0
 11285  000160  0100               	movlb	0	; () banked
 11286  000162  6FC8               	movwf	(_width+1)& (0+255),b
 11287  000164  0E00               	movlw	0
 11288  000166  6FC7               	movwf	_width& (0+255),b
 11289  000168  C0C7  F057         	movff	_width,_flags
 11290  00016C  C0C8  F058         	movff	_width+1,_flags+1
 11291  000170                     
 11292                           ; BSR set to: 0
 11293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 11294  000170  69C9               	setf	_prec& (0+255),b
 11295  000172  69CA               	setf	(_prec+1)& (0+255),b
 11296  000174                     
 11297                           ; BSR set to: 0
 11298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 11299  000174  0E00               	movlw	0
 11300  000176  6F6C               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 11301  000178  0E00               	movlw	0
 11302  00017A  6F6B               	movwf	vfpfcnvrt@done& (0+255),b
 11303                           
 11304                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 11305  00017C  EF07  F001         	goto	l6348
 11306  000180                     l6322:
 11307                           
 11308                           ; BSR set to: 0
 11309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 11310  000180  8057               	bsf	_flags^0,0,c
 11311  000182                     l6324:
 11312                           
 11313                           ; BSR set to: 0
 11314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 11315  000182  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11316  000186  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11317  00018A  2ADE               	incf	postinc2,f,c
 11318  00018C  0E00               	movlw	0
 11319  00018E  22DD               	addwfc	postdec2,f,c
 11320                           
 11321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 11322  000190  EF07  F001         	goto	l6348
 11323  000194                     l6326:
 11324                           
 11325                           ; BSR set to: 0
 11326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 11327  000194  8257               	bsf	_flags^0,1,c
 11328  000196  EFC1  F000         	goto	l6324
 11329  00019A                     l6330:
 11330                           
 11331                           ; BSR set to: 0
 11332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 11333  00019A  8457               	bsf	_flags^0,2,c
 11334  00019C  EFC1  F000         	goto	l6324
 11335  0001A0                     l6334:
 11336                           
 11337                           ; BSR set to: 0
 11338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 11339  0001A0  8657               	bsf	_flags^0,3,c
 11340  0001A2  EFC1  F000         	goto	l6324
 11341  0001A6                     l6338:
 11342                           
 11343                           ; BSR set to: 0
 11344                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 11345  0001A6  8857               	bsf	_flags^0,4,c
 11346  0001A8  EFC1  F000         	goto	l6324
 11347  0001AC                     l6342:
 11348                           
 11349                           ; BSR set to: 0
 11350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 11351  0001AC  0E00               	movlw	0
 11352  0001AE  6F6C               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 11353  0001B0  0E01               	movlw	1
 11354  0001B2  6F6B               	movwf	vfpfcnvrt@done& (0+255),b
 11355                           
 11356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 11357  0001B4  EF07  F001         	goto	l6348
 11358  0001B8                     l6346:
 11359                           
 11360                           ; BSR set to: 0
 11361  0001B8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11362  0001BC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11363  0001C0  CFDE FFF6          	movff	postinc2,tblptrl
 11364  0001C4  CFDD FFF7          	movff	postdec2,tblptrh
 11365  0001C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11366  0001C8  6AF8               	clrf	tblptru,c
 11367  0001CA                     	endif
 11368  0001CA                     	if	0	;tblptru may be non-zero
 11369  0001CA                     	endif
 11370  0001CA  0008               	tblrd		*
 11371  0001CC  50F5               	movf	tablat,w,c
 11372  0001CE  6E4F               	movwf	??_vfpfcnvrt^0,c
 11373  0001D0  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
 11374                           
 11375                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11376                           ; Switch size 1, requested type "simple"
 11377                           ; Number of cases is 1, Range of values is 0 to 0
 11378                           ; switch strategies available:
 11379                           ; Name         Instructions Cycles
 11380                           ; simple_byte            4     3 (average)
 11381                           ;	Chosen strategy is simple_byte
 11382  0001D2  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
 11383  0001D4  0A00               	xorlw	0	; case 0
 11384  0001D6  B4D8               	btfsc	status,2,c
 11385  0001D8  EFF0  F000         	goto	l7620
 11386  0001DC  EFD6  F000         	goto	l6342
 11387  0001E0                     l7620:
 11388                           
 11389                           ; BSR set to: 0
 11390                           ; Switch size 1, requested type "simple"
 11391                           ; Number of cases is 5, Range of values is 32 to 48
 11392                           ; switch strategies available:
 11393                           ; Name         Instructions Cycles
 11394                           ; simple_byte           16     9 (average)
 11395                           ;	Chosen strategy is simple_byte
 11396  0001E0  504F               	movf	??_vfpfcnvrt^0,w,c
 11397  0001E2  0A20               	xorlw	32	; case 32
 11398  0001E4  B4D8               	btfsc	status,2,c
 11399  0001E6  EFD0  F000         	goto	l6334
 11400  0001EA  0A03               	xorlw	3	; case 35
 11401  0001EC  B4D8               	btfsc	status,2,c
 11402  0001EE  EFD3  F000         	goto	l6338
 11403  0001F2  0A08               	xorlw	8	; case 43
 11404  0001F4  B4D8               	btfsc	status,2,c
 11405  0001F6  EFCD  F000         	goto	l6330
 11406  0001FA  0A06               	xorlw	6	; case 45
 11407  0001FC  B4D8               	btfsc	status,2,c
 11408  0001FE  EFC0  F000         	goto	l6322
 11409  000202  0A1D               	xorlw	29	; case 48
 11410  000204  B4D8               	btfsc	status,2,c
 11411  000206  EFCA  F000         	goto	l6326
 11412  00020A  EFD6  F000         	goto	l6342
 11413  00020E                     l6348:
 11414                           
 11415                           ; BSR set to: 0
 11416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 11417  00020E  516B               	movf	vfpfcnvrt@done& (0+255),w,b
 11418  000210  116C               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 11419  000212  B4D8               	btfsc	status,2,c
 11420  000214  EF0E  F001         	goto	u6381
 11421  000218  EF10  F001         	goto	u6380
 11422  00021C                     u6381:
 11423  00021C  EFDC  F000         	goto	l6346
 11424  000220                     u6380:
 11425  000220                     
 11426                           ; BSR set to: 0
 11427                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 11428  000220  A057               	btfss	_flags^0,0,c
 11429  000222  EF15  F001         	goto	u6391
 11430  000226  EF17  F001         	goto	u6390
 11431  00022A                     u6391:
 11432  00022A  EF18  F001         	goto	l6352
 11433  00022E                     u6390:
 11434  00022E                     
 11435                           ; BSR set to: 0
 11436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 11437  00022E  9257               	bcf	_flags^0,1,c
 11438  000230                     l6352:
 11439                           
 11440                           ; BSR set to: 0
 11441                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 11442  000230  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11443  000234  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11444  000238  CFDE FFF6          	movff	postinc2,tblptrl
 11445  00023C  CFDD FFF7          	movff	postdec2,tblptrh
 11446  000240                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11447  000240  6AF8               	clrf	tblptru,c
 11448  000242                     	endif
 11449  000242                     	if	0	;tblptru may be non-zero
 11450  000242                     	endif
 11451  000242  0008               	tblrd		*
 11452  000244  50F5               	movf	tablat,w,c
 11453  000246  0A2A               	xorlw	42
 11454  000248  A4D8               	btfss	status,2,c
 11455  00024A  EF29  F001         	goto	u6401
 11456  00024E  EF2B  F001         	goto	u6400
 11457  000252                     u6401:
 11458  000252  EF54  F001         	goto	l6360
 11459  000256                     u6400:
 11460  000256                     
 11461                           ; BSR set to: 0
 11462                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 11463  000256  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11464  00025A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11465  00025E  2ADE               	incf	postinc2,f,c
 11466  000260  0E00               	movlw	0
 11467  000262  22DD               	addwfc	postdec2,f,c
 11468                           
 11469                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 11470  000264  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11471  000268  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11472  00026C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 11473  000270  0E02               	movlw	2
 11474  000272  26DE               	addwf	postinc2,f,c
 11475  000274  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 11476  000278  0E00               	movlw	0
 11477  00027A  22DD               	addwfc	postdec2,f,c
 11478  00027C  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11479  000280  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11480  000284  CFDE F0C7          	movff	postinc2,_width
 11481  000288  CFDD F0C8          	movff	postdec2,_width+1
 11482  00028C                     
 11483                           ; BSR set to: 0
 11484                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 11485  00028C  BFC8               	btfsc	(_width+1)& (0+255),7,b
 11486  00028E  EF4D  F001         	goto	u6410
 11487  000292  EF4B  F001         	goto	u6411
 11488  000296                     u6411:
 11489  000296  EF99  F001         	goto	l6370
 11490  00029A                     u6410:
 11491  00029A                     
 11492                           ; BSR set to: 0
 11493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 11494  00029A  8057               	bsf	_flags^0,0,c
 11495                           
 11496                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 11497  00029C  6DC7               	negf	_width& (0+255),b
 11498  00029E  1FC8               	comf	(_width+1)& (0+255),f,b
 11499  0002A0  B0D8               	btfsc	status,0,c
 11500  0002A2  2BC8               	incf	(_width+1)& (0+255),f,b
 11501  0002A4  EF99  F001         	goto	l6370
 11502  0002A8                     l6360:
 11503                           
 11504                           ; BSR set to: 0
 11505                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 11506  0002A8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11507  0002AC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11508  0002B0  CFDE F00C          	movff	postinc2,atoi@s
 11509  0002B4  CFDD F00D          	movff	postdec2,atoi@s+1
 11510  0002B8  EC9C  F00F         	call	_atoi	;wreg free
 11511  0002BC  C00C  F0C7         	movff	?_atoi,_width
 11512  0002C0  C00D  F0C8         	movff	?_atoi+1,_width+1
 11513                           
 11514                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11515  0002C4  EF6B  F001         	goto	l6364
 11516  0002C8                     l6362:
 11517                           
 11518                           ; BSR set to: 0
 11519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 11520  0002C8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11521  0002CC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11522  0002D0  2ADE               	incf	postinc2,f,c
 11523  0002D2  0E00               	movlw	0
 11524  0002D4  22DD               	addwfc	postdec2,f,c
 11525  0002D6                     l6364:
 11526  0002D6  0ED0               	movlw	208
 11527  0002D8  6E4F               	movwf	??_vfpfcnvrt^0,c
 11528  0002DA  0EFF               	movlw	255
 11529  0002DC  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
 11530  0002DE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11531  0002E2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11532  0002E6  CFDE FFF6          	movff	postinc2,tblptrl
 11533  0002EA  CFDD FFF7          	movff	postdec2,tblptrh
 11534  0002EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11535  0002EE  6AF8               	clrf	tblptru,c
 11536  0002F0                     	endif
 11537  0002F0                     	if	0	;tblptru may be non-zero
 11538  0002F0                     	endif
 11539  0002F0  0008               	tblrd		*
 11540  0002F2  50F5               	movf	tablat,w,c
 11541  0002F4  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
 11542  0002F6  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
 11543  0002F8  504F               	movf	??_vfpfcnvrt^0,w,c
 11544  0002FA  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
 11545  0002FC  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
 11546  0002FE  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
 11547  000300  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
 11548  000302  E10A               	bnz	u6420
 11549  000304  0E0A               	movlw	10
 11550  000306  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
 11551  000308  A0D8               	btfss	status,0,c
 11552  00030A  EF89  F001         	goto	u6421
 11553  00030E  EF8C  F001         	goto	u6420
 11554  000312                     u6421:
 11555  000312  0E01               	movlw	1
 11556  000314  EF8D  F001         	goto	u6430
 11557  000318                     u6420:
 11558  000318  0E00               	movlw	0
 11559  00031A                     u6430:
 11560  00031A  0100               	movlb	0	; () banked
 11561  00031C  6F6D               	movwf	_vfpfcnvrt$1605& (0+255),b
 11562  00031E  6B6E               	clrf	(_vfpfcnvrt$1605+1)& (0+255),b
 11563  000320                     
 11564                           ; BSR set to: 0
 11565  000320  516D               	movf	_vfpfcnvrt$1605& (0+255),w,b
 11566  000322  116E               	iorwf	(_vfpfcnvrt$1605+1)& (0+255),w,b
 11567  000324  A4D8               	btfss	status,2,c
 11568  000326  EF97  F001         	goto	u6441
 11569  00032A  EF99  F001         	goto	u6440
 11570  00032E                     u6441:
 11571  00032E  EF64  F001         	goto	l6362
 11572  000332                     u6440:
 11573  000332                     l6370:
 11574                           
 11575                           ; BSR set to: 0
 11576                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 11577  000332  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11578  000336  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11579  00033A  CFDE FFF6          	movff	postinc2,tblptrl
 11580  00033E  CFDD FFF7          	movff	postdec2,tblptrh
 11581  000342                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11582  000342  6AF8               	clrf	tblptru,c
 11583  000344                     	endif
 11584  000344                     	if	0	;tblptru may be non-zero
 11585  000344                     	endif
 11586  000344  0008               	tblrd		*
 11587  000346  50F5               	movf	tablat,w,c
 11588  000348  0A64               	xorlw	100
 11589  00034A  B4D8               	btfsc	status,2,c
 11590  00034C  EFAA  F001         	goto	u6451
 11591  000350  EFAC  F001         	goto	u6450
 11592  000354                     u6451:
 11593  000354  EFBF  F001         	goto	l6374
 11594  000358                     u6450:
 11595  000358                     
 11596                           ; BSR set to: 0
 11597  000358  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11598  00035C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11599  000360  CFDE FFF6          	movff	postinc2,tblptrl
 11600  000364  CFDD FFF7          	movff	postdec2,tblptrh
 11601  000368                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11602  000368  6AF8               	clrf	tblptru,c
 11603  00036A                     	endif
 11604  00036A                     	if	0	;tblptru may be non-zero
 11605  00036A                     	endif
 11606  00036A  0008               	tblrd		*
 11607  00036C  50F5               	movf	tablat,w,c
 11608  00036E  0A69               	xorlw	105
 11609  000370  A4D8               	btfss	status,2,c
 11610  000372  EFBD  F001         	goto	u6461
 11611  000376  EFBF  F001         	goto	u6460
 11612  00037A                     u6461:
 11613  00037A  EFFF  F001         	goto	l6380
 11614  00037E                     u6460:
 11615  00037E                     l6374:
 11616                           
 11617                           ; BSR set to: 0
 11618                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 11619  00037E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11620  000382  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11621  000386  2ADE               	incf	postinc2,f,c
 11622  000388  0E00               	movlw	0
 11623  00038A  22DD               	addwfc	postdec2,f,c
 11624                           
 11625                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 11626  00038C  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11627  000390  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11628  000394  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 11629  000398  0E02               	movlw	2
 11630  00039A  26DE               	addwf	postinc2,f,c
 11631  00039C  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 11632  0003A0  0E00               	movlw	0
 11633  0003A2  22DD               	addwfc	postdec2,f,c
 11634  0003A4  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11635  0003A8  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11636  0003AC  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
 11637  0003B0  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
 11638  0003B4  0E00               	movlw	0
 11639  0003B6  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 11640  0003B8  0EFF               	movlw	-1
 11641  0003BA  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 11642  0003BC  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 11643  0003BE  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 11644  0003C0  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 11645  0003C2  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 11646  0003C4  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 11647  0003C6                     
 11648                           ; BSR set to: 0
 11649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 11650  0003C6  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
 11651  0003CA  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 11652  0003CE  C060  F024         	movff	vfpfcnvrt@ll,dtoa@d
 11653  0003D2  C061  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 11654  0003D6  C062  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 11655  0003DA  C063  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 11656  0003DE  C064  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 11657  0003E2  C065  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 11658  0003E6  C066  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 11659  0003EA  C067  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 11660  0003EE  EC66  F007         	call	_dtoa	;wreg free
 11661  0003F2  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
 11662  0003F6  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
 11663  0003FA  EF59  F003         	goto	l1133
 11664  0003FE                     l6380:
 11665                           
 11666                           ; BSR set to: 0
 11667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 11668  0003FE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11669  000402  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11670  000406  CFDE FFF6          	movff	postinc2,tblptrl
 11671  00040A  CFDD FFF7          	movff	postdec2,tblptrh
 11672  00040E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11673  00040E  6AF8               	clrf	tblptru,c
 11674  000410                     	endif
 11675  000410                     	if	0	;tblptru may be non-zero
 11676  000410                     	endif
 11677  000410  0008               	tblrd		*
 11678  000412  50F5               	movf	tablat,w,c
 11679  000414  0A73               	xorlw	115
 11680  000416  A4D8               	btfss	status,2,c
 11681  000418  EF10  F002         	goto	u6471
 11682  00041C  EF12  F002         	goto	u6470
 11683  000420                     u6471:
 11684  000420  EF3D  F002         	goto	l6388
 11685  000424                     u6470:
 11686  000424                     
 11687                           ; BSR set to: 0
 11688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 11689  000424  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11690  000428  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11691  00042C  2ADE               	incf	postinc2,f,c
 11692  00042E  0E00               	movlw	0
 11693  000430  22DD               	addwfc	postdec2,f,c
 11694                           
 11695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 11696  000432  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11697  000436  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11698  00043A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 11699  00043E  0E02               	movlw	2
 11700  000440  26DE               	addwf	postinc2,f,c
 11701  000442  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 11702  000446  0E00               	movlw	0
 11703  000448  22DD               	addwfc	postdec2,f,c
 11704  00044A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11705  00044E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11706  000452  CFDE F068          	movff	postinc2,vfpfcnvrt@cp
 11707  000456  CFDD F069          	movff	postdec2,vfpfcnvrt@cp+1
 11708  00045A                     
 11709                           ; BSR set to: 0
 11710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 11711  00045A  C049  F010         	movff	vfpfcnvrt@fp,stoa@fp
 11712  00045E  C04A  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 11713  000462  C068  F012         	movff	vfpfcnvrt@cp,stoa@s
 11714  000466  C069  F013         	movff	vfpfcnvrt@cp+1,stoa@s+1
 11715  00046A  ECCF  F00E         	call	_stoa	;wreg free
 11716  00046E  C010  F049         	movff	?_stoa,?_vfpfcnvrt
 11717  000472  C011  F04A         	movff	?_stoa+1,?_vfpfcnvrt+1
 11718  000476  EF59  F003         	goto	l1133
 11719  00047A                     l6388:
 11720                           
 11721                           ; BSR set to: 0
 11722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 11723  00047A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11724  00047E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11725  000482  CFDE FFF6          	movff	postinc2,tblptrl
 11726  000486  CFDD FFF7          	movff	postdec2,tblptrh
 11727  00048A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11728  00048A  6AF8               	clrf	tblptru,c
 11729  00048C                     	endif
 11730  00048C                     	if	0	;tblptru may be non-zero
 11731  00048C                     	endif
 11732  00048C  0008               	tblrd		*
 11733  00048E  50F5               	movf	tablat,w,c
 11734  000490  0A75               	xorlw	117
 11735  000492  A4D8               	btfss	status,2,c
 11736  000494  EF4E  F002         	goto	u6481
 11737  000498  EF50  F002         	goto	u6480
 11738  00049C                     u6481:
 11739  00049C  EF91  F002         	goto	l6396
 11740  0004A0                     u6480:
 11741  0004A0                     
 11742                           ; BSR set to: 0
 11743                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 11744  0004A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11745  0004A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11746  0004A8  2ADE               	incf	postinc2,f,c
 11747  0004AA  0E00               	movlw	0
 11748  0004AC  22DD               	addwfc	postdec2,f,c
 11749                           
 11750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 11751  0004AE  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11752  0004B2  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11753  0004B6  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 11754  0004BA  0E02               	movlw	2
 11755  0004BC  26DE               	addwf	postinc2,f,c
 11756  0004BE  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 11757  0004C2  0E00               	movlw	0
 11758  0004C4  22DD               	addwfc	postdec2,f,c
 11759  0004C6  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11760  0004CA  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11761  0004CE  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 11762  0004D2  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
 11763  0004D6  C051  F06F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 11764  0004DA  C052  F070         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 11765  0004DE  6B71               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 11766  0004E0  6B72               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 11767  0004E2  6B73               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 11768  0004E4  6B74               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 11769  0004E6  6B75               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 11770  0004E8  6B76               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 11771  0004EA                     
 11772                           ; BSR set to: 0
 11773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 11774  0004EA  C049  F022         	movff	vfpfcnvrt@fp,utoa@fp
 11775  0004EE  C04A  F023         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 11776  0004F2  C06F  F024         	movff	vfpfcnvrt@llu,utoa@d
 11777  0004F6  C070  F025         	movff	vfpfcnvrt@llu+1,utoa@d+1
 11778  0004FA  C071  F026         	movff	vfpfcnvrt@llu+2,utoa@d+2
 11779  0004FE  C072  F027         	movff	vfpfcnvrt@llu+3,utoa@d+3
 11780  000502  C073  F028         	movff	vfpfcnvrt@llu+4,utoa@d+4
 11781  000506  C074  F029         	movff	vfpfcnvrt@llu+5,utoa@d+5
 11782  00050A  C075  F02A         	movff	vfpfcnvrt@llu+6,utoa@d+6
 11783  00050E  C076  F02B         	movff	vfpfcnvrt@llu+7,utoa@d+7
 11784  000512  EC41  F00A         	call	_utoa	;wreg free
 11785  000516  C022  F049         	movff	?_utoa,?_vfpfcnvrt
 11786  00051A  C023  F04A         	movff	?_utoa+1,?_vfpfcnvrt+1
 11787  00051E  EF59  F003         	goto	l1133
 11788  000522                     l6396:
 11789                           
 11790                           ; BSR set to: 0
 11791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 11792  000522  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11793  000526  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11794  00052A  CFDE FFF6          	movff	postinc2,tblptrl
 11795  00052E  CFDD FFF7          	movff	postdec2,tblptrh
 11796  000532                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11797  000532  6AF8               	clrf	tblptru,c
 11798  000534                     	endif
 11799  000534                     	if	0	;tblptru may be non-zero
 11800  000534                     	endif
 11801  000534  0008               	tblrd		*
 11802  000536  50F5               	movf	tablat,w,c
 11803  000538  0A78               	xorlw	120
 11804  00053A  B4D8               	btfsc	status,2,c
 11805  00053C  EFA2  F002         	goto	u6491
 11806  000540  EFA4  F002         	goto	u6490
 11807  000544                     u6491:
 11808  000544  EFB7  F002         	goto	l6400
 11809  000548                     u6490:
 11810  000548                     
 11811                           ; BSR set to: 0
 11812  000548  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11813  00054C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11814  000550  CFDE FFF6          	movff	postinc2,tblptrl
 11815  000554  CFDD FFF7          	movff	postdec2,tblptrh
 11816  000558                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11817  000558  6AF8               	clrf	tblptru,c
 11818  00055A                     	endif
 11819  00055A                     	if	0	;tblptru may be non-zero
 11820  00055A                     	endif
 11821  00055A  0008               	tblrd		*
 11822  00055C  50F5               	movf	tablat,w,c
 11823  00055E  0A58               	xorlw	88
 11824  000560  A4D8               	btfss	status,2,c
 11825  000562  EFB5  F002         	goto	u6501
 11826  000566  EFB7  F002         	goto	u6500
 11827  00056A                     u6501:
 11828  00056A  EF06  F003         	goto	l6410
 11829  00056E                     u6500:
 11830  00056E                     l6400:
 11831                           
 11832                           ; BSR set to: 0
 11833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 11834  00056E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11835  000572  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11836  000576  CFDE FFF6          	movff	postinc2,tblptrl
 11837  00057A  CFDD FFF7          	movff	postdec2,tblptrh
 11838  00057E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11839  00057E  6AF8               	clrf	tblptru,c
 11840  000580                     	endif
 11841  000580                     	if	0	;tblptru may be non-zero
 11842  000580                     	endif
 11843  000580  0008               	tblrd		*
 11844  000582  CFF5 F06A          	movff	tablat,vfpfcnvrt@c
 11845  000586                     
 11846                           ; BSR set to: 0
 11847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 11848  000586  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11849  00058A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11850  00058E  2ADE               	incf	postinc2,f,c
 11851  000590  0E00               	movlw	0
 11852  000592  22DD               	addwfc	postdec2,f,c
 11853  000594                     
 11854                           ; BSR set to: 0
 11855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 11856  000594  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11857  000598  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11858  00059C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 11859  0005A0  0E02               	movlw	2
 11860  0005A2  26DE               	addwf	postinc2,f,c
 11861  0005A4  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 11862  0005A8  0E00               	movlw	0
 11863  0005AA  22DD               	addwfc	postdec2,f,c
 11864  0005AC  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11865  0005B0  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11866  0005B4  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 11867  0005B8  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
 11868  0005BC  C051  F06F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 11869  0005C0  C052  F070         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 11870  0005C4  6B71               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 11871  0005C6  6B72               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 11872  0005C8  6B73               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 11873  0005CA  6B74               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 11874  0005CC  6B75               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 11875  0005CE  6B76               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 11876  0005D0                     
 11877                           ; BSR set to: 0
 11878                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 11879  0005D0  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
 11880  0005D4  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 11881  0005D8  C06F  F024         	movff	vfpfcnvrt@llu,xtoa@d
 11882  0005DC  C070  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 11883  0005E0  C071  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 11884  0005E4  C072  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 11885  0005E8  C073  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 11886  0005EC  C074  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 11887  0005F0  C075  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 11888  0005F4  C076  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 11889  0005F8  C06A  F02C         	movff	vfpfcnvrt@c,xtoa@x
 11890  0005FC  ECD6  F008         	call	_xtoa	;wreg free
 11891  000600  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
 11892  000604  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
 11893  000608  EF59  F003         	goto	l1133
 11894  00060C                     l6410:
 11895                           
 11896                           ; BSR set to: 0
 11897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 11898  00060C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11899  000610  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11900  000614  CFDE FFF6          	movff	postinc2,tblptrl
 11901  000618  CFDD FFF7          	movff	postdec2,tblptrh
 11902  00061C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11903  00061C  6AF8               	clrf	tblptru,c
 11904  00061E                     	endif
 11905  00061E                     	if	0	;tblptru may be non-zero
 11906  00061E                     	endif
 11907  00061E  0008               	tblrd		*
 11908  000620  50F5               	movf	tablat,w,c
 11909  000622  0A25               	xorlw	37
 11910  000624  A4D8               	btfss	status,2,c
 11911  000626  EF17  F003         	goto	u6511
 11912  00062A  EF19  F003         	goto	u6510
 11913  00062E                     u6511:
 11914  00062E  EF30  F003         	goto	l6420
 11915  000632                     u6510:
 11916  000632                     
 11917                           ; BSR set to: 0
 11918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 11919  000632  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11920  000636  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11921  00063A  2ADE               	incf	postinc2,f,c
 11922  00063C  0E00               	movlw	0
 11923  00063E  22DD               	addwfc	postdec2,f,c
 11924  000640                     
 11925                           ; BSR set to: 0
 11926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 11927  000640  0E00               	movlw	0
 11928  000642  6E08               	movwf	(fputc@c+1)^0,c
 11929  000644  0E25               	movlw	37
 11930  000646  6E07               	movwf	fputc@c^0,c
 11931  000648  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
 11932  00064C  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 11933  000650  ECBC  F019         	call	_fputc	;wreg free
 11934  000654                     l6416:
 11935                           
 11936                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 11937  000654  0E00               	movlw	0
 11938  000656  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
 11939  000658  0E01               	movlw	1
 11940  00065A  6E49               	movwf	?_vfpfcnvrt^0,c
 11941  00065C  EF59  F003         	goto	l1133
 11942  000660                     l6420:
 11943                           
 11944                           ; BSR set to: 0
 11945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 11946  000660  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11947  000664  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11948  000668  2ADE               	incf	postinc2,f,c
 11949  00066A  0E00               	movlw	0
 11950  00066C  22DD               	addwfc	postdec2,f,c
 11951  00066E                     
 11952                           ; BSR set to: 0
 11953                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 11954  00066E  0E00               	movlw	0
 11955  000670  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
 11956  000672  0E00               	movlw	0
 11957  000674  6E49               	movwf	?_vfpfcnvrt^0,c
 11958  000676  EF59  F003         	goto	l1133
 11959  00067A                     l6426:
 11960                           
 11961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 11962  00067A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11963  00067E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11964  000682  CFDE FFF6          	movff	postinc2,tblptrl
 11965  000686  CFDD FFF7          	movff	postdec2,tblptrh
 11966  00068A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11967  00068A  6AF8               	clrf	tblptru,c
 11968  00068C                     	endif
 11969  00068C                     	if	0	;tblptru may be non-zero
 11970  00068C                     	endif
 11971  00068C  0008               	tblrd		*
 11972  00068E  50F5               	movf	tablat,w,c
 11973  000690  6E07               	movwf	fputc@c^0,c
 11974  000692  6A08               	clrf	(fputc@c+1)^0,c
 11975  000694  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
 11976  000698  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 11977  00069C  ECBC  F019         	call	_fputc	;wreg free
 11978  0006A0                     
 11979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 11980  0006A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11981  0006A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11982  0006A8  2ADE               	incf	postinc2,f,c
 11983  0006AA  0E00               	movlw	0
 11984  0006AC  22DD               	addwfc	postdec2,f,c
 11985  0006AE  EF2A  F003         	goto	l6416
 11986  0006B2                     l1133:
 11987  0006B2  0012               	return		;funcret
 11988  0006B4                     __end_of_vfpfcnvrt:
 11989                           	opt callstack 0
 11990                           
 11991 ;; *************** function _xtoa *****************
 11992 ;; Defined at:
 11993 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11994 ;; Parameters:    Size  Location     Type
 11995 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 11996 ;;		 -> NULL(0), 
 11997 ;;  d               8   35[COMRAM] unsigned long long 
 11998 ;;  x               1   43[COMRAM] unsigned char 
 11999 ;; Auto vars:     Size  Location     Type
 12000 ;;  n               8   60[COMRAM] unsigned long long 
 12001 ;;  c               2   70[COMRAM] int 
 12002 ;;  i               2   68[COMRAM] int 
 12003 ;;  w               2   58[COMRAM] int 
 12004 ;;  p               2   56[COMRAM] int 
 12005 ;; Return value:  Size  Location     Type
 12006 ;;                  2   33[COMRAM] int 
 12007 ;; Registers used:
 12008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12009 ;; Tracked objects:
 12010 ;;		On entry : 0/0
 12011 ;;		On exit  : 0/0
 12012 ;;		Unchanged: 0/0
 12013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12014 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12015 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12016 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12017 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12018 ;;Total ram usage:       39 bytes
 12019 ;; Hardware stack levels used:    1
 12020 ;; Hardware stack levels required when called:    9
 12021 ;; This function calls:
 12022 ;;		_isalpha
 12023 ;;		_isupper
 12024 ;;		_pad
 12025 ;;		_toupper
 12026 ;; This function is called by:
 12027 ;;		_vfpfcnvrt
 12028 ;; This function uses a non-reentrant model
 12029 ;;
 12030                           
 12031                           	psect	text55
 12032  0011AC                     __ptext55:
 12033                           	opt callstack 0
 12034  0011AC                     _xtoa:
 12035                           	opt callstack 18
 12036  0011AC                     
 12037                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 12038  0011AC  0100               	movlb	0	; () banked
 12039  0011AE  BFCA               	btfsc	(_prec+1)& (0+255),7,b
 12040  0011B0  EFDC  F008         	goto	u6131
 12041  0011B4  EFDE  F008         	goto	u6130
 12042  0011B8                     u6131:
 12043  0011B8  EFDF  F008         	goto	l6208
 12044  0011BC                     u6130:
 12045  0011BC                     
 12046                           ; BSR set to: 0
 12047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 12048  0011BC  9257               	bcf	_flags^0,1,c
 12049  0011BE                     l6208:
 12050                           
 12051                           ; BSR set to: 0
 12052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 12053  0011BE  BFCA               	btfsc	(_prec+1)& (0+255),7,b
 12054  0011C0  EFEC  F008         	goto	u6140
 12055  0011C4  51CA               	movf	(_prec+1)& (0+255),w,b
 12056  0011C6  E106               	bnz	u6141
 12057  0011C8  05C9               	decf	_prec& (0+255),w,b
 12058  0011CA  B0D8               	btfsc	status,0,c
 12059  0011CC  EFEA  F008         	goto	u6141
 12060  0011D0  EFEC  F008         	goto	u6140
 12061  0011D4                     u6141:
 12062  0011D4  EFF2  F008         	goto	l1079
 12063  0011D8                     u6140:
 12064  0011D8                     
 12065                           ; BSR set to: 0
 12066  0011D8  0E00               	movlw	0
 12067  0011DA  6E3A               	movwf	(xtoa@p+1)^0,c
 12068  0011DC  0E01               	movlw	1
 12069  0011DE  6E39               	movwf	xtoa@p^0,c
 12070  0011E0  EFF6  F008         	goto	l1081
 12071  0011E4                     l1079:
 12072                           
 12073                           ; BSR set to: 0
 12074  0011E4  C0C9  F039         	movff	_prec,xtoa@p
 12075  0011E8  C0CA  F03A         	movff	_prec+1,xtoa@p+1
 12076  0011EC                     l1081:
 12077                           
 12078                           ; BSR set to: 0
 12079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 12080  0011EC  C0C7  F03B         	movff	_width,xtoa@w
 12081  0011F0  C0C8  F03C         	movff	_width+1,xtoa@w+1
 12082                           
 12083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 12084  0011F4  A857               	btfss	_flags^0,4,c
 12085  0011F6  EFFF  F008         	goto	u6151
 12086  0011FA  EF01  F009         	goto	u6150
 12087  0011FE                     u6151:
 12088  0011FE  EF05  F009         	goto	l6214
 12089  001202                     u6150:
 12090  001202                     
 12091                           ; BSR set to: 0
 12092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 12093  001202  0EFE               	movlw	254
 12094  001204  263B               	addwf	xtoa@w^0,f,c
 12095  001206  0EFF               	movlw	255
 12096  001208  223C               	addwfc	(xtoa@w+1)^0,f,c
 12097  00120A                     l6214:
 12098                           
 12099                           ; BSR set to: 0
 12100                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 12101  00120A  C024  F03D         	movff	xtoa@d,xtoa@n
 12102  00120E  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
 12103  001212  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
 12104  001216  C027  F040         	movff	xtoa@d+3,xtoa@n+3
 12105  00121A  C028  F041         	movff	xtoa@d+4,xtoa@n+4
 12106  00121E  C029  F042         	movff	xtoa@d+5,xtoa@n+5
 12107  001222  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
 12108  001226  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
 12109  00122A                     
 12110                           ; BSR set to: 0
 12111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 12112  00122A  0E00               	movlw	0
 12113  00122C  6E46               	movwf	(xtoa@i+1)^0,c
 12114  00122E  0E1F               	movlw	31
 12115  001230  6E45               	movwf	xtoa@i^0,c
 12116  001232                     
 12117                           ; BSR set to: 0
 12118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 12119  001232  0E00               	movlw	0
 12120  001234  0101               	movlb	1	; () banked
 12121  001236  6FA3               	movwf	(_dbuf+31)& (0+255),b
 12122                           
 12123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12124  001238  EFD1  F009         	goto	l6250
 12125  00123C                     l6220:
 12126                           
 12127                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 12128  00123C  0645               	decf	xtoa@i^0,f,c
 12129  00123E  A0D8               	btfss	status,0,c
 12130  001240  0646               	decf	(xtoa@i+1)^0,f,c
 12131  001242                     
 12132                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 12133  001242  0E0F               	movlw	15
 12134  001244  143D               	andwf	xtoa@n^0,w,c
 12135  001246  6E47               	movwf	xtoa@c^0,c
 12136  001248  6A48               	clrf	(xtoa@c+1)^0,c
 12137  00124A                     
 12138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 12139  00124A  BE48               	btfsc	(xtoa@c+1)^0,7,c
 12140  00124C  EF31  F009         	goto	u6161
 12141  001250  5048               	movf	(xtoa@c+1)^0,w,c
 12142  001252  E109               	bnz	u6160
 12143  001254  0E0A               	movlw	10
 12144  001256  5C47               	subwf	xtoa@c^0,w,c
 12145  001258  A0D8               	btfss	status,0,c
 12146  00125A  EF31  F009         	goto	u6161
 12147  00125E  EF33  F009         	goto	u6160
 12148  001262                     u6161:
 12149  001262  EF3B  F009         	goto	l6228
 12150  001266                     u6160:
 12151  001266  0E57               	movlw	87
 12152  001268  2447               	addwf	xtoa@c^0,w,c
 12153  00126A  6E47               	movwf	xtoa@c^0,c
 12154  00126C  0E00               	movlw	0
 12155  00126E  2048               	addwfc	(xtoa@c+1)^0,w,c
 12156  001270  6E48               	movwf	(xtoa@c+1)^0,c
 12157  001272  EF41  F009         	goto	l1088
 12158  001276                     l6228:
 12159  001276  0E30               	movlw	48
 12160  001278  2447               	addwf	xtoa@c^0,w,c
 12161  00127A  6E47               	movwf	xtoa@c^0,c
 12162  00127C  0E00               	movlw	0
 12163  00127E  2048               	addwfc	(xtoa@c+1)^0,w,c
 12164  001280  6E48               	movwf	(xtoa@c+1)^0,c
 12165  001282                     l1088:
 12166  001282  0EBF               	movlw	191
 12167  001284  6E2D               	movwf	??_xtoa^0,c
 12168  001286  0EFF               	movlw	255
 12169  001288  6E2E               	movwf	(??_xtoa+1)^0,c
 12170  00128A  502C               	movf	xtoa@x^0,w,c
 12171  00128C  6E2F               	movwf	(??_xtoa+2)^0,c
 12172  00128E  6A30               	clrf	(??_xtoa+3)^0,c
 12173  001290  502D               	movf	??_xtoa^0,w,c
 12174  001292  262F               	addwf	(??_xtoa+2)^0,f,c
 12175  001294  502E               	movf	(??_xtoa+1)^0,w,c
 12176  001296  2230               	addwfc	(??_xtoa+3)^0,f,c
 12177  001298  5030               	movf	(??_xtoa+3)^0,w,c
 12178  00129A  E10A               	bnz	u6170
 12179  00129C  0E1A               	movlw	26
 12180  00129E  5C2F               	subwf	(??_xtoa+2)^0,w,c
 12181  0012A0  A0D8               	btfss	status,0,c
 12182  0012A2  EF55  F009         	goto	u6171
 12183  0012A6  EF58  F009         	goto	u6170
 12184  0012AA                     u6171:
 12185  0012AA  0E01               	movlw	1
 12186  0012AC  EF59  F009         	goto	u6180
 12187  0012B0                     u6170:
 12188  0012B0  0E00               	movlw	0
 12189  0012B2                     u6180:
 12190  0012B2  6E35               	movwf	_xtoa$1590^0,c
 12191  0012B4  6A36               	clrf	(_xtoa$1590+1)^0,c
 12192  0012B6  5035               	movf	_xtoa$1590^0,w,c
 12193  0012B8  1036               	iorwf	(_xtoa$1590+1)^0,w,c
 12194  0012BA  B4D8               	btfsc	status,2,c
 12195  0012BC  EF62  F009         	goto	u6191
 12196  0012C0  EF64  F009         	goto	u6190
 12197  0012C4                     u6191:
 12198  0012C4  EF94  F009         	goto	l6242
 12199  0012C8                     u6190:
 12200  0012C8  0E9F               	movlw	159
 12201  0012CA  6E2D               	movwf	??_xtoa^0,c
 12202  0012CC  0EFF               	movlw	255
 12203  0012CE  6E2E               	movwf	(??_xtoa+1)^0,c
 12204  0012D0  0E20               	movlw	32
 12205  0012D2  1047               	iorwf	xtoa@c^0,w,c
 12206  0012D4  6E2F               	movwf	(??_xtoa+2)^0,c
 12207  0012D6  0E00               	movlw	0
 12208  0012D8  1048               	iorwf	(xtoa@c+1)^0,w,c
 12209  0012DA  6E30               	movwf	(??_xtoa+3)^0,c
 12210  0012DC  502D               	movf	??_xtoa^0,w,c
 12211  0012DE  262F               	addwf	(??_xtoa+2)^0,f,c
 12212  0012E0  502E               	movf	(??_xtoa+1)^0,w,c
 12213  0012E2  2230               	addwfc	(??_xtoa+3)^0,f,c
 12214  0012E4  5030               	movf	(??_xtoa+3)^0,w,c
 12215  0012E6  E10A               	bnz	u6200
 12216  0012E8  0E1A               	movlw	26
 12217  0012EA  5C2F               	subwf	(??_xtoa+2)^0,w,c
 12218  0012EC  A0D8               	btfss	status,0,c
 12219  0012EE  EF7B  F009         	goto	u6201
 12220  0012F2  EF7E  F009         	goto	u6200
 12221  0012F6                     u6201:
 12222  0012F6  0E01               	movlw	1
 12223  0012F8  EF7F  F009         	goto	u6210
 12224  0012FC                     u6200:
 12225  0012FC  0E00               	movlw	0
 12226  0012FE                     u6210:
 12227  0012FE  6E37               	movwf	_xtoa$1591^0,c
 12228  001300  6A38               	clrf	(_xtoa$1591+1)^0,c
 12229  001302  5037               	movf	_xtoa$1591^0,w,c
 12230  001304  1038               	iorwf	(_xtoa$1591+1)^0,w,c
 12231  001306  B4D8               	btfsc	status,2,c
 12232  001308  EF88  F009         	goto	u6221
 12233  00130C  EF8A  F009         	goto	u6220
 12234  001310                     u6221:
 12235  001310  EF94  F009         	goto	l6242
 12236  001314                     u6220:
 12237  001314                     
 12238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 12239  001314  C047  F00B         	movff	xtoa@c,toupper@c
 12240  001318  C048  F00C         	movff	xtoa@c+1,toupper@c+1
 12241  00131C  EC04  F01C         	call	_toupper	;wreg free
 12242  001320  C00B  F047         	movff	?_toupper,xtoa@c
 12243  001324  C00C  F048         	movff	?_toupper+1,xtoa@c+1
 12244  001328                     l6242:
 12245                           
 12246                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 12247  001328  0E84               	movlw	low _dbuf
 12248  00132A  2445               	addwf	xtoa@i^0,w,c
 12249  00132C  6ED9               	movwf	fsr2l,c
 12250  00132E  0E01               	movlw	high _dbuf
 12251  001330  2046               	addwfc	(xtoa@i+1)^0,w,c
 12252  001332  6EDA               	movwf	fsr2h,c
 12253  001334  C047  FFDF         	movff	xtoa@c,indf2
 12254  001338                     
 12255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 12256  001338  0639               	decf	xtoa@p^0,f,c
 12257  00133A  A0D8               	btfss	status,0,c
 12258  00133C  063A               	decf	(xtoa@p+1)^0,f,c
 12259  00133E                     
 12260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 12261  00133E  063B               	decf	xtoa@w^0,f,c
 12262  001340  A0D8               	btfss	status,0,c
 12263  001342  063C               	decf	(xtoa@w+1)^0,f,c
 12264  001344                     
 12265                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 12266  001344  C03D  F02D         	movff	xtoa@n,??_xtoa
 12267  001348  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
 12268  00134C  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
 12269  001350  C040  F030         	movff	xtoa@n+3,??_xtoa+3
 12270  001354  C041  F031         	movff	xtoa@n+4,??_xtoa+4
 12271  001358  C042  F032         	movff	xtoa@n+5,??_xtoa+5
 12272  00135C  C043  F033         	movff	xtoa@n+6,??_xtoa+6
 12273  001360  C044  F034         	movff	xtoa@n+7,??_xtoa+7
 12274  001364  0E05               	movlw	5
 12275  001366  EFBE  F009         	goto	u6230
 12276  00136A                     u6235:
 12277  00136A  90D8               	bcf	status,0,c
 12278  00136C  3234               	rrcf	(??_xtoa+7)^0,f,c
 12279  00136E  3233               	rrcf	(??_xtoa+6)^0,f,c
 12280  001370  3232               	rrcf	(??_xtoa+5)^0,f,c
 12281  001372  3231               	rrcf	(??_xtoa+4)^0,f,c
 12282  001374  3230               	rrcf	(??_xtoa+3)^0,f,c
 12283  001376  322F               	rrcf	(??_xtoa+2)^0,f,c
 12284  001378  322E               	rrcf	(??_xtoa+1)^0,f,c
 12285  00137A  322D               	rrcf	??_xtoa^0,f,c
 12286  00137C                     u6230:
 12287  00137C  2EE8               	decfsz	wreg,f,c
 12288  00137E  EFB5  F009         	goto	u6235
 12289  001382  C02D  F03D         	movff	??_xtoa,xtoa@n
 12290  001386  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
 12291  00138A  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
 12292  00138E  C030  F040         	movff	??_xtoa+3,xtoa@n+3
 12293  001392  C031  F041         	movff	??_xtoa+4,xtoa@n+4
 12294  001396  C032  F042         	movff	??_xtoa+5,xtoa@n+5
 12295  00139A  C033  F043         	movff	??_xtoa+6,xtoa@n+6
 12296  00139E  C034  F044         	movff	??_xtoa+7,xtoa@n+7
 12297  0013A2                     l6250:
 12298                           
 12299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12300  0013A2  BE46               	btfsc	(xtoa@i+1)^0,7,c
 12301  0013A4  EFDD  F009         	goto	u6241
 12302  0013A8  5046               	movf	(xtoa@i+1)^0,w,c
 12303  0013AA  E109               	bnz	u6240
 12304  0013AC  0E02               	movlw	2
 12305  0013AE  5C45               	subwf	xtoa@i^0,w,c
 12306  0013B0  A0D8               	btfss	status,0,c
 12307  0013B2  EFDD  F009         	goto	u6241
 12308  0013B6  EFDF  F009         	goto	u6240
 12309  0013BA                     u6241:
 12310  0013BA  EF0F  F00A         	goto	l1102
 12311  0013BE                     u6240:
 12312  0013BE  503D               	movf	xtoa@n^0,w,c
 12313  0013C0  103E               	iorwf	(xtoa@n+1)^0,w,c
 12314  0013C2  103F               	iorwf	(xtoa@n+2)^0,w,c
 12315  0013C4  1040               	iorwf	(xtoa@n+3)^0,w,c
 12316  0013C6  1041               	iorwf	(xtoa@n+4)^0,w,c
 12317  0013C8  1042               	iorwf	(xtoa@n+5)^0,w,c
 12318  0013CA  1043               	iorwf	(xtoa@n+6)^0,w,c
 12319  0013CC  1044               	iorwf	(xtoa@n+7)^0,w,c
 12320  0013CE  A4D8               	btfss	status,2,c
 12321  0013D0  EFEC  F009         	goto	u6251
 12322  0013D4  EFEE  F009         	goto	u6250
 12323  0013D8                     u6251:
 12324  0013D8  EF1E  F009         	goto	l6220
 12325  0013DC                     u6250:
 12326  0013DC  BE3A               	btfsc	(xtoa@p+1)^0,7,c
 12327  0013DE  EFFB  F009         	goto	u6260
 12328  0013E2  503A               	movf	(xtoa@p+1)^0,w,c
 12329  0013E4  E106               	bnz	u6261
 12330  0013E6  0439               	decf	xtoa@p^0,w,c
 12331  0013E8  B0D8               	btfsc	status,0,c
 12332  0013EA  EFF9  F009         	goto	u6261
 12333  0013EE  EFFB  F009         	goto	u6260
 12334  0013F2                     u6261:
 12335  0013F2  EF1E  F009         	goto	l6220
 12336  0013F6                     u6260:
 12337  0013F6  BE3C               	btfsc	(xtoa@w+1)^0,7,c
 12338  0013F8  EF06  F00A         	goto	u6271
 12339  0013FC  503C               	movf	(xtoa@w+1)^0,w,c
 12340  0013FE  E108               	bnz	u6270
 12341  001400  043B               	decf	xtoa@w^0,w,c
 12342  001402  A0D8               	btfss	status,0,c
 12343  001404  EF06  F00A         	goto	u6271
 12344  001408  EF08  F00A         	goto	u6270
 12345  00140C                     u6271:
 12346  00140C  EF0F  F00A         	goto	l1102
 12347  001410                     u6270:
 12348  001410  B257               	btfsc	_flags^0,1,c
 12349  001412  EF0D  F00A         	goto	u6281
 12350  001416  EF0F  F00A         	goto	u6280
 12351  00141A                     u6281:
 12352  00141A  EF1E  F009         	goto	l6220
 12353  00141E                     u6280:
 12354  00141E                     l1102:
 12355                           
 12356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 12357  00141E  A857               	btfss	_flags^0,4,c
 12358  001420  EF14  F00A         	goto	u6291
 12359  001424  EF16  F00A         	goto	u6290
 12360  001428                     u6291:
 12361  001428  EF2C  F00A         	goto	l6266
 12362  00142C                     u6290:
 12363  00142C                     
 12364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 12365  00142C  0645               	decf	xtoa@i^0,f,c
 12366  00142E  A0D8               	btfss	status,0,c
 12367  001430  0646               	decf	(xtoa@i+1)^0,f,c
 12368  001432                     
 12369                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 12370  001432  0E84               	movlw	low _dbuf
 12371  001434  2445               	addwf	xtoa@i^0,w,c
 12372  001436  6ED9               	movwf	fsr2l,c
 12373  001438  0E01               	movlw	high _dbuf
 12374  00143A  2046               	addwfc	(xtoa@i+1)^0,w,c
 12375  00143C  6EDA               	movwf	fsr2h,c
 12376  00143E  C02C  FFDF         	movff	xtoa@x,indf2
 12377  001442                     
 12378                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 12379  001442  0645               	decf	xtoa@i^0,f,c
 12380  001444  A0D8               	btfss	status,0,c
 12381  001446  0646               	decf	(xtoa@i+1)^0,f,c
 12382                           
 12383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 12384  001448  0E84               	movlw	low _dbuf
 12385  00144A  2445               	addwf	xtoa@i^0,w,c
 12386  00144C  6ED9               	movwf	fsr2l,c
 12387  00144E  0E01               	movlw	high _dbuf
 12388  001450  2046               	addwfc	(xtoa@i+1)^0,w,c
 12389  001452  6EDA               	movwf	fsr2h,c
 12390  001454  0E30               	movlw	48
 12391  001456  6EDF               	movwf	indf2,c
 12392  001458                     l6266:
 12393                           
 12394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 12395  001458  C022  F017         	movff	xtoa@fp,pad@fp
 12396  00145C  C023  F018         	movff	xtoa@fp+1,pad@fp+1
 12397  001460  0E84               	movlw	low _dbuf
 12398  001462  2445               	addwf	xtoa@i^0,w,c
 12399  001464  6E19               	movwf	pad@buf^0,c
 12400  001466  0E01               	movlw	high _dbuf
 12401  001468  2046               	addwfc	(xtoa@i+1)^0,w,c
 12402  00146A  6E1A               	movwf	(pad@buf+1)^0,c
 12403  00146C  C03B  F01B         	movff	xtoa@w,pad@p
 12404  001470  C03C  F01C         	movff	xtoa@w+1,pad@p+1
 12405  001474  ECE7  F017         	call	_pad	;wreg free
 12406  001478  C017  F022         	movff	?_pad,?_xtoa
 12407  00147C  C018  F023         	movff	?_pad+1,?_xtoa+1
 12408  001480  0012               	return		;funcret
 12409  001482                     __end_of_xtoa:
 12410                           	opt callstack 0
 12411                           
 12412 ;; *************** function _toupper *****************
 12413 ;; Defined at:
 12414 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 12415 ;; Parameters:    Size  Location     Type
 12416 ;;  c               2   10[COMRAM] int 
 12417 ;; Auto vars:     Size  Location     Type
 12418 ;;		None
 12419 ;; Return value:  Size  Location     Type
 12420 ;;                  2   10[COMRAM] int 
 12421 ;; Registers used:
 12422 ;;		wreg, status,2, status,0
 12423 ;; Tracked objects:
 12424 ;;		On entry : 0/0
 12425 ;;		On exit  : 0/0
 12426 ;;		Unchanged: 0/0
 12427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12428 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12429 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12430 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12431 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12432 ;;Total ram usage:        8 bytes
 12433 ;; Hardware stack levels used:    1
 12434 ;; Hardware stack levels required when called:    5
 12435 ;; This function calls:
 12436 ;;		_islower
 12437 ;; This function is called by:
 12438 ;;		_xtoa
 12439 ;; This function uses a non-reentrant model
 12440 ;;
 12441                           
 12442                           	psect	text56
 12443  003808                     __ptext56:
 12444                           	opt callstack 0
 12445  003808                     _toupper:
 12446                           	opt callstack 21
 12447  003808  0E9F               	movlw	159
 12448  00380A  6E0D               	movwf	??_toupper^0,c
 12449  00380C  0EFF               	movlw	255
 12450  00380E  6E0E               	movwf	(??_toupper+1)^0,c
 12451  003810  C00B  F00F         	movff	toupper@c,??_toupper+2
 12452  003814  C00C  F010         	movff	toupper@c+1,??_toupper+3
 12453  003818  500D               	movf	??_toupper^0,w,c
 12454  00381A  260F               	addwf	(??_toupper+2)^0,f,c
 12455  00381C  500E               	movf	(??_toupper+1)^0,w,c
 12456  00381E  2210               	addwfc	(??_toupper+3)^0,f,c
 12457  003820  5010               	movf	(??_toupper+3)^0,w,c
 12458  003822  E10A               	bnz	u5540
 12459  003824  0E1A               	movlw	26
 12460  003826  5C0F               	subwf	(??_toupper+2)^0,w,c
 12461  003828  A0D8               	btfss	status,0,c
 12462  00382A  EF19  F01C         	goto	u5541
 12463  00382E  EF1C  F01C         	goto	u5540
 12464  003832                     u5541:
 12465  003832  0E01               	movlw	1
 12466  003834  EF1D  F01C         	goto	u5550
 12467  003838                     u5540:
 12468  003838  0E00               	movlw	0
 12469  00383A                     u5550:
 12470  00383A  6E11               	movwf	_toupper$2179^0,c
 12471  00383C  6A12               	clrf	(_toupper$2179+1)^0,c
 12472  00383E  5011               	movf	_toupper$2179^0,w,c
 12473  003840  1012               	iorwf	(_toupper$2179+1)^0,w,c
 12474  003842  B4D8               	btfsc	status,2,c
 12475  003844  EF26  F01C         	goto	u5561
 12476  003848  EF28  F01C         	goto	u5560
 12477  00384C                     u5561:
 12478  00384C  EF2E  F01C         	goto	l1952
 12479  003850                     u5560:
 12480  003850  0E5F               	movlw	95
 12481  003852  140B               	andwf	toupper@c^0,w,c
 12482  003854  6E0B               	movwf	?_toupper^0,c
 12483  003856  6A0C               	clrf	(?_toupper+1)^0,c
 12484  003858  EF32  F01C         	goto	l1957
 12485  00385C                     l1952:
 12486  00385C  C00B  F00B         	movff	toupper@c,?_toupper
 12487  003860  C00C  F00C         	movff	toupper@c+1,?_toupper+1
 12488  003864                     l1957:
 12489  003864  0012               	return		;funcret
 12490  003866                     __end_of_toupper:
 12491                           	opt callstack 0
 12492                           
 12493 ;; *************** function _islower *****************
 12494 ;; Defined at:
 12495 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 12496 ;; Parameters:    Size  Location     Type
 12497 ;;  c               2    4[COMRAM] int 
 12498 ;; Auto vars:     Size  Location     Type
 12499 ;;		None
 12500 ;; Return value:  Size  Location     Type
 12501 ;;                  2    4[COMRAM] int 
 12502 ;; Registers used:
 12503 ;;		wreg, status,2, status,0
 12504 ;; Tracked objects:
 12505 ;;		On entry : 0/0
 12506 ;;		On exit  : 0/0
 12507 ;;		Unchanged: 0/0
 12508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12509 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12511 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12512 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12513 ;;Total ram usage:        6 bytes
 12514 ;; Hardware stack levels used:    1
 12515 ;; Hardware stack levels required when called:    4
 12516 ;; This function calls:
 12517 ;;		Nothing
 12518 ;; This function is called by:
 12519 ;;		_toupper
 12520 ;; This function uses a non-reentrant model
 12521 ;;
 12522                           
 12523                           	psect	text57
 12524  003DE6                     __ptext57:
 12525                           	opt callstack 0
 12526  003DE6                     _islower:
 12527                           	opt callstack 21
 12528  003DE6  0E9F               	movlw	159
 12529  003DE8  6E07               	movwf	??_islower^0,c
 12530  003DEA  0EFF               	movlw	255
 12531  003DEC  6E08               	movwf	(??_islower+1)^0,c
 12532  003DEE  C005  F009         	movff	islower@c,??_islower+2
 12533  003DF2  C006  F00A         	movff	islower@c+1,??_islower+3
 12534  003DF6  5007               	movf	??_islower^0,w,c
 12535  003DF8  2609               	addwf	(??_islower+2)^0,f,c
 12536  003DFA  5008               	movf	(??_islower+1)^0,w,c
 12537  003DFC  220A               	addwfc	(??_islower+3)^0,f,c
 12538  003DFE  500A               	movf	(??_islower+3)^0,w,c
 12539  003E00  E10A               	bnz	u5430
 12540  003E02  0E1A               	movlw	26
 12541  003E04  5C09               	subwf	(??_islower+2)^0,w,c
 12542  003E06  A0D8               	btfss	status,0,c
 12543  003E08  EF08  F01F         	goto	u5431
 12544  003E0C  EF0B  F01F         	goto	u5430
 12545  003E10                     u5431:
 12546  003E10  0E01               	movlw	1
 12547  003E12  EF0C  F01F         	goto	u5440
 12548  003E16                     u5430:
 12549  003E16  0E00               	movlw	0
 12550  003E18                     u5440:
 12551  003E18  6E05               	movwf	?_islower^0,c
 12552  003E1A  6A06               	clrf	(?_islower+1)^0,c
 12553  003E1C  0012               	return		;funcret
 12554  003E1E                     __end_of_islower:
 12555                           	opt callstack 0
 12556                           
 12557 ;; *************** function _isupper *****************
 12558 ;; Defined at:
 12559 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 12560 ;; Parameters:    Size  Location     Type
 12561 ;;  c               2    4[COMRAM] int 
 12562 ;; Auto vars:     Size  Location     Type
 12563 ;;		None
 12564 ;; Return value:  Size  Location     Type
 12565 ;;                  2    4[COMRAM] int 
 12566 ;; Registers used:
 12567 ;;		wreg, status,2, status,0
 12568 ;; Tracked objects:
 12569 ;;		On entry : 0/0
 12570 ;;		On exit  : 0/0
 12571 ;;		Unchanged: 0/0
 12572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12573 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12575 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12576 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12577 ;;Total ram usage:        6 bytes
 12578 ;; Hardware stack levels used:    1
 12579 ;; Hardware stack levels required when called:    4
 12580 ;; This function calls:
 12581 ;;		Nothing
 12582 ;; This function is called by:
 12583 ;;		_xtoa
 12584 ;; This function uses a non-reentrant model
 12585 ;;
 12586                           
 12587                           	psect	text58
 12588  003E1E                     __ptext58:
 12589                           	opt callstack 0
 12590  003E1E                     _isupper:
 12591                           	opt callstack 22
 12592  003E1E  0EBF               	movlw	191
 12593  003E20  6E07               	movwf	??_isupper^0,c
 12594  003E22  0EFF               	movlw	255
 12595  003E24  6E08               	movwf	(??_isupper+1)^0,c
 12596  003E26  C005  F009         	movff	isupper@c,??_isupper+2
 12597  003E2A  C006  F00A         	movff	isupper@c+1,??_isupper+3
 12598  003E2E  5007               	movf	??_isupper^0,w,c
 12599  003E30  2609               	addwf	(??_isupper+2)^0,f,c
 12600  003E32  5008               	movf	(??_isupper+1)^0,w,c
 12601  003E34  220A               	addwfc	(??_isupper+3)^0,f,c
 12602  003E36  500A               	movf	(??_isupper+3)^0,w,c
 12603  003E38  E10A               	bnz	u5500
 12604  003E3A  0E1A               	movlw	26
 12605  003E3C  5C09               	subwf	(??_isupper+2)^0,w,c
 12606  003E3E  A0D8               	btfss	status,0,c
 12607  003E40  EF24  F01F         	goto	u5501
 12608  003E44  EF27  F01F         	goto	u5500
 12609  003E48                     u5501:
 12610  003E48  0E01               	movlw	1
 12611  003E4A  EF28  F01F         	goto	u5510
 12612  003E4E                     u5500:
 12613  003E4E  0E00               	movlw	0
 12614  003E50                     u5510:
 12615  003E50  6E05               	movwf	?_isupper^0,c
 12616  003E52  6A06               	clrf	(?_isupper+1)^0,c
 12617  003E54  0012               	return		;funcret
 12618  003E56                     __end_of_isupper:
 12619                           	opt callstack 0
 12620                           
 12621 ;; *************** function _isalpha *****************
 12622 ;; Defined at:
 12623 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 12624 ;; Parameters:    Size  Location     Type
 12625 ;;  c               2    4[COMRAM] int 
 12626 ;; Auto vars:     Size  Location     Type
 12627 ;;		None
 12628 ;; Return value:  Size  Location     Type
 12629 ;;                  2    4[COMRAM] int 
 12630 ;; Registers used:
 12631 ;;		wreg, status,2, status,0
 12632 ;; Tracked objects:
 12633 ;;		On entry : 0/0
 12634 ;;		On exit  : 0/0
 12635 ;;		Unchanged: 0/0
 12636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12637 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12639 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12640 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12641 ;;Total ram usage:        6 bytes
 12642 ;; Hardware stack levels used:    1
 12643 ;; Hardware stack levels required when called:    4
 12644 ;; This function calls:
 12645 ;;		Nothing
 12646 ;; This function is called by:
 12647 ;;		_xtoa
 12648 ;; This function uses a non-reentrant model
 12649 ;;
 12650                           
 12651                           	psect	text59
 12652  003D72                     __ptext59:
 12653                           	opt callstack 0
 12654  003D72                     _isalpha:
 12655                           	opt callstack 22
 12656  003D72  0E9F               	movlw	159
 12657  003D74  6E07               	movwf	??_isalpha^0,c
 12658  003D76  0EFF               	movlw	255
 12659  003D78  6E08               	movwf	(??_isalpha+1)^0,c
 12660  003D7A  0E20               	movlw	32
 12661  003D7C  1005               	iorwf	isalpha@c^0,w,c
 12662  003D7E  6E09               	movwf	(??_isalpha+2)^0,c
 12663  003D80  0E00               	movlw	0
 12664  003D82  1006               	iorwf	(isalpha@c+1)^0,w,c
 12665  003D84  6E0A               	movwf	(??_isalpha+3)^0,c
 12666  003D86  5007               	movf	??_isalpha^0,w,c
 12667  003D88  2609               	addwf	(??_isalpha+2)^0,f,c
 12668  003D8A  5008               	movf	(??_isalpha+1)^0,w,c
 12669  003D8C  220A               	addwfc	(??_isalpha+3)^0,f,c
 12670  003D8E  500A               	movf	(??_isalpha+3)^0,w,c
 12671  003D90  E10A               	bnz	u5520
 12672  003D92  0E1A               	movlw	26
 12673  003D94  5C09               	subwf	(??_isalpha+2)^0,w,c
 12674  003D96  A0D8               	btfss	status,0,c
 12675  003D98  EFD0  F01E         	goto	u5521
 12676  003D9C  EFD3  F01E         	goto	u5520
 12677  003DA0                     u5521:
 12678  003DA0  0E01               	movlw	1
 12679  003DA2  EFD4  F01E         	goto	u5530
 12680  003DA6                     u5520:
 12681  003DA6  0E00               	movlw	0
 12682  003DA8                     u5530:
 12683  003DA8  6E05               	movwf	?_isalpha^0,c
 12684  003DAA  6A06               	clrf	(?_isalpha+1)^0,c
 12685  003DAC  0012               	return		;funcret
 12686  003DAE                     __end_of_isalpha:
 12687                           	opt callstack 0
 12688                           
 12689 ;; *************** function _utoa *****************
 12690 ;; Defined at:
 12691 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 12692 ;; Parameters:    Size  Location     Type
 12693 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 12694 ;;		 -> NULL(0), 
 12695 ;;  d               8   35[COMRAM] unsigned long long 
 12696 ;; Auto vars:     Size  Location     Type
 12697 ;;  n               8   55[COMRAM] unsigned long long 
 12698 ;;  i               2   63[COMRAM] int 
 12699 ;;  w               2   53[COMRAM] int 
 12700 ;;  p               2   51[COMRAM] int 
 12701 ;; Return value:  Size  Location     Type
 12702 ;;                  2   33[COMRAM] int 
 12703 ;; Registers used:
 12704 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12705 ;; Tracked objects:
 12706 ;;		On entry : 0/0
 12707 ;;		On exit  : 0/0
 12708 ;;		Unchanged: 0/0
 12709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12710 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12711 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12712 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12713 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12714 ;;Total ram usage:       32 bytes
 12715 ;; Hardware stack levels used:    1
 12716 ;; Hardware stack levels required when called:    9
 12717 ;; This function calls:
 12718 ;;		___lodiv
 12719 ;;		___lomod
 12720 ;;		_pad
 12721 ;; This function is called by:
 12722 ;;		_vfpfcnvrt
 12723 ;; This function uses a non-reentrant model
 12724 ;;
 12725                           
 12726                           	psect	text60
 12727  001482                     __ptext60:
 12728                           	opt callstack 0
 12729  001482                     _utoa:
 12730                           	opt callstack 18
 12731  001482                     
 12732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 12733  001482  0100               	movlb	0	; () banked
 12734  001484  BFCA               	btfsc	(_prec+1)& (0+255),7,b
 12735  001486  EF47  F00A         	goto	u6061
 12736  00148A  EF49  F00A         	goto	u6060
 12737  00148E                     u6061:
 12738  00148E  EF4A  F00A         	goto	l6172
 12739  001492                     u6060:
 12740  001492                     
 12741                           ; BSR set to: 0
 12742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 12743  001492  9257               	bcf	_flags^0,1,c
 12744  001494                     l6172:
 12745                           
 12746                           ; BSR set to: 0
 12747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 12748  001494  BFCA               	btfsc	(_prec+1)& (0+255),7,b
 12749  001496  EF57  F00A         	goto	u6070
 12750  00149A  51CA               	movf	(_prec+1)& (0+255),w,b
 12751  00149C  E106               	bnz	u6071
 12752  00149E  05C9               	decf	_prec& (0+255),w,b
 12753  0014A0  B0D8               	btfsc	status,0,c
 12754  0014A2  EF55  F00A         	goto	u6071
 12755  0014A6  EF57  F00A         	goto	u6070
 12756  0014AA                     u6071:
 12757  0014AA  EF5D  F00A         	goto	l1064
 12758  0014AE                     u6070:
 12759  0014AE                     
 12760                           ; BSR set to: 0
 12761  0014AE  0E00               	movlw	0
 12762  0014B0  6E35               	movwf	(utoa@p+1)^0,c
 12763  0014B2  0E01               	movlw	1
 12764  0014B4  6E34               	movwf	utoa@p^0,c
 12765  0014B6  EF61  F00A         	goto	l1066
 12766  0014BA                     l1064:
 12767                           
 12768                           ; BSR set to: 0
 12769  0014BA  C0C9  F034         	movff	_prec,utoa@p
 12770  0014BE  C0CA  F035         	movff	_prec+1,utoa@p+1
 12771  0014C2                     l1066:
 12772                           
 12773                           ; BSR set to: 0
 12774                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 12775  0014C2  C0C7  F036         	movff	_width,utoa@w
 12776  0014C6  C0C8  F037         	movff	_width+1,utoa@w+1
 12777                           
 12778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 12779  0014CA  C024  F038         	movff	utoa@d,utoa@n
 12780  0014CE  C025  F039         	movff	utoa@d+1,utoa@n+1
 12781  0014D2  C026  F03A         	movff	utoa@d+2,utoa@n+2
 12782  0014D6  C027  F03B         	movff	utoa@d+3,utoa@n+3
 12783  0014DA  C028  F03C         	movff	utoa@d+4,utoa@n+4
 12784  0014DE  C029  F03D         	movff	utoa@d+5,utoa@n+5
 12785  0014E2  C02A  F03E         	movff	utoa@d+6,utoa@n+6
 12786  0014E6  C02B  F03F         	movff	utoa@d+7,utoa@n+7
 12787  0014EA                     
 12788                           ; BSR set to: 0
 12789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 12790  0014EA  0E00               	movlw	0
 12791  0014EC  6E41               	movwf	(utoa@i+1)^0,c
 12792  0014EE  0E1F               	movlw	31
 12793  0014F0  6E40               	movwf	utoa@i^0,c
 12794  0014F2                     
 12795                           ; BSR set to: 0
 12796                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 12797  0014F2  0E00               	movlw	0
 12798  0014F4  0101               	movlb	1	; () banked
 12799  0014F6  6FA3               	movwf	(_dbuf+31)& (0+255),b
 12800                           
 12801                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12802  0014F8  EFF4  F00A         	goto	l6190
 12803  0014FC                     l6180:
 12804                           
 12805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 12806  0014FC  0640               	decf	utoa@i^0,f,c
 12807  0014FE  A0D8               	btfss	status,0,c
 12808  001500  0641               	decf	(utoa@i+1)^0,f,c
 12809  001502                     
 12810                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 12811  001502  0E84               	movlw	low _dbuf
 12812  001504  2440               	addwf	utoa@i^0,w,c
 12813  001506  6ED9               	movwf	fsr2l,c
 12814  001508  0E01               	movlw	high _dbuf
 12815  00150A  2041               	addwfc	(utoa@i+1)^0,w,c
 12816  00150C  6EDA               	movwf	fsr2h,c
 12817  00150E  C038  F005         	movff	utoa@n,___lomod@dividend
 12818  001512  C039  F006         	movff	utoa@n+1,___lomod@dividend+1
 12819  001516  C03A  F007         	movff	utoa@n+2,___lomod@dividend+2
 12820  00151A  C03B  F008         	movff	utoa@n+3,___lomod@dividend+3
 12821  00151E  C03C  F009         	movff	utoa@n+4,___lomod@dividend+4
 12822  001522  C03D  F00A         	movff	utoa@n+5,___lomod@dividend+5
 12823  001526  C03E  F00B         	movff	utoa@n+6,___lomod@dividend+6
 12824  00152A  C03F  F00C         	movff	utoa@n+7,___lomod@dividend+7
 12825  00152E  0E0A               	movlw	10
 12826  001530  6E0D               	movwf	___lomod@divisor^0,c
 12827  001532  0E00               	movlw	0
 12828  001534  6E0E               	movwf	(___lomod@divisor+1)^0,c
 12829  001536  0E00               	movlw	0
 12830  001538  6E0F               	movwf	(___lomod@divisor+2)^0,c
 12831  00153A  0E00               	movlw	0
 12832  00153C  6E10               	movwf	(___lomod@divisor+3)^0,c
 12833  00153E  0E00               	movlw	0
 12834  001540  6E11               	movwf	(___lomod@divisor+4)^0,c
 12835  001542  0E00               	movlw	0
 12836  001544  6E12               	movwf	(___lomod@divisor+5)^0,c
 12837  001546  0E00               	movlw	0
 12838  001548  6E13               	movwf	(___lomod@divisor+6)^0,c
 12839  00154A  0E00               	movlw	0
 12840  00154C  6E14               	movwf	(___lomod@divisor+7)^0,c
 12841  00154E  EC1D  F017         	call	___lomod	;wreg free
 12842  001552  C005  F02C         	movff	?___lomod,??_utoa
 12843  001556  C006  F02D         	movff	?___lomod+1,??_utoa+1
 12844  00155A  C007  F02E         	movff	?___lomod+2,??_utoa+2
 12845  00155E  C008  F02F         	movff	?___lomod+3,??_utoa+3
 12846  001562  C009  F030         	movff	?___lomod+4,??_utoa+4
 12847  001566  C00A  F031         	movff	?___lomod+5,??_utoa+5
 12848  00156A  C00B  F032         	movff	?___lomod+6,??_utoa+6
 12849  00156E  C00C  F033         	movff	?___lomod+7,??_utoa+7
 12850  001572  502C               	movf	??_utoa^0,w,c
 12851  001574  0F30               	addlw	48
 12852  001576  6EDF               	movwf	indf2,c
 12853  001578                     
 12854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 12855  001578  0634               	decf	utoa@p^0,f,c
 12856  00157A  A0D8               	btfss	status,0,c
 12857  00157C  0635               	decf	(utoa@p+1)^0,f,c
 12858  00157E                     
 12859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 12860  00157E  0636               	decf	utoa@w^0,f,c
 12861  001580  A0D8               	btfss	status,0,c
 12862  001582  0637               	decf	(utoa@w+1)^0,f,c
 12863  001584                     
 12864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 12865  001584  C038  F005         	movff	utoa@n,___lodiv@dividend
 12866  001588  C039  F006         	movff	utoa@n+1,___lodiv@dividend+1
 12867  00158C  C03A  F007         	movff	utoa@n+2,___lodiv@dividend+2
 12868  001590  C03B  F008         	movff	utoa@n+3,___lodiv@dividend+3
 12869  001594  C03C  F009         	movff	utoa@n+4,___lodiv@dividend+4
 12870  001598  C03D  F00A         	movff	utoa@n+5,___lodiv@dividend+5
 12871  00159C  C03E  F00B         	movff	utoa@n+6,___lodiv@dividend+6
 12872  0015A0  C03F  F00C         	movff	utoa@n+7,___lodiv@dividend+7
 12873  0015A4  0E0A               	movlw	10
 12874  0015A6  6E0D               	movwf	___lodiv@divisor^0,c
 12875  0015A8  0E00               	movlw	0
 12876  0015AA  6E0E               	movwf	(___lodiv@divisor+1)^0,c
 12877  0015AC  0E00               	movlw	0
 12878  0015AE  6E0F               	movwf	(___lodiv@divisor+2)^0,c
 12879  0015B0  0E00               	movlw	0
 12880  0015B2  6E10               	movwf	(___lodiv@divisor+3)^0,c
 12881  0015B4  0E00               	movlw	0
 12882  0015B6  6E11               	movwf	(___lodiv@divisor+4)^0,c
 12883  0015B8  0E00               	movlw	0
 12884  0015BA  6E12               	movwf	(___lodiv@divisor+5)^0,c
 12885  0015BC  0E00               	movlw	0
 12886  0015BE  6E13               	movwf	(___lodiv@divisor+6)^0,c
 12887  0015C0  0E00               	movlw	0
 12888  0015C2  6E14               	movwf	(___lodiv@divisor+7)^0,c
 12889  0015C4  ECEA  F014         	call	___lodiv	;wreg free
 12890  0015C8  C005  F038         	movff	?___lodiv,utoa@n
 12891  0015CC  C006  F039         	movff	?___lodiv+1,utoa@n+1
 12892  0015D0  C007  F03A         	movff	?___lodiv+2,utoa@n+2
 12893  0015D4  C008  F03B         	movff	?___lodiv+3,utoa@n+3
 12894  0015D8  C009  F03C         	movff	?___lodiv+4,utoa@n+4
 12895  0015DC  C00A  F03D         	movff	?___lodiv+5,utoa@n+5
 12896  0015E0  C00B  F03E         	movff	?___lodiv+6,utoa@n+6
 12897  0015E4  C00C  F03F         	movff	?___lodiv+7,utoa@n+7
 12898  0015E8                     l6190:
 12899                           
 12900                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12901  0015E8  5040               	movf	utoa@i^0,w,c
 12902  0015EA  1041               	iorwf	(utoa@i+1)^0,w,c
 12903  0015EC  B4D8               	btfsc	status,2,c
 12904  0015EE  EFFB  F00A         	goto	u6081
 12905  0015F2  EFFD  F00A         	goto	u6080
 12906  0015F6                     u6081:
 12907  0015F6  EF2D  F00B         	goto	l6200
 12908  0015FA                     u6080:
 12909  0015FA  5038               	movf	utoa@n^0,w,c
 12910  0015FC  1039               	iorwf	(utoa@n+1)^0,w,c
 12911  0015FE  103A               	iorwf	(utoa@n+2)^0,w,c
 12912  001600  103B               	iorwf	(utoa@n+3)^0,w,c
 12913  001602  103C               	iorwf	(utoa@n+4)^0,w,c
 12914  001604  103D               	iorwf	(utoa@n+5)^0,w,c
 12915  001606  103E               	iorwf	(utoa@n+6)^0,w,c
 12916  001608  103F               	iorwf	(utoa@n+7)^0,w,c
 12917  00160A  A4D8               	btfss	status,2,c
 12918  00160C  EF0A  F00B         	goto	u6091
 12919  001610  EF0C  F00B         	goto	u6090
 12920  001614                     u6091:
 12921  001614  EF7E  F00A         	goto	l6180
 12922  001618                     u6090:
 12923  001618  BE35               	btfsc	(utoa@p+1)^0,7,c
 12924  00161A  EF19  F00B         	goto	u6100
 12925  00161E  5035               	movf	(utoa@p+1)^0,w,c
 12926  001620  E106               	bnz	u6101
 12927  001622  0434               	decf	utoa@p^0,w,c
 12928  001624  B0D8               	btfsc	status,0,c
 12929  001626  EF17  F00B         	goto	u6101
 12930  00162A  EF19  F00B         	goto	u6100
 12931  00162E                     u6101:
 12932  00162E  EF7E  F00A         	goto	l6180
 12933  001632                     u6100:
 12934  001632  BE37               	btfsc	(utoa@w+1)^0,7,c
 12935  001634  EF24  F00B         	goto	u6111
 12936  001638  5037               	movf	(utoa@w+1)^0,w,c
 12937  00163A  E108               	bnz	u6110
 12938  00163C  0436               	decf	utoa@w^0,w,c
 12939  00163E  A0D8               	btfss	status,0,c
 12940  001640  EF24  F00B         	goto	u6111
 12941  001644  EF26  F00B         	goto	u6110
 12942  001648                     u6111:
 12943  001648  EF2D  F00B         	goto	l6200
 12944  00164C                     u6110:
 12945  00164C  B257               	btfsc	_flags^0,1,c
 12946  00164E  EF2B  F00B         	goto	u6121
 12947  001652  EF2D  F00B         	goto	u6120
 12948  001656                     u6121:
 12949  001656  EF7E  F00A         	goto	l6180
 12950  00165A                     u6120:
 12951  00165A                     l6200:
 12952                           
 12953                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 12954  00165A  C022  F017         	movff	utoa@fp,pad@fp
 12955  00165E  C023  F018         	movff	utoa@fp+1,pad@fp+1
 12956  001662  0E84               	movlw	low _dbuf
 12957  001664  2440               	addwf	utoa@i^0,w,c
 12958  001666  6E19               	movwf	pad@buf^0,c
 12959  001668  0E01               	movlw	high _dbuf
 12960  00166A  2041               	addwfc	(utoa@i+1)^0,w,c
 12961  00166C  6E1A               	movwf	(pad@buf+1)^0,c
 12962  00166E  C036  F01B         	movff	utoa@w,pad@p
 12963  001672  C037  F01C         	movff	utoa@w+1,pad@p+1
 12964  001676  ECE7  F017         	call	_pad	;wreg free
 12965  00167A  C017  F022         	movff	?_pad,?_utoa
 12966  00167E  C018  F023         	movff	?_pad+1,?_utoa+1
 12967  001682  0012               	return		;funcret
 12968  001684                     __end_of_utoa:
 12969                           	opt callstack 0
 12970                           
 12971 ;; *************** function ___lomod *****************
 12972 ;; Defined at:
 12973 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
 12974 ;; Parameters:    Size  Location     Type
 12975 ;;  dividend        8    4[COMRAM] unsigned long long 
 12976 ;;  divisor         8   12[COMRAM] unsigned long long 
 12977 ;; Auto vars:     Size  Location     Type
 12978 ;;  counter         1   20[COMRAM] unsigned char 
 12979 ;; Return value:  Size  Location     Type
 12980 ;;                  8    4[COMRAM] unsigned long long 
 12981 ;; Registers used:
 12982 ;;		wreg, status,2, status,0
 12983 ;; Tracked objects:
 12984 ;;		On entry : 0/0
 12985 ;;		On exit  : 0/0
 12986 ;;		Unchanged: 0/0
 12987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12988 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12989 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12991 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12992 ;;Total ram usage:       17 bytes
 12993 ;; Hardware stack levels used:    1
 12994 ;; Hardware stack levels required when called:    4
 12995 ;; This function calls:
 12996 ;;		Nothing
 12997 ;; This function is called by:
 12998 ;;		_utoa
 12999 ;; This function uses a non-reentrant model
 13000 ;;
 13001                           
 13002                           	psect	text61
 13003  002E3A                     __ptext61:
 13004                           	opt callstack 0
 13005  002E3A                     ___lomod:
 13006                           	opt callstack 22
 13007  002E3A  500D               	movf	___lomod@divisor^0,w,c
 13008  002E3C  100E               	iorwf	(___lomod@divisor+1)^0,w,c
 13009  002E3E  100F               	iorwf	(___lomod@divisor+2)^0,w,c
 13010  002E40  1010               	iorwf	(___lomod@divisor+3)^0,w,c
 13011  002E42  1011               	iorwf	(___lomod@divisor+4)^0,w,c
 13012  002E44  1012               	iorwf	(___lomod@divisor+5)^0,w,c
 13013  002E46  1013               	iorwf	(___lomod@divisor+6)^0,w,c
 13014  002E48  1014               	iorwf	(___lomod@divisor+7)^0,w,c
 13015  002E4A  B4D8               	btfsc	status,2,c
 13016  002E4C  EF2A  F017         	goto	u5761
 13017  002E50  EF2C  F017         	goto	u5760
 13018  002E54                     u5761:
 13019  002E54  EF74  F017         	goto	l1596
 13020  002E58                     u5760:
 13021  002E58  0E01               	movlw	1
 13022  002E5A  6E15               	movwf	___lomod@counter^0,c
 13023  002E5C  EF3A  F017         	goto	l6042
 13024  002E60                     l6040:
 13025  002E60  90D8               	bcf	status,0,c
 13026  002E62  360D               	rlcf	___lomod@divisor^0,f,c
 13027  002E64  360E               	rlcf	(___lomod@divisor+1)^0,f,c
 13028  002E66  360F               	rlcf	(___lomod@divisor+2)^0,f,c
 13029  002E68  3610               	rlcf	(___lomod@divisor+3)^0,f,c
 13030  002E6A  3611               	rlcf	(___lomod@divisor+4)^0,f,c
 13031  002E6C  3612               	rlcf	(___lomod@divisor+5)^0,f,c
 13032  002E6E  3613               	rlcf	(___lomod@divisor+6)^0,f,c
 13033  002E70  3614               	rlcf	(___lomod@divisor+7)^0,f,c
 13034  002E72  2A15               	incf	___lomod@counter^0,f,c
 13035  002E74                     l6042:
 13036  002E74  AE14               	btfss	(___lomod@divisor+7)^0,7,c
 13037  002E76  EF3F  F017         	goto	u5771
 13038  002E7A  EF41  F017         	goto	u5770
 13039  002E7E                     u5771:
 13040  002E7E  EF30  F017         	goto	l6040
 13041  002E82                     u5770:
 13042  002E82                     l6044:
 13043  002E82  500D               	movf	___lomod@divisor^0,w,c
 13044  002E84  5C05               	subwf	___lomod@dividend^0,w,c
 13045  002E86  500E               	movf	(___lomod@divisor+1)^0,w,c
 13046  002E88  5806               	subwfb	(___lomod@dividend+1)^0,w,c
 13047  002E8A  500F               	movf	(___lomod@divisor+2)^0,w,c
 13048  002E8C  5807               	subwfb	(___lomod@dividend+2)^0,w,c
 13049  002E8E  5010               	movf	(___lomod@divisor+3)^0,w,c
 13050  002E90  5808               	subwfb	(___lomod@dividend+3)^0,w,c
 13051  002E92  5011               	movf	(___lomod@divisor+4)^0,w,c
 13052  002E94  5809               	subwfb	(___lomod@dividend+4)^0,w,c
 13053  002E96  5012               	movf	(___lomod@divisor+5)^0,w,c
 13054  002E98  580A               	subwfb	(___lomod@dividend+5)^0,w,c
 13055  002E9A  5013               	movf	(___lomod@divisor+6)^0,w,c
 13056  002E9C  580B               	subwfb	(___lomod@dividend+6)^0,w,c
 13057  002E9E  5014               	movf	(___lomod@divisor+7)^0,w,c
 13058  002EA0  580C               	subwfb	(___lomod@dividend+7)^0,w,c
 13059  002EA2  A0D8               	btfss	status,0,c
 13060  002EA4  EF56  F017         	goto	u5781
 13061  002EA8  EF58  F017         	goto	u5780
 13062  002EAC                     u5781:
 13063  002EAC  EF68  F017         	goto	l6048
 13064  002EB0                     u5780:
 13065  002EB0  500D               	movf	___lomod@divisor^0,w,c
 13066  002EB2  5E05               	subwf	___lomod@dividend^0,f,c
 13067  002EB4  500E               	movf	(___lomod@divisor+1)^0,w,c
 13068  002EB6  5A06               	subwfb	(___lomod@dividend+1)^0,f,c
 13069  002EB8  500F               	movf	(___lomod@divisor+2)^0,w,c
 13070  002EBA  5A07               	subwfb	(___lomod@dividend+2)^0,f,c
 13071  002EBC  5010               	movf	(___lomod@divisor+3)^0,w,c
 13072  002EBE  5A08               	subwfb	(___lomod@dividend+3)^0,f,c
 13073  002EC0  5011               	movf	(___lomod@divisor+4)^0,w,c
 13074  002EC2  5A09               	subwfb	(___lomod@dividend+4)^0,f,c
 13075  002EC4  5012               	movf	(___lomod@divisor+5)^0,w,c
 13076  002EC6  5A0A               	subwfb	(___lomod@dividend+5)^0,f,c
 13077  002EC8  5013               	movf	(___lomod@divisor+6)^0,w,c
 13078  002ECA  5A0B               	subwfb	(___lomod@dividend+6)^0,f,c
 13079  002ECC  5014               	movf	(___lomod@divisor+7)^0,w,c
 13080  002ECE  5A0C               	subwfb	(___lomod@dividend+7)^0,f,c
 13081  002ED0                     l6048:
 13082  002ED0  90D8               	bcf	status,0,c
 13083  002ED2  3214               	rrcf	(___lomod@divisor+7)^0,f,c
 13084  002ED4  3213               	rrcf	(___lomod@divisor+6)^0,f,c
 13085  002ED6  3212               	rrcf	(___lomod@divisor+5)^0,f,c
 13086  002ED8  3211               	rrcf	(___lomod@divisor+4)^0,f,c
 13087  002EDA  3210               	rrcf	(___lomod@divisor+3)^0,f,c
 13088  002EDC  320F               	rrcf	(___lomod@divisor+2)^0,f,c
 13089  002EDE  320E               	rrcf	(___lomod@divisor+1)^0,f,c
 13090  002EE0  320D               	rrcf	___lomod@divisor^0,f,c
 13091  002EE2  2E15               	decfsz	___lomod@counter^0,f,c
 13092  002EE4  EF41  F017         	goto	l6044
 13093  002EE8                     l1596:
 13094  002EE8  C005  F005         	movff	___lomod@dividend,?___lomod
 13095  002EEC  C006  F006         	movff	___lomod@dividend+1,?___lomod+1
 13096  002EF0  C007  F007         	movff	___lomod@dividend+2,?___lomod+2
 13097  002EF4  C008  F008         	movff	___lomod@dividend+3,?___lomod+3
 13098  002EF8  C009  F009         	movff	___lomod@dividend+4,?___lomod+4
 13099  002EFC  C00A  F00A         	movff	___lomod@dividend+5,?___lomod+5
 13100  002F00  C00B  F00B         	movff	___lomod@dividend+6,?___lomod+6
 13101  002F04  C00C  F00C         	movff	___lomod@dividend+7,?___lomod+7
 13102  002F08  0012               	return		;funcret
 13103  002F0A                     __end_of___lomod:
 13104                           	opt callstack 0
 13105                           
 13106 ;; *************** function ___lodiv *****************
 13107 ;; Defined at:
 13108 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
 13109 ;; Parameters:    Size  Location     Type
 13110 ;;  dividend        8    4[COMRAM] unsigned long long 
 13111 ;;  divisor         8   12[COMRAM] unsigned long long 
 13112 ;; Auto vars:     Size  Location     Type
 13113 ;;  quotient        8   20[COMRAM] unsigned long long 
 13114 ;;  counter         1   28[COMRAM] unsigned char 
 13115 ;; Return value:  Size  Location     Type
 13116 ;;                  8    4[COMRAM] unsigned long long 
 13117 ;; Registers used:
 13118 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13119 ;; Tracked objects:
 13120 ;;		On entry : 0/0
 13121 ;;		On exit  : 0/0
 13122 ;;		Unchanged: 0/0
 13123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13124 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13125 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13127 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13128 ;;Total ram usage:       25 bytes
 13129 ;; Hardware stack levels used:    1
 13130 ;; Hardware stack levels required when called:    4
 13131 ;; This function calls:
 13132 ;;		Nothing
 13133 ;; This function is called by:
 13134 ;;		_utoa
 13135 ;; This function uses a non-reentrant model
 13136 ;;
 13137                           
 13138                           	psect	text62
 13139  0029D4                     __ptext62:
 13140                           	opt callstack 0
 13141  0029D4                     ___lodiv:
 13142                           	opt callstack 22
 13143  0029D4  EE20  F015         	lfsr	2,___lodiv@quotient
 13144  0029D8  0E07               	movlw	7
 13145  0029DA                     u5721:
 13146  0029DA  6ADE               	clrf	postinc2,c
 13147  0029DC  06E8               	decf	wreg,f,c
 13148  0029DE  E2FD               	bc	u5721
 13149  0029E0  500D               	movf	___lodiv@divisor^0,w,c
 13150  0029E2  100E               	iorwf	(___lodiv@divisor+1)^0,w,c
 13151  0029E4  100F               	iorwf	(___lodiv@divisor+2)^0,w,c
 13152  0029E6  1010               	iorwf	(___lodiv@divisor+3)^0,w,c
 13153  0029E8  1011               	iorwf	(___lodiv@divisor+4)^0,w,c
 13154  0029EA  1012               	iorwf	(___lodiv@divisor+5)^0,w,c
 13155  0029EC  1013               	iorwf	(___lodiv@divisor+6)^0,w,c
 13156  0029EE  1014               	iorwf	(___lodiv@divisor+7)^0,w,c
 13157  0029F0  B4D8               	btfsc	status,2,c
 13158  0029F2  EFFD  F014         	goto	u5731
 13159  0029F6  EFFF  F014         	goto	u5730
 13160  0029FA                     u5731:
 13161  0029FA  EF51  F015         	goto	l1586
 13162  0029FE                     u5730:
 13163  0029FE  0E01               	movlw	1
 13164  002A00  6E1D               	movwf	___lodiv@counter^0,c
 13165  002A02  EF0D  F015         	goto	l6022
 13166  002A06                     l6020:
 13167  002A06  90D8               	bcf	status,0,c
 13168  002A08  360D               	rlcf	___lodiv@divisor^0,f,c
 13169  002A0A  360E               	rlcf	(___lodiv@divisor+1)^0,f,c
 13170  002A0C  360F               	rlcf	(___lodiv@divisor+2)^0,f,c
 13171  002A0E  3610               	rlcf	(___lodiv@divisor+3)^0,f,c
 13172  002A10  3611               	rlcf	(___lodiv@divisor+4)^0,f,c
 13173  002A12  3612               	rlcf	(___lodiv@divisor+5)^0,f,c
 13174  002A14  3613               	rlcf	(___lodiv@divisor+6)^0,f,c
 13175  002A16  3614               	rlcf	(___lodiv@divisor+7)^0,f,c
 13176  002A18  2A1D               	incf	___lodiv@counter^0,f,c
 13177  002A1A                     l6022:
 13178  002A1A  AE14               	btfss	(___lodiv@divisor+7)^0,7,c
 13179  002A1C  EF12  F015         	goto	u5741
 13180  002A20  EF14  F015         	goto	u5740
 13181  002A24                     u5741:
 13182  002A24  EF03  F015         	goto	l6020
 13183  002A28                     u5740:
 13184  002A28                     l6024:
 13185  002A28  90D8               	bcf	status,0,c
 13186  002A2A  3615               	rlcf	___lodiv@quotient^0,f,c
 13187  002A2C  3616               	rlcf	(___lodiv@quotient+1)^0,f,c
 13188  002A2E  3617               	rlcf	(___lodiv@quotient+2)^0,f,c
 13189  002A30  3618               	rlcf	(___lodiv@quotient+3)^0,f,c
 13190  002A32  3619               	rlcf	(___lodiv@quotient+4)^0,f,c
 13191  002A34  361A               	rlcf	(___lodiv@quotient+5)^0,f,c
 13192  002A36  361B               	rlcf	(___lodiv@quotient+6)^0,f,c
 13193  002A38  361C               	rlcf	(___lodiv@quotient+7)^0,f,c
 13194  002A3A  500D               	movf	___lodiv@divisor^0,w,c
 13195  002A3C  5C05               	subwf	___lodiv@dividend^0,w,c
 13196  002A3E  500E               	movf	(___lodiv@divisor+1)^0,w,c
 13197  002A40  5806               	subwfb	(___lodiv@dividend+1)^0,w,c
 13198  002A42  500F               	movf	(___lodiv@divisor+2)^0,w,c
 13199  002A44  5807               	subwfb	(___lodiv@dividend+2)^0,w,c
 13200  002A46  5010               	movf	(___lodiv@divisor+3)^0,w,c
 13201  002A48  5808               	subwfb	(___lodiv@dividend+3)^0,w,c
 13202  002A4A  5011               	movf	(___lodiv@divisor+4)^0,w,c
 13203  002A4C  5809               	subwfb	(___lodiv@dividend+4)^0,w,c
 13204  002A4E  5012               	movf	(___lodiv@divisor+5)^0,w,c
 13205  002A50  580A               	subwfb	(___lodiv@dividend+5)^0,w,c
 13206  002A52  5013               	movf	(___lodiv@divisor+6)^0,w,c
 13207  002A54  580B               	subwfb	(___lodiv@dividend+6)^0,w,c
 13208  002A56  5014               	movf	(___lodiv@divisor+7)^0,w,c
 13209  002A58  580C               	subwfb	(___lodiv@dividend+7)^0,w,c
 13210  002A5A  A0D8               	btfss	status,0,c
 13211  002A5C  EF32  F015         	goto	u5751
 13212  002A60  EF34  F015         	goto	u5750
 13213  002A64                     u5751:
 13214  002A64  EF45  F015         	goto	l6032
 13215  002A68                     u5750:
 13216  002A68  500D               	movf	___lodiv@divisor^0,w,c
 13217  002A6A  5E05               	subwf	___lodiv@dividend^0,f,c
 13218  002A6C  500E               	movf	(___lodiv@divisor+1)^0,w,c
 13219  002A6E  5A06               	subwfb	(___lodiv@dividend+1)^0,f,c
 13220  002A70  500F               	movf	(___lodiv@divisor+2)^0,w,c
 13221  002A72  5A07               	subwfb	(___lodiv@dividend+2)^0,f,c
 13222  002A74  5010               	movf	(___lodiv@divisor+3)^0,w,c
 13223  002A76  5A08               	subwfb	(___lodiv@dividend+3)^0,f,c
 13224  002A78  5011               	movf	(___lodiv@divisor+4)^0,w,c
 13225  002A7A  5A09               	subwfb	(___lodiv@dividend+4)^0,f,c
 13226  002A7C  5012               	movf	(___lodiv@divisor+5)^0,w,c
 13227  002A7E  5A0A               	subwfb	(___lodiv@dividend+5)^0,f,c
 13228  002A80  5013               	movf	(___lodiv@divisor+6)^0,w,c
 13229  002A82  5A0B               	subwfb	(___lodiv@dividend+6)^0,f,c
 13230  002A84  5014               	movf	(___lodiv@divisor+7)^0,w,c
 13231  002A86  5A0C               	subwfb	(___lodiv@dividend+7)^0,f,c
 13232  002A88  8015               	bsf	___lodiv@quotient^0,0,c
 13233  002A8A                     l6032:
 13234  002A8A  90D8               	bcf	status,0,c
 13235  002A8C  3214               	rrcf	(___lodiv@divisor+7)^0,f,c
 13236  002A8E  3213               	rrcf	(___lodiv@divisor+6)^0,f,c
 13237  002A90  3212               	rrcf	(___lodiv@divisor+5)^0,f,c
 13238  002A92  3211               	rrcf	(___lodiv@divisor+4)^0,f,c
 13239  002A94  3210               	rrcf	(___lodiv@divisor+3)^0,f,c
 13240  002A96  320F               	rrcf	(___lodiv@divisor+2)^0,f,c
 13241  002A98  320E               	rrcf	(___lodiv@divisor+1)^0,f,c
 13242  002A9A  320D               	rrcf	___lodiv@divisor^0,f,c
 13243  002A9C  2E1D               	decfsz	___lodiv@counter^0,f,c
 13244  002A9E  EF14  F015         	goto	l6024
 13245  002AA2                     l1586:
 13246  002AA2  C015  F005         	movff	___lodiv@quotient,?___lodiv
 13247  002AA6  C016  F006         	movff	___lodiv@quotient+1,?___lodiv+1
 13248  002AAA  C017  F007         	movff	___lodiv@quotient+2,?___lodiv+2
 13249  002AAE  C018  F008         	movff	___lodiv@quotient+3,?___lodiv+3
 13250  002AB2  C019  F009         	movff	___lodiv@quotient+4,?___lodiv+4
 13251  002AB6  C01A  F00A         	movff	___lodiv@quotient+5,?___lodiv+5
 13252  002ABA  C01B  F00B         	movff	___lodiv@quotient+6,?___lodiv+6
 13253  002ABE  C01C  F00C         	movff	___lodiv@quotient+7,?___lodiv+7
 13254  002AC2  0012               	return		;funcret
 13255  002AC4                     __end_of___lodiv:
 13256                           	opt callstack 0
 13257                           
 13258 ;; *************** function _stoa *****************
 13259 ;; Defined at:
 13260 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13261 ;; Parameters:    Size  Location     Type
 13262 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
 13263 ;;		 -> NULL(0), 
 13264 ;;  s               2   17[COMRAM] PTR unsigned char 
 13265 ;;		 -> ?_printf(2), ValidateCmd@ConfName_1483(20), ValidateCmd@ConfName_1479(20), ValidateCmd@ConfName(20), 
 13266 ;;		 -> STR_44(9), STR_43(12), InitialiseString@RevNum(2), InitialiseString@PartNum(19), 
 13267 ;;		 -> InitialiseString@SerialNum(11), Command(16), 
 13268 ;; Auto vars:     Size  Location     Type
 13269 ;;  nuls            7   20[COMRAM] unsigned char [7]
 13270 ;;  l               2   35[COMRAM] int 
 13271 ;;  p               2   33[COMRAM] int 
 13272 ;;  cp              2   31[COMRAM] PTR unsigned char 
 13273 ;;		 -> ?_printf(2), stoa@nuls(7), ValidateCmd@ConfName_1483(20), ValidateCmd@ConfName_1479(20), 
 13274 ;;		 -> ValidateCmd@ConfName(20), STR_44(9), STR_43(12), InitialiseString@RevNum(2), 
 13275 ;;		 -> InitialiseString@PartNum(19), InitialiseString@SerialNum(11), Command(16), 
 13276 ;;  w               2   29[COMRAM] int 
 13277 ;;  i               2   27[COMRAM] int 
 13278 ;; Return value:  Size  Location     Type
 13279 ;;                  2   15[COMRAM] int 
 13280 ;; Registers used:
 13281 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13282 ;; Tracked objects:
 13283 ;;		On entry : 0/0
 13284 ;;		On exit  : 0/0
 13285 ;;		Unchanged: 0/0
 13286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13287 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13288 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13289 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13290 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13291 ;;Total ram usage:       22 bytes
 13292 ;; Hardware stack levels used:    1
 13293 ;; Hardware stack levels required when called:    7
 13294 ;; This function calls:
 13295 ;;		_fputc
 13296 ;;		_strlen
 13297 ;; This function is called by:
 13298 ;;		_vfpfcnvrt
 13299 ;; This function uses a non-reentrant model
 13300 ;;
 13301                           
 13302                           	psect	text63
 13303  001D9E                     __ptext63:
 13304                           	opt callstack 0
 13305  001D9E                     _stoa:
 13306                           	opt callstack 20
 13307  001D9E                     
 13308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 13309  001D9E  EE21  F047         	lfsr	2,stoa@F1139
 13310  001DA2  EE10  F015         	lfsr	1,stoa@nuls
 13311  001DA6  0E06               	movlw	6
 13312  001DA8                     u5961:
 13313  001DA8  CFDB FFE3          	movff	plusw2,plusw1
 13314  001DAC  06E8               	decf	wreg,f,c
 13315  001DAE  E2FC               	bc	u5961
 13316  001DB0                     
 13317                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 13318  001DB0  C012  F020         	movff	stoa@s,stoa@cp
 13319  001DB4  C013  F021         	movff	stoa@s+1,stoa@cp+1
 13320  001DB8                     
 13321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 13322  001DB8  5020               	movf	stoa@cp^0,w,c
 13323  001DBA  1021               	iorwf	(stoa@cp+1)^0,w,c
 13324  001DBC  A4D8               	btfss	status,2,c
 13325  001DBE  EFE3  F00E         	goto	u5971
 13326  001DC2  EFE5  F00E         	goto	u5970
 13327  001DC6                     u5971:
 13328  001DC6  EFE9  F00E         	goto	l6134
 13329  001DCA                     u5970:
 13330  001DCA                     
 13331                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 13332  001DCA  0E15               	movlw	low stoa@nuls
 13333  001DCC  6E20               	movwf	stoa@cp^0,c
 13334  001DCE  0E00               	movlw	high stoa@nuls
 13335  001DD0  6E21               	movwf	(stoa@cp+1)^0,c
 13336  001DD2                     l6134:
 13337                           
 13338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 13339  001DD2  C020  F005         	movff	stoa@cp,strlen@s
 13340  001DD6  C021  F006         	movff	stoa@cp+1,strlen@s+1
 13341  001DDA  EC3B  F01D         	call	_strlen	;wreg free
 13342  001DDE  C005  F024         	movff	?_strlen,stoa@l
 13343  001DE2  C006  F025         	movff	?_strlen+1,stoa@l+1
 13344  001DE6                     
 13345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 13346  001DE6  C0C9  F022         	movff	_prec,stoa@p
 13347  001DEA  C0CA  F023         	movff	_prec+1,stoa@p+1
 13348  001DEE                     
 13349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 13350  001DEE  BE23               	btfsc	(stoa@p+1)^0,7,c
 13351  001DF0  EFFC  F00E         	goto	u5981
 13352  001DF4  EFFE  F00E         	goto	u5980
 13353  001DF8                     u5981:
 13354  001DF8  EF13  F00F         	goto	l1045
 13355  001DFC                     u5980:
 13356  001DFC  5024               	movf	stoa@l^0,w,c
 13357  001DFE  5C22               	subwf	stoa@p^0,w,c
 13358  001E00  5023               	movf	(stoa@p+1)^0,w,c
 13359  001E02  0A80               	xorlw	128
 13360  001E04  6E14               	movwf	??_stoa^0,c
 13361  001E06  5025               	movf	(stoa@l+1)^0,w,c
 13362  001E08  0A80               	xorlw	128
 13363  001E0A  5814               	subwfb	??_stoa^0,w,c
 13364  001E0C  A0D8               	btfss	status,0,c
 13365  001E0E  EF0B  F00F         	goto	u5991
 13366  001E12  EF0D  F00F         	goto	u5990
 13367  001E16                     u5991:
 13368  001E16  EF0F  F00F         	goto	l1043
 13369  001E1A                     u5990:
 13370  001E1A  EF13  F00F         	goto	l1045
 13371  001E1E                     l1043:
 13372  001E1E  C022  F024         	movff	stoa@p,stoa@l
 13373  001E22  C023  F025         	movff	stoa@p+1,stoa@l+1
 13374  001E26                     l1045:
 13375                           
 13376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 13377  001E26  C024  F022         	movff	stoa@l,stoa@p
 13378  001E2A  C025  F023         	movff	stoa@l+1,stoa@p+1
 13379                           
 13380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 13381  001E2E  C0C7  F01E         	movff	_width,stoa@w
 13382  001E32  C0C8  F01F         	movff	_width+1,stoa@w+1
 13383                           
 13384                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 13385  001E36  B057               	btfsc	_flags^0,0,c
 13386  001E38  EF20  F00F         	goto	u6001
 13387  001E3C  EF22  F00F         	goto	u6000
 13388  001E40                     u6001:
 13389  001E40  EF3F  F00F         	goto	l6150
 13390  001E44                     u6000:
 13391  001E44  EF30  F00F         	goto	l6148
 13392  001E48                     l6144:
 13393                           
 13394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 13395  001E48  0E00               	movlw	0
 13396  001E4A  6E08               	movwf	(fputc@c+1)^0,c
 13397  001E4C  0E20               	movlw	32
 13398  001E4E  6E07               	movwf	fputc@c^0,c
 13399  001E50  C010  F009         	movff	stoa@fp,fputc@fp
 13400  001E54  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 13401  001E58  ECBC  F019         	call	_fputc	;wreg free
 13402  001E5C                     
 13403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 13404  001E5C  4A24               	infsnz	stoa@l^0,f,c
 13405  001E5E  2A25               	incf	(stoa@l+1)^0,f,c
 13406  001E60                     l6148:
 13407                           
 13408                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 13409  001E60  501E               	movf	stoa@w^0,w,c
 13410  001E62  5C24               	subwf	stoa@l^0,w,c
 13411  001E64  5025               	movf	(stoa@l+1)^0,w,c
 13412  001E66  0A80               	xorlw	128
 13413  001E68  6E14               	movwf	??_stoa^0,c
 13414  001E6A  501F               	movf	(stoa@w+1)^0,w,c
 13415  001E6C  0A80               	xorlw	128
 13416  001E6E  5814               	subwfb	??_stoa^0,w,c
 13417  001E70  A0D8               	btfss	status,0,c
 13418  001E72  EF3D  F00F         	goto	u6011
 13419  001E76  EF3F  F00F         	goto	u6010
 13420  001E7A                     u6011:
 13421  001E7A  EF24  F00F         	goto	l6144
 13422  001E7E                     u6010:
 13423  001E7E                     l6150:
 13424                           
 13425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 13426  001E7E  0E00               	movlw	0
 13427  001E80  6E1D               	movwf	(stoa@i+1)^0,c
 13428  001E82  0E00               	movlw	0
 13429  001E84  6E1C               	movwf	stoa@i^0,c
 13430                           
 13431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 13432  001E86  EF64  F00F         	goto	l6158
 13433  001E8A                     l6152:
 13434                           
 13435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 13436  001E8A  C020  FFF6         	movff	stoa@cp,tblptrl
 13437  001E8E  C021  FFF7         	movff	stoa@cp+1,tblptrh
 13438  001E92  0E00               	movlw	low (__mediumconst shr (0+16))
 13439  001E94  6EF8               	movwf	tblptru,c
 13440  001E96  0E0E               	movlw	(high __ramtop+-1)
 13441  001E98  64F7               	cpfsgt	tblptrh,c
 13442  001E9A  D003               	bra	u6027
 13443  001E9C  0008               	tblrd		*
 13444  001E9E  50F5               	movf	tablat,w,c
 13445  001EA0  D005               	bra	u6020
 13446  001EA2                     u6027:
 13447  001EA2  CFF6 FFE9          	movff	tblptrl,fsr0l
 13448  001EA6  CFF7 FFEA          	movff	tblptrh,fsr0h
 13449  001EAA  50EF               	movf	indf0,w,c
 13450  001EAC                     u6020:
 13451  001EAC  6E14               	movwf	??_stoa^0,c
 13452  001EAE  5014               	movf	??_stoa^0,w,c
 13453  001EB0  6E07               	movwf	fputc@c^0,c
 13454  001EB2  6A08               	clrf	(fputc@c+1)^0,c
 13455  001EB4  C010  F009         	movff	stoa@fp,fputc@fp
 13456  001EB8  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 13457  001EBC  ECBC  F019         	call	_fputc	;wreg free
 13458  001EC0                     
 13459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 13460  001EC0  4A20               	infsnz	stoa@cp^0,f,c
 13461  001EC2  2A21               	incf	(stoa@cp+1)^0,f,c
 13462  001EC4                     
 13463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 13464  001EC4  4A1C               	infsnz	stoa@i^0,f,c
 13465  001EC6  2A1D               	incf	(stoa@i+1)^0,f,c
 13466  001EC8                     l6158:
 13467                           
 13468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 13469  001EC8  5022               	movf	stoa@p^0,w,c
 13470  001ECA  5C1C               	subwf	stoa@i^0,w,c
 13471  001ECC  501D               	movf	(stoa@i+1)^0,w,c
 13472  001ECE  0A80               	xorlw	128
 13473  001ED0  6E14               	movwf	??_stoa^0,c
 13474  001ED2  5023               	movf	(stoa@p+1)^0,w,c
 13475  001ED4  0A80               	xorlw	128
 13476  001ED6  5814               	subwfb	??_stoa^0,w,c
 13477  001ED8  A0D8               	btfss	status,0,c
 13478  001EDA  EF71  F00F         	goto	u6031
 13479  001EDE  EF73  F00F         	goto	u6030
 13480  001EE2                     u6031:
 13481  001EE2  EF45  F00F         	goto	l6152
 13482  001EE6                     u6030:
 13483  001EE6                     
 13484                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 13485  001EE6  A057               	btfss	_flags^0,0,c
 13486  001EE8  EF78  F00F         	goto	u6041
 13487  001EEC  EF7A  F00F         	goto	u6040
 13488  001EF0                     u6041:
 13489  001EF0  EF97  F00F         	goto	l1055
 13490  001EF4                     u6040:
 13491  001EF4  EF88  F00F         	goto	l6166
 13492  001EF8                     l6162:
 13493                           
 13494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 13495  001EF8  0E00               	movlw	0
 13496  001EFA  6E08               	movwf	(fputc@c+1)^0,c
 13497  001EFC  0E20               	movlw	32
 13498  001EFE  6E07               	movwf	fputc@c^0,c
 13499  001F00  C010  F009         	movff	stoa@fp,fputc@fp
 13500  001F04  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 13501  001F08  ECBC  F019         	call	_fputc	;wreg free
 13502  001F0C                     
 13503                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 13504  001F0C  4A24               	infsnz	stoa@l^0,f,c
 13505  001F0E  2A25               	incf	(stoa@l+1)^0,f,c
 13506  001F10                     l6166:
 13507                           
 13508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 13509  001F10  501E               	movf	stoa@w^0,w,c
 13510  001F12  5C24               	subwf	stoa@l^0,w,c
 13511  001F14  5025               	movf	(stoa@l+1)^0,w,c
 13512  001F16  0A80               	xorlw	128
 13513  001F18  6E14               	movwf	??_stoa^0,c
 13514  001F1A  501F               	movf	(stoa@w+1)^0,w,c
 13515  001F1C  0A80               	xorlw	128
 13516  001F1E  5814               	subwfb	??_stoa^0,w,c
 13517  001F20  A0D8               	btfss	status,0,c
 13518  001F22  EF95  F00F         	goto	u6051
 13519  001F26  EF97  F00F         	goto	u6050
 13520  001F2A                     u6051:
 13521  001F2A  EF7C  F00F         	goto	l6162
 13522  001F2E                     u6050:
 13523  001F2E                     l1055:
 13524                           
 13525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 13526  001F2E  C024  F010         	movff	stoa@l,?_stoa
 13527  001F32  C025  F011         	movff	stoa@l+1,?_stoa+1
 13528  001F36  0012               	return		;funcret
 13529  001F38                     __end_of_stoa:
 13530                           	opt callstack 0
 13531                           
 13532 ;; *************** function _dtoa *****************
 13533 ;; Defined at:
 13534 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13535 ;; Parameters:    Size  Location     Type
 13536 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 13537 ;;		 -> NULL(0), 
 13538 ;;  d               8   35[COMRAM] long long 
 13539 ;; Auto vars:     Size  Location     Type
 13540 ;;  n               8   59[COMRAM] long long 
 13541 ;;  i               2   67[COMRAM] int 
 13542 ;;  s               2   57[COMRAM] int 
 13543 ;;  w               2   55[COMRAM] int 
 13544 ;;  p               2   53[COMRAM] int 
 13545 ;; Return value:  Size  Location     Type
 13546 ;;                  2   33[COMRAM] int 
 13547 ;; Registers used:
 13548 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13549 ;; Tracked objects:
 13550 ;;		On entry : 0/0
 13551 ;;		On exit  : 0/0
 13552 ;;		Unchanged: 0/0
 13553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13554 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13555 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13556 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13557 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13558 ;;Total ram usage:       36 bytes
 13559 ;; Hardware stack levels used:    1
 13560 ;; Hardware stack levels required when called:    9
 13561 ;; This function calls:
 13562 ;;		___aodiv
 13563 ;;		___aomod
 13564 ;;		_abs
 13565 ;;		_pad
 13566 ;; This function is called by:
 13567 ;;		_vfpfcnvrt
 13568 ;; This function uses a non-reentrant model
 13569 ;;
 13570                           
 13571                           	psect	text64
 13572  000ECC                     __ptext64:
 13573                           	opt callstack 0
 13574  000ECC                     _dtoa:
 13575                           	opt callstack 18
 13576  000ECC                     
 13577                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 13578  000ECC  C024  F03C         	movff	dtoa@d,dtoa@n
 13579  000ED0  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
 13580  000ED4  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
 13581  000ED8  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
 13582  000EDC  C028  F040         	movff	dtoa@d+4,dtoa@n+4
 13583  000EE0  C029  F041         	movff	dtoa@d+5,dtoa@n+5
 13584  000EE4  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
 13585  000EE8  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
 13586  000EEC                     
 13587                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 13588  000EEC  BE43               	btfsc	(dtoa@n+7)^0,7,c
 13589  000EEE  EF7B  F007         	goto	u5811
 13590  000EF2  EF7E  F007         	goto	u5810
 13591  000EF6                     u5811:
 13592  000EF6  0E01               	movlw	1
 13593  000EF8  EF7F  F007         	goto	u5820
 13594  000EFC                     u5810:
 13595  000EFC  0E00               	movlw	0
 13596  000EFE                     u5820:
 13597  000EFE  6E3A               	movwf	dtoa@s^0,c
 13598  000F00  6A3B               	clrf	(dtoa@s+1)^0,c
 13599                           
 13600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 13601  000F02  503A               	movf	dtoa@s^0,w,c
 13602  000F04  103B               	iorwf	(dtoa@s+1)^0,w,c
 13603  000F06  B4D8               	btfsc	status,2,c
 13604  000F08  EF88  F007         	goto	u5831
 13605  000F0C  EF8A  F007         	goto	u5830
 13606  000F10                     u5831:
 13607  000F10  EF9A  F007         	goto	l6070
 13608  000F14                     u5830:
 13609  000F14                     
 13610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 13611  000F14  1E43               	comf	(dtoa@n+7)^0,f,c
 13612  000F16  1E42               	comf	(dtoa@n+6)^0,f,c
 13613  000F18  1E41               	comf	(dtoa@n+5)^0,f,c
 13614  000F1A  1E40               	comf	(dtoa@n+4)^0,f,c
 13615  000F1C  1E3F               	comf	(dtoa@n+3)^0,f,c
 13616  000F1E  1E3E               	comf	(dtoa@n+2)^0,f,c
 13617  000F20  1E3D               	comf	(dtoa@n+1)^0,f,c
 13618  000F22  6C3C               	negf	dtoa@n^0,c
 13619  000F24  0E00               	movlw	0
 13620  000F26  223D               	addwfc	(dtoa@n+1)^0,f,c
 13621  000F28  223E               	addwfc	(dtoa@n+2)^0,f,c
 13622  000F2A  223F               	addwfc	(dtoa@n+3)^0,f,c
 13623  000F2C  2240               	addwfc	(dtoa@n+4)^0,f,c
 13624  000F2E  2241               	addwfc	(dtoa@n+5)^0,f,c
 13625  000F30  2242               	addwfc	(dtoa@n+6)^0,f,c
 13626  000F32  2243               	addwfc	(dtoa@n+7)^0,f,c
 13627  000F34                     l6070:
 13628                           
 13629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 13630  000F34  0100               	movlb	0	; () banked
 13631  000F36  BFCA               	btfsc	(_prec+1)& (0+255),7,b
 13632  000F38  EFA0  F007         	goto	u5841
 13633  000F3C  EFA2  F007         	goto	u5840
 13634  000F40                     u5841:
 13635  000F40  EFA3  F007         	goto	l6074
 13636  000F44                     u5840:
 13637  000F44                     
 13638                           ; BSR set to: 0
 13639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 13640  000F44  9257               	bcf	_flags^0,1,c
 13641  000F46                     l6074:
 13642                           
 13643                           ; BSR set to: 0
 13644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 13645  000F46  BFCA               	btfsc	(_prec+1)& (0+255),7,b
 13646  000F48  EFB0  F007         	goto	u5850
 13647  000F4C  51CA               	movf	(_prec+1)& (0+255),w,b
 13648  000F4E  E106               	bnz	u5851
 13649  000F50  05C9               	decf	_prec& (0+255),w,b
 13650  000F52  B0D8               	btfsc	status,0,c
 13651  000F54  EFAE  F007         	goto	u5851
 13652  000F58  EFB0  F007         	goto	u5850
 13653  000F5C                     u5851:
 13654  000F5C  EFB6  F007         	goto	l1016
 13655  000F60                     u5850:
 13656  000F60                     
 13657                           ; BSR set to: 0
 13658  000F60  0E00               	movlw	0
 13659  000F62  6E37               	movwf	(dtoa@p+1)^0,c
 13660  000F64  0E01               	movlw	1
 13661  000F66  6E36               	movwf	dtoa@p^0,c
 13662  000F68  EFBA  F007         	goto	l1018
 13663  000F6C                     l1016:
 13664                           
 13665                           ; BSR set to: 0
 13666  000F6C  C0C9  F036         	movff	_prec,dtoa@p
 13667  000F70  C0CA  F037         	movff	_prec+1,dtoa@p+1
 13668  000F74                     l1018:
 13669                           
 13670                           ; BSR set to: 0
 13671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 13672  000F74  C0C7  F038         	movff	_width,dtoa@w
 13673  000F78  C0C8  F039         	movff	_width+1,dtoa@w+1
 13674  000F7C                     
 13675                           ; BSR set to: 0
 13676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 13677  000F7C  503A               	movf	dtoa@s^0,w,c
 13678  000F7E  103B               	iorwf	(dtoa@s+1)^0,w,c
 13679  000F80  A4D8               	btfss	status,2,c
 13680  000F82  EFC5  F007         	goto	u5861
 13681  000F86  EFC7  F007         	goto	u5860
 13682  000F8A                     u5861:
 13683  000F8A  EFCE  F007         	goto	l6082
 13684  000F8E                     u5860:
 13685  000F8E                     
 13686                           ; BSR set to: 0
 13687  000F8E  A457               	btfss	_flags^0,2,c
 13688  000F90  EFCC  F007         	goto	u5871
 13689  000F94  EFCE  F007         	goto	u5870
 13690  000F98                     u5871:
 13691  000F98  EFD1  F007         	goto	l6084
 13692  000F9C                     u5870:
 13693  000F9C                     l6082:
 13694                           
 13695                           ; BSR set to: 0
 13696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 13697  000F9C  0638               	decf	dtoa@w^0,f,c
 13698  000F9E  A0D8               	btfss	status,0,c
 13699  000FA0  0639               	decf	(dtoa@w+1)^0,f,c
 13700  000FA2                     l6084:
 13701                           
 13702                           ; BSR set to: 0
 13703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 13704  000FA2  0E00               	movlw	0
 13705  000FA4  6E45               	movwf	(dtoa@i+1)^0,c
 13706  000FA6  0E1F               	movlw	31
 13707  000FA8  6E44               	movwf	dtoa@i^0,c
 13708  000FAA                     
 13709                           ; BSR set to: 0
 13710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 13711  000FAA  0E00               	movlw	0
 13712  000FAC  0101               	movlb	1	; () banked
 13713  000FAE  6FA3               	movwf	(_dbuf+31)& (0+255),b
 13714                           
 13715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13716  000FB0  EF56  F008         	goto	l6098
 13717  000FB4                     l6088:
 13718                           
 13719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 13720  000FB4  0644               	decf	dtoa@i^0,f,c
 13721  000FB6  A0D8               	btfss	status,0,c
 13722  000FB8  0645               	decf	(dtoa@i+1)^0,f,c
 13723  000FBA                     
 13724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 13725  000FBA  0E84               	movlw	low _dbuf
 13726  000FBC  2444               	addwf	dtoa@i^0,w,c
 13727  000FBE  6ED9               	movwf	fsr2l,c
 13728  000FC0  0E01               	movlw	high _dbuf
 13729  000FC2  2045               	addwfc	(dtoa@i+1)^0,w,c
 13730  000FC4  6EDA               	movwf	fsr2h,c
 13731  000FC6  C03C  F005         	movff	dtoa@n,___aomod@dividend
 13732  000FCA  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
 13733  000FCE  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
 13734  000FD2  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
 13735  000FD6  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
 13736  000FDA  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
 13737  000FDE  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
 13738  000FE2  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
 13739  000FE6  0E0A               	movlw	10
 13740  000FE8  6E0D               	movwf	___aomod@divisor^0,c
 13741  000FEA  0E00               	movlw	0
 13742  000FEC  6E0E               	movwf	(___aomod@divisor+1)^0,c
 13743  000FEE  0E00               	movlw	0
 13744  000FF0  6E0F               	movwf	(___aomod@divisor+2)^0,c
 13745  000FF2  0E00               	movlw	0
 13746  000FF4  6E10               	movwf	(___aomod@divisor+3)^0,c
 13747  000FF6  0E00               	movlw	0
 13748  000FF8  6E11               	movwf	(___aomod@divisor+4)^0,c
 13749  000FFA  0E00               	movlw	0
 13750  000FFC  6E12               	movwf	(___aomod@divisor+5)^0,c
 13751  000FFE  0E00               	movlw	0
 13752  001000  6E13               	movwf	(___aomod@divisor+6)^0,c
 13753  001002  0E00               	movlw	0
 13754  001004  6E14               	movwf	(___aomod@divisor+7)^0,c
 13755  001006  ECEB  F011         	call	___aomod	;wreg free
 13756  00100A  C005  F02C         	movff	?___aomod,??_dtoa
 13757  00100E  C006  F02D         	movff	?___aomod+1,??_dtoa+1
 13758  001012  C007  F02E         	movff	?___aomod+2,??_dtoa+2
 13759  001016  C008  F02F         	movff	?___aomod+3,??_dtoa+3
 13760  00101A  C009  F030         	movff	?___aomod+4,??_dtoa+4
 13761  00101E  C00A  F031         	movff	?___aomod+5,??_dtoa+5
 13762  001022  C00B  F032         	movff	?___aomod+6,??_dtoa+6
 13763  001026  C00C  F033         	movff	?___aomod+7,??_dtoa+7
 13764  00102A  C02C  F017         	movff	??_dtoa,abs@a
 13765  00102E  C02E  F018         	movff	??_dtoa+2,abs@a+1
 13766  001032  EC99  F01E         	call	_abs	;wreg free
 13767  001036  5017               	movf	?_abs^0,w,c
 13768  001038  0F30               	addlw	48
 13769  00103A  6EDF               	movwf	indf2,c
 13770  00103C                     
 13771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 13772  00103C  0636               	decf	dtoa@p^0,f,c
 13773  00103E  A0D8               	btfss	status,0,c
 13774  001040  0637               	decf	(dtoa@p+1)^0,f,c
 13775  001042                     
 13776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 13777  001042  0638               	decf	dtoa@w^0,f,c
 13778  001044  A0D8               	btfss	status,0,c
 13779  001046  0639               	decf	(dtoa@w+1)^0,f,c
 13780  001048                     
 13781                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 13782  001048  C03C  F005         	movff	dtoa@n,___aodiv@dividend
 13783  00104C  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
 13784  001050  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
 13785  001054  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
 13786  001058  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
 13787  00105C  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
 13788  001060  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
 13789  001064  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
 13790  001068  0E0A               	movlw	10
 13791  00106A  6E0D               	movwf	___aodiv@divisor^0,c
 13792  00106C  0E00               	movlw	0
 13793  00106E  6E0E               	movwf	(___aodiv@divisor+1)^0,c
 13794  001070  0E00               	movlw	0
 13795  001072  6E0F               	movwf	(___aodiv@divisor+2)^0,c
 13796  001074  0E00               	movlw	0
 13797  001076  6E10               	movwf	(___aodiv@divisor+3)^0,c
 13798  001078  0E00               	movlw	0
 13799  00107A  6E11               	movwf	(___aodiv@divisor+4)^0,c
 13800  00107C  0E00               	movlw	0
 13801  00107E  6E12               	movwf	(___aodiv@divisor+5)^0,c
 13802  001080  0E00               	movlw	0
 13803  001082  6E13               	movwf	(___aodiv@divisor+6)^0,c
 13804  001084  0E00               	movlw	0
 13805  001086  6E14               	movwf	(___aodiv@divisor+7)^0,c
 13806  001088  EC69  F010         	call	___aodiv	;wreg free
 13807  00108C  C005  F03C         	movff	?___aodiv,dtoa@n
 13808  001090  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
 13809  001094  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
 13810  001098  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
 13811  00109C  C009  F040         	movff	?___aodiv+4,dtoa@n+4
 13812  0010A0  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
 13813  0010A4  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
 13814  0010A8  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
 13815  0010AC                     l6098:
 13816                           
 13817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13818  0010AC  BE45               	btfsc	(dtoa@i+1)^0,7,c
 13819  0010AE  EF61  F008         	goto	u5881
 13820  0010B2  5045               	movf	(dtoa@i+1)^0,w,c
 13821  0010B4  E108               	bnz	u5880
 13822  0010B6  0444               	decf	dtoa@i^0,w,c
 13823  0010B8  A0D8               	btfss	status,0,c
 13824  0010BA  EF61  F008         	goto	u5881
 13825  0010BE  EF63  F008         	goto	u5880
 13826  0010C2                     u5881:
 13827  0010C2  EF93  F008         	goto	l6108
 13828  0010C6                     u5880:
 13829  0010C6  503C               	movf	dtoa@n^0,w,c
 13830  0010C8  103D               	iorwf	(dtoa@n+1)^0,w,c
 13831  0010CA  103E               	iorwf	(dtoa@n+2)^0,w,c
 13832  0010CC  103F               	iorwf	(dtoa@n+3)^0,w,c
 13833  0010CE  1040               	iorwf	(dtoa@n+4)^0,w,c
 13834  0010D0  1041               	iorwf	(dtoa@n+5)^0,w,c
 13835  0010D2  1042               	iorwf	(dtoa@n+6)^0,w,c
 13836  0010D4  1043               	iorwf	(dtoa@n+7)^0,w,c
 13837  0010D6  A4D8               	btfss	status,2,c
 13838  0010D8  EF70  F008         	goto	u5891
 13839  0010DC  EF72  F008         	goto	u5890
 13840  0010E0                     u5891:
 13841  0010E0  EFDA  F007         	goto	l6088
 13842  0010E4                     u5890:
 13843  0010E4  BE37               	btfsc	(dtoa@p+1)^0,7,c
 13844  0010E6  EF7F  F008         	goto	u5900
 13845  0010EA  5037               	movf	(dtoa@p+1)^0,w,c
 13846  0010EC  E106               	bnz	u5901
 13847  0010EE  0436               	decf	dtoa@p^0,w,c
 13848  0010F0  B0D8               	btfsc	status,0,c
 13849  0010F2  EF7D  F008         	goto	u5901
 13850  0010F6  EF7F  F008         	goto	u5900
 13851  0010FA                     u5901:
 13852  0010FA  EFDA  F007         	goto	l6088
 13853  0010FE                     u5900:
 13854  0010FE  BE39               	btfsc	(dtoa@w+1)^0,7,c
 13855  001100  EF8A  F008         	goto	u5911
 13856  001104  5039               	movf	(dtoa@w+1)^0,w,c
 13857  001106  E108               	bnz	u5910
 13858  001108  0438               	decf	dtoa@w^0,w,c
 13859  00110A  A0D8               	btfss	status,0,c
 13860  00110C  EF8A  F008         	goto	u5911
 13861  001110  EF8C  F008         	goto	u5910
 13862  001114                     u5911:
 13863  001114  EF93  F008         	goto	l6108
 13864  001118                     u5910:
 13865  001118  B257               	btfsc	_flags^0,1,c
 13866  00111A  EF91  F008         	goto	u5921
 13867  00111E  EF93  F008         	goto	u5920
 13868  001122                     u5921:
 13869  001122  EFDA  F007         	goto	l6088
 13870  001126                     u5920:
 13871  001126                     l6108:
 13872                           
 13873                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 13874  001126  503A               	movf	dtoa@s^0,w,c
 13875  001128  103B               	iorwf	(dtoa@s+1)^0,w,c
 13876  00112A  A4D8               	btfss	status,2,c
 13877  00112C  EF9A  F008         	goto	u5931
 13878  001130  EF9C  F008         	goto	u5930
 13879  001134                     u5931:
 13880  001134  EFA3  F008         	goto	l6112
 13881  001138                     u5930:
 13882  001138  A457               	btfss	_flags^0,2,c
 13883  00113A  EFA1  F008         	goto	u5941
 13884  00113E  EFA3  F008         	goto	u5940
 13885  001142                     u5941:
 13886  001142  EFC1  F008         	goto	l6122
 13887  001146                     u5940:
 13888  001146                     l6112:
 13889                           
 13890                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 13891  001146  0644               	decf	dtoa@i^0,f,c
 13892  001148  A0D8               	btfss	status,0,c
 13893  00114A  0645               	decf	(dtoa@i+1)^0,f,c
 13894  00114C                     
 13895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 13896  00114C  503A               	movf	dtoa@s^0,w,c
 13897  00114E  103B               	iorwf	(dtoa@s+1)^0,w,c
 13898  001150  A4D8               	btfss	status,2,c
 13899  001152  EFAD  F008         	goto	u5951
 13900  001156  EFAF  F008         	goto	u5950
 13901  00115A                     u5951:
 13902  00115A  EFB5  F008         	goto	l6118
 13903  00115E                     u5950:
 13904  00115E  0E00               	movlw	0
 13905  001160  6E35               	movwf	(_dtoa$1561+1)^0,c
 13906  001162  0E2B               	movlw	43
 13907  001164  6E34               	movwf	_dtoa$1561^0,c
 13908  001166  EFB9  F008         	goto	l6120
 13909  00116A                     l6118:
 13910  00116A  0E00               	movlw	0
 13911  00116C  6E35               	movwf	(_dtoa$1561+1)^0,c
 13912  00116E  0E2D               	movlw	45
 13913  001170  6E34               	movwf	_dtoa$1561^0,c
 13914  001172                     l6120:
 13915  001172  0E84               	movlw	low _dbuf
 13916  001174  2444               	addwf	dtoa@i^0,w,c
 13917  001176  6ED9               	movwf	fsr2l,c
 13918  001178  0E01               	movlw	high _dbuf
 13919  00117A  2045               	addwfc	(dtoa@i+1)^0,w,c
 13920  00117C  6EDA               	movwf	fsr2h,c
 13921  00117E  C034  FFDF         	movff	_dtoa$1561,indf2
 13922  001182                     l6122:
 13923                           
 13924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 13925  001182  C022  F017         	movff	dtoa@fp,pad@fp
 13926  001186  C023  F018         	movff	dtoa@fp+1,pad@fp+1
 13927  00118A  0E84               	movlw	low _dbuf
 13928  00118C  2444               	addwf	dtoa@i^0,w,c
 13929  00118E  6E19               	movwf	pad@buf^0,c
 13930  001190  0E01               	movlw	high _dbuf
 13931  001192  2045               	addwfc	(dtoa@i+1)^0,w,c
 13932  001194  6E1A               	movwf	(pad@buf+1)^0,c
 13933  001196  C038  F01B         	movff	dtoa@w,pad@p
 13934  00119A  C039  F01C         	movff	dtoa@w+1,pad@p+1
 13935  00119E  ECE7  F017         	call	_pad	;wreg free
 13936  0011A2  C017  F022         	movff	?_pad,?_dtoa
 13937  0011A6  C018  F023         	movff	?_pad+1,?_dtoa+1
 13938  0011AA  0012               	return		;funcret
 13939  0011AC                     __end_of_dtoa:
 13940                           	opt callstack 0
 13941                           
 13942 ;; *************** function _pad *****************
 13943 ;; Defined at:
 13944 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13945 ;; Parameters:    Size  Location     Type
 13946 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 13947 ;;		 -> NULL(0), 
 13948 ;;  buf             2   24[COMRAM] PTR unsigned char 
 13949 ;;		 -> dbuf(32), 
 13950 ;;  p               2   26[COMRAM] int 
 13951 ;; Auto vars:     Size  Location     Type
 13952 ;;  w               2   31[COMRAM] int 
 13953 ;;  i               2   29[COMRAM] int 
 13954 ;; Return value:  Size  Location     Type
 13955 ;;                  2   22[COMRAM] int 
 13956 ;; Registers used:
 13957 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13958 ;; Tracked objects:
 13959 ;;		On entry : 0/0
 13960 ;;		On exit  : 0/0
 13961 ;;		Unchanged: 0/0
 13962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13963 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13964 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13965 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13966 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13967 ;;Total ram usage:       11 bytes
 13968 ;; Hardware stack levels used:    1
 13969 ;; Hardware stack levels required when called:    8
 13970 ;; This function calls:
 13971 ;;		_fputc
 13972 ;;		_fputs
 13973 ;;		_strlen
 13974 ;; This function is called by:
 13975 ;;		_dtoa
 13976 ;;		_utoa
 13977 ;;		_xtoa
 13978 ;; This function uses a non-reentrant model
 13979 ;;
 13980                           
 13981                           	psect	text65
 13982  002FCE                     __ptext65:
 13983                           	opt callstack 0
 13984  002FCE                     _pad:
 13985                           	opt callstack 18
 13986  002FCE                     
 13987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 13988  002FCE  A057               	btfss	_flags^0,0,c
 13989  002FD0  EFEC  F017         	goto	u5451
 13990  002FD4  EFEE  F017         	goto	u5450
 13991  002FD8                     u5451:
 13992  002FD8  EFF8  F017         	goto	l5884
 13993  002FDC                     u5450:
 13994  002FDC                     
 13995                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 13996  002FDC  C019  F010         	movff	pad@buf,fputs@s
 13997  002FE0  C01A  F011         	movff	pad@buf+1,fputs@s+1
 13998  002FE4  C017  F012         	movff	pad@fp,fputs@fp
 13999  002FE8  C018  F013         	movff	pad@fp+1,fputs@fp+1
 14000  002FEC  ECF4  F01D         	call	_fputs	;wreg free
 14001  002FF0                     l5884:
 14002                           
 14003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 14004  002FF0  BE1C               	btfsc	(pad@p+1)^0,7,c
 14005  002FF2  EFFD  F017         	goto	u5461
 14006  002FF6  EFFF  F017         	goto	u5460
 14007  002FFA                     u5461:
 14008  002FFA  EF05  F018         	goto	l5888
 14009  002FFE                     u5460:
 14010  002FFE  C01B  F020         	movff	pad@p,pad@w
 14011  003002  C01C  F021         	movff	pad@p+1,pad@w+1
 14012  003006  EF09  F018         	goto	l1005
 14013  00300A                     l5888:
 14014  00300A  0E00               	movlw	0
 14015  00300C  6E21               	movwf	(pad@w+1)^0,c
 14016  00300E  0E00               	movlw	0
 14017  003010  6E20               	movwf	pad@w^0,c
 14018  003012                     l1005:
 14019                           
 14020                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 14021  003012  0E00               	movlw	0
 14022  003014  6E1F               	movwf	(pad@i+1)^0,c
 14023  003016  0E00               	movlw	0
 14024  003018  6E1E               	movwf	pad@i^0,c
 14025                           
 14026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14027  00301A  EF1B  F018         	goto	l5894
 14028  00301E                     l5890:
 14029                           
 14030                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 14031  00301E  0E00               	movlw	0
 14032  003020  6E08               	movwf	(fputc@c+1)^0,c
 14033  003022  0E20               	movlw	32
 14034  003024  6E07               	movwf	fputc@c^0,c
 14035  003026  C017  F009         	movff	pad@fp,fputc@fp
 14036  00302A  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 14037  00302E  ECBC  F019         	call	_fputc	;wreg free
 14038  003032                     
 14039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 14040  003032  4A1E               	infsnz	pad@i^0,f,c
 14041  003034  2A1F               	incf	(pad@i+1)^0,f,c
 14042  003036                     l5894:
 14043                           
 14044                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14045  003036  5020               	movf	pad@w^0,w,c
 14046  003038  5C1E               	subwf	pad@i^0,w,c
 14047  00303A  501F               	movf	(pad@i+1)^0,w,c
 14048  00303C  0A80               	xorlw	128
 14049  00303E  6E1D               	movwf	??_pad^0,c
 14050  003040  5021               	movf	(pad@w+1)^0,w,c
 14051  003042  0A80               	xorlw	128
 14052  003044  581D               	subwfb	??_pad^0,w,c
 14053  003046  A0D8               	btfss	status,0,c
 14054  003048  EF28  F018         	goto	u5471
 14055  00304C  EF2A  F018         	goto	u5470
 14056  003050                     u5471:
 14057  003050  EF0F  F018         	goto	l5890
 14058  003054                     u5470:
 14059  003054                     
 14060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 14061  003054  B057               	btfsc	_flags^0,0,c
 14062  003056  EF2F  F018         	goto	u5481
 14063  00305A  EF31  F018         	goto	u5480
 14064  00305E                     u5481:
 14065  00305E  EF3B  F018         	goto	l5898
 14066  003062                     u5480:
 14067  003062                     
 14068                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 14069  003062  C019  F010         	movff	pad@buf,fputs@s
 14070  003066  C01A  F011         	movff	pad@buf+1,fputs@s+1
 14071  00306A  C017  F012         	movff	pad@fp,fputs@fp
 14072  00306E  C018  F013         	movff	pad@fp+1,fputs@fp+1
 14073  003072  ECF4  F01D         	call	_fputs	;wreg free
 14074  003076                     l5898:
 14075                           
 14076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 14077  003076  C019  F005         	movff	pad@buf,strlen@s
 14078  00307A  C01A  F006         	movff	pad@buf+1,strlen@s+1
 14079  00307E  EC3B  F01D         	call	_strlen	;wreg free
 14080  003082  5020               	movf	pad@w^0,w,c
 14081  003084  2405               	addwf	?_strlen^0,w,c
 14082  003086  6E17               	movwf	?_pad^0,c
 14083  003088  5021               	movf	(pad@w+1)^0,w,c
 14084  00308A  2006               	addwfc	(?_strlen+1)^0,w,c
 14085  00308C  6E18               	movwf	(?_pad+1)^0,c
 14086  00308E  0012               	return		;funcret
 14087  003090                     __end_of_pad:
 14088                           	opt callstack 0
 14089                           
 14090 ;; *************** function _strlen *****************
 14091 ;; Defined at:
 14092 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 14093 ;; Parameters:    Size  Location     Type
 14094 ;;  s               2    4[COMRAM] PTR const unsigned char 
 14095 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ValidateCmd@ConfName_1483(20), 
 14096 ;;		 -> ValidateCmd@ConfName_1479(20), ValidateCmd@ConfName(20), STR_44(9), STR_43(12), 
 14097 ;;		 -> InitialiseString@RevNum(2), InitialiseString@PartNum(19), InitialiseString@SerialNum(11), Command(16), 
 14098 ;; Auto vars:     Size  Location     Type
 14099 ;;  a               2    6[COMRAM] PTR const unsigned char 
 14100 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ValidateCmd@ConfName_1483(20), 
 14101 ;;		 -> ValidateCmd@ConfName_1479(20), ValidateCmd@ConfName(20), STR_44(9), STR_43(12), 
 14102 ;;		 -> InitialiseString@RevNum(2), InitialiseString@PartNum(19), InitialiseString@SerialNum(11), Command(16), 
 14103 ;; Return value:  Size  Location     Type
 14104 ;;                  2    4[COMRAM] unsigned int 
 14105 ;; Registers used:
 14106 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 14107 ;; Tracked objects:
 14108 ;;		On entry : 0/0
 14109 ;;		On exit  : 0/0
 14110 ;;		Unchanged: 0/0
 14111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14112 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14113 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14115 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14116 ;;Total ram usage:        4 bytes
 14117 ;; Hardware stack levels used:    1
 14118 ;; Hardware stack levels required when called:    4
 14119 ;; This function calls:
 14120 ;;		Nothing
 14121 ;; This function is called by:
 14122 ;;		_ReadRX232
 14123 ;;		_SaveCardDat
 14124 ;;		_pad
 14125 ;;		_stoa
 14126 ;;		_strcat
 14127 ;; This function uses a non-reentrant model
 14128 ;;
 14129                           
 14130                           	psect	text66
 14131  003A76                     __ptext66:
 14132                           	opt callstack 0
 14133  003A76                     _strlen:
 14134                           	opt callstack 21
 14135  003A76  C005  F007         	movff	strlen@s,strlen@a
 14136  003A7A  C006  F008         	movff	strlen@s+1,strlen@a+1
 14137  003A7E  EF43  F01D         	goto	l5862
 14138  003A82                     l5860:
 14139  003A82  4A05               	infsnz	strlen@s^0,f,c
 14140  003A84  2A06               	incf	(strlen@s+1)^0,f,c
 14141  003A86                     l5862:
 14142  003A86  C005  FFF6         	movff	strlen@s,tblptrl
 14143  003A8A  C006  FFF7         	movff	strlen@s+1,tblptrh
 14144  003A8E  0E00               	movlw	low (__mediumconst shr (0+16))
 14145  003A90  6EF8               	movwf	tblptru,c
 14146  003A92  0E0E               	movlw	(high __ramtop+-1)
 14147  003A94  64F7               	cpfsgt	tblptrh,c
 14148  003A96  D003               	bra	u5407
 14149  003A98  0008               	tblrd		*
 14150  003A9A  50F5               	movf	tablat,w,c
 14151  003A9C  D005               	bra	u5400
 14152  003A9E                     u5407:
 14153  003A9E  CFF6 FFE9          	movff	tblptrl,fsr0l
 14154  003AA2  CFF7 FFEA          	movff	tblptrh,fsr0h
 14155  003AA6  50EF               	movf	indf0,w,c
 14156  003AA8                     u5400:
 14157  003AA8  0900               	iorlw	0
 14158  003AAA  A4D8               	btfss	status,2,c
 14159  003AAC  EF5A  F01D         	goto	u5411
 14160  003AB0  EF5C  F01D         	goto	u5410
 14161  003AB4                     u5411:
 14162  003AB4  EF41  F01D         	goto	l5860
 14163  003AB8                     u5410:
 14164  003AB8  5007               	movf	strlen@a^0,w,c
 14165  003ABA  5C05               	subwf	strlen@s^0,w,c
 14166  003ABC  6E05               	movwf	?_strlen^0,c
 14167  003ABE  5008               	movf	(strlen@a+1)^0,w,c
 14168  003AC0  5806               	subwfb	(strlen@s+1)^0,w,c
 14169  003AC2  6E06               	movwf	(?_strlen+1)^0,c
 14170  003AC4  0012               	return		;funcret
 14171  003AC6                     __end_of_strlen:
 14172                           	opt callstack 0
 14173                           
 14174 ;; *************** function _fputs *****************
 14175 ;; Defined at:
 14176 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 14177 ;; Parameters:    Size  Location     Type
 14178 ;;  s               2   15[COMRAM] PTR const unsigned char 
 14179 ;;		 -> dbuf(32), 
 14180 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 14181 ;;		 -> NULL(0), 
 14182 ;; Auto vars:     Size  Location     Type
 14183 ;;  i               2   20[COMRAM] int 
 14184 ;;  c               1   19[COMRAM] unsigned char 
 14185 ;; Return value:  Size  Location     Type
 14186 ;;                  2   15[COMRAM] int 
 14187 ;; Registers used:
 14188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14189 ;; Tracked objects:
 14190 ;;		On entry : 0/0
 14191 ;;		On exit  : 0/0
 14192 ;;		Unchanged: 0/0
 14193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14194 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14195 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14197 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14198 ;;Total ram usage:        7 bytes
 14199 ;; Hardware stack levels used:    1
 14200 ;; Hardware stack levels required when called:    7
 14201 ;; This function calls:
 14202 ;;		_fputc
 14203 ;; This function is called by:
 14204 ;;		_pad
 14205 ;; This function uses a non-reentrant model
 14206 ;;
 14207                           
 14208                           	psect	text67
 14209  003BE8                     __ptext67:
 14210                           	opt callstack 0
 14211  003BE8                     _fputs:
 14212                           	opt callstack 18
 14213  003BE8  0E00               	movlw	0
 14214  003BEA  6E16               	movwf	(fputs@i+1)^0,c
 14215  003BEC  0E00               	movlw	0
 14216  003BEE  6E15               	movwf	fputs@i^0,c
 14217  003BF0  EF05  F01E         	goto	l5874
 14218  003BF4                     l5870:
 14219  003BF4  C014  F007         	movff	fputs@c,fputc@c
 14220  003BF8  6A08               	clrf	(fputc@c+1)^0,c
 14221  003BFA  C012  F009         	movff	fputs@fp,fputc@fp
 14222  003BFE  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 14223  003C02  ECBC  F019         	call	_fputc	;wreg free
 14224  003C06  4A15               	infsnz	fputs@i^0,f,c
 14225  003C08  2A16               	incf	(fputs@i+1)^0,f,c
 14226  003C0A                     l5874:
 14227  003C0A  5015               	movf	fputs@i^0,w,c
 14228  003C0C  2410               	addwf	fputs@s^0,w,c
 14229  003C0E  6ED9               	movwf	fsr2l,c
 14230  003C10  5016               	movf	(fputs@i+1)^0,w,c
 14231  003C12  2011               	addwfc	(fputs@s+1)^0,w,c
 14232  003C14  6EDA               	movwf	fsr2h,c
 14233  003C16  50DF               	movf	indf2,w,c
 14234  003C18  6E14               	movwf	fputs@c^0,c
 14235  003C1A  5014               	movf	fputs@c^0,w,c
 14236  003C1C  A4D8               	btfss	status,2,c
 14237  003C1E  EF13  F01E         	goto	u5421
 14238  003C22  EF15  F01E         	goto	u5420
 14239  003C26                     u5421:
 14240  003C26  EFFA  F01D         	goto	l5870
 14241  003C2A                     u5420:
 14242  003C2A  0012               	return		;funcret
 14243  003C2C                     __end_of_fputs:
 14244                           	opt callstack 0
 14245                           
 14246 ;; *************** function _fputc *****************
 14247 ;; Defined at:
 14248 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 14249 ;; Parameters:    Size  Location     Type
 14250 ;;  c               2    6[COMRAM] int 
 14251 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 14252 ;;		 -> NULL(0), 
 14253 ;; Auto vars:     Size  Location     Type
 14254 ;;		None
 14255 ;; Return value:  Size  Location     Type
 14256 ;;                  2    6[COMRAM] int 
 14257 ;; Registers used:
 14258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14259 ;; Tracked objects:
 14260 ;;		On entry : 0/0
 14261 ;;		On exit  : 0/0
 14262 ;;		Unchanged: 0/0
 14263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14264 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14266 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14267 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14268 ;;Total ram usage:        9 bytes
 14269 ;; Hardware stack levels used:    1
 14270 ;; Hardware stack levels required when called:    6
 14271 ;; This function calls:
 14272 ;;		_putch
 14273 ;; This function is called by:
 14274 ;;		_pad
 14275 ;;		_stoa
 14276 ;;		_vfpfcnvrt
 14277 ;;		_fputs
 14278 ;; This function uses a non-reentrant model
 14279 ;;
 14280                           
 14281                           	psect	text68
 14282  003378                     __ptext68:
 14283                           	opt callstack 0
 14284  003378                     _fputc:
 14285                           	opt callstack 18
 14286  003378  5009               	movf	fputc@fp^0,w,c
 14287  00337A  100A               	iorwf	(fputc@fp+1)^0,w,c
 14288  00337C  B4D8               	btfsc	status,2,c
 14289  00337E  EFC3  F019         	goto	u5361
 14290  003382  EFC5  F019         	goto	u5360
 14291  003386                     u5361:
 14292  003386  EFCE  F019         	goto	l5848
 14293  00338A                     u5360:
 14294  00338A  5009               	movf	fputc@fp^0,w,c
 14295  00338C  100A               	iorwf	(fputc@fp+1)^0,w,c
 14296  00338E  A4D8               	btfss	status,2,c
 14297  003390  EFCC  F019         	goto	u5371
 14298  003394  EFCE  F019         	goto	u5370
 14299  003398                     u5371:
 14300  003398  EFD3  F019         	goto	l5850
 14301  00339C                     u5370:
 14302  00339C                     l5848:
 14303  00339C  5007               	movf	fputc@c^0,w,c
 14304  00339E  EC5C  F020         	call	_putch
 14305  0033A2  EF06  F01A         	goto	l1905
 14306  0033A6                     l5850:
 14307  0033A6  EE20 F004          	lfsr	2,4
 14308  0033AA  5009               	movf	fputc@fp^0,w,c
 14309  0033AC  26D9               	addwf	fsr2l,f,c
 14310  0033AE  500A               	movf	(fputc@fp+1)^0,w,c
 14311  0033B0  22DA               	addwfc	fsr2h,f,c
 14312  0033B2  50DE               	movf	postinc2,w,c
 14313  0033B4  10DE               	iorwf	postinc2,w,c
 14314  0033B6  B4D8               	btfsc	status,2,c
 14315  0033B8  EFE0  F019         	goto	u5381
 14316  0033BC  EFE2  F019         	goto	u5380
 14317  0033C0                     u5381:
 14318  0033C0  EFFD  F019         	goto	l5854
 14319  0033C4                     u5380:
 14320  0033C4  EE20 F004          	lfsr	2,4
 14321  0033C8  5009               	movf	fputc@fp^0,w,c
 14322  0033CA  26D9               	addwf	fsr2l,f,c
 14323  0033CC  500A               	movf	(fputc@fp+1)^0,w,c
 14324  0033CE  22DA               	addwfc	fsr2h,f,c
 14325  0033D0  EE10 F002          	lfsr	1,2
 14326  0033D4  5009               	movf	fputc@fp^0,w,c
 14327  0033D6  26E1               	addwf	fsr1l,f,c
 14328  0033D8  500A               	movf	(fputc@fp+1)^0,w,c
 14329  0033DA  22E2               	addwfc	fsr1h,f,c
 14330  0033DC  50DE               	movf	postinc2,w,c
 14331  0033DE  5CE6               	subwf	postinc1,w,c
 14332  0033E0  50E6               	movf	postinc1,w,c
 14333  0033E2  0A80               	xorlw	128
 14334  0033E4  6E0F               	movwf	(??_fputc+4)^0,c
 14335  0033E6  50DE               	movf	postinc2,w,c
 14336  0033E8  0A80               	xorlw	128
 14337  0033EA  580F               	subwfb	(??_fputc+4)^0,w,c
 14338  0033EC  B0D8               	btfsc	status,0,c
 14339  0033EE  EFFB  F019         	goto	u5391
 14340  0033F2  EFFD  F019         	goto	u5390
 14341  0033F6                     u5391:
 14342  0033F6  EF06  F01A         	goto	l1905
 14343  0033FA                     u5390:
 14344  0033FA                     l5854:
 14345  0033FA  EE20 F002          	lfsr	2,2
 14346  0033FE  5009               	movf	fputc@fp^0,w,c
 14347  003400  26D9               	addwf	fsr2l,f,c
 14348  003402  500A               	movf	(fputc@fp+1)^0,w,c
 14349  003404  22DA               	addwfc	fsr2h,f,c
 14350  003406  2ADE               	incf	postinc2,f,c
 14351  003408  0E00               	movlw	0
 14352  00340A  22DD               	addwfc	postdec2,f,c
 14353  00340C                     l1905:
 14354  00340C  0012               	return		;funcret
 14355  00340E                     __end_of_fputc:
 14356                           	opt callstack 0
 14357                           
 14358 ;; *************** function _putch *****************
 14359 ;; Defined at:
 14360 ;;		line 203 in file "mcc_generated_files/eusart2.c"
 14361 ;; Parameters:    Size  Location     Type
 14362 ;;  txData          1    wreg     unsigned char 
 14363 ;; Auto vars:     Size  Location     Type
 14364 ;;  txData          1    5[COMRAM] unsigned char 
 14365 ;; Return value:  Size  Location     Type
 14366 ;;                  1    wreg      void 
 14367 ;; Registers used:
 14368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14369 ;; Tracked objects:
 14370 ;;		On entry : 0/0
 14371 ;;		On exit  : 0/0
 14372 ;;		Unchanged: 0/0
 14373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14375 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14377 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14378 ;;Total ram usage:        1 bytes
 14379 ;; Hardware stack levels used:    1
 14380 ;; Hardware stack levels required when called:    5
 14381 ;; This function calls:
 14382 ;;		_EUSART2_Write
 14383 ;; This function is called by:
 14384 ;;		_fputc
 14385 ;; This function uses a non-reentrant model
 14386 ;;
 14387                           
 14388                           	psect	text69
 14389  0040B8                     __ptext69:
 14390                           	opt callstack 0
 14391  0040B8                     _putch:
 14392                           	opt callstack 18
 14393                           
 14394                           ;incstack = 0
 14395                           ;putch@txData stored from wreg
 14396  0040B8  6E06               	movwf	putch@txData^0,c
 14397  0040BA                     
 14398                           ;mcc_generated_files/eusart2.c: 203: void putch(char txData);mcc_generated_files/eusart2
      +                          .c: 204: {;mcc_generated_files/eusart2.c: 205:     EUSART2_Write(txData);
 14399  0040BA  5006               	movf	putch@txData^0,w,c
 14400  0040BC  EC33  F01C         	call	_EUSART2_Write
 14401  0040C0  0012               	return		;funcret
 14402  0040C2                     __end_of_putch:
 14403                           	opt callstack 0
 14404                           
 14405 ;; *************** function _EUSART2_Write *****************
 14406 ;; Defined at:
 14407 ;;		line 175 in file "mcc_generated_files/eusart2.c"
 14408 ;; Parameters:    Size  Location     Type
 14409 ;;  txData          1    wreg     unsigned char 
 14410 ;; Auto vars:     Size  Location     Type
 14411 ;;  txData          1    4[COMRAM] unsigned char 
 14412 ;; Return value:  Size  Location     Type
 14413 ;;                  1    wreg      void 
 14414 ;; Registers used:
 14415 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14416 ;; Tracked objects:
 14417 ;;		On entry : 0/0
 14418 ;;		On exit  : 0/0
 14419 ;;		Unchanged: 0/0
 14420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14422 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14424 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14425 ;;Total ram usage:        1 bytes
 14426 ;; Hardware stack levels used:    1
 14427 ;; Hardware stack levels required when called:    4
 14428 ;; This function calls:
 14429 ;;		Nothing
 14430 ;; This function is called by:
 14431 ;;		_putch
 14432 ;;		_ReadRX232
 14433 ;; This function uses a non-reentrant model
 14434 ;;
 14435                           
 14436                           	psect	text70
 14437  003866                     __ptext70:
 14438                           	opt callstack 0
 14439  003866                     _EUSART2_Write:
 14440                           	opt callstack 18
 14441                           
 14442                           ;incstack = 0
 14443                           ;EUSART2_Write@txData stored from wreg
 14444  003866  6E05               	movwf	EUSART2_Write@txData^0,c
 14445  003868                     l5826:
 14446                           
 14447                           ;mcc_generated_files/eusart2.c: 177:     while(0 == eusart2TxBufferRemaining)
 14448  003868  0100               	movlb	0	; () banked
 14449  00386A  51FF               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 14450  00386C  B4D8               	btfsc	status,2,c
 14451  00386E  EF3B  F01C         	goto	u5331
 14452  003872  EF3D  F01C         	goto	u5330
 14453  003876                     u5331:
 14454  003876  EF34  F01C         	goto	l5826
 14455  00387A                     u5330:
 14456  00387A                     
 14457                           ; BSR set to: 0
 14458                           ;mcc_generated_files/eusart2.c: 181:     if(0 == PIE3bits.TX2IE)
 14459  00387A  010E               	movlb	14	; () banked
 14460  00387C  BDC5               	btfsc	197,6,b	;volatile
 14461  00387E  EF43  F01C         	goto	u5341
 14462  003882  EF45  F01C         	goto	u5340
 14463  003886                     u5341:
 14464  003886  EF49  F01C         	goto	l321
 14465  00388A                     u5340:
 14466  00388A                     
 14467                           ; BSR set to: 14
 14468                           ;mcc_generated_files/eusart2.c: 182:     {;mcc_generated_files/eusart2.c: 183:         T
      +                          X2REG = txData;
 14469  00388A  C005  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
 14470                           
 14471                           ;mcc_generated_files/eusart2.c: 184:     }
 14472  00388E  EF5F  F01C         	goto	l5840
 14473  003892                     l321:
 14474                           
 14475                           ; BSR set to: 14
 14476                           ;mcc_generated_files/eusart2.c: 186:     {;mcc_generated_files/eusart2.c: 187:         P
      +                          IE3bits.TX2IE = 0;
 14477  003892  9DC5               	bcf	197,6,b	;volatile
 14478  003894                     
 14479                           ; BSR set to: 14
 14480                           ;mcc_generated_files/eusart2.c: 188:         eusart2TxBuffer[eusart2TxHead++] = txData;
 14481  003894  0E84               	movlw	low _eusart2TxBuffer
 14482  003896  0100               	movlb	0	; () banked
 14483  003898  25E1               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
 14484  00389A  6ED9               	movwf	fsr2l,c
 14485  00389C  6ADA               	clrf	fsr2h,c
 14486  00389E  0E03               	movlw	high _eusart2TxBuffer
 14487  0038A0  22DA               	addwfc	fsr2h,f,c
 14488  0038A2  C005  FFDF         	movff	EUSART2_Write@txData,indf2
 14489  0038A6                     
 14490                           ; BSR set to: 0
 14491  0038A6  2BE1               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 14492  0038A8                     
 14493                           ; BSR set to: 0
 14494                           ;mcc_generated_files/eusart2.c: 189:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
 14495  0038A8  0E1F               	movlw	31
 14496  0038AA  65E1               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 14497  0038AC  EF5A  F01C         	goto	u5351
 14498  0038B0  EF5C  F01C         	goto	u5350
 14499  0038B4                     u5351:
 14500  0038B4  EF5E  F01C         	goto	l5838
 14501  0038B8                     u5350:
 14502  0038B8                     
 14503                           ; BSR set to: 0
 14504                           ;mcc_generated_files/eusart2.c: 190:         {;mcc_generated_files/eusart2.c: 191:      
      +                                 eusart2TxHead = 0;
 14505  0038B8  0E00               	movlw	0
 14506  0038BA  6FE1               	movwf	_eusart2TxHead& (0+255),b	;volatile
 14507  0038BC                     l5838:
 14508                           
 14509                           ; BSR set to: 0
 14510                           ;mcc_generated_files/eusart2.c: 193:         eusart2TxBufferRemaining--;
 14511  0038BC  07FF               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 14512  0038BE                     l5840:
 14513                           
 14514                           ;mcc_generated_files/eusart2.c: 195:     PIE3bits.TX2IE = 1;
 14515  0038BE  010E               	movlb	14	; () banked
 14516  0038C0  8DC5               	bsf	197,6,b	;volatile
 14517  0038C2                     
 14518                           ; BSR set to: 14
 14519  0038C2  0012               	return		;funcret
 14520  0038C4                     __end_of_EUSART2_Write:
 14521                           	opt callstack 0
 14522                           
 14523 ;; *************** function _abs *****************
 14524 ;; Defined at:
 14525 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 14526 ;; Parameters:    Size  Location     Type
 14527 ;;  a               2   22[COMRAM] int 
 14528 ;; Auto vars:     Size  Location     Type
 14529 ;;		None
 14530 ;; Return value:  Size  Location     Type
 14531 ;;                  2   22[COMRAM] int 
 14532 ;; Registers used:
 14533 ;;		wreg, status,2, status,0
 14534 ;; Tracked objects:
 14535 ;;		On entry : 0/0
 14536 ;;		On exit  : 0/0
 14537 ;;		Unchanged: 0/0
 14538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14539 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14541 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14542 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14543 ;;Total ram usage:        4 bytes
 14544 ;; Hardware stack levels used:    1
 14545 ;; Hardware stack levels required when called:    4
 14546 ;; This function calls:
 14547 ;;		Nothing
 14548 ;; This function is called by:
 14549 ;;		_dtoa
 14550 ;; This function uses a non-reentrant model
 14551 ;;
 14552                           
 14553                           	psect	text71
 14554  003D32                     __ptext71:
 14555                           	opt callstack 0
 14556  003D32                     _abs:
 14557                           	opt callstack 22
 14558  003D32  BE18               	btfsc	(abs@a+1)^0,7,c
 14559  003D34  EFA6  F01E         	goto	u5490
 14560  003D38  5018               	movf	(abs@a+1)^0,w,c
 14561  003D3A  E106               	bnz	u5491
 14562  003D3C  0417               	decf	abs@a^0,w,c
 14563  003D3E  B0D8               	btfsc	status,0,c
 14564  003D40  EFA4  F01E         	goto	u5491
 14565  003D44  EFA6  F01E         	goto	u5490
 14566  003D48                     u5491:
 14567  003D48  EFB4  F01E         	goto	l1823
 14568  003D4C                     u5490:
 14569  003D4C  C017  F019         	movff	abs@a,??_abs
 14570  003D50  C018  F01A         	movff	abs@a+1,??_abs+1
 14571  003D54  1E19               	comf	??_abs^0,f,c
 14572  003D56  1E1A               	comf	(??_abs+1)^0,f,c
 14573  003D58  4A19               	infsnz	??_abs^0,f,c
 14574  003D5A  2A1A               	incf	(??_abs+1)^0,f,c
 14575  003D5C  C019  F017         	movff	??_abs,?_abs
 14576  003D60  C01A  F018         	movff	??_abs+1,?_abs+1
 14577  003D64  EFB8  F01E         	goto	l1826
 14578  003D68                     l1823:
 14579  003D68  C017  F017         	movff	abs@a,?_abs
 14580  003D6C  C018  F018         	movff	abs@a+1,?_abs+1
 14581  003D70                     l1826:
 14582  003D70  0012               	return		;funcret
 14583  003D72                     __end_of_abs:
 14584                           	opt callstack 0
 14585                           
 14586 ;; *************** function ___aomod *****************
 14587 ;; Defined at:
 14588 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 14589 ;; Parameters:    Size  Location     Type
 14590 ;;  dividend        8    4[COMRAM] long long 
 14591 ;;  divisor         8   12[COMRAM] long long 
 14592 ;; Auto vars:     Size  Location     Type
 14593 ;;  sign            1   21[COMRAM] unsigned char 
 14594 ;;  counter         1   20[COMRAM] unsigned char 
 14595 ;; Return value:  Size  Location     Type
 14596 ;;                  8    4[COMRAM] long long 
 14597 ;; Registers used:
 14598 ;;		wreg, status,2, status,0
 14599 ;; Tracked objects:
 14600 ;;		On entry : 0/0
 14601 ;;		On exit  : 0/0
 14602 ;;		Unchanged: 0/0
 14603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14604 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14605 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14607 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14608 ;;Total ram usage:       18 bytes
 14609 ;; Hardware stack levels used:    1
 14610 ;; Hardware stack levels required when called:    4
 14611 ;; This function calls:
 14612 ;;		Nothing
 14613 ;; This function is called by:
 14614 ;;		_dtoa
 14615 ;; This function uses a non-reentrant model
 14616 ;;
 14617                           
 14618                           	psect	text72
 14619  0023D6                     __ptext72:
 14620                           	opt callstack 0
 14621  0023D6                     ___aomod:
 14622                           	opt callstack 22
 14623  0023D6  0E00               	movlw	0
 14624  0023D8  6E16               	movwf	___aomod@sign^0,c
 14625  0023DA  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
 14626  0023DC  EFF4  F011         	goto	u5660
 14627  0023E0  EFF2  F011         	goto	u5661
 14628  0023E4                     u5661:
 14629  0023E4  EF06  F012         	goto	l5986
 14630  0023E8                     u5660:
 14631  0023E8  1E0C               	comf	(___aomod@dividend+7)^0,f,c
 14632  0023EA  1E0B               	comf	(___aomod@dividend+6)^0,f,c
 14633  0023EC  1E0A               	comf	(___aomod@dividend+5)^0,f,c
 14634  0023EE  1E09               	comf	(___aomod@dividend+4)^0,f,c
 14635  0023F0  1E08               	comf	(___aomod@dividend+3)^0,f,c
 14636  0023F2  1E07               	comf	(___aomod@dividend+2)^0,f,c
 14637  0023F4  1E06               	comf	(___aomod@dividend+1)^0,f,c
 14638  0023F6  6C05               	negf	___aomod@dividend^0,c
 14639  0023F8  0E00               	movlw	0
 14640  0023FA  2206               	addwfc	(___aomod@dividend+1)^0,f,c
 14641  0023FC  2207               	addwfc	(___aomod@dividend+2)^0,f,c
 14642  0023FE  2208               	addwfc	(___aomod@dividend+3)^0,f,c
 14643  002400  2209               	addwfc	(___aomod@dividend+4)^0,f,c
 14644  002402  220A               	addwfc	(___aomod@dividend+5)^0,f,c
 14645  002404  220B               	addwfc	(___aomod@dividend+6)^0,f,c
 14646  002406  220C               	addwfc	(___aomod@dividend+7)^0,f,c
 14647  002408  0E01               	movlw	1
 14648  00240A  6E16               	movwf	___aomod@sign^0,c
 14649  00240C                     l5986:
 14650  00240C  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
 14651  00240E  EF0D  F012         	goto	u5670
 14652  002412  EF0B  F012         	goto	u5671
 14653  002416                     u5671:
 14654  002416  EF1D  F012         	goto	l5990
 14655  00241A                     u5670:
 14656  00241A  1E14               	comf	(___aomod@divisor+7)^0,f,c
 14657  00241C  1E13               	comf	(___aomod@divisor+6)^0,f,c
 14658  00241E  1E12               	comf	(___aomod@divisor+5)^0,f,c
 14659  002420  1E11               	comf	(___aomod@divisor+4)^0,f,c
 14660  002422  1E10               	comf	(___aomod@divisor+3)^0,f,c
 14661  002424  1E0F               	comf	(___aomod@divisor+2)^0,f,c
 14662  002426  1E0E               	comf	(___aomod@divisor+1)^0,f,c
 14663  002428  6C0D               	negf	___aomod@divisor^0,c
 14664  00242A  0E00               	movlw	0
 14665  00242C  220E               	addwfc	(___aomod@divisor+1)^0,f,c
 14666  00242E  220F               	addwfc	(___aomod@divisor+2)^0,f,c
 14667  002430  2210               	addwfc	(___aomod@divisor+3)^0,f,c
 14668  002432  2211               	addwfc	(___aomod@divisor+4)^0,f,c
 14669  002434  2212               	addwfc	(___aomod@divisor+5)^0,f,c
 14670  002436  2213               	addwfc	(___aomod@divisor+6)^0,f,c
 14671  002438  2214               	addwfc	(___aomod@divisor+7)^0,f,c
 14672  00243A                     l5990:
 14673  00243A  500D               	movf	___aomod@divisor^0,w,c
 14674  00243C  100E               	iorwf	(___aomod@divisor+1)^0,w,c
 14675  00243E  100F               	iorwf	(___aomod@divisor+2)^0,w,c
 14676  002440  1010               	iorwf	(___aomod@divisor+3)^0,w,c
 14677  002442  1011               	iorwf	(___aomod@divisor+4)^0,w,c
 14678  002444  1012               	iorwf	(___aomod@divisor+5)^0,w,c
 14679  002446  1013               	iorwf	(___aomod@divisor+6)^0,w,c
 14680  002448  1014               	iorwf	(___aomod@divisor+7)^0,w,c
 14681  00244A  B4D8               	btfsc	status,2,c
 14682  00244C  EF2A  F012         	goto	u5681
 14683  002450  EF2C  F012         	goto	u5680
 14684  002454                     u5681:
 14685  002454  EF74  F012         	goto	l6006
 14686  002458                     u5680:
 14687  002458  0E01               	movlw	1
 14688  00245A  6E15               	movwf	___aomod@counter^0,c
 14689  00245C  EF3A  F012         	goto	l5996
 14690  002460                     l5994:
 14691  002460  90D8               	bcf	status,0,c
 14692  002462  360D               	rlcf	___aomod@divisor^0,f,c
 14693  002464  360E               	rlcf	(___aomod@divisor+1)^0,f,c
 14694  002466  360F               	rlcf	(___aomod@divisor+2)^0,f,c
 14695  002468  3610               	rlcf	(___aomod@divisor+3)^0,f,c
 14696  00246A  3611               	rlcf	(___aomod@divisor+4)^0,f,c
 14697  00246C  3612               	rlcf	(___aomod@divisor+5)^0,f,c
 14698  00246E  3613               	rlcf	(___aomod@divisor+6)^0,f,c
 14699  002470  3614               	rlcf	(___aomod@divisor+7)^0,f,c
 14700  002472  2A15               	incf	___aomod@counter^0,f,c
 14701  002474                     l5996:
 14702  002474  AE14               	btfss	(___aomod@divisor+7)^0,7,c
 14703  002476  EF3F  F012         	goto	u5691
 14704  00247A  EF41  F012         	goto	u5690
 14705  00247E                     u5691:
 14706  00247E  EF30  F012         	goto	l5994
 14707  002482                     u5690:
 14708  002482                     l5998:
 14709  002482  500D               	movf	___aomod@divisor^0,w,c
 14710  002484  5C05               	subwf	___aomod@dividend^0,w,c
 14711  002486  500E               	movf	(___aomod@divisor+1)^0,w,c
 14712  002488  5806               	subwfb	(___aomod@dividend+1)^0,w,c
 14713  00248A  500F               	movf	(___aomod@divisor+2)^0,w,c
 14714  00248C  5807               	subwfb	(___aomod@dividend+2)^0,w,c
 14715  00248E  5010               	movf	(___aomod@divisor+3)^0,w,c
 14716  002490  5808               	subwfb	(___aomod@dividend+3)^0,w,c
 14717  002492  5011               	movf	(___aomod@divisor+4)^0,w,c
 14718  002494  5809               	subwfb	(___aomod@dividend+4)^0,w,c
 14719  002496  5012               	movf	(___aomod@divisor+5)^0,w,c
 14720  002498  580A               	subwfb	(___aomod@dividend+5)^0,w,c
 14721  00249A  5013               	movf	(___aomod@divisor+6)^0,w,c
 14722  00249C  580B               	subwfb	(___aomod@dividend+6)^0,w,c
 14723  00249E  5014               	movf	(___aomod@divisor+7)^0,w,c
 14724  0024A0  580C               	subwfb	(___aomod@dividend+7)^0,w,c
 14725  0024A2  A0D8               	btfss	status,0,c
 14726  0024A4  EF56  F012         	goto	u5701
 14727  0024A8  EF58  F012         	goto	u5700
 14728  0024AC                     u5701:
 14729  0024AC  EF68  F012         	goto	l6002
 14730  0024B0                     u5700:
 14731  0024B0  500D               	movf	___aomod@divisor^0,w,c
 14732  0024B2  5E05               	subwf	___aomod@dividend^0,f,c
 14733  0024B4  500E               	movf	(___aomod@divisor+1)^0,w,c
 14734  0024B6  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
 14735  0024B8  500F               	movf	(___aomod@divisor+2)^0,w,c
 14736  0024BA  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
 14737  0024BC  5010               	movf	(___aomod@divisor+3)^0,w,c
 14738  0024BE  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
 14739  0024C0  5011               	movf	(___aomod@divisor+4)^0,w,c
 14740  0024C2  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
 14741  0024C4  5012               	movf	(___aomod@divisor+5)^0,w,c
 14742  0024C6  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
 14743  0024C8  5013               	movf	(___aomod@divisor+6)^0,w,c
 14744  0024CA  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
 14745  0024CC  5014               	movf	(___aomod@divisor+7)^0,w,c
 14746  0024CE  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
 14747  0024D0                     l6002:
 14748  0024D0  90D8               	bcf	status,0,c
 14749  0024D2  3214               	rrcf	(___aomod@divisor+7)^0,f,c
 14750  0024D4  3213               	rrcf	(___aomod@divisor+6)^0,f,c
 14751  0024D6  3212               	rrcf	(___aomod@divisor+5)^0,f,c
 14752  0024D8  3211               	rrcf	(___aomod@divisor+4)^0,f,c
 14753  0024DA  3210               	rrcf	(___aomod@divisor+3)^0,f,c
 14754  0024DC  320F               	rrcf	(___aomod@divisor+2)^0,f,c
 14755  0024DE  320E               	rrcf	(___aomod@divisor+1)^0,f,c
 14756  0024E0  320D               	rrcf	___aomod@divisor^0,f,c
 14757  0024E2  2E15               	decfsz	___aomod@counter^0,f,c
 14758  0024E4  EF41  F012         	goto	l5998
 14759  0024E8                     l6006:
 14760  0024E8  5016               	movf	___aomod@sign^0,w,c
 14761  0024EA  B4D8               	btfsc	status,2,c
 14762  0024EC  EF7A  F012         	goto	u5711
 14763  0024F0  EF7C  F012         	goto	u5710
 14764  0024F4                     u5711:
 14765  0024F4  EF8C  F012         	goto	l6010
 14766  0024F8                     u5710:
 14767  0024F8  1E0C               	comf	(___aomod@dividend+7)^0,f,c
 14768  0024FA  1E0B               	comf	(___aomod@dividend+6)^0,f,c
 14769  0024FC  1E0A               	comf	(___aomod@dividend+5)^0,f,c
 14770  0024FE  1E09               	comf	(___aomod@dividend+4)^0,f,c
 14771  002500  1E08               	comf	(___aomod@dividend+3)^0,f,c
 14772  002502  1E07               	comf	(___aomod@dividend+2)^0,f,c
 14773  002504  1E06               	comf	(___aomod@dividend+1)^0,f,c
 14774  002506  6C05               	negf	___aomod@dividend^0,c
 14775  002508  0E00               	movlw	0
 14776  00250A  2206               	addwfc	(___aomod@dividend+1)^0,f,c
 14777  00250C  2207               	addwfc	(___aomod@dividend+2)^0,f,c
 14778  00250E  2208               	addwfc	(___aomod@dividend+3)^0,f,c
 14779  002510  2209               	addwfc	(___aomod@dividend+4)^0,f,c
 14780  002512  220A               	addwfc	(___aomod@dividend+5)^0,f,c
 14781  002514  220B               	addwfc	(___aomod@dividend+6)^0,f,c
 14782  002516  220C               	addwfc	(___aomod@dividend+7)^0,f,c
 14783  002518                     l6010:
 14784  002518  C005  F005         	movff	___aomod@dividend,?___aomod
 14785  00251C  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
 14786  002520  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
 14787  002524  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
 14788  002528  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
 14789  00252C  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
 14790  002530  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
 14791  002534  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
 14792  002538  0012               	return		;funcret
 14793  00253A                     __end_of___aomod:
 14794                           	opt callstack 0
 14795                           
 14796 ;; *************** function ___aodiv *****************
 14797 ;; Defined at:
 14798 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 14799 ;; Parameters:    Size  Location     Type
 14800 ;;  dividend        8    4[COMRAM] long long 
 14801 ;;  divisor         8   12[COMRAM] long long 
 14802 ;; Auto vars:     Size  Location     Type
 14803 ;;  quotient        8   22[COMRAM] long long 
 14804 ;;  sign            1   21[COMRAM] unsigned char 
 14805 ;;  counter         1   20[COMRAM] unsigned char 
 14806 ;; Return value:  Size  Location     Type
 14807 ;;                  8    4[COMRAM] long long 
 14808 ;; Registers used:
 14809 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14810 ;; Tracked objects:
 14811 ;;		On entry : 0/0
 14812 ;;		On exit  : 0/0
 14813 ;;		Unchanged: 0/0
 14814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14815 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14816 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14818 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14819 ;;Total ram usage:       26 bytes
 14820 ;; Hardware stack levels used:    1
 14821 ;; Hardware stack levels required when called:    4
 14822 ;; This function calls:
 14823 ;;		Nothing
 14824 ;; This function is called by:
 14825 ;;		_dtoa
 14826 ;; This function uses a non-reentrant model
 14827 ;;
 14828                           
 14829                           	psect	text73
 14830  0020D2                     __ptext73:
 14831                           	opt callstack 0
 14832  0020D2                     ___aodiv:
 14833                           	opt callstack 22
 14834  0020D2  0E00               	movlw	0
 14835  0020D4  6E16               	movwf	___aodiv@sign^0,c
 14836  0020D6  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
 14837  0020D8  EF72  F010         	goto	u5590
 14838  0020DC  EF70  F010         	goto	u5591
 14839  0020E0                     u5591:
 14840  0020E0  EF84  F010         	goto	l5942
 14841  0020E4                     u5590:
 14842  0020E4  1E14               	comf	(___aodiv@divisor+7)^0,f,c
 14843  0020E6  1E13               	comf	(___aodiv@divisor+6)^0,f,c
 14844  0020E8  1E12               	comf	(___aodiv@divisor+5)^0,f,c
 14845  0020EA  1E11               	comf	(___aodiv@divisor+4)^0,f,c
 14846  0020EC  1E10               	comf	(___aodiv@divisor+3)^0,f,c
 14847  0020EE  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
 14848  0020F0  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
 14849  0020F2  6C0D               	negf	___aodiv@divisor^0,c
 14850  0020F4  0E00               	movlw	0
 14851  0020F6  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
 14852  0020F8  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
 14853  0020FA  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
 14854  0020FC  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
 14855  0020FE  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
 14856  002100  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
 14857  002102  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
 14858  002104  0E01               	movlw	1
 14859  002106  6E16               	movwf	___aodiv@sign^0,c
 14860  002108                     l5942:
 14861  002108  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
 14862  00210A  EF8B  F010         	goto	u5600
 14863  00210E  EF89  F010         	goto	u5601
 14864  002112                     u5601:
 14865  002112  EF9D  F010         	goto	l5948
 14866  002116                     u5600:
 14867  002116  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
 14868  002118  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
 14869  00211A  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
 14870  00211C  1E09               	comf	(___aodiv@dividend+4)^0,f,c
 14871  00211E  1E08               	comf	(___aodiv@dividend+3)^0,f,c
 14872  002120  1E07               	comf	(___aodiv@dividend+2)^0,f,c
 14873  002122  1E06               	comf	(___aodiv@dividend+1)^0,f,c
 14874  002124  6C05               	negf	___aodiv@dividend^0,c
 14875  002126  0E00               	movlw	0
 14876  002128  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
 14877  00212A  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
 14878  00212C  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
 14879  00212E  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
 14880  002130  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
 14881  002132  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
 14882  002134  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
 14883  002136  0E01               	movlw	1
 14884  002138  1A16               	xorwf	___aodiv@sign^0,f,c
 14885  00213A                     l5948:
 14886  00213A  EE20  F017         	lfsr	2,___aodiv@quotient
 14887  00213E  0E07               	movlw	7
 14888  002140                     u5611:
 14889  002140  6ADE               	clrf	postinc2,c
 14890  002142  06E8               	decf	wreg,f,c
 14891  002144  E2FD               	bc	u5611
 14892  002146  500D               	movf	___aodiv@divisor^0,w,c
 14893  002148  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
 14894  00214A  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
 14895  00214C  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
 14896  00214E  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
 14897  002150  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
 14898  002152  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
 14899  002154  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
 14900  002156  B4D8               	btfsc	status,2,c
 14901  002158  EFB0  F010         	goto	u5621
 14902  00215C  EFB2  F010         	goto	u5620
 14903  002160                     u5621:
 14904  002160  EF04  F011         	goto	l5970
 14905  002164                     u5620:
 14906  002164  0E01               	movlw	1
 14907  002166  6E15               	movwf	___aodiv@counter^0,c
 14908  002168  EFC0  F010         	goto	l5956
 14909  00216C                     l5954:
 14910  00216C  90D8               	bcf	status,0,c
 14911  00216E  360D               	rlcf	___aodiv@divisor^0,f,c
 14912  002170  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
 14913  002172  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
 14914  002174  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
 14915  002176  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
 14916  002178  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
 14917  00217A  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
 14918  00217C  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
 14919  00217E  2A15               	incf	___aodiv@counter^0,f,c
 14920  002180                     l5956:
 14921  002180  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
 14922  002182  EFC5  F010         	goto	u5631
 14923  002186  EFC7  F010         	goto	u5630
 14924  00218A                     u5631:
 14925  00218A  EFB6  F010         	goto	l5954
 14926  00218E                     u5630:
 14927  00218E                     l5958:
 14928  00218E  90D8               	bcf	status,0,c
 14929  002190  3617               	rlcf	___aodiv@quotient^0,f,c
 14930  002192  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
 14931  002194  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
 14932  002196  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
 14933  002198  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
 14934  00219A  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
 14935  00219C  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
 14936  00219E  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
 14937  0021A0  500D               	movf	___aodiv@divisor^0,w,c
 14938  0021A2  5C05               	subwf	___aodiv@dividend^0,w,c
 14939  0021A4  500E               	movf	(___aodiv@divisor+1)^0,w,c
 14940  0021A6  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
 14941  0021A8  500F               	movf	(___aodiv@divisor+2)^0,w,c
 14942  0021AA  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
 14943  0021AC  5010               	movf	(___aodiv@divisor+3)^0,w,c
 14944  0021AE  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
 14945  0021B0  5011               	movf	(___aodiv@divisor+4)^0,w,c
 14946  0021B2  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
 14947  0021B4  5012               	movf	(___aodiv@divisor+5)^0,w,c
 14948  0021B6  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
 14949  0021B8  5013               	movf	(___aodiv@divisor+6)^0,w,c
 14950  0021BA  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
 14951  0021BC  5014               	movf	(___aodiv@divisor+7)^0,w,c
 14952  0021BE  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
 14953  0021C0  A0D8               	btfss	status,0,c
 14954  0021C2  EFE5  F010         	goto	u5641
 14955  0021C6  EFE7  F010         	goto	u5640
 14956  0021CA                     u5641:
 14957  0021CA  EFF8  F010         	goto	l5966
 14958  0021CE                     u5640:
 14959  0021CE  500D               	movf	___aodiv@divisor^0,w,c
 14960  0021D0  5E05               	subwf	___aodiv@dividend^0,f,c
 14961  0021D2  500E               	movf	(___aodiv@divisor+1)^0,w,c
 14962  0021D4  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
 14963  0021D6  500F               	movf	(___aodiv@divisor+2)^0,w,c
 14964  0021D8  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
 14965  0021DA  5010               	movf	(___aodiv@divisor+3)^0,w,c
 14966  0021DC  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
 14967  0021DE  5011               	movf	(___aodiv@divisor+4)^0,w,c
 14968  0021E0  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
 14969  0021E2  5012               	movf	(___aodiv@divisor+5)^0,w,c
 14970  0021E4  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
 14971  0021E6  5013               	movf	(___aodiv@divisor+6)^0,w,c
 14972  0021E8  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
 14973  0021EA  5014               	movf	(___aodiv@divisor+7)^0,w,c
 14974  0021EC  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
 14975  0021EE  8017               	bsf	___aodiv@quotient^0,0,c
 14976  0021F0                     l5966:
 14977  0021F0  90D8               	bcf	status,0,c
 14978  0021F2  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
 14979  0021F4  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
 14980  0021F6  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
 14981  0021F8  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
 14982  0021FA  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
 14983  0021FC  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
 14984  0021FE  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
 14985  002200  320D               	rrcf	___aodiv@divisor^0,f,c
 14986  002202  2E15               	decfsz	___aodiv@counter^0,f,c
 14987  002204  EFC7  F010         	goto	l5958
 14988  002208                     l5970:
 14989  002208  5016               	movf	___aodiv@sign^0,w,c
 14990  00220A  B4D8               	btfsc	status,2,c
 14991  00220C  EF0A  F011         	goto	u5651
 14992  002210  EF0C  F011         	goto	u5650
 14993  002214                     u5651:
 14994  002214  EF1C  F011         	goto	l5974
 14995  002218                     u5650:
 14996  002218  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
 14997  00221A  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
 14998  00221C  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
 14999  00221E  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
 15000  002220  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
 15001  002222  1E19               	comf	(___aodiv@quotient+2)^0,f,c
 15002  002224  1E18               	comf	(___aodiv@quotient+1)^0,f,c
 15003  002226  6C17               	negf	___aodiv@quotient^0,c
 15004  002228  0E00               	movlw	0
 15005  00222A  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
 15006  00222C  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
 15007  00222E  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
 15008  002230  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
 15009  002232  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
 15010  002234  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
 15011  002236  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
 15012  002238                     l5974:
 15013  002238  C017  F005         	movff	___aodiv@quotient,?___aodiv
 15014  00223C  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
 15015  002240  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
 15016  002244  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
 15017  002248  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
 15018  00224C  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
 15019  002250  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
 15020  002254  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
 15021  002258  0012               	return		;funcret
 15022  00225A                     __end_of___aodiv:
 15023                           	opt callstack 0
 15024                           
 15025 ;; *************** function _atoi *****************
 15026 ;; Defined at:
 15027 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 15028 ;; Parameters:    Size  Location     Type
 15029 ;;  s               2   11[COMRAM] PTR const unsigned char 
 15030 ;;		 -> STR_74(12), STR_72(13), STR_71(17), STR_70(15), 
 15031 ;;		 -> STR_69(33), STR_67(38), STR_66(58), STR_65(17), 
 15032 ;;		 -> STR_64(16), STR_63(4), STR_62(19), STR_61(32), 
 15033 ;;		 -> STR_60(33), STR_59(37), STR_58(44), STR_57(22), 
 15034 ;;		 -> STR_56(75), STR_55(53), STR_54(57), STR_53(54), 
 15035 ;;		 -> STR_52(52), STR_51(40), STR_50(30), STR_49(43), 
 15036 ;;		 -> STR_48(73), STR_47(42), STR_46(36), STR_45(34), 
 15037 ;;		 -> STR_42(42), STR_41(22), STR_40(21), STR_39(20), 
 15038 ;;		 -> STR_38(19), STR_37(40), STR_27(32), STR_26(37), 
 15039 ;;		 -> STR_25(16), STR_24(24), STR_23(4), STR_22(25), 
 15040 ;;		 -> STR_21(28), STR_20(29), STR_19(26), STR_18(26), 
 15041 ;;		 -> STR_17(24), STR_16(22), STR_15(22), STR_14(26), 
 15042 ;;		 -> STR_13(36), STR_12(4), STR_11(23), STR_10(34), 
 15043 ;;		 -> STR_9(28), STR_8(54), STR_7(27), STR_6(16), 
 15044 ;;		 -> STR_4(19), STR_3(28), STR_2(31), STR_1(21), 
 15045 ;; Auto vars:     Size  Location     Type
 15046 ;;  n               2   24[COMRAM] int 
 15047 ;;  neg             2   17[COMRAM] int 
 15048 ;; Return value:  Size  Location     Type
 15049 ;;                  2   11[COMRAM] int 
 15050 ;; Registers used:
 15051 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15052 ;; Tracked objects:
 15053 ;;		On entry : 0/0
 15054 ;;		On exit  : 0/0
 15055 ;;		Unchanged: 0/0
 15056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15057 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15058 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15059 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15060 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15061 ;;Total ram usage:       15 bytes
 15062 ;; Hardware stack levels used:    1
 15063 ;; Hardware stack levels required when called:    5
 15064 ;; This function calls:
 15065 ;;		___wmul
 15066 ;;		_isdigit
 15067 ;;		_isspace
 15068 ;; This function is called by:
 15069 ;;		_vfpfcnvrt
 15070 ;; This function uses a non-reentrant model
 15071 ;;
 15072                           
 15073                           	psect	text74
 15074  001F38                     __ptext74:
 15075                           	opt callstack 0
 15076  001F38                     _atoi:
 15077                           	opt callstack 22
 15078  001F38  0E00               	movlw	0
 15079  001F3A  6E1A               	movwf	(atoi@n+1)^0,c
 15080  001F3C  0E00               	movlw	0
 15081  001F3E  6E19               	movwf	atoi@n^0,c
 15082  001F40  0E00               	movlw	0
 15083  001F42  6E13               	movwf	(atoi@neg+1)^0,c
 15084  001F44  0E00               	movlw	0
 15085  001F46  6E12               	movwf	atoi@neg^0,c
 15086  001F48  EFA8  F00F         	goto	l6274
 15087  001F4C                     l6272:
 15088  001F4C  4A0C               	infsnz	atoi@s^0,f,c
 15089  001F4E  2A0D               	incf	(atoi@s+1)^0,f,c
 15090  001F50                     l6274:
 15091  001F50  0E01               	movlw	1
 15092  001F52  6E18               	movwf	_atoi$2066^0,c
 15093  001F54  C00C  FFF6         	movff	atoi@s,tblptrl
 15094  001F58  C00D  FFF7         	movff	atoi@s+1,tblptrh
 15095  001F5C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15096  001F5C  6AF8               	clrf	tblptru,c
 15097  001F5E                     	endif
 15098  001F5E                     	if	0	;tblptru may be non-zero
 15099  001F5E                     	endif
 15100  001F5E  0008               	tblrd		*
 15101  001F60  50F5               	movf	tablat,w,c
 15102  001F62  0A20               	xorlw	32
 15103  001F64  B4D8               	btfsc	status,2,c
 15104  001F66  EFB7  F00F         	goto	u6301
 15105  001F6A  EFB9  F00F         	goto	u6300
 15106  001F6E                     u6301:
 15107  001F6E  EFD7  F00F         	goto	l6282
 15108  001F72                     u6300:
 15109  001F72  0EF7               	movlw	247
 15110  001F74  6E0E               	movwf	??_atoi^0,c
 15111  001F76  0EFF               	movlw	255
 15112  001F78  6E0F               	movwf	(??_atoi+1)^0,c
 15113  001F7A  C00C  FFF6         	movff	atoi@s,tblptrl
 15114  001F7E  C00D  FFF7         	movff	atoi@s+1,tblptrh
 15115  001F82                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15116  001F82  6AF8               	clrf	tblptru,c
 15117  001F84                     	endif
 15118  001F84                     	if	0	;tblptru may be non-zero
 15119  001F84                     	endif
 15120  001F84  0008               	tblrd		*
 15121  001F86  50F5               	movf	tablat,w,c
 15122  001F88  6E10               	movwf	(??_atoi+2)^0,c
 15123  001F8A  6A11               	clrf	(??_atoi+3)^0,c
 15124  001F8C  500E               	movf	??_atoi^0,w,c
 15125  001F8E  2610               	addwf	(??_atoi+2)^0,f,c
 15126  001F90  500F               	movf	(??_atoi+1)^0,w,c
 15127  001F92  2211               	addwfc	(??_atoi+3)^0,f,c
 15128  001F94  5011               	movf	(??_atoi+3)^0,w,c
 15129  001F96  E109               	bnz	u6310
 15130  001F98  0E05               	movlw	5
 15131  001F9A  5C10               	subwf	(??_atoi+2)^0,w,c
 15132  001F9C  A0D8               	btfss	status,0,c
 15133  001F9E  EFD3  F00F         	goto	u6311
 15134  001FA2  EFD5  F00F         	goto	u6310
 15135  001FA6                     u6311:
 15136  001FA6  EFD7  F00F         	goto	l6282
 15137  001FAA                     u6310:
 15138  001FAA  0E00               	movlw	0
 15139  001FAC  6E18               	movwf	_atoi$2066^0,c
 15140  001FAE                     l6282:
 15141  001FAE  C018  F014         	movff	_atoi$2066,_atoi$2065
 15142  001FB2  6A15               	clrf	(_atoi$2065+1)^0,c
 15143  001FB4  5014               	movf	_atoi$2065^0,w,c
 15144  001FB6  1015               	iorwf	(_atoi$2065+1)^0,w,c
 15145  001FB8  A4D8               	btfss	status,2,c
 15146  001FBA  EFE1  F00F         	goto	u6321
 15147  001FBE  EFE3  F00F         	goto	u6320
 15148  001FC2                     u6321:
 15149  001FC2  EFA6  F00F         	goto	l6272
 15150  001FC6                     u6320:
 15151  001FC6  EFED  F00F         	goto	l6292
 15152  001FCA                     l6288:
 15153  001FCA  0E00               	movlw	0
 15154  001FCC  6E13               	movwf	(atoi@neg+1)^0,c
 15155  001FCE  0E01               	movlw	1
 15156  001FD0  6E12               	movwf	atoi@neg^0,c
 15157  001FD2                     l6290:
 15158  001FD2  4A0C               	infsnz	atoi@s^0,f,c
 15159  001FD4  2A0D               	incf	(atoi@s+1)^0,f,c
 15160  001FD6  EF24  F010         	goto	l6298
 15161  001FDA                     l6292:
 15162  001FDA  C00C  FFF6         	movff	atoi@s,tblptrl
 15163  001FDE  C00D  FFF7         	movff	atoi@s+1,tblptrh
 15164  001FE2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15165  001FE2  6AF8               	clrf	tblptru,c
 15166  001FE4                     	endif
 15167  001FE4                     	if	0	;tblptru may be non-zero
 15168  001FE4                     	endif
 15169  001FE4  0008               	tblrd		*
 15170  001FE6  50F5               	movf	tablat,w,c
 15171  001FE8  6E0E               	movwf	??_atoi^0,c
 15172  001FEA  6A0F               	clrf	(??_atoi+1)^0,c
 15173                           
 15174                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15175                           ; Switch size 1, requested type "simple"
 15176                           ; Number of cases is 1, Range of values is 0 to 0
 15177                           ; switch strategies available:
 15178                           ; Name         Instructions Cycles
 15179                           ; simple_byte            4     3 (average)
 15180                           ;	Chosen strategy is simple_byte
 15181  001FEC  500F               	movf	(??_atoi+1)^0,w,c
 15182  001FEE  0A00               	xorlw	0	; case 0
 15183  001FF0  B4D8               	btfsc	status,2,c
 15184  001FF2  EFFD  F00F         	goto	l7622
 15185  001FF6  EF24  F010         	goto	l6298
 15186  001FFA                     l7622:
 15187                           
 15188                           ; Switch size 1, requested type "simple"
 15189                           ; Number of cases is 2, Range of values is 43 to 45
 15190                           ; switch strategies available:
 15191                           ; Name         Instructions Cycles
 15192                           ; simple_byte            7     4 (average)
 15193                           ;	Chosen strategy is simple_byte
 15194  001FFA  500E               	movf	??_atoi^0,w,c
 15195  001FFC  0A2B               	xorlw	43	; case 43
 15196  001FFE  B4D8               	btfsc	status,2,c
 15197  002000  EFE9  F00F         	goto	l6290
 15198  002004  0A06               	xorlw	6	; case 45
 15199  002006  B4D8               	btfsc	status,2,c
 15200  002008  EFE5  F00F         	goto	l6288
 15201  00200C  EF24  F010         	goto	l6298
 15202  002010                     l6294:
 15203  002010  C019  F005         	movff	atoi@n,___wmul@multiplier
 15204  002014  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
 15205  002018  0E00               	movlw	0
 15206  00201A  6E08               	movwf	(___wmul@multiplicand+1)^0,c
 15207  00201C  0E0A               	movlw	10
 15208  00201E  6E07               	movwf	___wmul@multiplicand^0,c
 15209  002020  EC9A  F01F         	call	___wmul	;wreg free
 15210  002024  C00C  FFF6         	movff	atoi@s,tblptrl
 15211  002028  C00D  FFF7         	movff	atoi@s+1,tblptrh
 15212  00202C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15213  00202C  6AF8               	clrf	tblptru,c
 15214  00202E                     	endif
 15215  00202E                     	if	0	;tblptru may be non-zero
 15216  00202E                     	endif
 15217  00202E  0008               	tblrd		*
 15218  002030  50F5               	movf	tablat,w,c
 15219  002032  5E05               	subwf	?___wmul^0,f,c
 15220  002034  0E00               	movlw	0
 15221  002036  5A06               	subwfb	(?___wmul+1)^0,f,c
 15222  002038  0E30               	movlw	48
 15223  00203A  2405               	addwf	?___wmul^0,w,c
 15224  00203C  6E19               	movwf	atoi@n^0,c
 15225  00203E  0E00               	movlw	0
 15226  002040  2006               	addwfc	(?___wmul+1)^0,w,c
 15227  002042  6E1A               	movwf	(atoi@n+1)^0,c
 15228  002044  EFE9  F00F         	goto	l6290
 15229  002048                     l6298:
 15230  002048  0ED0               	movlw	208
 15231  00204A  6E0E               	movwf	??_atoi^0,c
 15232  00204C  0EFF               	movlw	255
 15233  00204E  6E0F               	movwf	(??_atoi+1)^0,c
 15234  002050  C00C  FFF6         	movff	atoi@s,tblptrl
 15235  002054  C00D  FFF7         	movff	atoi@s+1,tblptrh
 15236  002058                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15237  002058  6AF8               	clrf	tblptru,c
 15238  00205A                     	endif
 15239  00205A                     	if	0	;tblptru may be non-zero
 15240  00205A                     	endif
 15241  00205A  0008               	tblrd		*
 15242  00205C  50F5               	movf	tablat,w,c
 15243  00205E  6E10               	movwf	(??_atoi+2)^0,c
 15244  002060  6A11               	clrf	(??_atoi+3)^0,c
 15245  002062  500E               	movf	??_atoi^0,w,c
 15246  002064  2610               	addwf	(??_atoi+2)^0,f,c
 15247  002066  500F               	movf	(??_atoi+1)^0,w,c
 15248  002068  2211               	addwfc	(??_atoi+3)^0,f,c
 15249  00206A  5011               	movf	(??_atoi+3)^0,w,c
 15250  00206C  E10A               	bnz	u6330
 15251  00206E  0E0A               	movlw	10
 15252  002070  5C10               	subwf	(??_atoi+2)^0,w,c
 15253  002072  A0D8               	btfss	status,0,c
 15254  002074  EF3E  F010         	goto	u6331
 15255  002078  EF41  F010         	goto	u6330
 15256  00207C                     u6331:
 15257  00207C  0E01               	movlw	1
 15258  00207E  EF42  F010         	goto	u6340
 15259  002082                     u6330:
 15260  002082  0E00               	movlw	0
 15261  002084                     u6340:
 15262  002084  6E16               	movwf	_atoi$2067^0,c
 15263  002086  6A17               	clrf	(_atoi$2067+1)^0,c
 15264  002088  5016               	movf	_atoi$2067^0,w,c
 15265  00208A  1017               	iorwf	(_atoi$2067+1)^0,w,c
 15266  00208C  A4D8               	btfss	status,2,c
 15267  00208E  EF4B  F010         	goto	u6351
 15268  002092  EF4D  F010         	goto	u6350
 15269  002096                     u6351:
 15270  002096  EF08  F010         	goto	l6294
 15271  00209A                     u6350:
 15272  00209A  5012               	movf	atoi@neg^0,w,c
 15273  00209C  1013               	iorwf	(atoi@neg+1)^0,w,c
 15274  00209E  A4D8               	btfss	status,2,c
 15275  0020A0  EF54  F010         	goto	u6361
 15276  0020A4  EF56  F010         	goto	u6360
 15277  0020A8                     u6361:
 15278  0020A8  EF64  F010         	goto	l1854
 15279  0020AC                     u6360:
 15280  0020AC  C019  F00E         	movff	atoi@n,??_atoi
 15281  0020B0  C01A  F00F         	movff	atoi@n+1,??_atoi+1
 15282  0020B4  1E0E               	comf	??_atoi^0,f,c
 15283  0020B6  1E0F               	comf	(??_atoi+1)^0,f,c
 15284  0020B8  4A0E               	infsnz	??_atoi^0,f,c
 15285  0020BA  2A0F               	incf	(??_atoi+1)^0,f,c
 15286  0020BC  C00E  F00C         	movff	??_atoi,?_atoi
 15287  0020C0  C00F  F00D         	movff	??_atoi+1,?_atoi+1
 15288  0020C4  EF68  F010         	goto	l1857
 15289  0020C8                     l1854:
 15290  0020C8  C019  F00C         	movff	atoi@n,?_atoi
 15291  0020CC  C01A  F00D         	movff	atoi@n+1,?_atoi+1
 15292  0020D0                     l1857:
 15293  0020D0  0012               	return		;funcret
 15294  0020D2                     __end_of_atoi:
 15295                           	opt callstack 0
 15296                           
 15297 ;; *************** function _isspace *****************
 15298 ;; Defined at:
 15299 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 15300 ;; Parameters:    Size  Location     Type
 15301 ;;  c               2    4[COMRAM] int 
 15302 ;; Auto vars:     Size  Location     Type
 15303 ;;		None
 15304 ;; Return value:  Size  Location     Type
 15305 ;;                  2    4[COMRAM] int 
 15306 ;; Registers used:
 15307 ;;		wreg, status,2, status,0
 15308 ;; Tracked objects:
 15309 ;;		On entry : 0/0
 15310 ;;		On exit  : 0/0
 15311 ;;		Unchanged: 0/0
 15312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15315 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15316 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15317 ;;Total ram usage:        7 bytes
 15318 ;; Hardware stack levels used:    1
 15319 ;; Hardware stack levels required when called:    4
 15320 ;; This function calls:
 15321 ;;		Nothing
 15322 ;; This function is called by:
 15323 ;;		_atoi
 15324 ;; This function uses a non-reentrant model
 15325 ;;
 15326                           
 15327                           	psect	text75
 15328  003A24                     __ptext75:
 15329                           	opt callstack 0
 15330  003A24                     _isspace:
 15331                           	opt callstack 22
 15332  003A24  0E01               	movlw	1
 15333  003A26  6E0B               	movwf	_isspace$2092^0,c
 15334  003A28  0E20               	movlw	32
 15335  003A2A  1805               	xorwf	isspace@c^0,w,c
 15336  003A2C  1006               	iorwf	(isspace@c+1)^0,w,c
 15337  003A2E  B4D8               	btfsc	status,2,c
 15338  003A30  EF1C  F01D         	goto	u5791
 15339  003A34  EF1E  F01D         	goto	u5790
 15340  003A38                     u5791:
 15341  003A38  EF37  F01D         	goto	l6060
 15342  003A3C                     u5790:
 15343  003A3C  0EF7               	movlw	247
 15344  003A3E  6E07               	movwf	??_isspace^0,c
 15345  003A40  0EFF               	movlw	255
 15346  003A42  6E08               	movwf	(??_isspace+1)^0,c
 15347  003A44  C005  F009         	movff	isspace@c,??_isspace+2
 15348  003A48  C006  F00A         	movff	isspace@c+1,??_isspace+3
 15349  003A4C  5007               	movf	??_isspace^0,w,c
 15350  003A4E  2609               	addwf	(??_isspace+2)^0,f,c
 15351  003A50  5008               	movf	(??_isspace+1)^0,w,c
 15352  003A52  220A               	addwfc	(??_isspace+3)^0,f,c
 15353  003A54  500A               	movf	(??_isspace+3)^0,w,c
 15354  003A56  E109               	bnz	u5800
 15355  003A58  0E05               	movlw	5
 15356  003A5A  5C09               	subwf	(??_isspace+2)^0,w,c
 15357  003A5C  A0D8               	btfss	status,0,c
 15358  003A5E  EF33  F01D         	goto	u5801
 15359  003A62  EF35  F01D         	goto	u5800
 15360  003A66                     u5801:
 15361  003A66  EF37  F01D         	goto	l6060
 15362  003A6A                     u5800:
 15363  003A6A  0E00               	movlw	0
 15364  003A6C  6E0B               	movwf	_isspace$2092^0,c
 15365  003A6E                     l6060:
 15366  003A6E  C00B  F005         	movff	_isspace$2092,?_isspace
 15367  003A72  6A06               	clrf	(?_isspace+1)^0,c
 15368  003A74  0012               	return		;funcret
 15369  003A76                     __end_of_isspace:
 15370                           	opt callstack 0
 15371                           
 15372 ;; *************** function _isdigit *****************
 15373 ;; Defined at:
 15374 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 15375 ;; Parameters:    Size  Location     Type
 15376 ;;  c               2    4[COMRAM] int 
 15377 ;; Auto vars:     Size  Location     Type
 15378 ;;		None
 15379 ;; Return value:  Size  Location     Type
 15380 ;;                  2    4[COMRAM] int 
 15381 ;; Registers used:
 15382 ;;		wreg, status,2, status,0
 15383 ;; Tracked objects:
 15384 ;;		On entry : 0/0
 15385 ;;		On exit  : 0/0
 15386 ;;		Unchanged: 0/0
 15387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15388 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15390 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15391 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15392 ;;Total ram usage:        6 bytes
 15393 ;; Hardware stack levels used:    1
 15394 ;; Hardware stack levels required when called:    4
 15395 ;; This function calls:
 15396 ;;		Nothing
 15397 ;; This function is called by:
 15398 ;;		_vfpfcnvrt
 15399 ;;		_atoi
 15400 ;; This function uses a non-reentrant model
 15401 ;;
 15402                           
 15403                           	psect	text76
 15404  003E56                     __ptext76:
 15405                           	opt callstack 0
 15406  003E56                     _isdigit:
 15407                           	opt callstack 23
 15408  003E56  0ED0               	movlw	208
 15409  003E58  6E07               	movwf	??_isdigit^0,c
 15410  003E5A  0EFF               	movlw	255
 15411  003E5C  6E08               	movwf	(??_isdigit+1)^0,c
 15412  003E5E  C005  F009         	movff	isdigit@c,??_isdigit+2
 15413  003E62  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
 15414  003E66  5007               	movf	??_isdigit^0,w,c
 15415  003E68  2609               	addwf	(??_isdigit+2)^0,f,c
 15416  003E6A  5008               	movf	(??_isdigit+1)^0,w,c
 15417  003E6C  220A               	addwfc	(??_isdigit+3)^0,f,c
 15418  003E6E  500A               	movf	(??_isdigit+3)^0,w,c
 15419  003E70  E10A               	bnz	u5570
 15420  003E72  0E0A               	movlw	10
 15421  003E74  5C09               	subwf	(??_isdigit+2)^0,w,c
 15422  003E76  A0D8               	btfss	status,0,c
 15423  003E78  EF40  F01F         	goto	u5571
 15424  003E7C  EF43  F01F         	goto	u5570
 15425  003E80                     u5571:
 15426  003E80  0E01               	movlw	1
 15427  003E82  EF44  F01F         	goto	u5580
 15428  003E86                     u5570:
 15429  003E86  0E00               	movlw	0
 15430  003E88                     u5580:
 15431  003E88  6E05               	movwf	?_isdigit^0,c
 15432  003E8A  6A06               	clrf	(?_isdigit+1)^0,c
 15433  003E8C  0012               	return		;funcret
 15434  003E8E                     __end_of_isdigit:
 15435                           	opt callstack 0
 15436                           
 15437 ;; *************** function ___wmul *****************
 15438 ;; Defined at:
 15439 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 15440 ;; Parameters:    Size  Location     Type
 15441 ;;  multiplier      2    4[COMRAM] unsigned int 
 15442 ;;  multiplicand    2    6[COMRAM] unsigned int 
 15443 ;; Auto vars:     Size  Location     Type
 15444 ;;  product         2    8[COMRAM] unsigned int 
 15445 ;; Return value:  Size  Location     Type
 15446 ;;                  2    4[COMRAM] unsigned int 
 15447 ;; Registers used:
 15448 ;;		wreg, status,2, status,0, prodl, prodh
 15449 ;; Tracked objects:
 15450 ;;		On entry : 0/0
 15451 ;;		On exit  : 0/0
 15452 ;;		Unchanged: 0/0
 15453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15454 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15455 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15457 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15458 ;;Total ram usage:        6 bytes
 15459 ;; Hardware stack levels used:    1
 15460 ;; Hardware stack levels required when called:    4
 15461 ;; This function calls:
 15462 ;;		Nothing
 15463 ;; This function is called by:
 15464 ;;		_atoi
 15465 ;; This function uses a non-reentrant model
 15466 ;;
 15467                           
 15468                           	psect	text77
 15469  003F34                     __ptext77:
 15470                           	opt callstack 0
 15471  003F34                     ___wmul:
 15472                           	opt callstack 22
 15473  003F34  5005               	movf	___wmul@multiplier^0,w,c
 15474  003F36  0207               	mulwf	___wmul@multiplicand^0,c
 15475  003F38  CFF3 F009          	movff	prodl,___wmul@product
 15476  003F3C  CFF4 F00A          	movff	prodh,___wmul@product+1
 15477  003F40  5005               	movf	___wmul@multiplier^0,w,c
 15478  003F42  0208               	mulwf	(___wmul@multiplicand+1)^0,c
 15479  003F44  50F3               	movf	243,w,c
 15480  003F46  260A               	addwf	(___wmul@product+1)^0,f,c
 15481  003F48  5006               	movf	(___wmul@multiplier+1)^0,w,c
 15482  003F4A  0207               	mulwf	___wmul@multiplicand^0,c
 15483  003F4C  50F3               	movf	243,w,c
 15484  003F4E  260A               	addwf	(___wmul@product+1)^0,f,c
 15485  003F50  C009  F005         	movff	___wmul@product,?___wmul
 15486  003F54  C00A  F006         	movff	___wmul@product+1,?___wmul+1
 15487  003F58  0012               	return		;funcret
 15488  003F5A                     __end_of___wmul:
 15489                           	opt callstack 0
 15490                           
 15491 ;; *************** function _EUSART2_is_tx_ready *****************
 15492 ;; Defined at:
 15493 ;;		line 134 in file "mcc_generated_files/eusart2.c"
 15494 ;; Parameters:    Size  Location     Type
 15495 ;;		None
 15496 ;; Auto vars:     Size  Location     Type
 15497 ;;		None
 15498 ;; Return value:  Size  Location     Type
 15499 ;;                  1    wreg      _Bool 
 15500 ;; Registers used:
 15501 ;;		wreg, status,2
 15502 ;; Tracked objects:
 15503 ;;		On entry : 0/0
 15504 ;;		On exit  : 0/0
 15505 ;;		Unchanged: 0/0
 15506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15511 ;;Total ram usage:        0 bytes
 15512 ;; Hardware stack levels used:    1
 15513 ;; Hardware stack levels required when called:    4
 15514 ;; This function calls:
 15515 ;;		Nothing
 15516 ;; This function is called by:
 15517 ;;		_PrintModRespon
 15518 ;; This function uses a non-reentrant model
 15519 ;;
 15520                           
 15521                           	psect	text78
 15522  004008                     __ptext78:
 15523                           	opt callstack 0
 15524  004008                     _EUSART2_is_tx_ready:
 15525                           	opt callstack 25
 15526  004008                     
 15527                           ;mcc_generated_files/eusart2.c: 136:     return (eusart2TxBufferRemaining ? 1 : 0);
 15528  004008  0100               	movlb	0	; () banked
 15529  00400A  51FF               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 15530  00400C  A4D8               	btfss	status,2,c
 15531  00400E  EF0B  F020         	goto	u6701
 15532  004012  EF0E  F020         	goto	u6700
 15533  004016                     u6701:
 15534  004016  0E01               	movlw	1
 15535  004018  EF0F  F020         	goto	u6710
 15536  00401C                     u6700:
 15537  00401C  0E00               	movlw	0
 15538  00401E                     u6710:
 15539  00401E                     
 15540                           ; BSR set to: 0
 15541  00401E  0012               	return		;funcret
 15542  004020                     __end_of_EUSART2_is_tx_ready:
 15543                           	opt callstack 0
 15544                           
 15545 ;; *************** function _EUSART2_is_tx_done *****************
 15546 ;; Defined at:
 15547 ;;		line 144 in file "mcc_generated_files/eusart2.c"
 15548 ;; Parameters:    Size  Location     Type
 15549 ;;		None
 15550 ;; Auto vars:     Size  Location     Type
 15551 ;;		None
 15552 ;; Return value:  Size  Location     Type
 15553 ;;                  1    wreg      _Bool 
 15554 ;; Registers used:
 15555 ;;		wreg
 15556 ;; Tracked objects:
 15557 ;;		On entry : 0/0
 15558 ;;		On exit  : 0/0
 15559 ;;		Unchanged: 0/0
 15560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15565 ;;Total ram usage:        0 bytes
 15566 ;; Hardware stack levels used:    1
 15567 ;; Hardware stack levels required when called:    4
 15568 ;; This function calls:
 15569 ;;		Nothing
 15570 ;; This function is called by:
 15571 ;;		_PrintModRespon
 15572 ;; This function uses a non-reentrant model
 15573 ;;
 15574                           
 15575                           	psect	text79
 15576  004020                     __ptext79:
 15577                           	opt callstack 0
 15578  004020                     _EUSART2_is_tx_done:
 15579                           	opt callstack 25
 15580  004020                     
 15581                           ;mcc_generated_files/eusart2.c: 146:     return TX2STAbits.TRMT;
 15582  004020  010E               	movlb	14	; () banked
 15583  004022  B39E               	btfsc	158,1,b	;volatile
 15584  004024  EF16  F020         	goto	u6721
 15585  004028  EF19  F020         	goto	u6720
 15586  00402C                     u6721:
 15587  00402C  0E01               	movlw	1
 15588  00402E  EF1A  F020         	goto	u6726
 15589  004032                     u6720:
 15590  004032  0E00               	movlw	0
 15591  004034                     u6726:
 15592  004034                     
 15593                           ; BSR set to: 14
 15594  004034  0012               	return		;funcret
 15595  004036                     __end_of_EUSART2_is_tx_done:
 15596                           	opt callstack 0
 15597                           
 15598 ;; *************** function _ClearModbusRespon *****************
 15599 ;; Defined at:
 15600 ;;		line 388 in file "Modbus.c"
 15601 ;; Parameters:    Size  Location     Type
 15602 ;;		None
 15603 ;; Auto vars:     Size  Location     Type
 15604 ;;  i               2    4[COMRAM] int 
 15605 ;; Return value:  Size  Location     Type
 15606 ;;                  1    wreg      void 
 15607 ;; Registers used:
 15608 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15609 ;; Tracked objects:
 15610 ;;		On entry : 0/0
 15611 ;;		On exit  : 0/0
 15612 ;;		Unchanged: 0/0
 15613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15615 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15617 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15618 ;;Total ram usage:        2 bytes
 15619 ;; Hardware stack levels used:    1
 15620 ;; Hardware stack levels required when called:    4
 15621 ;; This function calls:
 15622 ;;		Nothing
 15623 ;; This function is called by:
 15624 ;;		_main
 15625 ;; This function uses a non-reentrant model
 15626 ;;
 15627                           
 15628                           	psect	text80
 15629  003C70                     __ptext80:
 15630                           	opt callstack 0
 15631  003C70                     _ClearModbusRespon:
 15632                           	opt callstack 26
 15633  003C70                     
 15634                           ;Modbus.c: 389:     int i = 0;
 15635  003C70  0E00               	movlw	0
 15636  003C72  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
 15637  003C74  0E00               	movlw	0
 15638  003C76  6E05               	movwf	ClearModbusRespon@i^0,c
 15639                           
 15640                           ;Modbus.c: 390:     for(i=0; i<32; i++ ){
 15641  003C78  0E00               	movlw	0
 15642  003C7A  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
 15643  003C7C  0E00               	movlw	0
 15644  003C7E  6E05               	movwf	ClearModbusRespon@i^0,c
 15645  003C80                     l7110:
 15646                           
 15647                           ;Modbus.c: 391:         MBRespon[i] = 0xFF;
 15648  003C80  0EA0               	movlw	low _MBRespon
 15649  003C82  2405               	addwf	ClearModbusRespon@i^0,w,c
 15650  003C84  6ED9               	movwf	fsr2l,c
 15651  003C86  0E02               	movlw	high _MBRespon
 15652  003C88  2006               	addwfc	(ClearModbusRespon@i+1)^0,w,c
 15653  003C8A  6EDA               	movwf	fsr2h,c
 15654  003C8C  0EFF               	movlw	255
 15655  003C8E  6EDF               	movwf	indf2,c
 15656  003C90                     
 15657                           ;Modbus.c: 392:     }
 15658  003C90  4A05               	infsnz	ClearModbusRespon@i^0,f,c
 15659  003C92  2A06               	incf	(ClearModbusRespon@i+1)^0,f,c
 15660  003C94  BE06               	btfsc	(ClearModbusRespon@i+1)^0,7,c
 15661  003C96  EF56  F01E         	goto	u7331
 15662  003C9A  5006               	movf	(ClearModbusRespon@i+1)^0,w,c
 15663  003C9C  E109               	bnz	u7330
 15664  003C9E  0E20               	movlw	32
 15665  003CA0  5C05               	subwf	ClearModbusRespon@i^0,w,c
 15666  003CA2  A0D8               	btfss	status,0,c
 15667  003CA4  EF56  F01E         	goto	u7331
 15668  003CA8  EF58  F01E         	goto	u7330
 15669  003CAC                     u7331:
 15670  003CAC  EF40  F01E         	goto	l7110
 15671  003CB0                     u7330:
 15672  003CB0  0012               	return		;funcret
 15673  003CB2                     __end_of_ClearModbusRespon:
 15674                           	opt callstack 0
 15675                           
 15676 ;; *************** function _ClearModbusData *****************
 15677 ;; Defined at:
 15678 ;;		line 48 in file "Modbus.c"
 15679 ;; Parameters:    Size  Location     Type
 15680 ;;		None
 15681 ;; Auto vars:     Size  Location     Type
 15682 ;;  i               2    4[COMRAM] int 
 15683 ;; Return value:  Size  Location     Type
 15684 ;;                  1    wreg      void 
 15685 ;; Registers used:
 15686 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15687 ;; Tracked objects:
 15688 ;;		On entry : 0/0
 15689 ;;		On exit  : 0/0
 15690 ;;		Unchanged: 0/0
 15691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15693 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15695 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15696 ;;Total ram usage:        2 bytes
 15697 ;; Hardware stack levels used:    1
 15698 ;; Hardware stack levels required when called:    4
 15699 ;; This function calls:
 15700 ;;		Nothing
 15701 ;; This function is called by:
 15702 ;;		_main
 15703 ;; This function uses a non-reentrant model
 15704 ;;
 15705                           
 15706                           	psect	text81
 15707  003AC6                     __ptext81:
 15708                           	opt callstack 0
 15709  003AC6                     _ClearModbusData:
 15710                           	opt callstack 26
 15711  003AC6                     
 15712                           ;Modbus.c: 49:     int i = 0;
 15713  003AC6  0E00               	movlw	0
 15714  003AC8  6E06               	movwf	(ClearModbusData@i+1)^0,c
 15715  003ACA  0E00               	movlw	0
 15716  003ACC  6E05               	movwf	ClearModbusData@i^0,c
 15717                           
 15718                           ;Modbus.c: 50:     for(i=0; i<99; i++ ){
 15719  003ACE  0E00               	movlw	0
 15720  003AD0  6E06               	movwf	(ClearModbusData@i+1)^0,c
 15721  003AD2  0E00               	movlw	0
 15722  003AD4  6E05               	movwf	ClearModbusData@i^0,c
 15723  003AD6                     l7346:
 15724                           
 15725                           ;Modbus.c: 51:         ModbusData[i] = 0xFF;
 15726  003AD6  0E00               	movlw	low _ModbusData
 15727  003AD8  2405               	addwf	ClearModbusData@i^0,w,c
 15728  003ADA  6ED9               	movwf	fsr2l,c
 15729  003ADC  0E02               	movlw	high _ModbusData
 15730  003ADE  2006               	addwfc	(ClearModbusData@i+1)^0,w,c
 15731  003AE0  6EDA               	movwf	fsr2h,c
 15732  003AE2  0EFF               	movlw	255
 15733  003AE4  6EDF               	movwf	indf2,c
 15734  003AE6                     
 15735                           ;Modbus.c: 52:     }
 15736  003AE6  4A05               	infsnz	ClearModbusData@i^0,f,c
 15737  003AE8  2A06               	incf	(ClearModbusData@i+1)^0,f,c
 15738  003AEA  BE06               	btfsc	(ClearModbusData@i+1)^0,7,c
 15739  003AEC  EF81  F01D         	goto	u7541
 15740  003AF0  5006               	movf	(ClearModbusData@i+1)^0,w,c
 15741  003AF2  E109               	bnz	u7540
 15742  003AF4  0E63               	movlw	99
 15743  003AF6  5C05               	subwf	ClearModbusData@i^0,w,c
 15744  003AF8  A0D8               	btfss	status,0,c
 15745  003AFA  EF81  F01D         	goto	u7541
 15746  003AFE  EF83  F01D         	goto	u7540
 15747  003B02                     u7541:
 15748  003B02  EF6B  F01D         	goto	l7346
 15749  003B06                     u7540:
 15750  003B06                     
 15751                           ;Modbus.c: 54:     ModDataCnt = 0;
 15752  003B06  0E00               	movlw	0
 15753  003B08  0100               	movlb	0	; () banked
 15754  003B0A  6FD4               	movwf	(_ModDataCnt+1)& (0+255),b
 15755  003B0C  0E00               	movlw	0
 15756  003B0E  6FD3               	movwf	_ModDataCnt& (0+255),b
 15757  003B10                     
 15758                           ; BSR set to: 0
 15759  003B10  0012               	return		;funcret
 15760  003B12                     __end_of_ClearModbusData:
 15761                           	opt callstack 0
 15762                           
 15763 ;; *************** function _INTERRUPT_InterruptManager *****************
 15764 ;; Defined at:
 15765 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 15766 ;; Parameters:    Size  Location     Type
 15767 ;;		None
 15768 ;; Auto vars:     Size  Location     Type
 15769 ;;		None
 15770 ;; Return value:  Size  Location     Type
 15771 ;;                  1    wreg      void 
 15772 ;; Registers used:
 15773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15774 ;; Tracked objects:
 15775 ;;		On entry : 0/0
 15776 ;;		On exit  : 0/0
 15777 ;;		Unchanged: 0/0
 15778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15781 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15782 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15783 ;;Total ram usage:        4 bytes
 15784 ;; Hardware stack levels used:    1
 15785 ;; Hardware stack levels required when called:    3
 15786 ;; This function calls:
 15787 ;;		Absolute function
 15788 ;;		_EUSART1_Receive_ISR
 15789 ;;		_EUSART1_Transmit_ISR
 15790 ;;		_EUSART2_Receive_ISR
 15791 ;;		_EUSART2_Transmit_ISR
 15792 ;; This function is called by:
 15793 ;;		Interrupt level 2
 15794 ;; This function uses a non-reentrant model
 15795 ;;
 15796                           
 15797                           	psect	intcode
 15798  000008                     __pintcode:
 15799                           	opt callstack 0
 15800  000008                     _INTERRUPT_InterruptManager:
 15801                           	opt callstack 15
 15802                           
 15803                           ; BSR set to: 0
 15804                           ;incstack = 0
 15805  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15806  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 15807  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 15808  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 15809  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 15810  00001A                     
 15811                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 15812  00001A  ACF2               	btfss	242,6,c	;volatile
 15813  00001C  EF12  F000         	goto	i2u518_41
 15814  000020  EF14  F000         	goto	i2u518_40
 15815  000024                     i2u518_41:
 15816  000024  EF89  F000         	goto	i2l159
 15817  000028                     i2u518_40:
 15818  000028                     
 15819                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 15820  000028  010E               	movlb	14	; () banked
 15821  00002A  ADC5               	btfss	197,6,b	;volatile
 15822  00002C  EF1A  F000         	goto	i2u519_41
 15823  000030  EF1C  F000         	goto	i2u519_40
 15824  000034                     i2u519_41:
 15825  000034  EF32  F000         	goto	i2l150
 15826  000038                     i2u519_40:
 15827  000038                     
 15828                           ; BSR set to: 14
 15829  000038  ADCD               	btfss	205,6,b	;volatile
 15830  00003A  EF21  F000         	goto	i2u520_41
 15831  00003E  EF23  F000         	goto	i2u520_40
 15832  000042                     i2u520_41:
 15833  000042  EF32  F000         	goto	i2l150
 15834  000046                     i2u520_40:
 15835  000046                     
 15836                           ; BSR set to: 14
 15837                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
 15838  000046  D802               	call	i2u521_48
 15839  000048  EF30  F000         	goto	i2u521_49
 15840  00004C                     i2u521_48:
 15841  00004C  0005               	push	
 15842  00004E  6EFA               	movwf	pclath,c
 15843  000050  0100               	movlb	0	; () banked
 15844  000052  51FC               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 15845  000054  6EFD               	movwf	tosl,c
 15846  000056  51FD               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 15847  000058  6EFE               	movwf	tosh,c
 15848  00005A  6AFF               	clrf	tosu,c
 15849  00005C  50FA               	movf	pclath,w,c
 15850  00005E  0012               	return		;indir
 15851  000060                     i2u521_49:
 15852                           
 15853                           ;mcc_generated_files/interrupt_manager.c: 66:         }
 15854  000060  EF89  F000         	goto	i2l159
 15855  000064                     i2l150:
 15856                           
 15857                           ; BSR set to: 14
 15858  000064  AFC5               	btfss	197,7,b	;volatile
 15859  000066  EF37  F000         	goto	i2u522_41
 15860  00006A  EF39  F000         	goto	i2u522_40
 15861  00006E                     i2u522_41:
 15862  00006E  EF4F  F000         	goto	i2l152
 15863  000072                     i2u522_40:
 15864  000072                     
 15865                           ; BSR set to: 14
 15866  000072  AFCD               	btfss	205,7,b	;volatile
 15867  000074  EF3E  F000         	goto	i2u523_41
 15868  000078  EF40  F000         	goto	i2u523_40
 15869  00007C                     i2u523_41:
 15870  00007C  EF4F  F000         	goto	i2l152
 15871  000080                     i2u523_40:
 15872  000080                     
 15873                           ; BSR set to: 14
 15874                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
 15875  000080  D802               	call	i2u524_48
 15876  000082  EF4D  F000         	goto	i2u524_49
 15877  000086                     i2u524_48:
 15878  000086  0005               	push	
 15879  000088  6EFA               	movwf	pclath,c
 15880  00008A  0101               	movlb	1	; () banked
 15881  00008C  51FA               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 15882  00008E  6EFD               	movwf	tosl,c
 15883  000090  51FB               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 15884  000092  6EFE               	movwf	tosh,c
 15885  000094  6AFF               	clrf	tosu,c
 15886  000096  50FA               	movf	pclath,w,c
 15887  000098  0012               	return		;indir
 15888  00009A                     i2u524_49:
 15889                           
 15890                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 15891  00009A  EF89  F000         	goto	i2l159
 15892  00009E                     i2l152:
 15893                           
 15894                           ; BSR set to: 14
 15895  00009E  A9C5               	btfss	197,4,b	;volatile
 15896  0000A0  EF54  F000         	goto	i2u525_41
 15897  0000A4  EF56  F000         	goto	i2u525_40
 15898  0000A8                     i2u525_41:
 15899  0000A8  EF6C  F000         	goto	i2l154
 15900  0000AC                     i2u525_40:
 15901  0000AC                     
 15902                           ; BSR set to: 14
 15903  0000AC  A9CD               	btfss	205,4,b	;volatile
 15904  0000AE  EF5B  F000         	goto	i2u526_41
 15905  0000B2  EF5D  F000         	goto	i2u526_40
 15906  0000B6                     i2u526_41:
 15907  0000B6  EF6C  F000         	goto	i2l154
 15908  0000BA                     i2u526_40:
 15909  0000BA                     
 15910                           ; BSR set to: 14
 15911                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_TxDefaultInterruptHandler();
 15912  0000BA  D802               	call	i2u527_48
 15913  0000BC  EF6A  F000         	goto	i2u527_49
 15914  0000C0                     i2u527_48:
 15915  0000C0  0005               	push	
 15916  0000C2  6EFA               	movwf	pclath,c
 15917  0000C4  0101               	movlb	1	; () banked
 15918  0000C6  51F8               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 15919  0000C8  6EFD               	movwf	tosl,c
 15920  0000CA  51F9               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 15921  0000CC  6EFE               	movwf	tosh,c
 15922  0000CE  6AFF               	clrf	tosu,c
 15923  0000D0  50FA               	movf	pclath,w,c
 15924  0000D2  0012               	return		;indir
 15925  0000D4                     i2u527_49:
 15926                           
 15927                           ;mcc_generated_files/interrupt_manager.c: 74:         }
 15928  0000D4  EF89  F000         	goto	i2l159
 15929  0000D8                     i2l154:
 15930                           
 15931                           ; BSR set to: 14
 15932  0000D8  ABC5               	btfss	197,5,b	;volatile
 15933  0000DA  EF71  F000         	goto	i2u528_41
 15934  0000DE  EF73  F000         	goto	i2u528_40
 15935  0000E2                     i2u528_41:
 15936  0000E2  EF89  F000         	goto	i2l153
 15937  0000E6                     i2u528_40:
 15938  0000E6                     
 15939                           ; BSR set to: 14
 15940  0000E6  ABCD               	btfss	205,5,b	;volatile
 15941  0000E8  EF78  F000         	goto	i2u529_41
 15942  0000EC  EF7A  F000         	goto	i2u529_40
 15943  0000F0                     i2u529_41:
 15944  0000F0  EF89  F000         	goto	i2l153
 15945  0000F4                     i2u529_40:
 15946  0000F4                     
 15947                           ; BSR set to: 14
 15948                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART1_RxDefaultInterruptHandler();
 15949  0000F4  D802               	call	i2u530_48
 15950  0000F6  EF87  F000         	goto	i2u530_49
 15951  0000FA                     i2u530_48:
 15952  0000FA  0005               	push	
 15953  0000FC  6EFA               	movwf	pclath,c
 15954  0000FE  0101               	movlb	1	; () banked
 15955  000100  51F6               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 15956  000102  6EFD               	movwf	tosl,c
 15957  000104  51F7               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 15958  000106  6EFE               	movwf	tosh,c
 15959  000108  6AFF               	clrf	tosu,c
 15960  00010A  50FA               	movf	pclath,w,c
 15961  00010C  0012               	return		;indir
 15962  00010E                     i2u530_49:
 15963                           
 15964                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 15965  00010E  EF89  F000         	goto	i2l159
 15966  000112                     i2l153:
 15967  000112                     i2l159:
 15968  000112  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 15969  000116  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 15970  00011A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 15971  00011E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 15972  000122  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15973  000124  0011               	retfie		f
 15974  000126                     __end_of_INTERRUPT_InterruptManager:
 15975                           	opt callstack 0
 15976                           
 15977 ;; *************** function _EUSART2_Transmit_ISR *****************
 15978 ;; Defined at:
 15979 ;;		line 208 in file "mcc_generated_files/eusart2.c"
 15980 ;; Parameters:    Size  Location     Type
 15981 ;;		None
 15982 ;; Auto vars:     Size  Location     Type
 15983 ;;		None
 15984 ;; Return value:  Size  Location     Type
 15985 ;;                  1    wreg      void 
 15986 ;; Registers used:
 15987 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15988 ;; Tracked objects:
 15989 ;;		On entry : 0/0
 15990 ;;		On exit  : 0/0
 15991 ;;		Unchanged: 0/0
 15992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15997 ;;Total ram usage:        0 bytes
 15998 ;; Hardware stack levels used:    1
 15999 ;; This function calls:
 16000 ;;		Nothing
 16001 ;; This function is called by:
 16002 ;;		_EUSART2_Initialize
 16003 ;;		_INTERRUPT_InterruptManager
 16004 ;; This function uses a non-reentrant model
 16005 ;;
 16006                           
 16007                           	psect	text83
 16008  003B5C                     __ptext83:
 16009                           	opt callstack 0
 16010  003B5C                     _EUSART2_Transmit_ISR:
 16011                           	opt callstack 17
 16012  003B5C                     
 16013                           ;mcc_generated_files/eusart2.c: 212:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 16014  003B5C  0E20               	movlw	32
 16015  003B5E  0100               	movlb	0	; () banked
 16016  003B60  61FF               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 16017  003B62  EFB5  F01D         	goto	i2u472_41
 16018  003B66  EFB7  F01D         	goto	i2u472_40
 16019  003B6A                     i2u472_41:
 16020  003B6A  EFCF  F01D         	goto	i2l333
 16021  003B6E                     i2u472_40:
 16022  003B6E                     
 16023                           ; BSR set to: 0
 16024                           ;mcc_generated_files/eusart2.c: 213:     {;mcc_generated_files/eusart2.c: 214:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
 16025  003B6E  0E84               	movlw	low _eusart2TxBuffer
 16026  003B70  25E0               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
 16027  003B72  6ED9               	movwf	fsr2l,c
 16028  003B74  6ADA               	clrf	fsr2h,c
 16029  003B76  0E03               	movlw	high _eusart2TxBuffer
 16030  003B78  22DA               	addwfc	fsr2h,f,c
 16031  003B7A  50DF               	movf	indf2,w,c
 16032  003B7C  010E               	movlb	14	; () banked
 16033  003B7E  6F9A               	movwf	154,b	;volatile
 16034  003B80                     
 16035                           ; BSR set to: 14
 16036  003B80  0100               	movlb	0	; () banked
 16037  003B82  2BE0               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 16038  003B84                     
 16039                           ; BSR set to: 0
 16040                           ;mcc_generated_files/eusart2.c: 215:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 16041  003B84  0E1F               	movlw	31
 16042  003B86  65E0               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 16043  003B88  EFC8  F01D         	goto	i2u473_41
 16044  003B8C  EFCA  F01D         	goto	i2u473_40
 16045  003B90                     i2u473_41:
 16046  003B90  EFCC  F01D         	goto	i2l5250
 16047  003B94                     i2u473_40:
 16048  003B94                     
 16049                           ; BSR set to: 0
 16050                           ;mcc_generated_files/eusart2.c: 216:         {;mcc_generated_files/eusart2.c: 217:      
      +                                 eusart2TxTail = 0;
 16051  003B94  0E00               	movlw	0
 16052  003B96  6FE0               	movwf	_eusart2TxTail& (0+255),b	;volatile
 16053  003B98                     i2l5250:
 16054                           
 16055                           ; BSR set to: 0
 16056                           ;mcc_generated_files/eusart2.c: 219:         eusart2TxBufferRemaining++;
 16057  003B98  2BFF               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 16058                           
 16059                           ;mcc_generated_files/eusart2.c: 220:     }
 16060  003B9A  EFD1  F01D         	goto	i2l336
 16061  003B9E                     i2l333:
 16062                           
 16063                           ; BSR set to: 0
 16064                           ;mcc_generated_files/eusart2.c: 222:     {;mcc_generated_files/eusart2.c: 223:         P
      +                          IE3bits.TX2IE = 0;
 16065  003B9E  010E               	movlb	14	; () banked
 16066  003BA0  9DC5               	bcf	197,6,b	;volatile
 16067  003BA2                     i2l336:
 16068  003BA2  0012               	return		;funcret
 16069  003BA4                     __end_of_EUSART2_Transmit_ISR:
 16070                           	opt callstack 0
 16071                           
 16072 ;; *************** function _EUSART2_Receive_ISR *****************
 16073 ;; Defined at:
 16074 ;;		line 227 in file "mcc_generated_files/eusart2.c"
 16075 ;; Parameters:    Size  Location     Type
 16076 ;;		None
 16077 ;; Auto vars:     Size  Location     Type
 16078 ;;		None
 16079 ;; Return value:  Size  Location     Type
 16080 ;;                  1    wreg      void 
 16081 ;; Registers used:
 16082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16083 ;; Tracked objects:
 16084 ;;		On entry : 0/0
 16085 ;;		On exit  : 0/0
 16086 ;;		Unchanged: 0/0
 16087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16092 ;;Total ram usage:        0 bytes
 16093 ;; Hardware stack levels used:    1
 16094 ;; Hardware stack levels required when called:    2
 16095 ;; This function calls:
 16096 ;;		Absolute function
 16097 ;;		_EUSART2_DefaultErrorHandler
 16098 ;;		_EUSART2_DefaultFramingErrorHandler
 16099 ;;		_EUSART2_DefaultOverrunErrorHandler
 16100 ;;		_EUSART2_RxDataHandler
 16101 ;; This function is called by:
 16102 ;;		_EUSART2_Initialize
 16103 ;;		_INTERRUPT_InterruptManager
 16104 ;; This function uses a non-reentrant model
 16105 ;;
 16106                           
 16107                           	psect	text84
 16108  003090                     __ptext84:
 16109                           	opt callstack 0
 16110  003090                     _EUSART2_Receive_ISR:
 16111                           	opt callstack 15
 16112  003090                     
 16113                           ;mcc_generated_files/eusart2.c: 230:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 16114  003090  0E54               	movlw	low _eusart2RxStatusBuffer
 16115  003092  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 16116  003094  6ED9               	movwf	fsr2l,c
 16117  003096  6ADA               	clrf	fsr2h,c
 16118  003098  0E01               	movlw	high _eusart2RxStatusBuffer
 16119  00309A  22DA               	addwfc	fsr2h,f,c
 16120  00309C  0E00               	movlw	0
 16121  00309E  6EDF               	movwf	indf2,c
 16122  0030A0                     
 16123                           ;mcc_generated_files/eusart2.c: 232:     if(RC2STAbits.FERR){
 16124  0030A0  010E               	movlb	14	; () banked
 16125  0030A2  A59D               	btfss	157,2,b	;volatile
 16126  0030A4  EF56  F018         	goto	i2u474_41
 16127  0030A8  EF58  F018         	goto	i2u474_40
 16128  0030AC                     i2u474_41:
 16129  0030AC  EF6C  F018         	goto	i2l5260
 16130  0030B0                     i2u474_40:
 16131  0030B0                     
 16132                           ; BSR set to: 14
 16133                           ;mcc_generated_files/eusart2.c: 233:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 16134  0030B0  0E54               	movlw	low _eusart2RxStatusBuffer
 16135  0030B2  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 16136  0030B4  6ED9               	movwf	fsr2l,c
 16137  0030B6  6ADA               	clrf	fsr2h,c
 16138  0030B8  0E01               	movlw	high _eusart2RxStatusBuffer
 16139  0030BA  22DA               	addwfc	fsr2h,f,c
 16140  0030BC  0101               	movlb	1	; () banked
 16141  0030BE  82DF               	bsf	indf2,1,c
 16142  0030C0                     
 16143                           ; BSR set to: 1
 16144                           ;mcc_generated_files/eusart2.c: 234:         EUSART2_FramingErrorHandler();
 16145  0030C0  D802               	call	i2u475_48
 16146  0030C2  EF6C  F018         	goto	i2u475_49
 16147  0030C6                     i2u475_48:
 16148  0030C6  0005               	push	
 16149  0030C8  6EFA               	movwf	pclath,c
 16150  0030CA  51F4               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
 16151  0030CC  6EFD               	movwf	tosl,c
 16152  0030CE  51F5               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
 16153  0030D0  6EFE               	movwf	tosh,c
 16154  0030D2  6AFF               	clrf	tosu,c
 16155  0030D4  50FA               	movf	pclath,w,c
 16156  0030D6  0012               	return		;indir
 16157  0030D8                     i2u475_49:
 16158  0030D8                     i2l5260:
 16159                           
 16160                           ;mcc_generated_files/eusart2.c: 237:     if(RC2STAbits.OERR){
 16161  0030D8  010E               	movlb	14	; () banked
 16162  0030DA  A39D               	btfss	157,1,b	;volatile
 16163  0030DC  EF72  F018         	goto	i2u476_41
 16164  0030E0  EF74  F018         	goto	i2u476_40
 16165  0030E4                     i2u476_41:
 16166  0030E4  EF88  F018         	goto	i2l5266
 16167  0030E8                     i2u476_40:
 16168  0030E8                     
 16169                           ; BSR set to: 14
 16170                           ;mcc_generated_files/eusart2.c: 238:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 16171  0030E8  0E54               	movlw	low _eusart2RxStatusBuffer
 16172  0030EA  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 16173  0030EC  6ED9               	movwf	fsr2l,c
 16174  0030EE  6ADA               	clrf	fsr2h,c
 16175  0030F0  0E01               	movlw	high _eusart2RxStatusBuffer
 16176  0030F2  22DA               	addwfc	fsr2h,f,c
 16177  0030F4  0101               	movlb	1	; () banked
 16178  0030F6  84DF               	bsf	indf2,2,c
 16179  0030F8                     
 16180                           ; BSR set to: 1
 16181                           ;mcc_generated_files/eusart2.c: 239:         EUSART2_OverrunErrorHandler();
 16182  0030F8  D802               	call	i2u477_48
 16183  0030FA  EF88  F018         	goto	i2u477_49
 16184  0030FE                     i2u477_48:
 16185  0030FE  0005               	push	
 16186  003100  6EFA               	movwf	pclath,c
 16187  003102  51F2               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
 16188  003104  6EFD               	movwf	tosl,c
 16189  003106  51F3               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
 16190  003108  6EFE               	movwf	tosh,c
 16191  00310A  6AFF               	clrf	tosu,c
 16192  00310C  50FA               	movf	pclath,w,c
 16193  00310E  0012               	return		;indir
 16194  003110                     i2u477_49:
 16195  003110                     i2l5266:
 16196                           
 16197                           ;mcc_generated_files/eusart2.c: 242:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 16198  003110  0E54               	movlw	low _eusart2RxStatusBuffer
 16199  003112  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 16200  003114  6ED9               	movwf	fsr2l,c
 16201  003116  6ADA               	clrf	fsr2h,c
 16202  003118  0E01               	movlw	high _eusart2RxStatusBuffer
 16203  00311A  22DA               	addwfc	fsr2h,f,c
 16204  00311C  50DF               	movf	indf2,w,c
 16205  00311E  B4D8               	btfsc	status,2,c
 16206  003120  EF94  F018         	goto	i2u478_41
 16207  003124  EF96  F018         	goto	i2u478_40
 16208  003128                     i2u478_41:
 16209  003128  EFA5  F018         	goto	i2l5270
 16210  00312C                     i2u478_40:
 16211  00312C                     
 16212                           ;mcc_generated_files/eusart2.c: 243:         EUSART2_ErrorHandler();
 16213  00312C  D802               	call	i2u479_48
 16214  00312E  EFA3  F018         	goto	i2u479_49
 16215  003132                     i2u479_48:
 16216  003132  0005               	push	
 16217  003134  6EFA               	movwf	pclath,c
 16218  003136  0101               	movlb	1	; () banked
 16219  003138  51F0               	movf	_EUSART2_ErrorHandler& (0+255),w,b
 16220  00313A  6EFD               	movwf	tosl,c
 16221  00313C  51F1               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
 16222  00313E  6EFE               	movwf	tosh,c
 16223  003140  6AFF               	clrf	tosu,c
 16224  003142  50FA               	movf	pclath,w,c
 16225  003144  0012               	return		;indir
 16226  003146                     i2u479_49:
 16227                           
 16228                           ;mcc_generated_files/eusart2.c: 244:     } else {
 16229  003146  EFA7  F018         	goto	i2l343
 16230  00314A                     i2l5270:
 16231                           
 16232                           ;mcc_generated_files/eusart2.c: 245:         EUSART2_RxDataHandler();
 16233  00314A  EC47  F01F         	call	_EUSART2_RxDataHandler	;wreg free
 16234  00314E                     i2l343:
 16235  00314E  0012               	return		;funcret
 16236  003150                     __end_of_EUSART2_Receive_ISR:
 16237                           	opt callstack 0
 16238                           
 16239 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 16240 ;; Defined at:
 16241 ;;		line 263 in file "mcc_generated_files/eusart2.c"
 16242 ;; Parameters:    Size  Location     Type
 16243 ;;		None
 16244 ;; Auto vars:     Size  Location     Type
 16245 ;;		None
 16246 ;; Return value:  Size  Location     Type
 16247 ;;                  1    wreg      void 
 16248 ;; Registers used:
 16249 ;;		None
 16250 ;; Tracked objects:
 16251 ;;		On entry : 0/0
 16252 ;;		On exit  : 0/0
 16253 ;;		Unchanged: 0/0
 16254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16259 ;;Total ram usage:        0 bytes
 16260 ;; Hardware stack levels used:    1
 16261 ;; This function calls:
 16262 ;;		Nothing
 16263 ;; This function is called by:
 16264 ;;		_EUSART2_Initialize
 16265 ;;		_EUSART2_Receive_ISR
 16266 ;; This function uses a non-reentrant model
 16267 ;;
 16268                           
 16269                           	psect	text85
 16270  0040C2                     __ptext85:
 16271                           	opt callstack 0
 16272  0040C2                     _EUSART2_DefaultOverrunErrorHandler:
 16273                           	opt callstack 16
 16274  0040C2                     
 16275                           ;mcc_generated_files/eusart2.c: 266:     RC2STAbits.CREN = 0;
 16276  0040C2  010E               	movlb	14	; () banked
 16277  0040C4  999D               	bcf	157,4,b	;volatile
 16278                           
 16279                           ;mcc_generated_files/eusart2.c: 267:     RC2STAbits.CREN = 1;
 16280  0040C6  899D               	bsf	157,4,b	;volatile
 16281  0040C8                     
 16282                           ; BSR set to: 14
 16283  0040C8  0012               	return		;funcret
 16284  0040CA                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 16285                           	opt callstack 0
 16286                           
 16287 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 16288 ;; Defined at:
 16289 ;;		line 261 in file "mcc_generated_files/eusart2.c"
 16290 ;; Parameters:    Size  Location     Type
 16291 ;;		None
 16292 ;; Auto vars:     Size  Location     Type
 16293 ;;		None
 16294 ;; Return value:  Size  Location     Type
 16295 ;;                  1    wreg      void 
 16296 ;; Registers used:
 16297 ;;		None
 16298 ;; Tracked objects:
 16299 ;;		On entry : 0/0
 16300 ;;		On exit  : 0/0
 16301 ;;		Unchanged: 0/0
 16302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16307 ;;Total ram usage:        0 bytes
 16308 ;; Hardware stack levels used:    1
 16309 ;; This function calls:
 16310 ;;		Nothing
 16311 ;; This function is called by:
 16312 ;;		_EUSART2_Initialize
 16313 ;;		_EUSART2_Receive_ISR
 16314 ;; This function uses a non-reentrant model
 16315 ;;
 16316                           
 16317                           	psect	text86
 16318  0040EC                     __ptext86:
 16319                           	opt callstack 0
 16320  0040EC                     _EUSART2_DefaultFramingErrorHandler:
 16321                           	opt callstack 16
 16322  0040EC  0012               	return		;funcret
 16323  0040EE                     __end_of_EUSART2_DefaultFramingErrorHandler:
 16324                           	opt callstack 0
 16325                           
 16326 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 16327 ;; Defined at:
 16328 ;;		line 271 in file "mcc_generated_files/eusart2.c"
 16329 ;; Parameters:    Size  Location     Type
 16330 ;;		None
 16331 ;; Auto vars:     Size  Location     Type
 16332 ;;		None
 16333 ;; Return value:  Size  Location     Type
 16334 ;;                  1    wreg      void 
 16335 ;; Registers used:
 16336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16337 ;; Tracked objects:
 16338 ;;		On entry : 0/0
 16339 ;;		On exit  : 0/0
 16340 ;;		Unchanged: 0/0
 16341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16346 ;;Total ram usage:        0 bytes
 16347 ;; Hardware stack levels used:    1
 16348 ;; Hardware stack levels required when called:    1
 16349 ;; This function calls:
 16350 ;;		_EUSART2_RxDataHandler
 16351 ;; This function is called by:
 16352 ;;		_EUSART2_Initialize
 16353 ;;		_EUSART2_Receive_ISR
 16354 ;; This function uses a non-reentrant model
 16355 ;;
 16356                           
 16357                           	psect	text87
 16358  0040D6                     __ptext87:
 16359                           	opt callstack 0
 16360  0040D6                     _EUSART2_DefaultErrorHandler:
 16361                           	opt callstack 15
 16362  0040D6                     
 16363                           ;mcc_generated_files/eusart2.c: 272:     EUSART2_RxDataHandler();
 16364  0040D6  EC47  F01F         	call	_EUSART2_RxDataHandler	;wreg free
 16365  0040DA  0012               	return		;funcret
 16366  0040DC                     __end_of_EUSART2_DefaultErrorHandler:
 16367                           	opt callstack 0
 16368                           
 16369 ;; *************** function _EUSART2_RxDataHandler *****************
 16370 ;; Defined at:
 16371 ;;		line 251 in file "mcc_generated_files/eusart2.c"
 16372 ;; Parameters:    Size  Location     Type
 16373 ;;		None
 16374 ;; Auto vars:     Size  Location     Type
 16375 ;;		None
 16376 ;; Return value:  Size  Location     Type
 16377 ;;                  1    wreg      void 
 16378 ;; Registers used:
 16379 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16380 ;; Tracked objects:
 16381 ;;		On entry : 0/0
 16382 ;;		On exit  : 0/0
 16383 ;;		Unchanged: 0/0
 16384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16389 ;;Total ram usage:        0 bytes
 16390 ;; Hardware stack levels used:    1
 16391 ;; This function calls:
 16392 ;;		Nothing
 16393 ;; This function is called by:
 16394 ;;		_EUSART2_Receive_ISR
 16395 ;;		_EUSART2_DefaultErrorHandler
 16396 ;; This function uses a non-reentrant model
 16397 ;;
 16398                           
 16399                           	psect	text88
 16400  003E8E                     __ptext88:
 16401                           	opt callstack 0
 16402  003E8E                     _EUSART2_RxDataHandler:
 16403                           	opt callstack 16
 16404  003E8E                     
 16405                           ;mcc_generated_files/eusart2.c: 253:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 16406  003E8E  0E64               	movlw	low _eusart2RxBuffer
 16407  003E90  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 16408  003E92  6ED9               	movwf	fsr2l,c
 16409  003E94  6ADA               	clrf	fsr2h,c
 16410  003E96  0E03               	movlw	high _eusart2RxBuffer
 16411  003E98  22DA               	addwfc	fsr2h,f,c
 16412  003E9A  CE99 FFDF          	movff	3737,indf2	;volatile
 16413  003E9E  2A5A               	incf	_eusart2RxHead^0,f,c	;volatile
 16414  003EA0                     
 16415                           ;mcc_generated_files/eusart2.c: 254:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 16416  003EA0  0E1F               	movlw	31
 16417  003EA2  645A               	cpfsgt	_eusart2RxHead^0,c	;volatile
 16418  003EA4  EF56  F01F         	goto	i2u410_41
 16419  003EA8  EF58  F01F         	goto	i2u410_40
 16420  003EAC                     i2u410_41:
 16421  003EAC  EF5A  F01F         	goto	i2l4694
 16422  003EB0                     i2u410_40:
 16423  003EB0                     
 16424                           ;mcc_generated_files/eusart2.c: 255:     {;mcc_generated_files/eusart2.c: 256:         e
      +                          usart2RxHead = 0;
 16425  003EB0  0E00               	movlw	0
 16426  003EB2  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
 16427  003EB4                     i2l4694:
 16428                           
 16429                           ;mcc_generated_files/eusart2.c: 258:     eusart2RxCount++;
 16430  003EB4  0100               	movlb	0	; () banked
 16431  003EB6  2BDE               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 16432  003EB8                     
 16433                           ; BSR set to: 0
 16434  003EB8  0012               	return		;funcret
 16435  003EBA                     __end_of_EUSART2_RxDataHandler:
 16436                           	opt callstack 0
 16437                           
 16438 ;; *************** function _EUSART1_Transmit_ISR *****************
 16439 ;; Defined at:
 16440 ;;		line 199 in file "mcc_generated_files/eusart1.c"
 16441 ;; Parameters:    Size  Location     Type
 16442 ;;		None
 16443 ;; Auto vars:     Size  Location     Type
 16444 ;;		None
 16445 ;; Return value:  Size  Location     Type
 16446 ;;                  1    wreg      void 
 16447 ;; Registers used:
 16448 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16449 ;; Tracked objects:
 16450 ;;		On entry : 0/0
 16451 ;;		On exit  : 0/0
 16452 ;;		Unchanged: 0/0
 16453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16458 ;;Total ram usage:        0 bytes
 16459 ;; Hardware stack levels used:    1
 16460 ;; This function calls:
 16461 ;;		Nothing
 16462 ;; This function is called by:
 16463 ;;		_EUSART1_Initialize
 16464 ;;		_INTERRUPT_InterruptManager
 16465 ;; This function uses a non-reentrant model
 16466 ;;
 16467                           
 16468                           	psect	text89
 16469  003C2C                     __ptext89:
 16470                           	opt callstack 0
 16471  003C2C                     _EUSART1_Transmit_ISR:
 16472                           	opt callstack 17
 16473  003C2C                     
 16474                           ;mcc_generated_files/eusart1.c: 203:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 16475  003C2C  0E10               	movlw	16
 16476  003C2E  0100               	movlb	0	; () banked
 16477  003C30  61FE               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
 16478  003C32  EF1D  F01E         	goto	i2u480_41
 16479  003C36  EF1F  F01E         	goto	i2u480_40
 16480  003C3A                     i2u480_41:
 16481  003C3A  EF35  F01E         	goto	i2l477
 16482  003C3E                     i2u480_40:
 16483  003C3E                     
 16484                           ; BSR set to: 0
 16485                           ;mcc_generated_files/eusart1.c: 204:     {;mcc_generated_files/eusart1.c: 205:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 16486  003C3E  0E74               	movlw	low _eusart1TxBuffer
 16487  003C40  25DB               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 16488  003C42  6ED9               	movwf	fsr2l,c
 16489  003C44  6ADA               	clrf	fsr2h,c
 16490  003C46  0E01               	movlw	high _eusart1TxBuffer
 16491  003C48  22DA               	addwfc	fsr2h,f,c
 16492  003C4A  50DF               	movf	indf2,w,c
 16493  003C4C  6E9A               	movwf	154,c	;volatile
 16494  003C4E                     
 16495                           ; BSR set to: 0
 16496  003C4E  2BDB               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 16497  003C50                     
 16498                           ; BSR set to: 0
 16499                           ;mcc_generated_files/eusart1.c: 206:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 16500  003C50  0E0F               	movlw	15
 16501  003C52  65DB               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
 16502  003C54  EF2E  F01E         	goto	i2u481_41
 16503  003C58  EF30  F01E         	goto	i2u481_40
 16504  003C5C                     i2u481_41:
 16505  003C5C  EF32  F01E         	goto	i2l5282
 16506  003C60                     i2u481_40:
 16507  003C60                     
 16508                           ; BSR set to: 0
 16509                           ;mcc_generated_files/eusart1.c: 207:         {;mcc_generated_files/eusart1.c: 208:      
      +                                 eusart1TxTail = 0;
 16510  003C60  0E00               	movlw	0
 16511  003C62  6FDB               	movwf	_eusart1TxTail& (0+255),b	;volatile
 16512  003C64                     i2l5282:
 16513                           
 16514                           ; BSR set to: 0
 16515                           ;mcc_generated_files/eusart1.c: 210:         eusart1TxBufferRemaining++;
 16516  003C64  2BFE               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 16517                           
 16518                           ;mcc_generated_files/eusart1.c: 211:     }
 16519  003C66  EF37  F01E         	goto	i2l480
 16520  003C6A                     i2l477:
 16521                           
 16522                           ; BSR set to: 0
 16523                           ;mcc_generated_files/eusart1.c: 213:     {;mcc_generated_files/eusart1.c: 214:         P
      +                          IE3bits.TX1IE = 0;
 16524  003C6A  010E               	movlb	14	; () banked
 16525  003C6C  99C5               	bcf	197,4,b	;volatile
 16526  003C6E                     i2l480:
 16527  003C6E  0012               	return		;funcret
 16528  003C70                     __end_of_EUSART1_Transmit_ISR:
 16529                           	opt callstack 0
 16530                           
 16531 ;; *************** function _EUSART1_Receive_ISR *****************
 16532 ;; Defined at:
 16533 ;;		line 218 in file "mcc_generated_files/eusart1.c"
 16534 ;; Parameters:    Size  Location     Type
 16535 ;;		None
 16536 ;; Auto vars:     Size  Location     Type
 16537 ;;		None
 16538 ;; Return value:  Size  Location     Type
 16539 ;;                  1    wreg      void 
 16540 ;; Registers used:
 16541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16542 ;; Tracked objects:
 16543 ;;		On entry : 0/0
 16544 ;;		On exit  : 0/0
 16545 ;;		Unchanged: 0/0
 16546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16551 ;;Total ram usage:        0 bytes
 16552 ;; Hardware stack levels used:    1
 16553 ;; Hardware stack levels required when called:    2
 16554 ;; This function calls:
 16555 ;;		Absolute function
 16556 ;;		_EUSART1_DefaultErrorHandler
 16557 ;;		_EUSART1_DefaultFramingErrorHandler
 16558 ;;		_EUSART1_DefaultOverrunErrorHandler
 16559 ;;		_EUSART1_RxDataHandler
 16560 ;; This function is called by:
 16561 ;;		_EUSART1_Initialize
 16562 ;;		_INTERRUPT_InterruptManager
 16563 ;; This function uses a non-reentrant model
 16564 ;;
 16565                           
 16566                           	psect	text90
 16567  003150                     __ptext90:
 16568                           	opt callstack 0
 16569  003150                     _EUSART1_Receive_ISR:
 16570                           	opt callstack 15
 16571  003150                     
 16572                           ;mcc_generated_files/eusart1.c: 221:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 16573  003150  0E00               	movlw	low _eusart1RxStatusBuffer
 16574  003152  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 16575  003154  6ED9               	movwf	fsr2l,c
 16576  003156  6ADA               	clrf	fsr2h,c
 16577  003158  0E03               	movlw	high _eusart1RxStatusBuffer
 16578  00315A  22DA               	addwfc	fsr2h,f,c
 16579  00315C  0E00               	movlw	0
 16580  00315E  6EDF               	movwf	indf2,c
 16581  003160                     
 16582                           ;mcc_generated_files/eusart1.c: 223:     if(RC1STAbits.FERR){
 16583  003160  A49D               	btfss	157,2,c	;volatile
 16584  003162  EFB5  F018         	goto	i2u482_41
 16585  003166  EFB7  F018         	goto	i2u482_40
 16586  00316A                     i2u482_41:
 16587  00316A  EFCC  F018         	goto	i2l5292
 16588  00316E                     i2u482_40:
 16589  00316E                     
 16590                           ;mcc_generated_files/eusart1.c: 224:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 16591  00316E  0E00               	movlw	low _eusart1RxStatusBuffer
 16592  003170  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 16593  003172  6ED9               	movwf	fsr2l,c
 16594  003174  6ADA               	clrf	fsr2h,c
 16595  003176  0E03               	movlw	high _eusart1RxStatusBuffer
 16596  003178  22DA               	addwfc	fsr2h,f,c
 16597  00317A  0103               	movlb	3	; () banked
 16598  00317C  82DF               	bsf	indf2,1,c
 16599  00317E                     
 16600                           ; BSR set to: 3
 16601                           ;mcc_generated_files/eusart1.c: 225:         EUSART1_FramingErrorHandler();
 16602  00317E  D802               	call	i2u483_48
 16603  003180  EFCC  F018         	goto	i2u483_49
 16604  003184                     i2u483_48:
 16605  003184  0005               	push	
 16606  003186  6EFA               	movwf	pclath,c
 16607  003188  0101               	movlb	1	; () banked
 16608  00318A  51EE               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 16609  00318C  6EFD               	movwf	tosl,c
 16610  00318E  51EF               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 16611  003190  6EFE               	movwf	tosh,c
 16612  003192  6AFF               	clrf	tosu,c
 16613  003194  50FA               	movf	pclath,w,c
 16614  003196  0012               	return		;indir
 16615  003198                     i2u483_49:
 16616  003198                     i2l5292:
 16617                           
 16618                           ;mcc_generated_files/eusart1.c: 228:     if(RC1STAbits.OERR){
 16619  003198  A29D               	btfss	157,1,c	;volatile
 16620  00319A  EFD1  F018         	goto	i2u484_41
 16621  00319E  EFD3  F018         	goto	i2u484_40
 16622  0031A2                     i2u484_41:
 16623  0031A2  EFE8  F018         	goto	i2l5298
 16624  0031A6                     i2u484_40:
 16625  0031A6                     
 16626                           ;mcc_generated_files/eusart1.c: 229:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 16627  0031A6  0E00               	movlw	low _eusart1RxStatusBuffer
 16628  0031A8  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 16629  0031AA  6ED9               	movwf	fsr2l,c
 16630  0031AC  6ADA               	clrf	fsr2h,c
 16631  0031AE  0E03               	movlw	high _eusart1RxStatusBuffer
 16632  0031B0  22DA               	addwfc	fsr2h,f,c
 16633  0031B2  0103               	movlb	3	; () banked
 16634  0031B4  84DF               	bsf	indf2,2,c
 16635  0031B6                     
 16636                           ; BSR set to: 3
 16637                           ;mcc_generated_files/eusart1.c: 230:         EUSART1_OverrunErrorHandler();
 16638  0031B6  D802               	call	i2u485_48
 16639  0031B8  EFE8  F018         	goto	i2u485_49
 16640  0031BC                     i2u485_48:
 16641  0031BC  0005               	push	
 16642  0031BE  6EFA               	movwf	pclath,c
 16643  0031C0  0101               	movlb	1	; () banked
 16644  0031C2  51EC               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 16645  0031C4  6EFD               	movwf	tosl,c
 16646  0031C6  51ED               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 16647  0031C8  6EFE               	movwf	tosh,c
 16648  0031CA  6AFF               	clrf	tosu,c
 16649  0031CC  50FA               	movf	pclath,w,c
 16650  0031CE  0012               	return		;indir
 16651  0031D0                     i2u485_49:
 16652  0031D0                     i2l5298:
 16653                           
 16654                           ;mcc_generated_files/eusart1.c: 233:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 16655  0031D0  0E00               	movlw	low _eusart1RxStatusBuffer
 16656  0031D2  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 16657  0031D4  6ED9               	movwf	fsr2l,c
 16658  0031D6  6ADA               	clrf	fsr2h,c
 16659  0031D8  0E03               	movlw	high _eusart1RxStatusBuffer
 16660  0031DA  22DA               	addwfc	fsr2h,f,c
 16661  0031DC  50DF               	movf	indf2,w,c
 16662  0031DE  B4D8               	btfsc	status,2,c
 16663  0031E0  EFF4  F018         	goto	i2u486_41
 16664  0031E4  EFF6  F018         	goto	i2u486_40
 16665  0031E8                     i2u486_41:
 16666  0031E8  EF05  F019         	goto	i2l5302
 16667  0031EC                     i2u486_40:
 16668  0031EC                     
 16669                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_ErrorHandler();
 16670  0031EC  D802               	call	i2u487_48
 16671  0031EE  EF03  F019         	goto	i2u487_49
 16672  0031F2                     i2u487_48:
 16673  0031F2  0005               	push	
 16674  0031F4  6EFA               	movwf	pclath,c
 16675  0031F6  0101               	movlb	1	; () banked
 16676  0031F8  51EA               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 16677  0031FA  6EFD               	movwf	tosl,c
 16678  0031FC  51EB               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 16679  0031FE  6EFE               	movwf	tosh,c
 16680  003200  6AFF               	clrf	tosu,c
 16681  003202  50FA               	movf	pclath,w,c
 16682  003204  0012               	return		;indir
 16683  003206                     i2u487_49:
 16684                           
 16685                           ;mcc_generated_files/eusart1.c: 235:     } else {
 16686  003206  EF07  F019         	goto	i2l487
 16687  00320A                     i2l5302:
 16688                           
 16689                           ;mcc_generated_files/eusart1.c: 236:         EUSART1_RxDataHandler();
 16690  00320A  EC5D  F01F         	call	_EUSART1_RxDataHandler	;wreg free
 16691  00320E                     i2l487:
 16692  00320E  0012               	return		;funcret
 16693  003210                     __end_of_EUSART1_Receive_ISR:
 16694                           	opt callstack 0
 16695                           
 16696 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 16697 ;; Defined at:
 16698 ;;		line 254 in file "mcc_generated_files/eusart1.c"
 16699 ;; Parameters:    Size  Location     Type
 16700 ;;		None
 16701 ;; Auto vars:     Size  Location     Type
 16702 ;;		None
 16703 ;; Return value:  Size  Location     Type
 16704 ;;                  1    wreg      void 
 16705 ;; Registers used:
 16706 ;;		None
 16707 ;; Tracked objects:
 16708 ;;		On entry : 0/0
 16709 ;;		On exit  : 0/0
 16710 ;;		Unchanged: 0/0
 16711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16716 ;;Total ram usage:        0 bytes
 16717 ;; Hardware stack levels used:    1
 16718 ;; This function calls:
 16719 ;;		Nothing
 16720 ;; This function is called by:
 16721 ;;		_EUSART1_Initialize
 16722 ;;		_EUSART1_Receive_ISR
 16723 ;; This function uses a non-reentrant model
 16724 ;;
 16725                           
 16726                           	psect	text91
 16727  0040DC                     __ptext91:
 16728                           	opt callstack 0
 16729  0040DC                     _EUSART1_DefaultOverrunErrorHandler:
 16730                           	opt callstack 16
 16731  0040DC                     
 16732                           ;mcc_generated_files/eusart1.c: 257:     RC1STAbits.CREN = 0;
 16733  0040DC  989D               	bcf	157,4,c	;volatile
 16734                           
 16735                           ;mcc_generated_files/eusart1.c: 258:     RC1STAbits.CREN = 1;
 16736  0040DE  889D               	bsf	157,4,c	;volatile
 16737  0040E0  0012               	return		;funcret
 16738  0040E2                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 16739                           	opt callstack 0
 16740                           
 16741 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 16742 ;; Defined at:
 16743 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 16744 ;; Parameters:    Size  Location     Type
 16745 ;;		None
 16746 ;; Auto vars:     Size  Location     Type
 16747 ;;		None
 16748 ;; Return value:  Size  Location     Type
 16749 ;;                  1    wreg      void 
 16750 ;; Registers used:
 16751 ;;		None
 16752 ;; Tracked objects:
 16753 ;;		On entry : 0/0
 16754 ;;		On exit  : 0/0
 16755 ;;		Unchanged: 0/0
 16756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16761 ;;Total ram usage:        0 bytes
 16762 ;; Hardware stack levels used:    1
 16763 ;; This function calls:
 16764 ;;		Nothing
 16765 ;; This function is called by:
 16766 ;;		_EUSART1_Initialize
 16767 ;;		_EUSART1_Receive_ISR
 16768 ;; This function uses a non-reentrant model
 16769 ;;
 16770                           
 16771                           	psect	text92
 16772  0040EE                     __ptext92:
 16773                           	opt callstack 0
 16774  0040EE                     _EUSART1_DefaultFramingErrorHandler:
 16775                           	opt callstack 16
 16776  0040EE  0012               	return		;funcret
 16777  0040F0                     __end_of_EUSART1_DefaultFramingErrorHandler:
 16778                           	opt callstack 0
 16779                           
 16780 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 16781 ;; Defined at:
 16782 ;;		line 262 in file "mcc_generated_files/eusart1.c"
 16783 ;; Parameters:    Size  Location     Type
 16784 ;;		None
 16785 ;; Auto vars:     Size  Location     Type
 16786 ;;		None
 16787 ;; Return value:  Size  Location     Type
 16788 ;;                  1    wreg      void 
 16789 ;; Registers used:
 16790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16791 ;; Tracked objects:
 16792 ;;		On entry : 0/0
 16793 ;;		On exit  : 0/0
 16794 ;;		Unchanged: 0/0
 16795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16800 ;;Total ram usage:        0 bytes
 16801 ;; Hardware stack levels used:    1
 16802 ;; Hardware stack levels required when called:    1
 16803 ;; This function calls:
 16804 ;;		_EUSART1_RxDataHandler
 16805 ;; This function is called by:
 16806 ;;		_EUSART1_Initialize
 16807 ;;		_EUSART1_Receive_ISR
 16808 ;; This function uses a non-reentrant model
 16809 ;;
 16810                           
 16811                           	psect	text93
 16812  0040E2                     __ptext93:
 16813                           	opt callstack 0
 16814  0040E2                     _EUSART1_DefaultErrorHandler:
 16815                           	opt callstack 15
 16816  0040E2                     
 16817                           ;mcc_generated_files/eusart1.c: 263:     EUSART1_RxDataHandler();
 16818  0040E2  EC5D  F01F         	call	_EUSART1_RxDataHandler	;wreg free
 16819  0040E6  0012               	return		;funcret
 16820  0040E8                     __end_of_EUSART1_DefaultErrorHandler:
 16821                           	opt callstack 0
 16822                           
 16823 ;; *************** function _EUSART1_RxDataHandler *****************
 16824 ;; Defined at:
 16825 ;;		line 242 in file "mcc_generated_files/eusart1.c"
 16826 ;; Parameters:    Size  Location     Type
 16827 ;;		None
 16828 ;; Auto vars:     Size  Location     Type
 16829 ;;		None
 16830 ;; Return value:  Size  Location     Type
 16831 ;;                  1    wreg      void 
 16832 ;; Registers used:
 16833 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16834 ;; Tracked objects:
 16835 ;;		On entry : 0/0
 16836 ;;		On exit  : 0/0
 16837 ;;		Unchanged: 0/0
 16838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16843 ;;Total ram usage:        0 bytes
 16844 ;; Hardware stack levels used:    1
 16845 ;; This function calls:
 16846 ;;		Nothing
 16847 ;; This function is called by:
 16848 ;;		_EUSART1_Receive_ISR
 16849 ;;		_EUSART1_DefaultErrorHandler
 16850 ;; This function uses a non-reentrant model
 16851 ;;
 16852                           
 16853                           	psect	text94
 16854  003EBA                     __ptext94:
 16855                           	opt callstack 0
 16856  003EBA                     _EUSART1_RxDataHandler:
 16857                           	opt callstack 16
 16858  003EBA                     
 16859                           ;mcc_generated_files/eusart1.c: 244:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 16860  003EBA  0E00               	movlw	low _eusart1RxBuffer
 16861  003EBC  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 16862  003EBE  6ED9               	movwf	fsr2l,c
 16863  003EC0  6ADA               	clrf	fsr2h,c
 16864  003EC2  0E04               	movlw	high _eusart1RxBuffer
 16865  003EC4  22DA               	addwfc	fsr2h,f,c
 16866  003EC6  CF99 FFDF          	movff	3993,indf2	;volatile
 16867  003ECA  2A59               	incf	_eusart1RxHead^0,f,c	;volatile
 16868  003ECC                     
 16869                           ;mcc_generated_files/eusart1.c: 245:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 16870  003ECC  0E63               	movlw	99
 16871  003ECE  6459               	cpfsgt	_eusart1RxHead^0,c	;volatile
 16872  003ED0  EF6C  F01F         	goto	i2u417_41
 16873  003ED4  EF6E  F01F         	goto	i2u417_40
 16874  003ED8                     i2u417_41:
 16875  003ED8  EF70  F01F         	goto	i2l4740
 16876  003EDC                     i2u417_40:
 16877  003EDC                     
 16878                           ;mcc_generated_files/eusart1.c: 246:     {;mcc_generated_files/eusart1.c: 247:         e
      +                          usart1RxHead = 0;
 16879  003EDC  0E00               	movlw	0
 16880  003EDE  6E59               	movwf	_eusart1RxHead^0,c	;volatile
 16881  003EE0                     i2l4740:
 16882                           
 16883                           ;mcc_generated_files/eusart1.c: 249:     eusart1RxCount++;
 16884  003EE0  0100               	movlb	0	; () banked
 16885  003EE2  2BD9               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 16886  003EE4                     
 16887                           ; BSR set to: 0
 16888  003EE4  0012               	return		;funcret
 16889  003EE6                     __end_of_EUSART1_RxDataHandler:
 16890                           	opt callstack 0
 16891                           
 16892                           	psect	text95
 16893  000000                     __ptext95:
 16894                           	opt callstack 0
 16895  000000                     
 16896                           	psect	rparam
 16897  0000                     
 16898                           	psect	temp
 16899  00005B                     btemp:
 16900                           	opt callstack 0
 16901  00005B                     	ds	1
 16902  0000                     int$flags	set	btemp
 16903  0000                     wtemp8	set	btemp+1
 16904  0000                     ttemp5	set	btemp+1
 16905  0000                     ttemp6	set	btemp+4
 16906  0000                     ttemp7	set	btemp+8
 16907                           tosu	equ	0xFFF
 16908                           tosh	equ	0xFFE
 16909                           tosl	equ	0xFFD
 16910                           stkptr	equ	0xFFC
 16911                           pclatu	equ	0xFFB
 16912                           pclath	equ	0xFFA
 16913                           pcl	equ	0xFF9
 16914                           tblptru	equ	0xFF8
 16915                           tblptrh	equ	0xFF7
 16916                           tblptrl	equ	0xFF6
 16917                           tablat	equ	0xFF5
 16918                           prodh	equ	0xFF4
 16919                           prodl	equ	0xFF3
 16920                           indf0	equ	0xFEF
 16921                           postinc0	equ	0xFEE
 16922                           postdec0	equ	0xFED
 16923                           preinc0	equ	0xFEC
 16924                           plusw0	equ	0xFEB
 16925                           fsr0h	equ	0xFEA
 16926                           fsr0l	equ	0xFE9
 16927                           wreg	equ	0xFE8
 16928                           indf1	equ	0xFE7
 16929                           postinc1	equ	0xFE6
 16930                           postdec1	equ	0xFE5
 16931                           preinc1	equ	0xFE4
 16932                           plusw1	equ	0xFE3
 16933                           fsr1h	equ	0xFE2
 16934                           fsr1l	equ	0xFE1
 16935                           bsr	equ	0xFE0
 16936                           indf2	equ	0xFDF
 16937                           postinc2	equ	0xFDE
 16938                           postdec2	equ	0xFDD
 16939                           preinc2	equ	0xFDC
 16940                           plusw2	equ	0xFDB
 16941                           fsr2h	equ	0xFDA
 16942                           fsr2l	equ	0xFD9
 16943                           status	equ	0xFD8


Data Sizes:
    Strings     1855
    Constant    0
    Data        457
    BSS         523
    Persistent  22
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160    101     160
    BANK1           256     71     253
    BANK2           256      0     246
    BANK3           256      0     247
    BANK4           256      0     164
    BANK5           256      0     100
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ValidateCmd@ConfName_1483(BANK1[20]), 
		 -> ValidateCmd@ConfName_1479(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), STR_44(CODE[9]), STR_43(CODE[12]), 
		 -> InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), Command(BANK0[16]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ValidateCmd@ConfName_1483(BANK1[20]), 
		 -> ValidateCmd@ConfName_1479(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), STR_44(CODE[9]), STR_43(CODE[12]), 
		 -> InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), Command(BANK0[16]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK0[16]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK0[16]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_73(CODE[1]), STR_68(CODE[1]), ReadRX232@temp(COMRAM[2]), STR_5(CODE[1]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_73(CODE[1]), STR_68(CODE[1]), ReadRX232@temp(COMRAM[2]), STR_5(CODE[1]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_84(CODE[4]), STR_82(CODE[5]), STR_80(CODE[7]), STR_78(CODE[2]), 
		 -> STR_76(CODE[6]), STR_36(CODE[4]), STR_35(CODE[5]), STR_34(CODE[7]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_33(CODE[4]), STR_31(CODE[5]), STR_29(CODE[7]), Command(BANK0[16]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 2
		 -> ReadRX232@temp(COMRAM[2]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK0[16]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_74(CODE[12]), STR_72(CODE[13]), STR_71(CODE[17]), STR_70(CODE[15]), 
		 -> STR_69(CODE[33]), STR_67(CODE[38]), STR_66(CODE[58]), STR_65(CODE[17]), 
		 -> STR_64(CODE[16]), STR_63(CODE[4]), STR_62(CODE[19]), STR_61(CODE[32]), 
		 -> STR_60(CODE[33]), STR_59(CODE[37]), STR_58(CODE[44]), STR_57(CODE[22]), 
		 -> STR_56(CODE[75]), STR_55(CODE[53]), STR_54(CODE[57]), STR_53(CODE[54]), 
		 -> STR_52(CODE[52]), STR_51(CODE[40]), STR_50(CODE[30]), STR_49(CODE[43]), 
		 -> STR_48(CODE[73]), STR_47(CODE[42]), STR_46(CODE[36]), STR_45(CODE[34]), 
		 -> STR_42(CODE[42]), STR_41(CODE[22]), STR_40(CODE[21]), STR_39(CODE[20]), 
		 -> STR_38(CODE[19]), STR_37(CODE[40]), STR_27(CODE[32]), STR_26(CODE[37]), 
		 -> STR_25(CODE[16]), STR_24(CODE[24]), STR_23(CODE[4]), STR_22(CODE[25]), 
		 -> STR_21(CODE[28]), STR_20(CODE[29]), STR_19(CODE[26]), STR_18(CODE[26]), 
		 -> STR_17(CODE[24]), STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[26]), 
		 -> STR_13(CODE[36]), STR_12(CODE[4]), STR_11(CODE[23]), STR_10(CODE[34]), 
		 -> STR_9(CODE[28]), STR_8(CODE[54]), STR_7(CODE[27]), STR_6(CODE[16]), 
		 -> STR_4(CODE[19]), STR_3(CODE[28]), STR_2(CODE[31]), STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2111_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memmove@d1	PTR void  size(2) Largest target is 16
		 -> Command(BANK0[16]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK0[16]), 

    memmove@s1	PTR const void  size(2) Largest target is 16
		 -> Command(BANK0[16]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 16
		 -> Command(BANK0[16]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_74(CODE[12]), STR_72(CODE[13]), STR_71(CODE[17]), STR_70(CODE[15]), 
		 -> STR_69(CODE[33]), STR_67(CODE[38]), STR_66(CODE[58]), STR_65(CODE[17]), 
		 -> STR_64(CODE[16]), STR_63(CODE[4]), STR_62(CODE[19]), STR_61(CODE[32]), 
		 -> STR_60(CODE[33]), STR_59(CODE[37]), STR_58(CODE[44]), STR_57(CODE[22]), 
		 -> STR_56(CODE[75]), STR_55(CODE[53]), STR_54(CODE[57]), STR_53(CODE[54]), 
		 -> STR_52(CODE[52]), STR_51(CODE[40]), STR_50(CODE[30]), STR_49(CODE[43]), 
		 -> STR_48(CODE[73]), STR_47(CODE[42]), STR_46(CODE[36]), STR_45(CODE[34]), 
		 -> STR_42(CODE[42]), STR_41(CODE[22]), STR_40(CODE[21]), STR_39(CODE[20]), 
		 -> STR_38(CODE[19]), STR_37(CODE[40]), STR_27(CODE[32]), STR_26(CODE[37]), 
		 -> STR_25(CODE[16]), STR_24(CODE[24]), STR_23(CODE[4]), STR_22(CODE[25]), 
		 -> STR_21(CODE[28]), STR_20(CODE[29]), STR_19(CODE[26]), STR_18(CODE[26]), 
		 -> STR_17(CODE[24]), STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[26]), 
		 -> STR_13(CODE[36]), STR_12(CODE[4]), STR_11(CODE[23]), STR_10(CODE[34]), 
		 -> STR_9(CODE[28]), STR_8(CODE[54]), STR_7(CODE[27]), STR_6(CODE[16]), 
		 -> STR_4(CODE[19]), STR_3(CODE[28]), STR_2(CODE[31]), STR_1(CODE[21]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_74(CODE[12]), STR_72(CODE[13]), STR_71(CODE[17]), STR_70(CODE[15]), 
		 -> STR_69(CODE[33]), STR_67(CODE[38]), STR_66(CODE[58]), STR_65(CODE[17]), 
		 -> STR_64(CODE[16]), STR_63(CODE[4]), STR_62(CODE[19]), STR_61(CODE[32]), 
		 -> STR_60(CODE[33]), STR_59(CODE[37]), STR_58(CODE[44]), STR_57(CODE[22]), 
		 -> STR_56(CODE[75]), STR_55(CODE[53]), STR_54(CODE[57]), STR_53(CODE[54]), 
		 -> STR_52(CODE[52]), STR_51(CODE[40]), STR_50(CODE[30]), STR_49(CODE[43]), 
		 -> STR_48(CODE[73]), STR_47(CODE[42]), STR_46(CODE[36]), STR_45(CODE[34]), 
		 -> STR_42(CODE[42]), STR_41(CODE[22]), STR_40(CODE[21]), STR_39(CODE[20]), 
		 -> STR_38(CODE[19]), STR_37(CODE[40]), STR_27(CODE[32]), STR_26(CODE[37]), 
		 -> STR_25(CODE[16]), STR_24(CODE[24]), STR_23(CODE[4]), STR_22(CODE[25]), 
		 -> STR_21(CODE[28]), STR_20(CODE[29]), STR_19(CODE[26]), STR_18(CODE[26]), 
		 -> STR_17(CODE[24]), STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[26]), 
		 -> STR_13(CODE[36]), STR_12(CODE[4]), STR_11(CODE[23]), STR_10(CODE[34]), 
		 -> STR_9(CODE[28]), STR_8(CODE[54]), STR_7(CODE[27]), STR_6(CODE[16]), 
		 -> STR_4(CODE[19]), STR_3(CODE[28]), STR_2(CODE[31]), STR_1(CODE[21]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 75
		 -> STR_74(CODE[12]), STR_72(CODE[13]), STR_71(CODE[17]), STR_70(CODE[15]), 
		 -> STR_69(CODE[33]), STR_67(CODE[38]), STR_66(CODE[58]), STR_65(CODE[17]), 
		 -> STR_64(CODE[16]), STR_63(CODE[4]), STR_62(CODE[19]), STR_61(CODE[32]), 
		 -> STR_60(CODE[33]), STR_59(CODE[37]), STR_58(CODE[44]), STR_57(CODE[22]), 
		 -> STR_56(CODE[75]), STR_55(CODE[53]), STR_54(CODE[57]), STR_53(CODE[54]), 
		 -> STR_52(CODE[52]), STR_51(CODE[40]), STR_50(CODE[30]), STR_49(CODE[43]), 
		 -> STR_48(CODE[73]), STR_47(CODE[42]), STR_46(CODE[36]), STR_45(CODE[34]), 
		 -> STR_42(CODE[42]), STR_41(CODE[22]), STR_40(CODE[21]), STR_39(CODE[20]), 
		 -> STR_38(CODE[19]), STR_37(CODE[40]), STR_27(CODE[32]), STR_26(CODE[37]), 
		 -> STR_25(CODE[16]), STR_24(CODE[24]), STR_23(CODE[4]), STR_22(CODE[25]), 
		 -> STR_21(CODE[28]), STR_20(CODE[29]), STR_19(CODE[26]), STR_18(CODE[26]), 
		 -> STR_17(CODE[24]), STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[26]), 
		 -> STR_13(CODE[36]), STR_12(CODE[4]), STR_11(CODE[23]), STR_10(CODE[34]), 
		 -> STR_9(CODE[28]), STR_8(CODE[54]), STR_7(CODE[27]), STR_6(CODE[16]), 
		 -> STR_4(CODE[19]), STR_3(CODE[28]), STR_2(CODE[31]), STR_1(CODE[21]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ValidateCmd@ConfName_1483(BANK1[20]), ValidateCmd@ConfName_1479(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), 
		 -> STR_44(CODE[9]), STR_43(CODE[12]), InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), 
		 -> InitialiseString@SerialNum(BANK0[11]), Command(BANK0[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ValidateCmd@ConfName_1483(BANK1[20]), ValidateCmd@ConfName_1479(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), 
		 -> STR_44(CODE[9]), STR_43(CODE[12]), InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), 
		 -> InitialiseString@SerialNum(BANK0[11]), Command(BANK0[16]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), ValidateCmd@ConfName_1483(BANK1[20]), ValidateCmd@ConfName_1479(BANK1[20]), 
		 -> ValidateCmd@ConfName(BANK1[20]), STR_44(CODE[9]), STR_43(CODE[12]), InitialiseString@RevNum(BANK0[2]), 
		 -> InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), Command(BANK0[16]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    SaveCardDat@Name	PTR unsigned char  size(2) Largest target is 20
		 -> ValidateCmd@ConfName_1483(BANK1[20]), ValidateCmd@ConfName_1479(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), 

    sp__memmove	PTR void  size(2) Largest target is 16
		 -> Command(BANK0[16]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK0[16]), 

    CardConfigIni@Name	PTR unsigned char  size(2) Largest target is 7
		 -> STR_36(CODE[4]), STR_35(CODE[5]), STR_34(CODE[7]), 

    CardConfigIni@RetNum	PTR unsigned char  size(2) Largest target is 19
		 -> InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), 

    UART1_Write_string@data	PTR unsigned char  size(2) Largest target is 75
		 -> MBRespon(BANK2[75]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK0[16]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_InitialiseString
    _main->_ModbusFC03
    _main->_ModbusRx
    _main->_PrintMB400
    _main->_ReadRX232
    _ValidateCmd->_InitialiseString
    _SaveCardDat->_ClearEEAddRange
    _SaveCardDat->_ReadRX232
    _strcat->_strcpy
    _strcpy->_strlen
    _memmove->_strlen
    _CardConfigIni->_strcmp
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ModbusRx->_AddRxBuffToModBus
    _ModbusFC10->_PrintMB400
    _ModbusError->_PrintModRespon
    _UART1_Write_string->_EUSART1_Write
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART2_Write
    _abs->___aomod
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_InitialiseString
    _ValidateCmd->_InitialiseString
    _TogDebug->_printf
    _SaveCardDat->_ClearEEAddRange
    _ReadRX232->_printf
    _ClearEEAddRange->_printf
    _InitialiseString->_printf
    _PrintModbus->_printf
    _ModbusRx->_checkCRC
    _checkCRC->_printf
    _AddRxBuffToModBus->_printf
    _ModbusFC10->_PrintModRespon
    _PrintMB400->_printf
    _ModbusFC03->_printf
    _ModbusError->_PrintModRespon
    _PrintModRespon->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ValidateCmd

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  717277
                                             68 BANK1      3     3      0
                    _ClearModbusData
                  _ClearModbusRespon
                        _ClearRxBuff
                   _InitialiseString
                        _ModbusError
                         _ModbusFC03
                         _ModbusFC10
                           _ModbusRx
                         _PrintMB400
                     _PrintModRespon
                        _PrintModbus
                             _RXMode
                          _ReadRX232
                  _SYSTEM_Initialize
                        _ValidateCmd
                             _printf
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _ValidateCmd                                         68    68      0  204988
                                              0 BANK1     68    68      0
                   _InitialiseString
                        _SaveCardDat
                           _TogDebug
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _TogDebug                                             0     0      0   37867
                             _printf
 ---------------------------------------------------------------------------------
 (2) _SaveCardDat                                         18    10      8  122697
                                             45 BANK0     17     9      8
                    _ClearEEAddRange
                   _DATAEE_WriteByte
                       _EUSART2_Read
                _EUSART2_is_rx_ready
                          _ReadRX232
                             _printf
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _ReadRX232                                            4     2      2   42183
                                             84 COMRAM     2     2      0
                                             41 BANK0      2     0      2
                       _EUSART2_Read
                      _EUSART2_Write
                _EUSART2_is_rx_ready
                            _memmove
                             _printf
                             _strcat
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strcat                                               4     0      4    2077
                                             18 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strcpy                                              10     6      4     857
                                              8 COMRAM    10     6      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _memmove                                             12     6      6     791
                                              8 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART2_Read                                         1     1      0      37
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ClearEEAddRange                                      6     2      4   38726
                                             84 COMRAM     2     2      0
                                             41 BANK0      4     0      4
                   _DATAEE_WriteByte
                             _printf
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3     487
                                              4 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _InitialiseString                                    62    62      0   42598
                                             84 COMRAM     2     2      0
                                             41 BANK0     60    60      0
                      _CardConfigIni
                             _printf
 ---------------------------------------------------------------------------------
 (3) _CardConfigIni                                       16     8      8    3759
                                              9 COMRAM    16     8      8
                    _DATAEE_ReadByte
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     1      4    1601
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2     242
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1210
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     605
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _PrintModbus                                          3     3      0   37969
                                             84 COMRAM     1     1      0
                                             41 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusRx                                             1     1      0  114225
                                             85 COMRAM     1     1      0
                  _AddRxBuffToModBus
                        _ClearRxBuff
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                             _RXMode
                           _checkCRC
                             _printf
 ---------------------------------------------------------------------------------
 (2) _checkCRC                                            15    15      0   38312
                                             41 BANK0     15    15      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _RXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      37
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ClearRxBuff                                          3     3      0      71
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _AddRxBuffToModBus                                    3     3      0   37938
                                             84 COMRAM     1     1      0
                                             41 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusFC10                                          10    10      0   78371
                                             43 BANK0     10    10      0
                         _PrintMB400
                     _PrintModRespon
                 _UART1_Write_string
                        _generateCRC
 ---------------------------------------------------------------------------------
 (1) _PrintMB400                                           2     2      0   38000
                                             84 COMRAM     2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusFC03                                           6     6      0   40474
                                             84 COMRAM     2     2      0
                                             41 BANK0      4     4      0
                 _UART1_Write_string
                        _generateCRC
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusError                                          4     2      2   40288
                                             43 BANK0      4     2      2
                     _PrintModRespon
                 _UART1_Write_string
                        _generateCRC
 ---------------------------------------------------------------------------------
 (2) _generateCRC                                         15    12      3    1463
                                              4 COMRAM    15    12      3
 ---------------------------------------------------------------------------------
 (2) _UART1_Write_string                                   7     3      4     732
                                              5 COMRAM     7     3      4
                      _EUSART1_Write
                 _EUSART1_is_tx_done
                _EUSART1_is_tx_ready
                             _TXMode
 ---------------------------------------------------------------------------------
 (3) _TXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PrintModRespon                                       3     3      0   37969
                                             84 COMRAM     1     1      0
                                             41 BANK0      2     2      0
                 _EUSART2_is_tx_done
                _EUSART2_is_tx_ready
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   37867
                                             29 BANK0     12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   32362
                                             82 COMRAM     2     2      0
                                             23 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   31799
                                             72 COMRAM    10     4      6
                                              0 BANK0     23    23      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7787
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    7169
                                             33 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              4 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              4 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    3362
                                             15 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    8023
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5757
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     940
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2077
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1577
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1815
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     712
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _EUSART2_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearModbusRespon                                    2     2      0     102
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ClearModbusData                                      2     2      0     102
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearModbusData
   _ClearModbusRespon
   _ClearRxBuff
   _InitialiseString
     _CardConfigIni
       _DATAEE_ReadByte
       _strcmp
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusError
     _PrintModRespon
       _EUSART2_is_tx_done
       _EUSART2_is_tx_ready
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
   _ModbusFC03
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusFC10
     _PrintMB400
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _PrintModRespon
       _EUSART2_is_tx_done
       _EUSART2_is_tx_ready
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
   _ModbusRx
     _AddRxBuffToModBus
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _ClearRxBuff
     _EUSART1_Read
     _EUSART1_is_rx_ready
     _RXMode
     _checkCRC
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintMB400
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModRespon
     _EUSART2_is_tx_done
     _EUSART2_is_tx_ready
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModbus
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _RXMode
   _ReadRX232
     _EUSART2_Read
     _EUSART2_Write
     _EUSART2_is_rx_ready
     _memmove
       _strlen (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strlen
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _ValidateCmd
     _InitialiseString
       _CardConfigIni
         _DATAEE_ReadByte
         _strcmp
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _SaveCardDat
       _ClearEEAddRange
         _DATAEE_WriteByte
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _fputc
                 _putch
                   _EUSART2_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _EUSART2_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
                 _toupper
                   _islower
       _DATAEE_WriteByte
       _EUSART2_Read
       _EUSART2_is_rx_ready
       _ReadRX232
         _EUSART2_Read
         _EUSART2_Write
         _EUSART2_is_rx_ready
         _memmove
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _fputc
                 _putch
                   _EUSART2_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _EUSART2_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
                 _toupper
                   _islower
         _strcat
           _strcpy
             _strlen (ARG)
           _strlen
         _strlen
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
       _strcpy
         _strlen (ARG)
       _strlen
     _TogDebug
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _strcmp
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _fputc
           _putch
             _EUSART2_Write
         _isdigit
         _stoa
           _fputc
             _putch
               _EUSART2_Write
           _strlen
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
           _toupper
             _islower
   _strcpy
     _strlen (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     Absolute function(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      64      16       39.1%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      A4      14       64.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      F7      12       96.5%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      F6      10       96.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100     47      FD       8       98.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     65      A0       5      100.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4EC       6        0.0%
DATA                 0      0     4EC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Mar 24 22:55:32 2021

                      _eusart1TxBufferRemaining 00FE                          ?_EUSART2_RxDataHandler 0001  
                                   __CFG_CP$OFF 000000                                              l81 349A  
                                  generateCRC@i 000E                                    generateCRC@j 0010  
                           ___wmul@multiplicand 0007                                     __CFG_LVP$ON 000000  
                                           l121 3F8E                                             l124 3FD6  
                                           l212 3BCC                                             l214 3BDA  
                                           l302 3FA6                                             l127 3F74  
                                           l215 3BE6                                             l320 387A  
                                           l144 40EA                                             l305 4034  
                                           l321 3892                                             l330 40C0  
                                           l218 3FBE                                             l315 3976  
                                           l324 38C2                                             l503 40AC  
                                           l512 408E                                             l506 40A2  
                                           l362 4070                                             l515 4098  
                                           l371 4066                                             l452 3FEE  
                                           l509 40B6                                             l365 4084  
                                           l470 37BE                                             l702 3B5A  
                                           l446 351A                                             l471 37D6  
                                           l455 4048                                             l359 407A  
                                           l368 405C                                             l296 3598  
                                           l801 3376                                             l449 4006  
                                           l713 2E38                                             l465 39CE  
                                           l474 3806                                             l299 401E  
                                           l731 2694                                             l724 2578  
                                           l806 3CB0                                             l751 0A8E  
                                           l727 259E                                             l719 3610  
                                           l680 40D0                                             l809 2FCC  
                                           l682 40D2                                             l770 2CC8  
                                           l930 391E                                             l747 0A8E  
                                           l691 40CE                                             l907 0ECA  
                                           l684 40D4                                             l828 23D4  
                                           l924 3DE4                                             l773 2CEE  
                                           l677 36E6                                             l765 1C00  
                                           l941 1922                                             l597 28D2  
                                           l758 0B56                                             l918 27B8  
                                           l775 2D5E                                             l687 40CA  
                                           l696 3B10                                             l776 2D66  
                                           l689 40CC                                             l953 1D9C  
                                           l789 367E                                             l949 1A42  
                                           l889 1872                                    __CFG_CPD$OFF 000000  
                  InitialiseString@readDataEven 00BE          __end_of_EUSART2_SetFramingErrorHandler 407C  
       __size_of_EUSART2_SetFramingErrorHandler 000A                  _EUSART2_SetFramingErrorHandler 4072  
                                           _abs 3D32                                             _pad 2FCE  
                       __size_of_PMD_Initialize 001C                                             tosl 000FFD  
                                           wreg 000FE8                                    __CFG_ZCD$OFF 000000  
                                          l1010 308E                                            l1005 3012  
                                          l1102 141E                                            l1008 3054  
                                          l1016 0F6C                                            l1104 1480  
                                          l1018 0F74                                            l1043 1E1E  
                                          ?_abs 0017                                            l1036 11AA  
                                          l1045 1E26                                            l1133 06B2  
                                          l1054 1EE6                                            l1118 0220  
                                          l1055 1F2E                                            l1064 14BA  
                                          l1144 3742                                            l1081 11EC  
                                          l1145 374A                                            l1074 1682  
                                          l1066 14C2                                            l1059 1F36  
                                          l1148 3F58                                            l1262 2258  
                                          l1079 11E4                                            l1088 1282  
                                          l1275 2538                                            l1603 2F08  
                                          l1823 3D68                                            l6000 24B0  
                                          l1920 3F0C                                            l1905 340C  
                                          l1913 3C2A                                            l1593 2AC2  
                                          l6010 2518                                            l6002 24D0  
                                          l1826 3D70                                            l1586 2AA2  
                                          l6004 24E2                                            l6100 10C6  
                                          l6020 2A06                                            l1596 2EE8  
                                          l1860 3DAC                                            l1941 37A8  
                                          l1854 20C8                                            l6006 24E8  
                                          l6110 1138                                            l6102 10E4  
                                          l6030 2A88                                            l6022 2A1A  
                                          l6014 29D4                                            l1935 32CC  
                                          l1927 3F32                                            l6008 24F8  
                                          l6120 1172                                            l6112 1146  
                                          l6104 10FE                                            l6032 2A8A  
                                          l6024 2A28                                            l6016 29E0  
                                          l6040 2E60                                            l6200 165A  
                                          l1880 3E54                                            l1952 385C  
                                          l7000 2CDC                                            l1857 20D0  
                                          l1866 3E8C                                            l1874 3A74  
                                          l6114 114C                                            l6122 1182  
                                          l6106 1118                                            l6130 1DB8  
                                          l6034 2A9C                                            l6026 2A3A  
                                          l6018 29FE                                            l6050 2EE2  
                                          l6042 2E74                                            l6210 11D8  
                                          l7010 2D28                                            l7002 2CE8  
                                          l1947 3AC4                                            l1963 3E1C  
                                          l6060 3A6E                                            l6052 3A24  
                                          l6116 115E                                            l6108 1126  
                                          l6140 1DFC                                            l6132 1DCA  
                                          l6028 2A68                                            l6044 2E82  
                                          l6036 2E3A                                            l6220 123C  
                                          l6212 1202                                            l6204 11AC  
                                          l7020 3616                                            l7012 2D42  
                                          l7004 2CF4                                            l7100 3F86  
                                          l1957 3864                                            l1893 2C8A  
                                          l7110 3C80                                            l6054 3A28  
                                          l6302 2088                                            l6118 116A  
                                          l6070 0F34                                            l6150 1E7E  
                                          l6134 1DD2                                            l6126 1D9E  
                                          l6046 2EB0                                            l6038 2E58  
                                          l6222 1242                                            l6214 120A  
                                          l6206 11BC                                            l7030 3660  
                                          l7022 362A                                            l7014 2D52  
                                          l7006 2D06                                            l7102 3F8A  
                                          ?_pad 0017                                            l7112 3C90  
                                          l7104 3C70                                            l6056 3A3C  
                                          l6304 209A                                            l6080 0F8E  
                                          l6072 0F44                                            l6064 0ECC  
                                          l6152 1E8A                                            l6144 1E48  
                                          l6136 1DE6                                            l6128 1DB0  
                                          l6048 2ED0                                            l6240 1314  
                                          l6232 12B6                                            l6224 124A  
                                          l6216 122A                                            l6208 11BE  
                                          l6400 056E                                            l6320 0174  
                                          l6312 012A                                            l7024 3636  
                                          l7008 2D0A                                            l7200 0776  
                                          l7120 2272                                            l7040 3DD8  
                                          l7032 3DAE                                            l7114 3C94  
                                          l6058 3A6A                                            l6306 20AC  
                                          l6090 0FBA                                            l6082 0F9C  
                                          l6074 0F46                                            l6066 0EEC  
                                          l6162 1EF8                                            l6154 1EC0  
                                          l6146 1E5C                                            l6138 1DEE  
                                          l6170 1492                                            l6234 12C8  
                                          l6242 1328                                            l6226 1266  
                                          l6250 13A2                                            l6218 1232  
                                          l6402 0586                                            l6410 060C  
                                          l6330 019A                                            l6322 0180  
                                          l6314 0150                                            l7026 3648  
                                          l7018 3612                                            l7210 085E  
                                          l7202 07CC                                            l7130 22C0  
                                          l7122 2284                                            l7050 18AE  
                                          l7042 1874                                            l7034 3DC0  
                                          l6092 103C                                            l6084 0FA2  
                                          l6076 0F60                                            l6068 0F14  
                                          l6164 1F0C                                            l6156 1EC4  
                                          l6148 1E60                                            l6180 14FC  
                                          l6172 1494                                            l6260 142C  
                                          l6252 13BE                                            l6244 1338  
                                          l6228 1276                                            l6412 0632  
                                          l6420 0660                                            l6404 0594  
                                          l6324 0182                                            l6316 015E  
                                          l7028 365C                                            l7300 2F14  
                                          l7220 09A8                                            l7212 08C0  
                                          l7204 07D8                                            l7132 22D0  
                                          l7140 2312                                            l7124 2290  
                                          l7116 225A                                            l6500 3932  
                                          l7060 1910                                            l7052 18CE  
                                          l7044 1874                                            l7036 3DC4  
                                          l6270 1F38                                            l6094 1042  
                                          l6086 0FAA                                            l6078 0F7C  
                                          l6166 1F10                                            l6158 1EC8  
                                          l6182 1502                                            l6190 15E8  
                                          l6174 14AE                                            l6262 1432  
                                          l6254 13DC                                            l6246 133E  
                                          l6238 1302                                            l6422 066E  
                                          l6414 0640                                            l6406 05D0  
                                          l6350 022E                                            l6342 01AC  
                                          l6334 01A0                                            l6326 0194  
                                          l6318 0170                                            l7310 2F52  
                                          l7302 2F24                                            l7230 0AA4  
                                          l7222 09BA                                            l7214 08D2  
                                          l7206 07EC                                            l7150 233A  
                                          l7142 2324                                            l7134 22F2  
                                          l7118 225E                                            l6510 396C  
                                          l6502 3952                                            l7070 1974  
                                          l7062 1922                                            l7054 18E2  
                                          l7046 187C                                            l7038 3DD4  
                                          l6280 1FAA                                            l6272 1F4C  
                                          l6096 1048                                            l6088 0FB4  
                                          l6192 15FA                                            l6184 1578  
                                          l6176 14EA                                            l6168 1482  
                                          l6264 1442                                            l6256 13F6  
                                          l6248 1344                                            l6416 0654  
                                          l6360 02A8                                            l6352 0230  
                                          l6520 3EF0                                            l6600 37CE  
                                          l7320 2FA8                                            l7312 2F56  
                                          l7304 2F28                                            l7240 0B36  
                                          l7224 0A1C                                            l7216 0934  
                                          l7208 084E                                            l7232 0ABC  
                                          l7160 23BE                                            l7144 2328  
                                          l7152 235C                                            l7128 22A8  
                                          l7136 22F8                                            l6512 3970  
                                          l6504 3954                                            l7072 1982  
                                          l7080 19C2                                            l7064 1936  
                                          l7056 18F6                                            l7048 189A  
                                          l7400 1D28                                            l6290 1FD2  
                                          l6282 1FAE                                            l6274 1F50  
                                          l6098 10AC                                            l6194 1618  
                                          l6186 157E                                            l6178 14F2  
                                          l6266 1458                                            l6258 1410  
                                          l6362 02C8                                            l6370 0332  
                                          l6354 0256                                            l6346 01B8  
                                          l6338 01A6                                            l6426 067A  
                                          l6450 36F0                                            l6610 3800  
                                          l6602 37D8                                            l7322 2FB4  
                                          l7314 2F6E                                            l7306 2F3C  
                                          l7242 0B42                                            l7234 0AE4  
                                          l7226 0A2C                                            l7218 0946  
                                          l7170 06B4                                            l7250 1A5E  
                                          l7162 23CC                                            l7154 2374  
                                          l7146 232C                                            l7138 230C  
                                          l7330 35A8                                            l6530 325E  
                                          l6514 3974                                            l6506 3964  
                                          l7090 1A36                                            l7082 19E6  
                                          l7074 199E                                            l7066 194A  
                                          l7058 18FE                                            l7410 1D58  
                                          l7340 3AC6                                            l6292 1FDA  
                                          l6276 1F54                                            l6196 1632  
                                          l6188 1584                                            l6428 06A0  
                                          l6380 03FE                                            l6372 0358  
                                          l6364 02D6                                            l6356 028C  
                                          l6348 020E                                            l6452 36FE  
                                          l6604 37EA                                            l6612 3802  
                                          l7324 2FB8                                            l7316 2F86  
                                          l7308 2F42                                            l7236 0B14  
                                          l7228 0AA0                                            l7180 06E6  
                                          l7172 06BE                                            l7260 1A96  
                                          l7252 1A6E                                            l7156 2398  
                                          l7148 2332                                            l7332 35B6  
                                          l7092 3F76                                            l6532 3290  
                                          l6524 3210                                            l6460 3BB2  
                                          l6700 3902                                            l6508 3968  
                                          l6540 2BB0                                            l6444 374C  
                                          l6620 26C6                                            l7084 19FA  
                                          l7076 19A4                                            l7068 1960  
                                          l7412 1D6A                                            l7350 3AEA  
                                          l6294 2010                                            l6286 1FB4  
                                          l6278 1F72                                            l5902 3D32  
                                          l5830 3894                                            l6198 164C  
                                          l5910 3D72                                            l6390 04A0  
                                          l6382 0424                                            l6374 037E  
                                          l6358 029A                                            l6454 3724  
                                          l6518 3EE6                                            l6606 37EC  
                                          l7318 2F98                                            l7238 0B26  
                                          l7190 0736                                            l7182 06FE  
                                          l7174 06CE                                            l7270 1AC2  
                                          l7262 1A9A                                            l7254 1A72  
                                          l7158 23AC                                            l7166 23D2  
                                          l7334 35E0                                            l7326 359A  
                                          l6710 3470                                            l7094 3F7A  
                                          l6526 3214                                            l6470 3BC2  
                                          l6462 3BB6                                            l6702 3906  
                                          l6542 2BD6                                            l6550 2C44  
                                          l6446 375C                                            l6630 2744  
                                          l6622 26D2                                            l6614 2696  
                                          l7078 19BC                                            l7086 1A12  
                                          l7414 1D6A                                            l7352 3B06  
                                          l6288 1FCA                                            l5904 3D4C  
                                          l5832 38A6                                            l5840 38BE  
                                          l5824 3868                                            l5920 3850  
                                          l6392 04EA                                            l6384 045A  
                                          l6376 03C6                                            l6368 0320  
                                          l6448 36E8                                            l6608 37FC  
                                          l7192 0746                                            l7184 0706  
                                          l7176 06D2                                            l7280 1B4A  
                                          l7272 1AD2                                            l7264 1AAA  
                                          l7256 1A82                                            l7248 1A44  
                                          l6800 39AA                                            l7336 35E6  
                                          l7328 359A                                            l6560 405E  
                                          l6720 347E                                            l6712 3472  
                                          l6704 340E                                            l7096 3F7E  
                                          l6480 3FB2                                            l6528 321C  
                                          l6472 3BC6                                            l6464 3BBA  
                                          l6456 3BA4                                            l6552 2C56  
                                          l6544 2BF8                                            l6536 3F0E  
                                          l6640 2778                                            l6632 2756  
                                          l6624 26E4                                            l6616 269E  
                                          l7088 1A24                                            l7416 1D90  
                                          l7424 1D9A                                            l7408 1D32  
                                          l7360 1C2C                                            l7440 27C0  
                                          l7346 3AD6                                            l6570 4008  
                                          l5930 3F50                                            l6298 2048  
                                          l5834 38A8                                            l5826 3868  
                                          l5842 40BA                                            l5850 33A6  
                                          l5906 3E1E                                            l5914 3808  
                                          l7194 0756                                            l7186 0716  
                                          l7178 06E2                                            l7290 1BC8  
                                          l7274 1AE2                                            l7282 1B4E  
                                          l7266 1AAE                                            l7258 1A86  
                                          l6810 39C8                                            l6802 39AC  
                                          l7338 3604                                            l6562 4054  
                                          l6730 3FC0                                            l6722 3480  
                                          l6714 3474                                            l6706 3436  
                                          l7098 3F82                                            l6482 3FB6  
                                          l6650 1684                                            l6474 3BCA  
                                          l6466 3BBE                                            l6458 3BAC  
                                          l6554 2C6A                                            l6546 2C08  
                                          l6642 2794                                            l6634 275A  
                                          l6626 26F8                                            l6618 26B2  
                                          l7354 1C02                                            l7450 27CA  
                                          l7442 27C2                                            l7348 3AE6  
                                          l5924 3E56                                            l5940 2104  
                                          l5836 38B8                                            l5828 388A  
                                          l5852 33C4                                            l5844 3378  
                                          l5860 3A82                                            l6396 0522  
                                          l6388 047A                                            l7620 01E0  
                                          l6900 32CE                                            l7196 0766  
                                          l7188 0726                                            l7292 1BD4  
                                          l7284 1B76                                            l7276 1B14  
                                          l7268 1ABE                                            l6812 39CC  
                                          l6804 39BC                                            l6580 4086  
                                          l6740 34C0                                            l6732 349C  
                                          l6564 4072                                            l6724 3482  
                                          l6716 3476                                            l6708 3446  
                                          l6484 3FB8                                            l6476 3FA8  
                                          l6660 16E6                                            l6652 16A0  
                                          l6820 0B8C                                            l6468 3BC0  
                                          l6492 3F90                                            l6556 2C6E  
                                          l6548 2C28                                            l6644 27A2  
                                          l6628 271C                                            l7380 1C9A  
                                          l7356 1C02                                            l7460 27DC  
                                          l7452 27D0                                            l7444 27C4  
                                          l7436 27BA                                            l6574 4020  
                                          l7622 1FFA                                            l5950 2146  
                                          l5942 2108                                            l5934 20D2  
                                          l5838 38BC                                            l5854 33FA  
                                          l5846 338A                                            l5870 3BF4  
                                          l5862 3A86                                            l5918 383E  
                                          l6398 0548                                            l6910 3332  
                                          l6902 32CE                                            l7294 1BE4  
                                          l7286 1BA6                                            l7278 1B20  
                                          l6806 39C0                                            l6582 40A4  
                                          l6750 34F8                                            l6742 34C4  
                                          l6734 34A0                                            l6566 4068  
                                          l6726 40E8                                            l6718 347C  
                                          l6486 3FBA                                            l6478 3FAE  
                                          l6670 1718                                            l6662 16EA  
                                          l6654 16AE                                            l6830 0C0E  
                                          l6822 0BBC                                            l6558 2C72  
                                          l6638 2766                                            l6646 27AE  
                                          l7382 1C9A                                            l7358 1C28  
                                          l7366 1C32                                            l7454 27D4  
                                          l7446 27C6                                            l7438 27BE  
                                          l5928 3F34                                            l5960 21A0  
                                          l5952 2164                                            l5944 2116  
                                          l5936 20D6                                            l5848 339C  
                                          l5872 3C06                                            l5864 3AB8  
                                          l5880 2FCE                                            l6912 3346  
                                          l6904 32E4                                            l6592 4036  
                                          l7296 1BEC                                            l7288 1BB8  
                                          l6920 2D7E                                            l6808 39C4  
                                          l6584 409A                                            l6760 350E  
                                          l6752 34FE                                            l6744 34C8  
                                          l6736 34AC                                            l6568 407C  
                                          l6728 3F5A                                            l6488 3FBC  
                                          l6680 1794                                            l6672 1728  
                                          l6664 16EE                                            l6656 16C6  
                                          l6840 0C8A                                            l6832 0C24  
                                          l6824 0BC6                                            l6816 0B5C  
                                          l6496 3920                                            l7384 1CC0  
                                          l7392 1CCA                                            l7368 1C58  
                                          l7376 1C62                                            l7616 285C  
                                          l7464 27F4                                            l7472 2844  
                                          l7480 2886                                            l7456 27D8  
                                          l7448 27C8                                            l5962 21CE  
                                          l5954 216C                                            l5970 2208  
                                          l5946 2136                                            l5938 20E4  
                                          l5874 3C0A                                            l5858 3A76  
                                          l5890 301E                                            l5882 2FDC  
                                          l6906 32F2                                            l6914 334C  
                                          l7298 2F0A                                            l7618 078E  
                                          l6930 2DD0                                            l6922 2D9A  
                                          l6586 40AE                                            l6578 4090  
                                          l6762 3512                                            l6754 3502  
                                          l6746 34CC                                            l6738 34BC  
                                          l6770 352C                                            l6682 17BA  
                                          l6674 1738                                            l6666 16FC  
                                          l6658 16D6                                            l6690 1844  
                                          l6850 0CF0                                            l6834 0C3A  
                                          l6826 0BEA                                            l6818 0B68  
                                          l6498 3920                                            l7394 1CF0  
                                          l7378 1C88                                            l7482 28A8  
                                          l7466 27FC                                            l7474 2872  
                                          l7458 27DC                                            l5972 2218  
                                          l5964 21EE                                            l5956 2180  
                                          l5948 213A                                            l5980 23DA  
                                          l5868 3BE8                                            l5892 3032  
                                          l5884 2FF0                                            l5876 3DE6  
                                          l6916 336A                                            l6908 3306  
                                          l6596 37AC                                            l6588 3FF0  
                                          l6940 2E2E                                            l6932 2DF2  
                                          l6924 2D9E                                            l6764 3516  
                                          l6756 3506                                            l6748 34D0  
                                          l6780 354E                                            l6772 353C  
                                          l6692 1862                                            l6684 17EC  
                                          l6676 173C                                            l6668 1700  
                                          l6852 0CFC                                            l6836 0C48  
                                          l6828 0BF8                                            l7396 1D02  
                                          l7476 287A                                            l7468 2824  
                                          l5974 2238                                            l5966 21F0  
                                          l5958 218E                                            l5990 243A  
                                          l5982 23E8                                            l5894 3036  
                                          l5886 2FFE                                            l6598 37AC  
                                          l6934 2E06                                            l6926 2DA2  
                                          l6918 2D68                                            l6790 3FD8  
                                          l6942 253A                                            l6758 350A  
                                          l6782 3552                                            l6774 3542  
                                          l6766 351C                                            l6686 1812  
                                          l6678 1762                                            l6870 0DA4  
                                          l6854 0D18                                            l6846 0C92  
                                          l6838 0C78                                            l6694 38C4  
                                          l7398 1D02                                            l7486 28AC  
                                          l7478 287E                                            l5968 2202  
                                          l5992 2458                                            l5984 2408  
                                          l5896 3062                                            l5888 300A  
                                          l6936 2E18                                            l6928 2DC0  
                                          l6880 3B36                                            l6960 25A4  
                                          l6944 2540                                            l6784 355E  
                                          l6776 3546                                            l6768 3520  
                                          l6688 1840                                            l6872 0DC0  
                                          l6864 0D3A                                            l6856 0D20  
                                          l6848 0CEC                                            l6696 38E2  
                                          l7488 28BA                                            l5994 2460  
                                          l5986 240C                                            l5978 23D6  
                                          l5898 3076                                            l6882 3B3A  
                                          l6794 3978                                            l6970 261A  
                                          l6962 25B6                                            l6954 2586  
                                          l6946 255C                                            l6786 356A  
                                          l6778 354A                                            l6874 0DD0  
                                          l6866 0D94                                            l6858 0D32  
                                          l6698 38EE                                            l5996 2474  
                                          l5988 241A                                            l6884 3680  
                                          l6876 3B12                                            l6796 3978  
                                          l6972 2636                                            l6956 258C  
                                          l6948 2570                                            l6964 25BA  
                                          l6788 3594                                            l6868 0D98  
                                          l5998 2482                                            l6990 2CAC  
                                          l6894 3696                                            l6886 368E  
                                          l6878 3B26                                            l6798 398A  
                                          l6974 2662                                            l6982 2692  
                                          l6966 25F0                                            l6958 2598  
                                          l6992 2CC0                                            l6896 36C6  
                                          l6888 368E                                            l6976 268C  
                                          l6968 260A                                            l6986 2C8C  
                                          l6898 36CA                                            l6988 2C90  
                                          l6998 2CD6                                            STR_1 FEF8  
                                          STR_2 FD14                                            STR_3 FDA6  
                                          STR_4 FF34                                            STR_5 F909  
                                          STR_6 FF79                                            STR_7 FDC2  
                                          STR_8 F9FC                                            STR_9 FD6E  
                                          _LATA 000F83                                            _LATB 000F84  
                                          _LATC 000F85                                            _LATD 000F86  
                                          _LATE 000F87                                            u6000 1E44  
                                          u6001 1E40                                            u6010 1E7E  
                                          u6011 1E7A                                            u6020 1EAC  
                                          u6100 1632                                            u6101 162E  
                                          u6030 1EE6                                            u6110 164C  
                                          u6031 1EE2                                            u6111 1648  
                                          u5400 3AA8                                            u6040 1EF4  
                                          u6120 165A                                            u6200 12FC  
                                          u6041 1EF0                                            u6121 1656  
                                          u6201 12F6                                            u7001 0D2A  
                                          u5330 387A                                            u5410 3AB8  
                                          u6050 1F2E                                            u6210 12FE  
                                          u6130 11BC                                            u7010 0DC0  
                                          u5331 3876                                            u5411 3AB4  
                                          u6051 1F2A                                            u6027 1EA2  
                                          u6131 11B8                                            u7011 0DBC  
                                          u6300 1F72                                            u5340 388A  
                                          u5420 3C2A                                            u6060 1492  
                                          u5500 3E4E                                            u6220 1314  
                                          u6140 11D8                                            u7100 2E06  
                                          u7020 0DD0                                            _PMD0 000EE1  
                                          u6301 1F6E                                            u5341 3886  
                                          u5421 3C26                                            u6061 148E  
                                          u5501 3E48                                            u6221 1310  
                                          u6141 11D4                                            u7101 2E02  
                                          u7021 0DCC                                            _PMD1 000EE2  
                                          u6310 1FAA                                            u5350 38B8  
                                          u6070 14AE                                            u5510 3E50  
                                          u5430 3E16                                            u6230 137C  
                                          u6150 1202                                            u7110 2E2A  
                                          u7030 3B5A                                            _PMD2 000EE3  
                                          u6311 1FA6                                            u5351 38B4  
                                          u5407 3A9E                                            u6071 14AA  
                                          u5431 3E10                                            u6151 11FE  
                                          u7111 2E26                                            u7031 3B56  
                                          _PMD3 000EE4                                            u6320 1FC6  
                                          u5600 2116                                            u5360 338A  
                                          u6080 15FA                                            u5520 3DA6  
                                          u5440 3E18                                            u6240 13BE  
                                          u6160 1266                                            u6400 0256  
                                          u7200 2D28                                            u7040 36E6  
                                          u7120 2586                                            _PMD4 000EE5  
                                          u6321 1FC2                                            u5601 2112  
                                          u5361 3386                                            u6081 15F6  
                                          u5521 3DA0                                            u6241 13BA  
                                          u6161 1262                                            u6401 0252  
                                          u7201 2D24                                            u7041 36E2  
                                          u7121 2582                                            _PMD5 000EE6  
                                          u6330 2082                                            u5370 339C  
                                          u5450 2FDC                                            u6090 1618  
                                          u5530 3DA8                                            u6250 13DC  
                                          u6170 12B0                                            u6410 029A  
                                          u7050 3306                                            u7210 2D52  
                                          u7130 25B6                                            u6331 207C  
                                          u5611 2140                                            u5371 3398  
                                          u5451 2FD8                                            u6091 1614  
                                          u6251 13D8                                            u6235 136A  
                                          u6171 12AA                                            u6411 0296  
                                          u7051 3302                                            u7211 2D4E  
                                          u7131 25B2                                            u6340 2084  
                                          u5620 2164                                            u5700 24B0  
                                          u5380 33C4                                            u5460 2FFE  
                                          u5540 3838                                            u6260 13F6  
                                          u6180 12B2                                            u6500 056E  
                                          u6420 0318                                            u7060 3346  
                                          u7220 362A                                            u7140 25F0  
                                          u7300 19E6                                            u5621 2160  
                                          u5701 24AC                                            u5381 33C0  
                                          u5461 2FFA                                            u5541 3832  
                                          u6261 13F2                                            u6501 056A  
                                          u6421 0312                                            u7061 3342  
                                          u7221 3626                                            u7141 25EC  
                                          u7301 19E2                                            u6350 209A  
                                          u5630 218E                                            u5710 24F8  
                                          u5390 33FA                                            u5470 3054  
                                          u5550 383A                                            u6270 1410  
                                          u6190 12C8                                            u6510 0632  
                                          u6430 031A                                            u7070 336A  
                                          u7230 365C                                            u7150 261A  
                                          u7310 1A24                                            u6351 2096  
                                          u5631 218A                                            u5711 24F4  
                                          u5391 33F6                                            u5471 3050  
                                          u6271 140C                                            u6191 12C4  
                                          u6511 062E                                            u7071 3366  
                                          u7231 3658                                            u7151 2616  
                                          u7311 1A20                                            u5800 3A6A  
                                          u6360 20AC                                            u5640 21CE  
                                          u5480 3062                                            u5560 3850  
                                          u6280 141E                                            u6440 0332  
                                          u7240 367E                                            u7080 2DC0  
                                          u7160 2662                                            u7400 234A  
                                          u6600 3964                                            u6520 3796  
                                          u7320 1A36                                            u5801 3A66  
                                          u6361 20A8                                            u5641 21CA  
                                          u5481 305E                                            u5721 29DA  
                                          u5561 384C                                            u6281 141A  
                                          u6441 032E                                            u7241 367A  
                                          u7081 2DBC                                            u7161 265E  
                                          u7401 2344                                            u6601 3960  
                                          u7321 1A32                                            u7330 3CB0  
                                          u5570 3E86                                            u5650 2218  
                                          u5490 3D4C                                            u5810 0EFC  
                                          u5730 29FE                                            u6290 142C  
                                          u6450 0358                                            u6370 0150  
                                          u7090 2DD0                                            u7170 268C  
                                          u7410 2374                                            u6610 325E  
                                          u6530 37A8                                            u7250 3DC0  
                                          u7331 3CAC                                            u5571 3E80  
                                          u5651 2214                                            u5491 3D48  
                                          u5811 0EF6                                            u5731 29FA  
                                          u6291 1428                                            u6451 0354  
                                          u6371 014C                                            u7091 2DCC  
                                          u7171 2688                                            u7411 2370  
                                          u6611 325A                                            u6531 37A4  
                                          u7251 3DBC                                            u6700 401C  
                                          u5580 3E88                                            u5660 23E8  
                                          u5900 10FE                                            u5820 0EFE  
                                          u5740 2A28                                            u6460 037E  
                                          u6380 0220                                            u6540 3742  
                                          u7180 2CD6                                            u7500 0AE4  
                                          u7420 2384                                            u7340 2272  
                                          u6620 3280                                            u7260 18CE  
                                          u6701 4016                                            u5661 23E4  
                                          u5901 10FA                                            u5741 2A24  
                                          u6461 037A                                            u6381 021C  
                                          u6541 373E                                            u7181 2CD2  
                                          u7501 0AE0                                            u7421 237E  
                                          u7341 226E                                            u7261 18CA  
                                          u6710 401E                                            u5590 20E4  
                                          u5670 241A                                            u5910 1118  
                                          u5830 0F14                                            u5750 2A68  
                                          u6470 0424                                            u6390 022E  
                                          u7190 2D06                                            u7510 1B76  
                                          u7430 23AC                                            u7406 234C  
                                          u7350 2284                                            u6630 3290  
                                          u6550 3BDA                                            u7270 18F6  
                                          u5591 20E0                                            u5671 2416  
                                          u5911 1114                                            u5831 0F10  
                                          u5751 2A64                                            u6471 0420  
                                          u6391 022A                                            u7191 2D02  
                                          u7511 1B72                                            u7431 23A8  
                                          u7351 2280                                            u6631 328C  
                                          u6615 324E                                            u6551 3BD6  
                                          u6527 378C                                            u7271 18F2  
                                          u6720 4032                                            u5680 2458  
                                          u5920 1126                                            u5840 0F44  
                                          u5760 2E58                                            u6480 04A0  
                                          u7440 07EC                                            u7520 1BE4  
                                          u7360 22A4                                            u6640 32B2  
                                          u6800 26C6                                            u7280 1910  
                                          u6721 402C                                            u5681 2454  
                                          u5921 1122                                            u5841 0F40  
                                          u5761 2E54                                            u6481 049C  
                                          u7441 07E8                                            u7521 1BE0  
                                          u7361 22A0                                            u6617 3244  
                                          u6801 26C2                                            u7281 190C  
                                          u7601 1CFA                                            u5690 2482  
                                          u5930 1138                                            u5850 0F60  
                                          u5770 2E82                                            u6490 0548  
                                          u6730 4004                                            u7450 085E  
                                          u7426 2386                                            u7370 22D0  
                                          u7530 3604                                            u6570 3FA4  
                                          u6650 2BD6                                            u6810 26E4  
                                          u7290 1922                                            u7610 1D58  
                                          u5691 247E                                            u5931 1134  
                                          u5851 0F5C                                            u5771 2E7E  
                                          u6491 0544                                            u6731 3FFE  
                                          u7451 085A                                            u7371 22CC  
                                          u7531 3600                                            u6627 3276  
                                          u6571 3F9E                                            u6651 2BD2  
                                          u6811 26E0                                            u7291 191E  
                                          u7611 1D54                                            u7540 3B06  
                                          u5940 1146                                            u5860 0F8E  
                                          u5780 2EB0                                            u6740 4006  
                                          u7460 08D2                                            u7380 230C  
                                          u6900 1862                                            u6580 3FA6  
                                          u6660 2BF8                                            u6820 271C  
                                          u7541 3B02                                            u5941 1142  
                                          u5861 0F8A                                            u5781 2EAC  
                                          u7461 08CE                                            u7381 2308  
                                          u6901 185E                                            u6565 3BE4  
                                          u6661 2BF4                                            u6821 2718  
                                          u7621 1D62                                            u6726 4034  
                                          u5790 3A3C                                            u5950 115E  
                                          u5870 0F9C                                            u6750 4046  
                                          u7470 0946                                            u7390 2324  
                                          u6566 3BE6                                            u6910 391E  
                                          u6590 3932                                            u6670 2C40  
                                          u6830 2756                                            u7550 1C28  
                                          u7630 27F0                                            u5791 3A38  
                                          u5951 115A                                            u5871 0F98  
                                          u6751 4040                                            u7471 0942  
                                          u7391 2320                                            u6647 32A8  
                                          u6911 391A                                            u6591 392E  
                                          u6671 2C3C                                            u6831 2752  
                                          u7551 1C24                                            u7631 27EC  
                                          u5880 10C6                                            u6760 37BE  
                                          u7480 09BA                                            u6920 3FEC  
                                          u6680 2C56                                            u6840 2778  
                                          u7560 1C58                                            u7640 28A8  
                                          u5881 10C2                                            u5961 1DA8  
                                          u6761 37BA                                            u7481 09B6  
                                          u6921 3FE6                                            u6681 2C52  
                                          u6841 2774                                            u7561 1C54  
                                          u7641 28A4                                            u5890 10E4  
                                          u5970 1DCA                                            u6770 37CE  
                                          u7490 0A2C                                            u6930 3FEE  
                                          u6850 16D6                                            u6690 2C8A  
                                          u7570 1C88                                            u5891 10E0  
                                          u5971 1DC6                                            u6771 37CA  
                                          u7491 0A28                                            u6851 16D2  
                                          u6691 2C86                                            u7571 1C84  
                                          u5980 1DFC                                            u6780 37FC  
                                          u6756 4048                                            u6940 398A  
                                          u6860 1728                                            u5981 1DF8  
                                          u6781 37F8                                            u6941 3986  
                                          u6861 1724                                            u7581 1C92  
                                          u5990 1E1A                                            u6950 39BC  
                                          u6870 1762                                            u6790 26B2  
                                          u7590 1CF0                                            u5991 1E16  
                                          u6951 39B8                                            u6871 175E  
                                          u6791 26AE                                            u7591 1CEC  
                                          u6880 17BA                                            u6881 17B6  
                                          u6961 0B62                                            u7657 19B0  
                                          u6890 1812                                            u6891 180E  
                                          u7667 16B8                                            u6971 0B92  
                                          u7677 170A                                            u6981 0C82  
                                          u6990 0D18                                            u6991 0D14  
                           ValidateCmd@ConfName 01A4                                            _WPUA 000F10  
                                          _WPUB 000F18                                            _WPUC 000F20  
                                          _WPUD 000F25                                            _WPUE 000F2D  
                         ??_EUSART2_Receive_ISR 0001                                   _EUSART1_Write 37AA  
                                 __CFG_FCMEN$ON 000000                                   _EUSART2_Write 3866  
                            ClearModbusRespon@i 0005                                  generateCRC@crc 0012  
                                          abs@a 0017                                            _dbuf 0184  
                                          _atoi 1F38                                            _main 27BA  
                                          _dtoa 0ECC                                   ?_EUSART1_Read 0001  
                                          _prec 00C9                                   ?_EUSART2_Read 0001  
                                          _nout 00C5                                            pad@i 001E  
                                          pad@p 001B                                            fsr0h 000FEA  
                                          fsr1h 000FE2                                            indf0 000FEF  
                                          fsr2h 000FDA                                            fsr0l 000FE9  
                                          indf1 000FE7                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0020  
                                          fsr2l 000FD9                                            _stoa 1D9E  
                                          btemp 005B                                            _utoa 1482  
                                          _xtoa 11AC                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0126  
                  __end_of_EUSART2_Transmit_ISR 3BA4                                   __CFG_CSWEN$ON 000000  
                           UART1_Write_string@i 000B                  fp__EUSART1_DefaultErrorHandler 0000  
                                  ___param_bank 000000                                   __CFG_SCANE$ON 000000  
                                         ??_abs 0019                                           ??_pad 001D  
                     __size_of_DATAEE_WriteByte 0044                  __size_of_OSCILLATOR_Initialize 0018  
                 __end_of_OSCILLATOR_Initialize 3FD8                           _eusart1RxStatusBuffer 0300  
                               __end_of___aodiv 225A                                           ?_atoi 000C  
                                         ?_main 0001                                           ?_dtoa 0022  
                               __end_of___aomod 253A                                           STR_10 FC70  
                                         STR_11 FE74                                           STR_12 F906  
                                         STR_20 FD51                                           STR_21 FD8A  
                                         STR_13 FC2A                                           STR_30 FFEA  
                                         STR_22 FE2B                                           STR_14 FDDD  
                                         STR_23 F906                                           STR_31 FFEA  
                                         STR_15 FEB7                                           STR_32 FFF4  
                                         STR_40 FEE3                                           STR_16 FECD  
                                         STR_24 FE5C                                           STR_33 FFF4  
                                         STR_25 FF89                                           STR_41 FE8B  
                                         STR_17 FE44                                   __CFG_WDTE$OFF 000000  
                                         STR_34 FFD6                                           STR_18 FE11  
                                         STR_50 FD33                                           STR_26 FBE1  
                                         STR_42 FAF2                                           STR_35 FFEA  
                                         STR_43 FFC1                                           STR_19 FDF7  
                                         STR_27 FCF4                                           STR_51 FB46  
                                         STR_36 FFF4                                           STR_28 FFD6  
                                         STR_44 FFCD                                           STR_60 FC92  
                                         STR_52 FA67                                           STR_29 FFD6  
                                         STR_61 FCD4                                           STR_45 FC4E  
                                         STR_37 FB6E                                           STR_53 F9C6  
                                         STR_62 FF34                                           STR_70 FF99  
                                         STR_38 FF21                                           STR_46 FC06  
                                         STR_54 F98D                                           STR_63 F906  
                                         STR_71 FF47                                           STR_39 FF0D  
                                         STR_47 FB1C                                           STR_55 FA32  
                                         STR_80 FFDD                                           STR_72 FFA8  
                                         STR_64 FF69                                           STR_48 F90A  
                                         STR_56 F8BF                                           STR_73 F909  
                                         STR_81 FFEF                                           STR_65 FF58  
                                         STR_57 FEA1                                           STR_49 FAC7  
                                         STR_82 FFEF                                           STR_74 FFB5  
                                         STR_58 FA9B                                           STR_66 F953  
                              ?_ClearModbusData 0001                                           STR_83 FFF8  
                                         STR_75 FFE4                                           STR_59 FBBC  
                                         STR_67 FB96                                           STR_68 F909  
                                         STR_76 FFE4                                           STR_84 FFF8  
                                         STR_77 FFFC                                           STR_69 FCB3  
                                         STR_78 FFFC                                           STR_79 FFDD  
                                         ?_stoa 0010                                           ?_utoa 0022  
                               __end_of___lodiv 2AC4                                           ?_xtoa 0022  
                               __end_of___lomod 2F0A                                  __CFG_DEBUG$OFF 000000  
                                         i2l150 0064                                           i2l152 009E  
                                         i2l153 0112                                           i2l154 00D8  
                                         i2l500 40E6                                           i2l333 3B9E  
                                         i2l350 40EC                                           i2l343 314E  
                                         i2l159 0112                                           i2l336 3BA2  
                                         i2l353 40C8                                           i2l347 3EB8  
                                         i2l356 40DA                                           i2l480 3C6E  
                                         i2l491 3EE4                                           i2l477 3C6A  
                                         i2l494 40EE                                           i2l487 320E  
                                         i2l497 40E0                     __size_of_EUSART1_is_tx_done 0014  
                                         _OSCEN 000EDC                                    vfpfcnvrt@fmt 004B  
                                  vfpfcnvrt@llu 006F                                           _TRISA 000F88  
                                         _TRISB 000F89                                           _TRISC 000F8A  
                                         _TRISD 000F8B                                           _TRISE 000F8C  
                      CardConfigIni@readDataOdd 0018                                           _Debug 00D7  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                                   __CFG_WRT3$OFF 000000  
                          _EUSART1_Transmit_ISR 3C2C                                  __CFG_EBTR0$OFF 000000  
                                __CFG_EBTR1$OFF 000000                                  __CFG_EBTR2$OFF 000000  
                                __CFG_EBTR3$OFF 000000                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                               _DATAEE_ReadByte 3FA8                                  __CFG_EBTRB$OFF 000000  
                                         _flags 0057                          __size_of_CardConfigIni 01F0  
                                         _fputc 3378                                 __end_of_isalpha 3DAE  
                                         _fputs 3BE8                                 __end_of_isdigit 3E8E  
                      SaveCardDat@dataeeAddrWrk 0099                                 __end_of_memmove 2C8C  
                            __CFG_MCLRE$EXTMCLR 000000                                           atoi@n 0019  
                                         pad@fp 0017                                           atoi@s 000C  
                                         _width 00C7                                           _putch 40B8  
                      __size_of_ClearEEAddRange 005C                                           dtoa@d 0024  
                                         dtoa@i 0044                                           dtoa@n 003C  
                                         dtoa@p 0036                                           dtoa@s 003A  
                                         dtoa@w 0038                                 __end_of_islower 3E1E  
                               __end_of_isspace 3A76                                  ?_EUSART1_Write 0001  
                                ?_EUSART2_Write 0001                                 __end_of_isupper 3E56  
                                         pclath 000FFA                                           tablat 000FF5  
                                   _ClearRxBuff 3B12                                  ??_EUSART1_Read 0005  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                ??_EUSART2_Read 0005                                           stoa@i 001C  
                                         stoa@l 0024                                           stoa@p 0022  
                                         stoa@s 0012                                           stoa@w 001E  
                                         ttemp5 005C                                           ttemp6 005F  
                                         ttemp7 0063                                           utoa@d 0024  
                                         utoa@i 0040                                           utoa@n 0038  
                                         utoa@p 0034                                           utoa@w 0036  
                                         status 000FD8                                      _ModDataCnt 00D3  
                                 ??_ModbusError 0056                                           wtemp8 005C  
                                         xtoa@c 0047                                           xtoa@d 0024  
                                         xtoa@i 0045                                           xtoa@n 003D  
                                         xtoa@p 0039                                           xtoa@w 003B  
                                         xtoa@x 002C                                 __end_of_toupper 3866  
                              ___lodiv@dividend 0005           fp__EUSART1_DefaultFramingErrorHandler 0000  
    __end_of_EUSART1_DefaultFramingErrorHandler 40F0     __size_of_EUSART1_DefaultFramingErrorHandler 0002  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 40EE                     __size_of_EUSART2_is_tx_done 0016  
                                 ??_SaveCardDat 0095                                  checkCRC@crcLow 0090  
         __end_of_EUSART2_SetTxInterruptHandler 405E          __size_of_EUSART2_SetTxInterruptHandler 000A  
                 _EUSART2_SetTxInterruptHandler 4054                                    _toupper$2179 0011  
                               __initialization 28DA                                    __end_of_atoi 20D2  
                    __end_of_EUSART1_Initialize 351C                                    __end_of_main 28DA  
                                  __end_of_dtoa 11AC                       __size_of_InitialiseString 0374  
                                  __end_of_stoa 1F38                                    __end_of_utoa 1684  
                                  __end_of_xtoa 1482                     ?_INTERRUPT_InterruptManager 0001  
                              __end_of_ModbusRx 23D6                                          ??_atoi 000E  
                                        ??_main 01E8                                          ??_dtoa 002C  
                                        ??_stoa 0014                                      _ModbusFC10 1A44  
                                    _ModbusFC03 06B4                                          ??_utoa 002C  
                                        ??_xtoa 002D                                   __activetblptr 000003  
                              __end_of_TogDebug 3DE6                             SaveCardDat@NumBytes 0093  
           __end_of_EUSART2_DefaultErrorHandler 40DC                     _EUSART2_DefaultErrorHandler 40D6  
                                    _ModbusData 0200                           ?_EUSART1_Transmit_ISR 0001  
                              ___lodiv@quotient 0015                            SaveCardDat@MBAddress 008F  
                    __end_of_EUSART2_Initialize 359A                        _eusart2TxBufferRemaining 00FF  
                                        ?_fputc 0007                                          ?_fputs 0010  
                                        _ANSELA 000F11                                          ?_putch 0001  
                                        _ANSELB 000F19                                          _ANSELC 000F21  
                                        _ANSELD 000F26                                          _ANSELE 000F2E  
                                        _RC1REG 000F99                                          _RC2REG 000E99  
                     InitialiseString@SerialNum 00AF                                ClearEEAddRange@i 0055  
                                        _RC1STA 000F9D                                          _RC2STA 000E9D  
                                        _RB6PPS 000EF5                                          _ODCONA 000F0F  
                                        _ODCONB 000F17                                          _ODCONC 000F1F  
                                        _RC6PPS 000EFD                                          _ODCOND 000F24  
                                        _ODCONE 000F2C                    __size_of_EUSART1_is_rx_ready 0018  
                            __size_of_ReadRX232 0124                                  __CFG_WDTCCS$SC 000000  
                                        i2l5300 31EC                                          i2l5302 320A  
                                        i2l5240 3B5C                                          i2l5250 3B98  
                                        i2l5242 3B6E                                          i2l5260 30D8  
                                        i2l5252 3090                                          i2l5244 3B80  
                                        i2l5270 314A                                          i2l5262 30E8  
                                        i2l5254 30A0                                          i2l5246 3B84  
                                        i2l5280 3C60                                          i2l5272 3C2C  
                                        i2l5264 30F8                                          i2l5256 30B0  
                                        i2l5248 3B94                                          _INLVLA 000F0D  
                                        i2l5290 317E                                          i2l5282 3C64  
                                        i2l5274 3C3E                                          i2l5266 3110  
                                        i2l5258 30C0                                          _INLVLB 000F15  
                                        _INLVLC 000F1D                                          i2l4740 3EE0  
                                        i2l4732 3EBA                                          i2l5292 3198  
                                        i2l5284 3150                                          i2l5276 3C4E  
                                        i2l5268 312C                                          _INLVLD 000F22  
                                        _INLVLE 000F2A                                          i2l4734 3ECA  
                                        i2l5294 31A6                                          i2l5286 3160  
                                        i2l5278 3C50                                          i2l4736 3ECC  
                                        i2l5296 31B6                                          i2l5288 316E  
                                        i2l4920 40D6                                          i2l5640 0072  
                                        i2l5632 001A                                          i2l4738 3EDC  
                                        i2l5298 31D0                                          i2l4690 3EA0  
                                        i2l5650 00F4                                          i2l5642 0080  
                                        i2l5634 0028                                          i2l4692 3EB0  
                                        i2l5644 00AC                                          i2l5636 0038  
                                        i2l4950 40E2                                          i2l4694 3EB4  
                                        i2l4686 3E8E                                          i2l4918 40C2  
                                        i2l5646 00BA                                          i2l5638 0046  
                                        i2l4688 3E9E                                          i2l5648 00E6  
                                        i2l4948 40DC                                          _TABLAT 000FF5  
                                 ??_ValidateCmd 0057                                          _OSCFRQ 000EDE  
                                 vfpfcnvrt@done 006B                    __size_of_EUSART1_is_tx_ready 0018  
                                        _NVMDAT 000F80                                          _RX1PPS 000EB5  
                                        _RX2PPS 000E8D                                          _TX1REG 000F9A  
                                        _TX2REG 000E9A                                __end_of_checkCRC 2696  
                                        _TX1STA 000F9E                                          _TX2STA 000E9E  
                                   ModbusFC10@i 0091                                     ModbusFC10@j 0093  
                                   ModbusFC03@i 0055                                          _RXMode 40CA  
                                        _TXMode 40D0                                          _RXStat 00D6  
                                __CFG_PWRTE$OFF 000000                            __size_of_generateCRC 00DC  
                                        _ByteHi 00CD                                          _ByteLo 00F4  
                            _UART1_Write_string 3612                                  __CFG_XINST$OFF 000000  
                                  vfprintf@cfmt 0053                       __CFG_RSTOSC$HFINTOSC_1MHZ 000000  
                            AddRxBuffToModBus@i 0089                                   _CardConfigIni 1684  
                                    _PrintMB400 3680                             __end_of_ModbusError 2FCE  
                                     ??___aodiv 0015                                       ??___aomod 0015  
                                        ___wmul 3F34                                  __CFG_STVREN$ON 000000  
                         CardConfigIni@NumBytes 0010                                       ??___lodiv 0015  
                                     ??___lomod 0015                             ?_UART1_Write_string 0006  
                      ?_EUSART1_SetErrorHandler 0005                             __end_of_SaveCardDat 1A44  
                                        clear_0 2980                                          clear_1 298C  
                                        clear_2 2998                                          clear_3 29A4  
                                        clear_4 29B0                                          clear_5 29BC  
                                        _rxData 0500                     _EUSART2_FramingErrorHandler 01F4  
                                        _printf 3EE6                                          pad@buf 0019  
                                 ReadRX232@temp 0055                ??_EUSART1_SetOverrunErrorHandler 0007  
               ?_EUSART1_SetOverrunErrorHandler 0005                                          _strcat 3F0E  
                                        dtoa@fp 0022                         __end_of_DATAEE_ReadByte 3FC0  
                                        _strcmp 3210                                          _strcpy 374C  
                                        _strlen 3A76                                   _ExpectedBytes 00F8  
                                        fputc@c 0007                                  _PMD_Initialize 3F5A  
                                        fputs@c 0014                                          fputs@i 0015  
                                        fputs@s 0010                                       ??_isalpha 0007  
                                     ??_isdigit 0007                                       ??_memmove 000F  
                                 ??_PrintModbus 0055                                       ??_islower 0007  
                                  __mediumconst F8BE                                       ??_isspace 0007  
                                        tblptrh 000FF7                                       ??_isupper 0007  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                          _EUSART2_Transmit_ISR 3B5C                                          stoa@cp 0020  
                                        stoa@fp 0010                                __end_of_vfprintf 374C  
                               ??_EUSART1_Write 0005                                          utoa@fp 0022  
                               ??_EUSART2_Write 0005                                          xtoa@fp 0022  
                               _eusart1RxBuffer 0400                                       ??_toupper 000D  
                          ??_UART1_Write_string 000A                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart2RxBuffer 0364                                 _eusart1TxBuffer 0174  
                  __size_of_EUSART2_is_rx_ready 0018                               _SYSTEM_Initialize 3F76  
                       __size_of_PrintModRespon 00AA                                 _eusart2TxBuffer 0384  
                                    __accesstop 0060                         __end_of__initialization 29CA  
                  __size_of_EUSART2_is_tx_ready 0018                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                 checkCRC@crcHigh 008E  
                             ??_ClearEEAddRange 0055                         ??_EUSART2_RxDataHandler 0001  
                __size_of_EUSART1_RxDataHandler 002C                   __end_of_EUSART1_RxDataHandler 3EE6  
                                ?_CardConfigIni 000A                             __end_of_ValidateCmd 1D9E  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 404A  
                                  __pidataBANK1 39D0                                    __pidataBANK2 2AC4  
                                  __pidataBANK3 3CB2                                    __pidataBANK4 3CF2  
                           ??_SYSTEM_Initialize 0007                                _DATAEE_WriteByte 3BA4  
                                 __end_of_fputc 340E                                   __end_of_fputs 3C2C  
                ?_EUSART2_SetTxInterruptHandler 0005                                   __end_of_putch 40C2  
                             __end_of_ReadRX232 27BA                          __end_of_PMD_Initialize 3F76  
                          __end_of_EUSART1_Read 39D0                            __end_of_EUSART2_Read 3978  
                                   ?_ModbusFC10 0001                                     ?_ModbusFC03 0001  
                        ??_EUSART1_Transmit_ISR 0001                        ?_EUSART2_SetErrorHandler 0005  
                         ?_EUSART2_Transmit_ISR 0001                     __end_of_EUSART1_Receive_ISR 3210  
                           CardConfigIni@RetNum 000C                            ModbusError@ErrorCode 008B  
                                       ??_fputc 000B                       __end_of_SYSTEM_Initialize 3F90  
                                       ??_fputs 0014                                         ??_putch 0006  
                                 _eusart1RxHead 0059                                   _eusart1TxHead 00DC  
                                 _eusart2RxHead 005A                                   _eusart1RxTail 00DA  
                                 _eusart2TxHead 00E1                                      __pbssBANK0 00C5  
                                    __pbssBANK1 0154                                      __pbssBANK2 02EB  
                                    __pbssBANK3 0300                                      __pbssBANK4 0400  
                                    __pbssBANK5 0500                                   _eusart2RxTail 00DF  
                                 _eusart1TxTail 00DB               _EUSART1_TxDefaultInterruptHandler 01F8  
                                 _eusart2TxTail 00E0                 ??_EUSART1_SetRxInterruptHandler 0007  
                           __end_of_PrintModbus 3612                ??_EUSART2_SetFramingErrorHandler 0007  
               ?_EUSART2_SetFramingErrorHandler 0005                                     _ModbusError 2F0A  
                                     ?_ModbusRx 0001                                         ?_RXMode 0001  
                                       ?_TXMode 0001                           EUSART2_Read@readValue 0005  
                                     ?_TogDebug 0001                 __end_of_EUSART1_SetErrorHandler 40B8  
                                   _SaveCardDat 1874                                     ?_PrintMB400 0001  
                              _InitialiseString 0B58                                         ?___wmul 0005  
                               __CFG_PPS1WAY$ON 000000                                         _MB300xx 03B7  
                                       _MB301xx 0110                                         _MB302xx 00FA  
                                       _MB303xx 0135                                         _MB400xx 0464  
                                       _MB304xx 011E                                         _MB305xx 0100  
                                       _MB306xx 014E                                         ?_printf 007D  
                               ?_PMD_Initialize 0001                               _ClearModbusRespon 3C70  
                                CardConfigIni@i 0016                                  CardConfigIni@j 0014  
                                       ?_strcat 0013                                         ?_strcmp 0005  
                                       ?_strcpy 0009                                         ?_strlen 0005  
        __end_of_EUSART1_SetFramingErrorHandler 40AE         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 40A4                                ?_DATAEE_ReadByte 0005  
                         _eusart2RxStatusBuffer 0154                                       ?_checkCRC 0001  
                          InitialiseString@Date 009C                              ?_ClearModbusRespon 0001  
                  ?_EUSART1_DefaultErrorHandler 0001                            InitialiseString@Time 00A7  
                                       _SP1BRGH 000F9C                                         _SP1BRGL 000F9B  
                                       _SP2BRGH 000E9C                                         _SP2BRGL 000E9B  
                                       _OSCCON1 000ED8                                         _OSCCON3 000EDA  
                   __end_of_EUSART2_Receive_ISR 3150                              __size_of_vfpfcnvrt 058A  
                                       _TBLPTRH 000FF7                                         _TBLPTRL 000FF6  
                                       _TBLPTRU 000FF8                                         _NVMADRH 000F7F  
                                       _NVMADRL 000F7E                                         _OSCTUNE 000EDD  
                                       _NVMCON2 000F82                                         _SLRCONA 000F0E  
                                       _SLRCONB 000F16                                         _SLRCONC 000F1E  
                                       _SLRCOND 000F23                                         _SLRCONE 000F2B  
                           ??_ClearModbusRespon 0005                                ___lomod@dividend 0005  
                                  ?_ClearRxBuff 0001                                     PrintMB400@i 0055  
                          DATAEE_WriteByte@bAdd 0005                                     _ValidateCmd 1C02  
                                       _Command 00E2                               generateCRC@HiOrLo 0007  
                                    ??_ModbusRx 0056                                         _ByteNum 00D1  
                           __size_of_ModbusFC10 01BE                             __size_of_ModbusFC03 04A4  
                               ??_CardConfigIni 0012                                 __size_of_RXMode 0006  
                               __size_of_TXMode 0006                                         __Hparam 0000  
                                    ??_TogDebug 0055                                         __Lparam 0000  
                fp__EUSART2_DefaultErrorHandler 0000                                         ___aodiv 20D2  
                                       ___aomod 23D6                               generateCRC@crcLow 000C  
                               __size_of___wmul 0026                                         ___lodiv 29D4  
                                       ___lomod 2E3A                                       ?_vfprintf 0077  
                     __end_of_ClearModbusRespon 3CB2                             _EUSART1_is_rx_ready 3FD8  
                        InitialiseString@F10720 012A                          InitialiseString@F10713 02EB  
                        InitialiseString@F10715 03A4                          InitialiseString@F10723 013F  
                        InitialiseString@F10717 00CB                      __end_of_EUSART1_is_tx_done 404A  
                                       __pcinit 28DA                 __end_of_EUSART2_SetErrorHandler 4086  
                                       __ramtop 0F00                             _EUSART1_is_tx_ready 3FF0  
                                       __ptext0 27BA                                         __ptext1 1C02  
                                       __ptext2 3DAE                                         __ptext3 1874  
                                       __ptext4 2696                                         __ptext5 3F0E  
                                       __ptext6 374C                                         __ptext7 2BB0  
                                       __ptext8 3F90                                         __ptext9 3920  
                               __size_of_printf 0028                                 __size_of_strcat 0026  
                               __size_of_strcmp 00BE                                 __size_of_strcpy 005E  
                               __size_of_strlen 0050                               ReadRX232@NumChars 0089  
                                    ??_checkCRC 0089           fp__EUSART2_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART2_DefaultOverrunErrorHandler 40CA     __size_of_EUSART2_DefaultOverrunErrorHandler 0008  
          ??_EUSART2_DefaultOverrunErrorHandler 0001             ?_EUSART2_DefaultOverrunErrorHandler 0001  
            _EUSART2_DefaultOverrunErrorHandler 40C2                           _OSCILLATOR_Initialize 3FC0  
                        ??_EUSART2_Transmit_ISR 0001                                    __size_of_abs 0040  
                                  __size_of_pad 00C2                                         _isalpha 3D72  
                                       _isdigit 3E56                                         _memmove 2BB0  
                            _EUSART1_Initialize 349C                                         _islower 3DE6  
                      ??_PIN_MANAGER_Initialize 0005                                         _isspace 3A24  
                                   _PrintModbus 359A                                         _isupper 3E1E  
                 ??_EUSART1_DefaultErrorHandler 0001                                         atoi@neg 0012  
                    __size_of_SYSTEM_Initialize 001A                        __size_of_ClearModbusData 004C  
                           __size_of_PrintMB400 0068                                         _toupper 3808  
                          end_of_initialization 29CA                          InitialiseString@i_1415 00C3  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                _PrintModRespon 32CE                          InitialiseString@RevNum 00BB  
                    __end_of_EUSART2_is_tx_done 4036                            ?_EUSART1_is_tx_ready 0001  
                                       fputc@fp 0009                     _EUSART1_OverrunErrorHandler 01EC  
                                       fputs@fp 0012           __end_of_EUSART1_SetRxInterruptHandler 409A  
        __size_of_EUSART1_SetRxInterruptHandler 000A                   _EUSART1_SetRxInterruptHandler 4090  
                                  SaveCardDat@i 009B                              _EUSART2_Initialize 351C  
                             __end_of_vfpfcnvrt 06B4                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 0058                           __size_of_EUSART2_Read 0058  
                                    ??_vfprintf 0053                            ??_EUSART1_Initialize 0007  
                                       strcmp@l 0005                                         strcmp@r 0007  
                         __CFG_WDTCPS$WDTCPS_31 000000                             ?_EUSART2_Initialize 0001  
                                       strcpy@d 0011                                         strlen@a 0007  
                           _EUSART2_is_rx_ready 3F90                                         strcpy@s 000F  
                                       strlen@s 0005                               ValidateCmd@F10752 0264  
                             ValidateCmd@F10746 028C                               ValidateCmd@F10749 0278  
                           _EUSART2_is_tx_ready 4008                        ValidateCmd@ConfName_1483 01CC  
                      ValidateCmd@ConfName_1479 01B8                                ClearModbusData@i 0005  
                       fp__EUSART1_Transmit_ISR 0000                                 _ClearEEAddRange 38C4  
                        __end_of_PrintModRespon 3378                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0005                                __CFG_FEXTOSC$OFF 000000  
                         ??_EUSART1_is_rx_ready 0005                        __end_of_DATAEE_WriteByte 3BE8  
                          ??_EUSART2_Initialize 0007                            ?_EUSART2_is_rx_ready 0001  
                         ??_EUSART1_is_tx_ready 0005                                   ??_generateCRC 0008  
                          ?_EUSART2_is_tx_ready 0001                                    _EUSART1_Read 3978  
                                  _EUSART2_Read 3920            __size_of_EUSART1_DefaultErrorHandler 0006  
                                __end_of_RXMode 40D0                                  __end_of_TXMode 40D6  
                        UART1_Write_string@data 0006                  __size_of_EUSART2_RxDataHandler 002C  
                 __end_of_EUSART2_RxDataHandler 3EBA                    __end_of_INTERRUPT_Initialize 40EC  
                    __size_of_ClearModbusRespon 0042                                     vfpfcnvrt@ap 004D  
                                   vfpfcnvrt@cp 0068                                     vfpfcnvrt@fp 0049  
                                   vfpfcnvrt@ll 0060                                  __end_of___wmul 3F5A  
                        ?_OSCILLATOR_Initialize 0001                                    ??_ModbusFC10 008B  
                                  ??_ModbusFC03 0089                                  __end_of_printf 3F0E  
                                __end_of_strcat 3F34                                  __end_of_strcmp 32CE  
                                __end_of_strcpy 37AA                                       _ReadRX232 2696  
                                __end_of_strlen 3AC6                             start_initialization 28DA  
                               ___lodiv@divisor 000D                                 ___lodiv@counter 001D  
               __size_of_PIN_MANAGER_Initialize 008E                                     __end_of_abs 3D72  
                                   __end_of_pad 3090                        __end_of_InitialiseString 0ECC  
 EUSART1_SetRxInterruptHandler@interruptHandler 0005   EUSART1_SetTxInterruptHandler@interruptHandler 0005  
 EUSART2_SetRxInterruptHandler@interruptHandler 0005   EUSART2_SetTxInterruptHandler@interruptHandler 0005  
                               ?_PrintModRespon 0001                                     putch@txData 0006  
                         ??_EUSART2_is_rx_ready 0005                           __end_of_EUSART1_Write 3808  
                   __size_of_UART1_Write_string 006E                           __end_of_EUSART2_Write 38C4  
                         ??_EUSART2_is_tx_ready 0005                          fp__EUSART1_Receive_ISR 0000  
                                  ?_ModbusError 008B                __size_of_EUSART2_SetErrorHandler 000A  
                           DATAEE_ReadByte@bAdd 0005                                        ??_RXMode 0005  
                          __size_of_ClearRxBuff 004A                               ??_ClearModbusData 0005  
                                      ??_TXMode 0005          __end_of_EUSART2_SetOverrunErrorHandler 4072  
       __size_of_EUSART2_SetOverrunErrorHandler 000A                  _EUSART2_SetOverrunErrorHandler 4068  
                            __end_of_ModbusFC10 1C02                              __end_of_ModbusFC03 0B58  
                                  ?_SaveCardDat 008D                                __CFG_LPBOREN$OFF 000000  
                                  ClearRxBuff@i 0006                                _SaveCardDat$2467 0097  
                             __size_of_ModbusRx 017C                                     vfprintf@fmt 0079  
                           __end_of_generateCRC 2D68                                    ??_PrintMB400 0055  
                              ??_PMD_Initialize 0005                                        ??___wmul 0009  
                             __size_of_TogDebug 0038                           _EUSART1_RxDataHandler 3EBA  
                ?_EUSART1_SetRxInterruptHandler 0005                                     __pdataBANK0 00F2  
                                   __pdataBANK1 0100                                     __pdataBANK2 0200  
                                   __pdataBANK3 03B7                                     __pdataBANK4 0464  
                                      ??_printf 0055                                        ??_strcat 0017  
                                      ??_strcmp 0009                                        ??_strcpy 000D  
                                      ??_strlen 0007                                  _eusart1RxCount 00D9  
                       __end_of_ClearEEAddRange 3920                                  _eusart2RxCount 00DE  
                                    ?_ReadRX232 0089                                     __pbssCOMRAM 0057  
             _EUSART1_RxDefaultInterruptHandler 01F6                   __size_of_EUSART1_Transmit_ISR 0044  
                                 __pcstackBANK0 0060                                   __pcstackBANK1 01A4  
                              ___aodiv@dividend 0005                               __size_of_checkCRC 015C  
                       fp__EUSART2_Transmit_ISR 0000                               _AddRxBuffToModBus 2D68  
                           EUSART2_Write@txData 0005                              __end_of_PrintMB400 36E8  
               ??_EUSART1_SetTxInterruptHandler 0007                              ?_AddRxBuffToModBus 0001  
              ??_EUSART1_SetFramingErrorHandler 0007                 ?_EUSART1_SetFramingErrorHandler 0005  
               ??_EUSART2_SetRxInterruptHandler 0007                                    ?_ValidateCmd 0001  
                  __size_of_EUSART1_Receive_ISR 00C0                          fp__EUSART2_Receive_ISR 0000  
                                     _atoi$2065 0014                                       _atoi$2066 0018  
                                     _atoi$2067 0016                                       __pnvBANK0 00FC  
                                     __pnvBANK1 01EA                             ??_AddRxBuffToModBus 0055  
                        _PIN_MANAGER_Initialize 340E                                       _dtoa$1561 0034  
                                     __pintcode 0008                               InitialiseString@i 00C1  
                             InitialiseString@j 00BF                                   __pmediumconst F8BE  
                                      ?___aodiv 0005                                        ?___aomod 0005  
                              ___aodiv@quotient 0017                                        ?___lodiv 0005  
                                      ?___lomod 0005               _EUSART2_TxDefaultInterruptHandler 00FC  
                  ??_INTERRUPT_InterruptManager 0001                               __size_of_vfprintf 0064  
                               ___lomod@divisor 000D                                        _BAUD1CON 000F9F  
                                      _BAUD2CON 000E9F                                       checkCRC@i 0096  
                                     checkCRC@j 0092                                 ___lomod@counter 0015  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 40E2  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 40DC  
                                      ?_isalpha 0005                                        ?_isdigit 0005  
                                      ?_memmove 0009                            _EUSART1_ErrorHandler 01EA  
                               SaveCardDat@Conf 009D                    ?_EUSART2_DefaultErrorHandler 0001  
                               SaveCardDat@Name 008D                                        ?_islower 0005  
                                      ?_isspace 0005                                    ?_PrintModbus 0001  
                     __end_of_AddRxBuffToModBus 2E3A                                        ?_isupper 0005  
                       _EUSART1_SetErrorHandler 40AE                              _EUSART1_is_tx_done 4036  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                      __size_of_DATAEE_ReadByte 0018                                        ?_toupper 000B  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 40E8  
                   InitialiseString@readDataOdd 00BD                    __size_of_EUSART2_Receive_ISR 00C0  
                                   _generateCRC 2C8C                                  ___wmul@product 0009  
                                      _LATAbits 000F83         EUSART1_SetErrorHandler@interruptHandler 0005  
       EUSART2_SetErrorHandler@interruptHandler 0005                                        _LATDbits 000F86  
                           ?_EUSART1_is_tx_done 0001                                        _PIE3bits 000EC5  
                           __CFG_BORV$VBOR_2P45 000000                      UART1_Write_string@data_len 0008  
                                      _MBResCRC 00F6             __size_of_INTERRUPT_InterruptManager 011E  
                                      i2u410_40 3EB0                                        i2u410_41 3EAC  
                                      _MBResCnt 00CF                                        i2u520_40 0046  
                                      i2u520_41 0042                                        i2u417_40 3EDC  
                                      i2u417_41 3ED8                                        i2u522_40 0072  
                                      i2u521_48 004C                                        i2u522_41 006E  
                                      i2u521_49 0060                                        i2u530_48 00FA  
                                      i2u523_40 0080                                        i2u530_49 010E  
                                      i2u523_41 007C                                        i2u525_40 00AC  
                                      i2u524_48 0086                                        i2u525_41 00A8  
                                      i2u524_49 009A                                        _PIR3bits 000ECD  
                                      i2u526_40 00BA                                        i2u518_40 0028  
                                      i2u526_41 00B6                                        i2u518_41 0024  
                         __end_of_CardConfigIni 1874                                        i2u519_40 0038  
                                      i2u519_41 0034                                        i2u480_40 3C3E  
                                      i2u472_40 3B6E                                        i2u528_40 00E6  
                                      i2u527_48 00C0                                        i2u480_41 3C3A  
                                      i2u472_41 3B6A                                        i2u528_41 00E2  
                                      i2u527_49 00D4                                        i2u481_40 3C60  
                                      i2u473_40 3B94                                        i2u529_40 00F4  
                                      i2u481_41 3C5C                                        i2u473_41 3B90  
                                      i2u529_41 00F0                                        i2u482_40 316E  
                                      i2u474_40 30B0                                        i2u482_41 316A  
                                      i2u474_41 30AC                                        i2u484_40 31A6  
                                      i2u483_48 3184                                        i2u476_40 30E8  
                                      i2u475_48 30C6                                        i2u484_41 31A2  
                                      i2u483_49 3198                                        i2u476_41 30E4  
                                      i2u475_49 30D8                                        _PIR7bits 000ED1  
                                      i2u486_40 31EC                                        i2u485_48 31BC  
                                      i2u478_40 312C                                        i2u477_48 30FE  
                                      i2u486_41 31E8                                        i2u485_49 31D0  
                                      i2u478_41 3128                                        i2u477_49 3110  
                                      i2u487_48 31F2                                        i2u479_48 3132  
                                      i2u487_49 3206                                        i2u479_49 3146  
                                      _MBRespon 02A0                          ?_EUSART1_RxDataHandler 0001  
                            _EUSART2_is_tx_done 4020                                       _vfpfcnvrt 012A  
                                     _xtoa$1590 0035                                       _xtoa$1591 0037  
                             ___wmul@multiplier 0005                            ??_EUSART1_is_tx_done 0005  
                              ?_ClearEEAddRange 0089                             ?_EUSART2_is_tx_done 0001  
                                   ??_ReadRX232 0055                           SaveCardDat@dataeeAddr 0091  
                                   checkCRC@crc 0094                   __size_of_EUSART2_Transmit_ISR 0048  
                         DATAEE_WriteByte@bData 0007                                    _isspace$2092 000B  
                 ??_EUSART2_DefaultErrorHandler 0001                                      vfpfcnvrt@c 006A  
                                     copy_data0 28EE                                       copy_data1 290E  
                                     copy_data2 292E                                       copy_data3 294E  
                                     copy_data4 296E                              ModbusFC10@TempData 008F  
                         ?_INTERRUPT_Initialize 0001                       CardConfigIni@readDataEven 0019  
                             ?_DATAEE_WriteByte 0005                         _EUSART2_SetErrorHandler 407C  
                         EUSART1_Read@readValue 0005                     _EUSART2_OverrunErrorHandler 01F2  
                            ??_DATAEE_WriteByte 0008                            ??_EUSART2_is_tx_done 0005  
                                      _ModbusRx 225A                              generateCRC@MessCnt 0005  
         __end_of_EUSART1_SetTxInterruptHandler 4090          __size_of_EUSART1_SetTxInterruptHandler 000A  
                 _EUSART1_SetTxInterruptHandler 4086                                        __Hrparam 0000  
                                      _TogDebug 3DAE           __end_of_EUSART2_SetRxInterruptHandler 4068  
        __size_of_EUSART2_SetRxInterruptHandler 000A                   _EUSART2_SetRxInterruptHandler 405E  
                          __size_of_ModbusError 00C4                                      vfprintf@ap 007B  
                                      __Lrparam 0000                                      vfprintf@fp 0077  
                            __CFG_BOREN$SBORDIS 000000                            __size_of_SaveCardDat 01D0  
                       ??_OSCILLATOR_Initialize 0005                                       memmove@d1 0009  
                                     memmove@s1 000B                                __size_of___aodiv 0188  
                              __size_of___aomod 0164                              generateCRC@crcHigh 000A  
                              __size_of___lodiv 00F0                                __size_of___lomod 00D0  
                   __size_of_EUSART1_Initialize 0080                                      ?_vfpfcnvrt 0049  
                               ___aodiv@divisor 000D                                 ___aodiv@counter 0015  
                               ReadRX232@F10728 00F2                       ??_EUSART1_SetErrorHandler 0007  
                             CardConfigIni@Name 000A                                        _checkCRC 253A  
           __end_of_EUSART1_DefaultErrorHandler 40E8                     _EUSART1_DefaultErrorHandler 40E2  
                              ??_PrintModRespon 0055                     __end_of_EUSART1_is_rx_ready 3FF0  
                                    strcat@dest 0013                            _EUSART2_ErrorHandler 01F0  
                              __size_of_isalpha 003C                                __size_of_isdigit 0038  
                   __end_of_EUSART1_is_tx_ready 4008                      __size_of_AddRxBuffToModBus 00D2  
                              __size_of_memmove 00DC                                 _ClearModbusData 3AC6  
                              __size_of_islower 0038                                __size_of_isspace 0052  
                                      __ptext10 38C4                                        __ptext11 3BA4  
                                      __ptext20 40E8                                        __ptext12 0B58  
                                      __ptext21 351C                                        __ptext13 1684  
                                      __ptext30 409A                                        __ptext22 4054  
                                      __ptext14 3210                                        __ptext31 40A4  
                                      __ptext23 405E                                        __ptext15 3FA8  
                                      __ptext40 2D68                                        __ptext32 40AE  
                                      __ptext24 4068                                        __ptext16 3F76  
                                      __ptext41 1A44                                        __ptext33 359A  
                                      __ptext25 4072                                        __ptext17 3F5A  
                                      __ptext50 37AA                                        __ptext42 3680  
                                      __ptext34 225A                                        __ptext26 407C  
                                      __ptext18 340E                                        __ptext51 32CE  
                                      __ptext43 06B4                                        __ptext35 253A  
                                      __ptext27 349C                                        __ptext19 3FC0  
                                      __ptext60 1482                                        __ptext52 3EE6  
                                      __ptext44 2F0A                                        __ptext36 40CA  
                                      __ptext28 4086                                        __ptext61 2E3A  
                                      __ptext53 36E8                                        __ptext45 2C8C  
                                      __ptext37 3FD8                                        __ptext29 4090  
                                      __ptext70 3866                                        __ptext62 29D4  
                                      __ptext54 012A                                        __ptext46 3612  
                                      __ptext38 3978                                        __ptext71 3D32  
                                      __ptext63 1D9E                                        __ptext55 11AC  
                                      __ptext47 40D0                                        __ptext39 3B12  
                                      __ptext80 3C70                                        __ptext72 23D6  
                                      __ptext64 0ECC                                        __ptext56 3808  
                                      __ptext48 3FF0                                        __ptext81 3AC6  
                                      __ptext73 20D2                                        __ptext65 2FCE  
                                      __ptext57 3DE6                                        __ptext49 4036  
                                      __ptext90 3150                                        __ptext74 1F38  
                                      __ptext66 3A76                                        __ptext58 3E1E  
                                      __ptext91 40DC                                        __ptext83 3B5C  
                                      __ptext75 3A24                                        __ptext67 3BE8  
                                      __ptext59 3D72                                        __ptext92 40EE  
                                      __ptext84 3090                                        __ptext76 3E56  
                                      __ptext68 3378                                        __ptext93 40E2  
                                      __ptext85 40C2                                        __ptext77 3F34  
                                      __ptext69 40B8                                        __ptext94 3EBA  
                                      __ptext86 40EC                                        __ptext78 4008  
                                      __ptext95 0000                                        __ptext87 40D6  
                                      __ptext79 4020                                        __ptext88 3E8E  
                                      __ptext89 3C2C                                __size_of_isupper 0038  
                             ?_InitialiseString 0001                     DATAEE_WriteByte@GIEBitValue 0008  
                                    strcpy@dest 0009                                __size_of_toupper 005E  
                   __size_of_EUSART2_Initialize 007E                         ClearEEAddRange@NumBytes 008B  
                            ??_InitialiseString 0055                                   __size_of_atoi 019A  
                                 __size_of_main 0120                                   __size_of_dtoa 02E0  
                                 __size_of_stoa 019A           fp__EUSART2_DefaultFramingErrorHandler 0000  
    __end_of_EUSART2_DefaultFramingErrorHandler 40EE     __size_of_EUSART2_DefaultFramingErrorHandler 0002  
          ??_EUSART2_DefaultFramingErrorHandler 0001             ?_EUSART2_DefaultFramingErrorHandler 0001  
            _EUSART2_DefaultFramingErrorHandler 40EC                                   __size_of_utoa 0202  
                                 __size_of_xtoa 02D6                               ??_DATAEE_ReadByte 0007  
                          __size_of_ValidateCmd 019C                            __CFG_WDTCWS$WDTCWS_7 000000  
                       ClearEEAddRange@StartAdd 0089                                    PrintModbus@i 0089  
          __size_of_EUSART2_DefaultErrorHandler 0006                                      _RC1STAbits 000F9D  
                                     stoa@F1139 0147                                      _RC2STAbits 000E9D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0005  EUSART2_SetOverrunErrorHandler@interruptHandler 0005  
                               PrintModRespon@i 0089                                        _rxStatus 00D5  
                                      int$flags 005B                      CardConfigIni@dataeeAddrWrk 000E  
                                      _vfprintf 36E8              __end_of_INTERRUPT_InterruptManager 0126  
                    _INTERRUPT_InterruptManager 0008                           _EUSART2_RxDataHandler 3E8E  
                                     printf@fmt 007D                     _EUSART1_FramingErrorHandler 01EE  
                           _EUSART1_Receive_ISR 3150                                ___aomod@dividend 0005  
              ??_EUSART2_SetOverrunErrorHandler 0007                 ?_EUSART2_SetOverrunErrorHandler 0005  
                       InitialiseString@PartNum 0089                                  _vfpfcnvrt$1605 006D  
                       InitialiseString@Partial 00BA                                      _INTCONbits 000FF2  
                   __end_of_EUSART2_is_rx_ready 3FA8                                     _NVMCON1bits 000F81  
                   __end_of_EUSART2_is_tx_ready 4020                                        isalpha@c 0005  
                    __end_of_UART1_Write_string 3680                                        isdigit@c 0005  
                        ??_INTERRUPT_Initialize 0005                                        memmove@d 0011  
                                      memmove@n 000D                                        memmove@s 0013  
                     ??_EUSART2_SetErrorHandler 0007                            __size_of_PrintModbus 0078  
                                      intlevel2 0000                                   ??_ClearRxBuff 0005  
                                     strcat@src 0015                            ?_EUSART1_Receive_ISR 0001  
                                      islower@c 0005                                        isspace@c 0005  
                       ?_PIN_MANAGER_Initialize 0001                               __CFG_CLKOUTEN$OFF 000000  
        __end_of_EUSART1_SetOverrunErrorHandler 40A4         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 409A                                       strcpy@src 000B  
                                      isupper@c 0005                    __end_of_EUSART1_Transmit_ISR 3C70  
                                      printf@ap 0087  EUSART1_SetFramingErrorHandler@interruptHandler 0005  
EUSART2_SetFramingErrorHandler@interruptHandler 0005                  ?_EUSART1_SetTxInterruptHandler 0005  
                ?_EUSART2_SetRxInterruptHandler 0005                                 ___aomod@divisor 000D  
                                   ??_vfpfcnvrt 004F                                        stoa@nuls 0015  
                               ___aomod@counter 0015                          __size_of_EUSART1_Write 005E  
                            _eusart1RxLastError 00D8                          __size_of_EUSART2_Write 005E  
                           _EUSART2_Receive_ISR 3090                         __end_of_ClearModbusData 3B12  
                                      toupper@c 000B                                      _TX1STAbits 000F9E  
                                    _TX2STAbits 000E9E                                    ___aodiv@sign 0016  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 349C  
               ??_EUSART2_SetTxInterruptHandler 0007                            ?_EUSART2_Receive_ISR 0001  
                            _eusart2RxLastError 00DD                                    ?_generateCRC 0005  
                       ??_EUSART1_RxDataHandler 0001                                    ___aomod@sign 0016  
             _EUSART2_RxDefaultInterruptHandler 01FA                             __end_of_ClearRxBuff 3B5C  
